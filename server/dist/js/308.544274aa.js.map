{"version":3,"file":"js/308.544274aa.js","mappings":"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","sources":["webpack://prore-mongo/./src/pages/RecipientPanel.vue","webpack://prore-mongo/./src/components/controllers/distance.js","webpack://prore-mongo/./src/components/controllers/month-converter.js","webpack://prore-mongo/./src/pages/RecipientPanel.vue?32f9"],"sourcesContent":["<template>\r\n  <div>\r\n    <!--\r\n    <div v-if=\"isAvailable\">\r\n      <RecipientSuccess\r\n        :provider = provider\r\n      />\r\n    </div>\r\n    -->\r\n\r\n    <h1 style=\"margin-top: 50px; margin-bottom: 50px\">Asiakkaan hallintapaneeli...</h1>\r\n    <MDBContainer>\r\n      <div v-if=\"isBooking\">\r\n        <recipientResult\r\n            :booking = booking\r\n            :bookingTime = recipientDateTime\r\n            :providers = providerMatchByProfession\r\n            :line = line\r\n            @cansel:result = handleCanselResult\r\n        />\r\n      </div>\r\n      <div v-else>\r\n        <h3>Sinulla on hetkellä {{recipientBookings.length}} tilausta:</h3>\r\n\r\n        <MDBTable borderless style=\"font-size: 16px; text-align: left;\" >\r\n          <tbody>\r\n          <tr v-for=\"(booking) in recipientBookings\" :key=\"booking.id\">\r\n            <td>\r\n\r\n              {{booking.date}}\r\n\r\n            </td>\r\n            <td>\r\n              {{booking.header}}\r\n            </td>\r\n            <td>\r\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"handleRecipientResult(booking.id)\">Tiedot</MDBBtn>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </MDBTable>\r\n        <MDBBtn outline=\"info\" block size=\"lg\" @click=\"newBooking\">Teen uuden tilauksen</MDBBtn>\r\n        <MDBBtn outline=\"black\" block size=\"lg\" @click=\"openMap\">Asiantuntijoita ympärilläsi</MDBBtn>\r\n        <!--\r\n        <MDBBtn outline=\"info\" block size=\"lg\" @click=\"getDistance\">Distance</MDBBtn>\r\n        <MDBBtn outline=\"info\" block size=\"lg\" @click=\"compareTime\">Compare time</MDBBtn>\r\n        -->\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </MDBContainer>\r\n\r\n\r\n\r\n\r\n<!--      <MDBTable borderless style=\"font-size: 16px; text-align: left;\">\r\n      <tbody>\r\n      <tr >\r\n\r\n        <td>{{provider.yritys}} <MDBBadge badge=\"success\"\r\n                                          class=\"translate-middle p-2 border border-light rounded-circle\"\r\n                                          dot></MDBBadge></td>\r\n        <td scope=\"col\">\r\n          <MDBBtn outline=\"success\" block size=\"lg\" @click=\"handleProviderGet(provider.id)\">Tiedot</MDBBtn>\r\n        </td>\r\n\r\n\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          TMI Putkipojat <MDBBadge badge=\"warning\"\r\n                                   class=\"translate-middle p-2 border border-light rounded-circle\"\r\n                                   dot></MDBBadge>\r\n        </td>\r\n        <td>\r\n          <MDBBtn outline=\"success\" block size=\"lg\">Tiedot</MDBBtn>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          TMI laattuPutket <MDBBadge badge=\"warning\"\r\n                                     class=\"translate-middle p-2 border border-light rounded-circle\"\r\n                                     dot></MDBBadge>\r\n        </td>\r\n        <td>\r\n          <MDBBtn outline=\"success\" block size=\"lg\">Tiedot</MDBBtn>\r\n        </td>\r\n\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          TMI Matti putki <MDBBadge badge=\"warning\"\r\n                                    class=\"translate-middle p-2 border border-light rounded-circle\"\r\n                                    dot></MDBBadge>\r\n        </td>\r\n        <td>\r\n          <MDBBtn outline=\"success\" block size=\"lg\">Tiedot</MDBBtn>\r\n        </td>\r\n      </tr>\r\n\r\n      </tbody>\r\n    </MDBTable>-->\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {\r\n  MDBTable, MDBBtn, MDBContainer//MDBBadge\r\n}from \"mdb-vue-ui-kit\";\r\nimport {ref} from \"vue\";\r\n\r\n//import RecipientSuccess from '../components/RecipientSuccess'\r\nimport recipientResult from '../pages/RecipientPanelResult'\r\nimport providerService from '../service/providers'\r\nimport recipientService from '../service/recipients'\r\n//import axios from \"axios\";\r\nimport driving from '../components/controllers/distance'\r\n\r\nimport monthConverter from '../components/controllers/month-converter'\r\nexport default {\r\n  name: \"recipient-panel\",\r\n  props: {\r\n    recipientBookings: Array\r\n  },\r\n  data () {\r\n    return {\r\n      bookings: null,\r\n      provider: {},\r\n      booking: null,\r\n      isBooking: false,\r\n      providerMatchByProfession: null,\r\n      providerMatchingRequirements: null,\r\n      line: \"\",\r\n      recipientDateTime: null,\r\n\r\n    }\r\n  },\r\n  setup () {\r\n    const isAvailable = ref(false)\r\n    return {\r\n      isAvailable\r\n    }\r\n  },\r\n  components: {\r\n    //RecipientSuccess,\r\n    recipientResult,\r\n    MDBTable,\r\n    MDBBtn,\r\n    MDBContainer\r\n    //MDBBadge\r\n  },\r\n  async mounted () {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      this.userId = user.id\r\n      this.provider = await providerService.getProvider(user.id);\r\n\r\n      this.handleRecipientBookings();\r\n\r\n      //console.log(\"User token: \" + this.loggedUser.token)\r\n      //console.log(\"User id in provider panel: \" + user.id)\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    async handleRecipientBookings () {\r\n      this.bookings = await recipientService.getOwnBookings(this.userId);\r\n    },\r\n    async handleRecipientResult (id) {\r\n      //this.isAvailable = true\r\n      console.log(\"Provider id is: \" + id)\r\n\r\n      this.booking = await recipientService.getBookingById(id);\r\n\r\n      console.log(\"Profession: \" + this.booking.map(b => b.professional))\r\n      let temp = []\r\n      //const profession = this.booking.map(b => b.professional)\r\n      this.booking.map(b => {\r\n        temp = b.professional\r\n        this.recipientDateTime = new Date(2023, b.onTime[0].month, b.onTime[0].day, b.onTime[0].hours, b.onTime[0].minutes)\r\n        console.log(\"Recipient datetime: \" + b.onTime[0].day)\r\n      })\r\n\r\n      console.log(\"xxx \" + this.recipientDateTime.getTime())\r\n      // TODO siia veel mitmuse form\r\n      this.line = temp[0]\r\n      //this.line = profession;\r\n      // maybe lot of recipients by professional tag\r\n\r\n\r\n\r\n      this.providerMatchByProfession = await providerService.getProvidersMatchingByProfession(\r\n          temp[0]\r\n      )\r\n      this.isBooking = true;\r\n      //console.log(\"Booking: \" + this.booking.address)\r\n    },\r\n    newBooking () {\r\n      // if(this.$route.query.redirect) {\r\n      //   this.$router.push(this.$route.query.redirect)\r\n      // }else{\r\n      //   this.$router.push('/rf')\r\n      // }\r\n      this.$router.push('/rf')\r\n\r\n\r\n    },\r\n    openMap () {\r\n      this.$router.push('/recipient-public');\r\n    },\r\n    getDistance () {\r\n      driving.distance();\r\n      // var origin = new google.maps.LatLng(60.233093,24.7531362);\r\n      // var destination = new google.maps.LatLng(60.2767265,24.8575089);\r\n      // var service = new google.maps.DistanceMatrixService();\r\n      // service.getDistanceMatrix(\r\n      //     {\r\n      //       origins: [origin],\r\n      //       destinations: [destination],\r\n      //       travelMode: 'DRIVING',\r\n      //       unitSystem: google.maps.UnitSystem.METRIC,\r\n      //       durationInTraffic: true,\r\n      //       avoidHighways: false,\r\n      //       avoidTolls: false\r\n      //     }, this.response_data);\r\n\r\n    },\r\n\r\n    // response_data(responseDis, status) {\r\n    //   if (status !== google.maps.DistanceMatrixStatus.OK || status !== \"OK\"){\r\n    //     console.log('Error:', status);\r\n    //     // OR\r\n    //     alert(status);\r\n    //   }else{\r\n    //   alert(responseDis.rows[0].elements[0].distance.value);\r\n    //   }\r\n    // },\r\n    compareTime () {\r\n      console.log(\"Month is: \" + monthConverter.month(4))\r\n      // const rec = {\r\n      //   y:  2023,\r\n      //   m: 3,\r\n      //   d: 20,\r\n      //   hour: 10,\r\n      //   min: 20\r\n      // }\r\n      // const prov = {\r\n      //   y:  2023,\r\n      //   m: 3,\r\n      //   d: 20,\r\n      //   hour: 10,\r\n      //   min: 19\r\n      // }\r\n      //console.log(\"Datetime comparison: \" + datetime.compare(rec, prov))\r\n\r\n      // console.log(\"Time comparison: \" + (new Date(2023,3, 20, 10, 20).getTime()\r\n      //     < new Date(2023, 3, 20, 11, 11).getTime()))\r\n    },\r\n\r\n    handleCanselResult (back) {\r\n      console.log(\"Canseled: \" + back)\r\n      this.isBooking = back;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","/*global google*/\r\n\r\nconst distance = () => {\r\n    //let text = \"\";\r\n    //let value = 0;\r\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\r\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\r\n    var service = new google.maps.DistanceMatrixService();\r\n    service.getDistanceMatrix(\r\n        {\r\n            origins: [origin],\r\n            destinations: [destination],\r\n            travelMode: 'DRIVING',\r\n            unitSystem: google.maps.UnitSystem.METRIC,\r\n            durationInTraffic: true,\r\n            avoidHighways: false,\r\n            avoidTolls: false\r\n        }, response_data);\r\n}\r\n\r\nconst response_data = (responseDis, status) => {\r\n    if (status !== google.maps.DistanceMatrixStatus.OK || status !== \"OK\"){\r\n        console.log('Error:', status);\r\n        // OR\r\n        alert(status);\r\n    }else{\r\n        alert(responseDis.rows[0].elements[0].distance.text);\r\n    }\r\n}\r\n\r\nconst test = () => {\r\n    console.log(\"Is it working??\")\r\n}\r\n\r\nexport default { distance, test }","const month = (num) => {\r\n    let name = \"\"\r\n    switch (num) {\r\n        case 0:\r\n            name = \"Tammikuu\";\r\n            break;\r\n        case 1:\r\n            name = \"Helmikuu\";\r\n            break;\r\n        case 2:\r\n            name = \"Maaliskuu\";\r\n            break;\r\n        case 3:\r\n            name = \"Huhtikuu\";\r\n            break;\r\n        case 4:\r\n            name = \"Toukokuu\";\r\n            break;\r\n        case 5:\r\n            name = \"Kesäkuu\";\r\n            break;\r\n        case 6:\r\n            name = \"Heinäkuu\";\r\n            break;\r\n        case 7:\r\n            name = \"Elokuu\";\r\n            break;\r\n        case 8:\r\n            name = \"Syyskuu\";\r\n            break;\r\n        case 9:\r\n            name = \"Lokakuu\";\r\n            break;\r\n        case 10:\r\n            name = \"Maaliskuu\";\r\n            break;\r\n        case 11:\r\n            name = \"Joulukuu\";\r\n            break;\r\n    }\r\n    return name;\r\n}\r\n\r\nexport default { month }","import { render } from \"./RecipientPanel.vue?vue&type=template&id=b5ef571c\"\nimport script from \"./RecipientPanel.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanel.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\majaa\\\\WebstormProjects\\\\prore-mongo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","style","_createElementBlock","_hoisted_1","_createVNode","_component_MDBContainer","$data","isBooking","_hoisted_2","_component_recipientResult","booking","bookingTime","recipientDateTime","providers","providerMatchByProfession","line","$options","handleCanselResult","_hoisted_3","_toDisplayString","$props","recipientBookings","length","_component_MDBTable","borderless","_Fragment","_renderList","key","id","date","header","_component_MDBBtn","outline","block","size","onClick","$event","handleRecipientResult","newBooking","openMap","distance","origin","google","maps","LatLng","destination","service","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","unitSystem","UnitSystem","METRIC","durationInTraffic","avoidHighways","avoidTolls","response_data","responseDis","status","DistanceMatrixStatus","OK","console","log","alert","rows","elements","text","test","month","num","name","props","Array","data","bookings","provider","providerMatchingRequirements","setup","isAvailable","ref","components","recipientResult","MDBTable","MDBBtn","MDBContainer","async","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","this","userId","providerService","handleRecipientBookings","methods","recipientService","map","b","professional","temp","Date","onTime","day","hours","minutes","getTime","$router","push","getDistance","driving","compareTime","monthConverter","back","__exports__","render"],"sourceRoot":""}