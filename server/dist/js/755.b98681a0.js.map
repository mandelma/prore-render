{"version":3,"file":"js/755.b98681a0.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/notifications/errorMessage.js","webpack://prore-mongo/./src/pages/Profile.vue","webpack://prore-mongo/./src/components/EditProfile.vue","webpack://prore-mongo/./src/components/EditProfile.vue?c1b4","webpack://prore-mongo/./src/pages/Profile.vue?5f2d"],"sourcesContent":["const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n            <img className={'errorImg'} alt={'error'} src={require('@/assets/error.png')}/>\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage","<template>\n  <div class=\"bg\">\n    <MDBContainer style=\"margin-top: 70px;\">\n\n      <div v-if=\"!userData\" class=\"spinner-border\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n      <div v-else>\n        <MDBRow>\n          <file-error\n              :message = fileSizeError\n          />\n          <file-error\n              :message = fileTypeError\n          />\n          <file-error\n              :message = emailErrorMessage\n          />\n          <MDBCol lg=\"4\">\n\n            <MDBCol lg=\"6\">\n\n              <MDBRow>\n\n                <MDBCol  >\n\n                  <img\n\n                      :src=\"showImage ? showImage : require(`/server/uploads/avatar/${avatar}`)\"\n                      alt=\"profile_img_blob\"\n                      style=\"width: 100px; height: 100px; border: 1px solid darkgrey; border-radius: 50px; margin-bottom: 20px;\"\n                  />\n                </MDBCol>\n\n                <div v-if=\"showImage && !isOpenSetAvatar\">\n                  <p @click=\"isOpenSetAvatar = true\">Muokkaa</p>\n                </div>\n                <div v-else>\n                  <p v-if=\"isPressedEditProfile && !isOpenSetAvatar\" @click=\"isOpenSetAvatar = true\">Lisa avatar</p>\n                </div>\n\n\n                <div class=\"edit-panel\" v-if=\"(isOpenSetAvatar)  \">\n                  <!--                <error-message :message = wrong_SizeType_Message />-->\n                  <div style=\"display: flex; justify-content: right;\">\n                    <MDBBtnClose\n                        white\n                        class=\"close-btn\"\n                        style=\"float: right;\"\n                        @click=\"closeEditPanel\"\n                    />\n                  </div>\n                  <MDBRow >\n                    <MDBCol>\n                      <input  id=\"avatar-upload\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\n                      <label  for=\"avatar-upload\" class=\"profile-file-upload\">\n                  <span v-if=\"value\">\n                  Muokka tehtävän kuvausta\n\n                   </span>\n                        <span v-else>Valitse avatar</span>\n                      </label>\n                      <!--                    <MDBBtn v-if=\"isEditImage\" block color=\"success\" @click=\"uploadEditedImage(i)\">Upload edited image</MDBBtn>-->\n                      <MDBBtn v-if=\"showImage\" class=\"btn\" block size=\"lg\" color=\"danger\" @click=\"removeProfileImage\">Poista kuva</MDBBtn>\n                    </MDBCol>\n\n                  </MDBRow>\n\n                </div>\n\n                <MDBCol>\n\n                  <div v-if=\"!isPressedEditProfile\">\n                    <div style=\"float: right; padding: 10px; width: 100%;\">\n\n                      <div class=\"profile-info\">\n                        <div v-if=\"pro\" >\n                          <h3 >{{ pro.yritys }}</h3>\n                          <div style=\" color: cadetblue;\">\n\n                            <div\n                                v-if=\"((pro.proTime - new Date().getTime()) / 86400000).toFixed() <= 0\"\n                            >\n                              <p>Valitettavasti käyttö on päättynyt!</p>\n                              <p style=\"color: orangered; cursor: pointer;\" @click=\"$router.push('/pay-plan')\">Lattaa lisää aikaa!</p>\n                            </div>\n                            <div v-else-if=\"((pro.proTime - new Date().getTime()) / 86400000).toFixed() <= 3\n                          && ((pro.proTime - new Date().getTime()) / 86400000).toFixed() > 0\">\n                              <p>Käyttö</p>\n                              <p>{{((pro.proTime - new Date().getTime()) / 86400000).toFixed()}} päivää</p>\n                              <p style=\"color: orangered;  cursor: pointer;\" @click=\"$router.push('/pay-plan')\">Lattaa lisää aikaa!</p>\n                            </div>\n                            <div v-else>\n                              <div v-if=\"((pro.proTime - new Date().getTime()) / 86400000).toFixed() === 'NaN'\" class=\"spinner-border\" role=\"status\">\n                                <span class=\"visually-hidden\">Loading...</span>\n                              </div>\n                              <div v-else>\n                                <p>Käyttö: </p>\n                                <p>{{((pro.proTime - new Date().getTime()) / 86400000).toFixed()}} päivää</p>\n                              </div>\n                            </div>\n                          </div>\n\n\n                        </div>\n\n                        <p v-if=\"client\">Sinulla on varauksia ({{client.length}})</p>\n                      </div>\n\n                    </div>\n                  </div>\n\n                </MDBCol>\n              </MDBRow>\n\n            </MDBCol>\n\n          </MDBCol>\n          <MDBCol  lg=\"8\">\n            <div class=\"profile-main\">\n              <MDBBtnClose\n                  v-if=\"!isPressedEditProfile\"\n                  white\n                  style=\"float: right; padding: 13px;\"\n                  @click=\"$router.go(-1)\"\n              />\n              <!--            <MDBBtnClose-->\n              <!--                -->\n              <!--                white-->\n              <!--                style=\"float: right;\"-->\n              <!--                @click=\"isPressedEditProfile = false\"-->\n              <!--            />-->\n              <MDBTable v-if=\"!isPressedEditProfile\" borderless style=\"font-size: 14px; text-align: left;\">\n                <tbody>\n                <tr>\n                  <td>\n                    Etunimi:\n                  </td>\n                  <td>\n                    {{userData.firstName}}\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    Sukunimi:\n                  </td>\n                  <td>\n                    {{loggedInUser.lastName}}\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    Käyttäjätunnus:\n                  </td>\n                  <td>\n                    {{loggedInUser.username}}\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    Osoite:\n                  </td>\n                  <td>\n                    {{userData.address}}\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    Sähköposti\n                  </td>\n                  <td>\n                    <!--              <div style=\"word-wrap: break-word;\">this_is_a_long_email@some_domain.net</div>-->\n                    {{userData.email}}\n                  </td>\n                </tr>\n                <tr>\n                  <td colspan=\"2\">\n                    <MDBBtn block size=\"lg\" outline=\"success\" @click=\"pressedEditProfile\">Muokkaa tiotosi</MDBBtn>\n                  </td>\n                </tr>\n                </tbody>\n              </MDBTable>\n\n              <edit-profile\n                  v-else\n                  :loggedInUser = loggedInUser\n                  :userData=\" userData\"\n                  @goBackFromEditProfile = handleCloseEditProfile\n                  @profile:data = handleSaveProfile\n                  @saveProfileImg = handleSaveProfileImage\n              />\n\n            </div>\n\n\n          </MDBCol>\n        </MDBRow>\n      </div>\n\n<!--      show image {{showImage}}<br>-->\n<!--      avatar {{avatar}}<br>-->\n<!--      file {{file}}-->\n\n    </MDBContainer>\n  </div>\n\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  MDBContainer,\n  MDBTable,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBIcon,\n  MDBBtnClose\n  //MDBInput\n}from \"mdb-vue-ui-kit\";\nimport editProfile from \"../components/EditProfile\";\nimport providerService from \"@/service/providers\";\nimport recipientService from \"@/service/recipients\";\nimport imageService from \"@/service/image\"\nimport userService from \"@/service/users\"\nimport fileError from \"@/components/notifications/errorMessage\"\nimport '@/css/style.css';\nimport '@/css/notification.css'\nimport socket from \"@/socket\"\nexport default {\n  name: \"user-profile\",\n  props: {\n    loggedInUser: Object,\n    provider: Object,\n    recipient: Array\n  },\n  components: {\n    editProfile,\n    fileError,\n    MDBContainer,\n    MDBTable,\n    MDBBtn,\n    MDBRow,\n    MDBCol,\n    MDBIcon,\n    MDBBtnClose\n    //MDBInput\n  },\n  data () {\n    return {\n      isOpenSetAvatar: false,\n      isOpenAdd: false,\n      isOpenEdit: false,\n      user: null,\n      userData: null,\n      isPressedEditProfile: false,\n      isAddProfileImage: false,\n      isEditProfileImage: false,\n      isEditData: false,\n      pro: null,\n      client: [],\n      mail: \"\",\n      address:\"\",\n      osoite:null,\n      lat: null,\n      long: null,\n      showImage: null,\n      value: null,\n      file: null,\n      isProfileImageSelected: false,\n      isUploaded: false,\n      user_profile_image: [],\n      avatar: \"avatar.png\",\n      image_id: null,\n      fileSizeError: null,\n      fileTypeError: null,\n      emailErrorMessage: null\n    }\n  },\n  mounted () {\n    this.getUserData();\n\n  },\n  methods: {\n    // Get user\n    async getUserData () {\n      const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n      if (!loggedUserJSON) {\n        this.$router.push('/');\n      } else {\n        this.user = JSON.parse(loggedUserJSON)\n\n        const pro = await providerService.getProvider(this.user.id)\n        const client = await recipientService.getOwnBookings(this.user.id);\n\n        if (pro && client.length > 0) {\n          this.avatar = pro.user.avatar.name\n          this.pro = pro\n          this.userData = {\n            firstName: this.user.firstName,\n            address: pro.address,\n            email: pro.user.email\n          }\n        } else if (pro) {\n          this.avatar = pro.user.avatar.name\n          this.pro = pro\n          this.userData = {\n            firstName: this.user.firstName,\n            address: pro.address,\n            email: pro.user.email\n          }\n        } else if(client.length > 0) {\n          if (client[0].user.avatar)\n            this.avatar = client[0].user.avatar.name;\n          this.client = client\n          //console.log(\"Client avatar: \" + client[0].user.avatar.name)\n\n          this.userData = {\n            firstName: this.user.firstName,\n            address: client[0].address,\n            email: client[0].user.email\n          }\n        } else {\n          this.userData = {\n            firstName: this.user.firstName,\n            address: \"\",\n            email: this.user.email\n          }\n        }\n\n\n\n      }\n\n    },\n    async getUserPro () {\n      const provider = await providerService.getProvider(this.user.id)\n      //const client = await recipientService.getOwnBookings(this.user.id);\n\n      if (provider) {\n        console.log(\"User pro username \" + provider.user.username)\n        this.pro = provider\n        this.userData = {\n          firstName: this.loggedInUser.firstName,\n          address: this.pro.address\n        }\n      }\n\n\n    },\n    async getUserRecipient () {\n      const client = await recipientService.getOwnBookings(this.user.id);\n      if (client && client.length > 0) {\n        this.client = client\n        this.userData = {\n          firstName: this.user.firstName,\n          address: client[0].address\n        }\n      }\n    },\n    pressedEditProfile () {\n      this.isPressedEditProfile = true;\n    },\n    handleSaveProfileData () {\n\n    },\n    // getPro (pro) {\n    //   if (pro.yritys) {\n    //     this.pro = pro;\n    //   } else {\n    //     this.pro = null;\n    //   }\n    //   // setTimeout(() => {\n    //   //   if (pro.yritys) {\n    //   //     this.pro = pro;\n    //   //   } else {\n    //   //     this.pro = null;\n    //   //   }\n    //   // }, 2000)\n    // },\n\n    async validateUploadErrors (data, file, status) {\n      console.log(\"FILE \" + file.type);\n\n      if (file.type !== \"image/jpeg\" || file.type !== \"image/png\" || file.type !== \"image/jpg\" || file.type !== \"image/gif\" || this.eiole) {\n        console.log(\"EI KUNNOSSA\")\n        this.fileTypeError = \"Pitäisi käyttää kuvan formaatti (jpeg, jpg, png, gif)!\"\n        setTimeout(() => {\n          this.fileTypeError = null;\n        }, 3000)\n        this.showImage = null;\n        this.avatar = \"avatar.png\";\n        this.isAddProfileImage = false;\n        this.isEditProfileImage = false;\n        this.value = null;\n      } else {\n        console.log(\"EI KUNNOSSA\")\n        // if (this.file.size > 10000000) {\n        //   this.fileSizeError = \"Kuvan koko on oltava pienempi kun 1 MB!\"\n        //   setTimeout(() => {\n        //     this.fileSizeError = null;\n        //   }, 3000)\n        //   this.showImage = null;\n        //   this.avatar=\"avatar.png\";\n        // } else {\n        //   if (status === \"add\") {\n        //     console.log(\"Add image\")\n        //     // this.$emit(\"updateAvatar\", this.showImage); // to app, for navbar avatar adding\n        //     // await imageService.createProfileImage(this.user.id, data);\n        //   } else {\n        //     console.log(\"Edit image\")\n        //     // this.$emit(\"updateAvatar\", this.showImage); // to app, for navbar avatar update\n        //     // await imageService.newAvatar(this.user.id, data);\n        //   }\n        // }\n      }\n\n\n\n\n      if (this.file.type !== \"image/jpeg\" || this.file.type !== \"image/png\" || this.image.type !== \"image/jpg\" || this.image.type !== \"image/gif\") {\n        console.log(\"GGGGGGGGGGGGGGGGGGGGGGGGGG\")\n        this.fileTypeError = \"Pitäisi käyttää kuvan formaatti (jpeg, jpg, png, gif)!\"\n        setTimeout(() => {\n          this.fileTypeError = null;\n        }, 3000)\n        // this.showImage = null;\n        // this.isAddProfileImage = false;\n        // this.isEditProfileImage = false;\n        // this.value = null;\n      } else {\n        console.log(\"jköergfqeigbnaildn \")\n        // if (this.file.size > 10000000) {\n        //   this.fileSizeError = \"Kuvan koko on oltava pienempi kun 1 MB!\"\n        //   setTimeout(() => {\n        //     this.fileSizeError = null;\n        //   }, 3000)\n        //   this.showImage = null;\n        //   this.avatar=\"avatar.png\";\n        //}\n        // else {\n        //   if (status === \"add\") {\n        //     console.log(\"Add image\")\n        //     // this.$emit(\"updateAvatar\", this.showImage); // to app, for navbar avatar adding\n        //     // await imageService.createProfileImage(this.user.id, data);\n        //   } else {\n        //     console.log(\"Edit image\")\n        //     // this.$emit(\"updateAvatar\", this.showImage); // to app, for navbar avatar update\n        //     // await imageService.newAvatar(this.user.id, data);\n        //   }\n        // }\n      }\n\n\n\n\n\n\n      // if (this.file.type !== \"image/jpeg\" || this.file.type !== \"image/png\" || this.image.type !== \"image/jpg\" || this.image.type !== \"image/gif\") { // 10 MB\n      //   // this.fileSizeError = \"Kuvan koko on oltava pienempi kun 1 MB!\"\n      //   // setTimeout(() => {\n      //   //   this.fileSizeError = null;\n      //\n      //   // }, 3000)\n      //\n      //\n      //\n      //\n      //\n      //   // this.showImage = null;\n      //   // this.isAddProfileImage = false;\n      //   // this.isEditProfileImage = false;\n      //\n      //\n      //   this.isPressedEditProfile = false;\n      //\n      // }\n      // if (this.file.size > 10000000) {\n      //\n      //\n      //\n      // }else {\n      //   if (status === \"add\") {\n      //     console.log(\"Add image\")\n      //     // this.$emit(\"updateAvatar\", this.showImage); // to app, for navbar avatar adding\n      //     // await imageService.createProfileImage(this.user.id, data);\n      //\n      //\n      //   } else {\n      //     console.log(\"Edit image\")\n      //     // this.$emit(\"updateAvatar\", this.showImage); // to app, for navbar avatar update\n      //     // await imageService.newAvatar(this.user.id, data);\n      //\n      //\n      //   }\n\n      //}\n\n\n\n    },\n    async handleSaveProfile (newAddress, newEmailAddress) {\n      console.log(\"Is new address?? \" + newAddress.latitude)\n      // Edit address if address is choosen, otherwice do nothing\n      if (newEmailAddress !== \"\") {\n        const emailAlreadyExists = await userService.editEmail(this.user.id, {email: newEmailAddress});\n        if (emailAlreadyExists.error !== \"email existing\") {\n          this.userData.email = newEmailAddress;\n        } else {\n          this.emailErrorMessage = \"Antamasi sähköpostiosoite on jo olemassa!\"\n          setTimeout(() => {\n            this.emailErrorMessage = null;\n          }, 2000);\n        }\n      }\n      if (newAddress.latitude !== null) {\n        if (this.pro) { // If client is provider\n          await providerService.editAddress(this.pro.id, newAddress);\n          this.userData.address = newAddress.address;\n        }\n        if (this.client.length > 0) { // If client is recipient\n          for (let booking in this.client) {\n            const bookingID = this.client[booking].id;\n            await recipientService.editBookingAddress(bookingID, newAddress);\n            this.userData.address = newAddress.address;\n          }\n        }\n\n      }\n      const data = new FormData();\n      if (this.value !== null) {\n        if (this.isAddProfileImage) {\n          console.log(\"Saving image type \" + this.file.type);\n\n\n          data.append('file', this.file, this.file.name)\n\n          await this.validateUploadErrors(data, this.file, \"add\");\n          //this.$router.go(-1);\n          //await imageService.createProfileImage(this.loggedInUser.id, data);\n\n\n          // this.isEditProfileImage = false;\n          // this.isAddProfileImage = false;\n\n        } else if (this.isEditProfileImage) {\n          console.log(\"Editing image here\")\n          data.append('file', this.file, this.file.name);\n          //await this.validateUploadErrors(data, \"edit\");\n          this.$router.go(-1);\n\n          // this.isPressedEditProfile = false;\n          // this.isAddProfileImage = false;\n          // this.isEditProfileImage = false;\n        }\n\n      }\n      //this.isPressedEditProfile = false;\n\n\n    },\n    saveEditedName () {\n      this.userData.firstName = this.name;\n      this.isEditName = false;\n    },\n    handleCloseEditProfile () {\n      this.isPressedEditProfile = false;\n      this.isAddProfileImage = false;\n      this.isEditProfileImage = false;\n    },\n    handleFileChange(e) {\n      //this.$emit('input', e.target.client[0])\n\n      try {\n\n        const files = e.target.files[0]\n        this.file = files;\n        console.log('event target client ', e.target.files[0])\n        if (files){\n          //const tempImage = URL.createObjectURL(files)\n          //this.tempImages.push(tempImage);\n          this.isAddProfileImage = true;\n          this.file = e.target.files[0];\n\n          this.isOpenEdit = true;\n          //this.showImage = URL.createObjectURL(files)\n          this.showImage = URL.createObjectURL(files);\n\n          this.avatar = URL.createObjectURL(files)\n\n\n\n\n\n\n          // console.log(\"Image type: \" +  this.file.type)\n          // console.log(\"Image size: \" + typeof this.file.size)\n        }\n\n      } catch (err) {\n        console.log('Error:', err)\n      }\n\n      this.value = e.target.files[0]\n      if (e.target.files[0]) {\n        this.isProfileImageSelected = true;\n      } else {\n        this.isProfileImageSelected = false;\n      }\n    },\n    addProfileImage () {\n      this.isAddProfileImage = true;\n    },\n    editProfileImage () {\n      this.isEditProfileImage = true;\n    },\n    closeEditPanel () {\n      this.isOpenSetAvatar = false;\n\n    },\n    async removeProfileImage () {\n      //this.avatar = null;\n      this.openSetAvatar = false;\n      if (!this.showImage) {\n        console.log(\"Deleting real image...\")\n      } else {\n        this.avatar = \"avatar.png\"\n        this.value = null;\n        this.showImage = null;\n        this.isOpenSetAvatar = false;\n        //this.isEditProfileImage = false;\n\n      }\n      // this.avatar = \"avatar.png\"\n      // this.showImage = null;\n      // this.$emit(\"removeAvatar\")\n      // await userService.removeAvatar(this.user.id);\n      // this.isEditProfileImage = false;\n      // this.isPressedEditProfile = false;\n\n\n\n\n      // if (this.avatar) {\n      //   // Removing avatar will take place in User router\n      //   await userService.removeAvatar(this.loggedInUser.id);\n      // }\n\n    },\n    async handleSaveProfileImage () {\n      //this.isUploaded = true;\n      this.isPressedEditProfile = false;\n      this.isOpenSetAvatar = false;\n      // this.isAddProfileImage = false;\n      // this.isEditProfileImage = false;\n    }\n\n\n  }\n}\n</script>\n\n<style scoped>\nhtml, body {\n  /*overflow-y: auto;*/\n  background-color: #141414;\n  /*background-image: url('../assets/247.png');*/\n  background-image: url('../assets/247.png');\n\n}\n\n.profile_image {\n  width: 160px;\n  text-align: center;\n  color: cadetblue;\n  margin-top: 50px;\n  cursor:pointer;\n}\nimg.loading {\n  width: 100px;\n  height: 100px;\n  background: transparent url(https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif) no-repeat scroll center center;\n}\ninput[type=\"file\"] {\n  display: none;\n}\n.profile-file-upload {\n  width: 100%;\n\n  text-align: center;\n  color: white;\n  background-color: #2e2b2b;\n\n  display: inline-block;\n  padding: 10px 12px;\n  margin-bottom: 10px;\n  cursor: pointer;\n}\n\n.profile-main table {\n  color: #ddd;\n}\n</style>","<template>\n  <MDBBtnClose\n      white\n      style=\"float: right; cursor: pointer; padding: 13px;\"\n      @click=\"closeEditProfile\"\n  />\n  <MDBContainer>\n    <div class=\"edit-profile\">\n      <MDBTable  borderless style=\"font-size: 14px; text-align: left;\">\n        <tbody>\n        <tr>\n          <td>\n            Etunimi:\n          </td>\n          <td>\n            {{loggedInUser.firstName}}\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Sukunimi:\n          </td>\n          <td>\n            {{loggedInUser.lastName}}\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Käyttäjätunnus:\n          </td>\n          <td>\n            {{loggedInUser.username}}\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Osoite\n          </td>\n          <td>\n            <p style=\"color:cornflowerblue;\">{{userData.address}}</p>\n            <MDBInput\n                white\n                size=\"lg\"\n                id=\"address\"\n                :label=\"userData.address ? 'Anna uusi osoitteesi' : 'Anna Osoitteesi'\"\n                v-model=\"newAddress\"\n            />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Sähköposti\n          </td>\n          <td>\n            <p style=\"color: cornflowerblue\">{{userData.email}}</p>\n            <MDBInput\n                white\n                size=\"lg\"\n                :label=\"userData.email !== '' ? 'Anna uusi sähköpostisi' : 'Anna Sähköpostisi'\"\n                v-model=\"email\"\n            />\n          </td>\n        </tr>\n        <tr>\n          <td colspan=\"2\">\n            <MDBBtn block size=\"lg\" color=\"success\" @click=\"saveProfileData\">Tallenna tiedot</MDBBtn>\n          </td>\n        </tr>\n        </tbody>\n      </MDBTable>\n    </div>\n\n  </MDBContainer>\n\n</template>\n\n<script>\n/*global google*/\nimport {\n  MDBContainer,\n  MDBInput,\n  MDBBtn,\n  MDBBtnClose,\n  MDBTable\n} from 'mdb-vue-ui-kit'\nimport '@/css/style.css';\nimport '@/css/notification.css'\nexport default {\n  name: \"EditProfile\",\n  props: {\n    loggedInUser:Object,\n    userData: Object\n  },\n  components: {\n    MDBContainer,\n    MDBInput,\n    MDBBtnClose,\n    MDBBtn,\n    MDBTable\n  },\n  data () {\n    return {\n      lat: null,\n      long: null,\n      address: null,\n      email: \"\",\n      newAddress: \"\"\n    }\n  },\n  mounted() {\n    const center = { lat: 50.064192, lng: -130.605469 };\n    // Create a bounding box with sides ~10km away from the center point\n    const defaultBounds = {\n      north: center.lat + 0.1,\n      south: center.lat - 0.1,\n      east: center.lng + 0.1,\n      west: center.lng - 0.1,\n    };\n    const input = document.getElementById(\"address\");\n    const options = {\n      bounds: defaultBounds,\n      componentRestrictions: { country: \"fi\" },\n      fields: [\"address_components\", \"geometry\", \"icon\", \"name\", \"formatted_address\"],\n      strictBounds: false,\n      //types: [\"establishment\"],\n    };\n    const autocomplete = new google.maps.places.Autocomplete(input, options);\n\n    autocomplete.addListener(\"place_changed\", () => {\n      let place = autocomplete.getPlace()\n      this.lat = place.geometry.location.lat()\n      this.long = place.geometry.location.lng()\n\n      this.address = place.formatted_address\n      console.log(place)\n    })\n  },\n  methods: {\n    closeEditProfile () {\n      this.$emit(\"goBackFromEditProfile\")\n    },\n    saveProfileData () {\n      const addressData = {\n        latitude: this.lat,\n        longitude: this.long,\n        address: this.address\n      }\n\n      const newMailAddress = this.email;\n      this.$emit(\"profile:data\", addressData, newMailAddress);\n      this.$emit(\"saveProfileImg\");\n    },\n\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./EditProfile.vue?vue&type=template&id=291f9588\"\nimport script from \"./EditProfile.vue?vue&type=script&lang=js\"\nexport * from \"./EditProfile.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Profile.vue?vue&type=template&id=fc10e9ca&scoped=true\"\nimport script from \"./Profile.vue?vue&type=script&lang=js\"\nexport * from \"./Profile.vue?vue&type=script&lang=js\"\n\nimport \"./Profile.vue?vue&type=style&index=0&id=fc10e9ca&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fc10e9ca\"]])\n\nexport default __exports__"],"names":["ErrorMessage","message","_createVNode","require","class","key","role","style","for","colspan","_createElementBlock","_hoisted_1","_component_MDBContainer","default","_withCtx","$data","userData","_hoisted_3","_component_MDBRow","_component_file_error","fileSizeError","fileTypeError","emailErrorMessage","_component_MDBCol","lg","_createElementVNode","src","showImage","avatar","alt","_hoisted_4","_","isOpenSetAvatar","_hoisted_5","onClick","_cache","$event","_hoisted_6","isPressedEditProfile","_createCommentVNode","_hoisted_7","_hoisted_8","_component_MDBBtnClose","white","$options","closeEditPanel","id","type","onChange","handleFileChange","_ctx","i","_hoisted_9","value","_hoisted_10","_hoisted_11","_createBlock","_component_MDBBtn","block","size","color","removeProfileImage","_createTextVNode","_hoisted_12","_hoisted_13","_hoisted_14","pro","_hoisted_15","_toDisplayString","yritys","_hoisted_16","proTime","Date","getTime","toFixed","_hoisted_17","$router","push","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","client","_hoisted_22","length","_hoisted_23","go","_component_edit_profile","loggedInUser","$props","onGoBackFromEditProfile","handleCloseEditProfile","handleSaveProfile","onSaveProfileImg","handleSaveProfileImage","_component_MDBTable","borderless","firstName","lastName","username","address","email","_hoisted_24","outline","pressedEditProfile","_hoisted_2","_Fragment","closeEditProfile","_component_MDBInput","label","modelValue","newAddress","saveProfileData","name","props","Object","components","MDBContainer","MDBInput","MDBBtnClose","MDBBtn","MDBTable","data","lat","long","mounted","center","lng","defaultBounds","north","south","east","west","input","document","getElementById","options","bounds","componentRestrictions","country","fields","strictBounds","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","this","geometry","location","formatted_address","console","log","methods","$emit","addressData","latitude","longitude","newMailAddress","__exports__","provider","recipient","Array","editProfile","fileError","MDBRow","MDBCol","MDBIcon","isOpenAdd","isOpenEdit","user","isAddProfileImage","isEditProfileImage","isEditData","mail","osoite","file","isProfileImageSelected","isUploaded","user_profile_image","image_id","getUserData","loggedUserJSON","window","localStorage","getItem","JSON","parse","providerService","getProvider","recipientService","getOwnBookings","getUserPro","getUserRecipient","handleSaveProfileData","validateUploadErrors","status","eiole","setTimeout","image","newEmailAddress","emailAlreadyExists","userService","editEmail","error","editAddress","booking","bookingID","editBookingAddress","FormData","append","saveEditedName","isEditName","e","files","target","URL","createObjectURL","err","addProfileImage","editProfileImage","openSetAvatar","render"],"sourceRoot":""}