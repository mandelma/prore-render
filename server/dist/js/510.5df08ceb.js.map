{"version":3,"file":"js/510.5df08ceb.js","mappings":"mIAAA,MAAMA,EAAeA,EAAGC,aACJ,OAAZA,EACO,MAGXC,EAAAA,EAAAA,IAAA,iBAEmB,SAAO,CACjBD,IAOb,K,uBCfA,MAAME,EAAQC,EAAQ,MAChBC,EAAU,gBAEVC,EAASC,UACX,MAAMC,QAAeL,EAAMM,KAAM,GAAEJ,gBAAuBK,GAC1D,OAAOF,EAAOG,IAAI,EAGhBC,EAAQL,UACV,MAAMC,QAAeL,EAAMU,IAAK,GAAER,gBAAsBS,KACxD,OAAON,EAAOG,IAAI,EAGtB,KAAiBL,SAAQM,Q,4KCTnBG,EAAAA,EAAAA,GAAwB,UAApB,mBAAe,K,GACdC,MAAM,c,UACTD,EAAAA,EAAAA,GAA4B,aAArB,iBAAa,K,GAIjBC,MAAM,c,UACTD,EAAAA,EAAAA,GAA8B,aAAvB,mBAAe,K,UAGtBA,EAAAA,EAAAA,GAAyD,UAAjDC,MAAM,6BAA4B,UAAM,K,GAMjDC,MAAA,iB,4HAnBLC,EAAAA,EAAAA,IAoBeC,EAAA,M,kBAnBb,IAAkG,CAAnFC,EAAAC,U,WACfC,EAAAA,EAAAA,IAaO,Q,MAbML,MAAA,uBAA4BM,SAAMC,EAAA,KAAAA,EAAA,IAAAC,EAAAA,EAAAA,KAAA,IAAAC,IAAUC,EAAAC,mBAAAD,EAAAC,qBAAAF,IAAiB,e,CACxEG,GACAd,EAAAA,EAAAA,GAIM,MAJNe,EAIM,CAHJC,GAA4B,SAC5BhB,EAAAA,EAAAA,GAAyF,SAAlFiB,KAAK,WAAWhB,MAAM,eAAeiB,YAAY,gB,qCAAyBb,EAAAc,MAAKC,I,iBAALf,EAAAc,YAGnFnB,EAAAA,EAAAA,GAKM,MALNqB,EAKM,CAJJC,GAA8B,SAC9BtB,EAAAA,EAAAA,GAAkG,SAA3FiB,KAAK,WAAWhB,MAAM,eAAeiB,YAAY,kB,qCAA2Bb,EAAAkB,aAAYH,I,iBAAZf,EAAAkB,gBAEnFC,KAAyD,OAZvC,WAAtBrB,EAAAA,EAAAA,IAAkGsB,EAAA,C,MAAzEC,MAAA,GAAMC,QAAQ,UAAWC,QAAOC,EAAAC,gB,mBAAgB,IAAgB,UAAhB,uB,sBAezE3C,EAAAA,EAAAA,IAEE4C,EAAA,CADG7C,QAAUmB,EAAA2B,WAAS,qBAExBhC,EAAAA,EAAAA,GAA4C,IAA5CiC,EAAyB,UAAMC,EAAAA,EAAAA,IAAE7B,EAAAN,OAAK,M,gDAY1C,GACEoC,KAAM,QACNC,WAAY,CACVC,aAAY,IACZC,aAAY,KACZC,OAAMA,EAAAA,IAER3C,OACE,MAAO,CACLuB,MAAO,GACPI,aAAc,GACdjB,SAAS,EACTP,MAAOyC,KAAKC,OAAOC,OAAO3C,MAC1BiC,UAAW,KAEf,EAEAW,QAAS,CACPnD,uBACE,MAAMC,QAAemD,EAAAA,EAAY/C,MAAM2C,KAAKzC,OAC7B,UAAXN,GACFoD,QAAQC,IAAI,iBAAmBrD,GAC/B+C,KAAKlC,SAAU,IAEfuC,QAAQC,IAAI,wBAA0BrD,GACtC+C,KAAKR,UAAYvC,EACjBsD,YAAW,KACTP,KAAKR,UAAY,IAAG,GAEnB,KACHQ,KAAKQ,QAAQC,KAAK,gBAGtB,EACAC,oBAEA,I,QC7DJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://prore-mongo/./src/components/notifications/errorMessage.js","webpack://prore-mongo/./src/service/pwAuth.js","webpack://prore-mongo/./src/components/Reset.vue","webpack://prore-mongo/./src/components/Reset.vue?7327"],"sourcesContent":["const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage","const axios = require('axios');\r\nconst baseUrl = '/api/reset_pw'\r\n\r\nconst forgot = async (email) => {\r\n    const result = await axios.post(`${baseUrl}/forgot_auth`, email);\r\n    return result.data;\r\n}\r\n\r\nconst reset = async (token) => {\r\n    const result = await axios.get(`${baseUrl}/reset_auth/${token}`);\r\n    return result.data;\r\n}\r\n\r\nexport default { forgot, reset };","<template>\r\n  <MDBContainer>\r\n    <MDBBtn v-if=\"!isToken \" block outline=\"warning\" @click=\"handleOpenForm\">Vaihtaa salasana</MDBBtn>\r\n    <form v-else style=\"margin-top: 100px;\" @submit.prevent=\"handleSubmitReset\">\r\n      <h3> Reset password</h3>\r\n      <div class=\"form-group\">\r\n        <label>Uusi salasana</label>\r\n        <input type=\"password\" class=\"form-control\" placeholder=\"Uusi salasana\" v-model=\"newPw\"/>\r\n\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Toista salasana</label>\r\n        <input type=\"password\" class=\"form-control\" placeholder=\"Toista salasana\" v-model=\"confirmNewPw\"/>\r\n\r\n        <button class=\"btn btn-primary btn-block\">Submit</button>\r\n      </div>\r\n    </form>\r\n    <error-message\r\n        :message = errorInfo\r\n    />\r\n    <p style=\"color: white;\">Token {{token}}</p>\r\n  </MDBContainer>\r\n\r\n</template>\r\n\r\n<script>\r\nimport authService from '../service/pwAuth'\r\nimport errorMessage from '../components/notifications/errorMessage'\r\nimport {\r\n  MDBContainer,\r\n    MDBBtn\r\n} from 'mdb-vue-ui-kit'\r\nexport default {\r\n  name: \"Reset\",\r\n  components: {\r\n    errorMessage,\r\n    MDBContainer,\r\n    MDBBtn\r\n  },\r\n  data () {\r\n    return {\r\n      newPw: \"\",\r\n      confirmNewPw: \"\",\r\n      isToken: false,\r\n      token: this.$route.params.token,\r\n      errorInfo: null\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    async handleOpenForm () {\r\n      const result = await authService.reset(this.token)\r\n      if (result === \"valid\") {\r\n        console.log(\"Token expired \" + result)\r\n        this.isToken = true;\r\n      } else {\r\n        console.log(\"Token is not expired \" + result )\r\n        this.errorInfo = result;\r\n        setTimeout(() => {\r\n          this.errorInfo = null\r\n\r\n        }, 3000)\r\n        this.$router.push('/forgot_auth')\r\n      }\r\n\r\n    },\r\n    habdleSubmitReset () {\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.error {\r\n  color: white;\r\n  background: #f5839c;\r\n  font-size: 20px;\r\n  border: solid #f75959;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>","import { render } from \"./Reset.vue?vue&type=template&id=fd5585a6&scoped=true\"\nimport script from \"./Reset.vue?vue&type=script&lang=js\"\nexport * from \"./Reset.vue?vue&type=script&lang=js\"\n\nimport \"./Reset.vue?vue&type=style&index=0&id=fd5585a6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fd5585a6\"]])\n\nexport default __exports__"],"names":["ErrorMessage","message","_createVNode","axios","require","baseUrl","forgot","async","result","post","email","data","reset","get","token","_createElementVNode","class","style","_createBlock","_component_MDBContainer","$data","isToken","_createElementBlock","onSubmit","_cache","_withModifiers","args","_ctx","handleSubmitReset","_hoisted_1","_hoisted_2","_hoisted_3","type","placeholder","newPw","$event","_hoisted_4","_hoisted_5","confirmNewPw","_hoisted_6","_component_MDBBtn","block","outline","onClick","$options","handleOpenForm","_component_error_message","errorInfo","_hoisted_7","_toDisplayString","name","components","errorMessage","MDBContainer","MDBBtn","this","$route","params","methods","authService","console","log","setTimeout","$router","push","habdleSubmitReset","__exports__","render"],"sourceRoot":""}