{"version":3,"file":"js/507.9320c0eb.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/controllers/datetime.js","webpack://prore-mongo/./src/components/controllers/distance.js","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue?7f3a"],"sourcesContent":["\nconst compare = (rec, prov) => {\n    const receiverDate = new Date(rec.y, rec.m, rec.d, rec.hour, rec.min);\n    const providerDate = new Date(prov.y, prov.m, prov.d, prov.hour, prov.min)\n    return providerDate >= receiverDate;\n}\n\nconst providerMatchingForClient = (re, pFrom, pTo) => {\n    //const rDate = new Date(re.y, re.m, re.d, re.hour, re.min);\n    const pFromDate = new Date(pFrom.y, pFrom.m, pFrom.d, pFrom.hour, pFrom.min);\n    const pToDate = new Date(pTo.y, pTo.m, pTo.d, pTo.hour, pTo.min);\n    return re >= pFromDate && re < pToDate;\n}\nexport default { compare, providerMatchingForClient }","/*global google*/\nlet res = \"\";\nconst distance = () => {\n    //let text = \"\";\n    //let value = 0;\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\n    var service = new google.maps.DistanceMatrixService();\n    service.getDistanceMatrix(\n        {\n            origins: [origin],\n            destinations: [destination],\n            travelMode: 'DRIVING',\n            unitSystem: google.maps.UnitSystem.METRIC,\n            durationInTraffic: true,\n            avoidHighways: false,\n            avoidTolls: false\n        }, response_data);\n    //return response_data;\n}\n\nconst response_data = (responseDis, status) => {\n    //let result = \"\";\n    if (status !== google.maps.DistanceMatrixStatus.OK || status !== \"OK\"){\n        console.log('Error:', status);\n        // OR\n        alert(status);\n    }else{\n        //alert(responseDis.rows[0].elements[0].distance.text);\n        console.log(\"Distance \" + responseDis.rows[0].elements[0].distance.text)\n\n        res = responseDis.rows[0].elements[0].distance.text;\n        return \"aaaaaaaaaaaaa\"\n        //result = responseDis.rows[0].elements[0].distance.text;\n    }\n    //return  \"Hallo\"        //result.toString();\n}\n\nconst test = () => {\n    console.log(\"Is it working??\" + res)\n\n    return  <div>Hiiii</div>;\n}\n\nconst theDist = () => {\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\n    return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n}\n\n// function calcDistance() {\n//     // var origin = new google.maps.LatLng(60.233093,24.7531362);\n//     // var destination = new google.maps.LatLng(60.2767265,24.8575089);\n//     // return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n//\n//     var directionsService = new google.maps.DirectionsService();\n//\n//     var request = {\n//         origin      : 'Melbourne VIC', // a city, full address, landmark etc\n//         destination : 'Sydney NSW',\n//         travelMode  : google.maps.DirectionsTravelMode.DRIVING\n//     };\n//\n//     directionsService.route(request, function(response, status) {\n//         if ( status === google.maps.DirectionsStatus.OK ) {\n//             alert( response.routes[0].legs[0].distance.value ) ; // the distance in metres\n//         }\n//         else {\n//             // oops, there's no route between these two locations\n//             // every time this happens, a kitten dies\n//             // so please, ensure your address is formatted properly\n//         }\n//     });\n// }\n\nexport default { distance, test, theDist }","<template>\n\n\n  <MDBContainer v-if=\"isProviderSelected\">\n    <recipientFinal\n        @cansel:final = handleCanselFinal\n        @provider:ordered = orderSuccess\n        :test = test\n        :provider = selectedProvider\n        :proSlides = proSlides\n        :room = room\n        :available = availability\n        :booking = booking\n\n        :chatusers = chatusers\n\n\n\n        :selecteduser = selecteduser\n        :messages = messages\n        @message = onMessage\n        @select = selectUser\n        @noSelect = noSelectUser\n        @finalinfo = finalinfo\n\n    />\n\n  </MDBContainer>\n  <MDBContainer v-else>\n    <MDBIcon\n        style=\"float:right; cursor: pointer;\"\n        @click=\"canselResult\"\n        size=\"3x\"\n    >\n      <i class=\"fas fa-undo\"></i>\n    </MDBIcon>\n\n    <h2>Tarvin tässä osaaja - {{line}}</h2>\n\n\n    <successMessage\n        :message = orderMessage\n    />\n    <MDBRow style=\"margin-top: 50px;\">\n      <MDBCol>\n\n        <MDBTable border=\"primary\" style=\"font-size: 18px; text-align: left;\">\n          <tbody>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              {{booking.description}}\n\n\n            </td>\n            <td v-else>\n              <MDBRow>\n                <MDBCol >\n                  <MDBTextarea\n                      label=\"Muokkaa tehtävän kuvausta...\"\n                      rows=\"4\" v-model=\"description\"\n                      style=\"font-size: 14px; padding: 20px;\"\n                  />\n                </MDBCol>\n                <MDBCol col=\"1\">\n                  <MDBBtnClose\n                      @click=\"isEditDescription = false\"\n                      style=\"float: right; cursor: pointer\"\n\n                  />\n                </MDBCol>\n              </MDBRow>\n\n\n\n\n            </td>\n          </tr>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"pressedEditDescription\">Muokkaa tehtävän kuvausta</MDBBtn>\n            </td>\n            <td v-else>\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"saveEditedDescription\">Tallenna tehtävän kuvaus</MDBBtn>\n            </td>\n          </tr>\n          <tr>\n            <td v-if=\"!isEditDate\">\n              <h3>{{bookingDateToDisplay}}</h3>\n              <MDBBtn block size=\"lg\" outline=\"info\" @click=\"editDate\">Muokkaa päivämäärä</MDBBtn>\n            </td>\n            <td v-else>\n              <MDBRow>\n                <MDBCol>\n                  <h3>{{bookingDateToDisplay}}</h3>\n\n                  <VueDatePicker\n                      style=\"margin-bottom: 20px;\"\n                      v-model=\"bookingDate\"\n                      :min-date=\"new Date()\"\n                      placeholder=\"Valitse sopivaa päivä milloin haluaisit ammattilaista!\"\n                      @internal-model-change=\"handleInternalDate\"\n                      :state=\"isNoDate ? false : null\"\n                  >\n\n                  </VueDatePicker>\n                </MDBCol>\n                <MDBCol>\n                  <MDBBtnClose\n                      @click=\"isEditDate = false\"\n                      style=\"float: right; cursor: pointer\"\n\n                  />\n                </MDBCol>\n              </MDBRow>\n\n            </td>\n\n          </tr>\n\n          </tbody>\n        </MDBTable>\n\n\n        <div v-for=\"(im, i) in images\" :key=\"i\">\n          <img\n              class=\"loading\"\n              style=\"width: 100%;\"\n              :src=\"im.blob ? im.blob : require(`/server/uploads/${im.name}`)\"\n              :alt=\"im.name\"\n          />\n\n          <MDBBtn v-if=\"!isEditPanel\" block outline=\"success\" @click=\"pressEditPanel(i)\">Muokkaa kuva</MDBBtn>\n          <div class=\"edit-panel\" v-if=\"isEditPanel && imageIndex === i\">\n\n            <MDBRow>\n              <MDBCol>\n                <MDBBtnClose\n                    v-if=\"!value\"\n                    class=\"close-btn\"\n                    style=\"float: right;\"\n                    @click=\"closeEditPanel\"\n                />\n                <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\n                <label  for=\"file-upload\" class=\"custom-file-upload\">\n                  <span v-if=\"value\">\n                  Muokka tehtävän kuvausta: {{value.name}}\n\n                   </span>\n                  <span v-else>Valitse uusi kuva tehtävästä</span>\n                </label>\n                <MDBBtn v-if=\"isEditImage\" block color=\"success\" @click=\"uploadEditedImage(i)\">Upload edited image</MDBBtn>\n                <MDBBtn class=\"btn\" block size=\"lg\" color=\"danger\" @click=\"removeImg(i)\">Poista kuva</MDBBtn>\n              </MDBCol>\n              <MDBCol v-if=\"value\">\n                <MDBBtnClose\n                    class=\"close-btn\"\n                    style=\"float: right;\"\n                    @click=\"closeEditPanel\"\n                />\n                <img\n                    style=\"width:100px; padding-top: 20px;\"\n                    :src=\"this.showImage\"\n                    alt=\"addEdit\"\n                />\n              </MDBCol>\n            </MDBRow>\n\n          </div>\n\n\n\n\n        </div>\n\n        <MDBBtn v-if=\"!isPressedAddlmage\" block color=\"info\" @click=\"pressedAddImage\">Lisää uusi kuva tehtävästä</MDBBtn>\n        <div class=\"add-panel\" v-if=\"isPressedAddlmage && isAddImagePanel\">\n\n\n          <MDBRow>\n\n            <MDBCol>\n              <MDBBtnClose\n                  v-if=\"!value\"\n                  class=\"close-btn\"\n                  @click=\"closeAddPanel\"\n              />\n              <input   id=\"file-upload-x\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\n              <label  for=\"file-upload-x\" class=\"custom-file-upload\">\n                  <span v-if=\"value\">\n                  Muokka tehtävän kuvausta: {{value.name}}\n+\n                   </span>\n                <span v-else>Valitse lisää kuva tehtävästä</span>\n              </label>\n              <MDBBtn v-if=\"isAddImage\" block outline=\"primary\" @click=\"addAdditionalImage\">Tallenna kuva</MDBBtn>\n            </MDBCol>\n            <MDBCol v-if=\"value\">\n              <MDBBtnClose\n                  class=\"close-btn\"\n                  @click=\"closeAddPanel\"\n              />\n              <img\n                  style=\"width:100px\"\n                  :src=\"this.showImage\"\n                  alt=\"addShow\"\n              />\n            </MDBCol>\n          </MDBRow>\n\n        </div>\n\n\n      </MDBCol>\n      <MDBCol v-if=\"isOrdered\">\n\n      </MDBCol>\n      <MDBCol lg=\"6\" v-else>\n        <div v-if=\"providers.length > 0\">\n          <div class=\"ui large form\">\n            <div class=\"field\">\n              <select style=\"padding: 20px; font-size: 18px;\" id=\"listOfProviders\" v-model=\"filterResult\" @click=\"addFilter\">\n                <option disabled value=\"\">Suodatin...</option>\n                <option value=\"distance\">Etäisyyden mukaan</option>\n                <option value=\"rating\">positiivisen palauteen mukaan</option>\n                <!--                <option>Rating</option>-->\n                <!--                <option>Else more</option>-->\n              </select>\n            </div>\n\n          </div>\n          <br>\n\n          <MDBTable  style=\"font-size: 18px; text-align: center;\">\n            <tbody>\n            <tr v-for=\"provider in providers\" :key=\"provider.id\">\n\n\n              <td v-if=\"provider.timeoffer.map(to =>\n\n                datetime.providerMatchingForClient(\n                    bookingTime,\n                    {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\n                    {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\n                )\n              ).includes(true)\">\n                <MDBBtn class=\"provider-selection\"\n                        outline=\"info\"\n                        size=\"lg\"\n                        @click=\"getProviderInfo(provider,'green')\"\n                >\n\n                  {{provider.yritys}}<br>\n\n                  <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span>\n                </MDBBtn>\n                <MDBBadge\n\n                    color=\"success\"\n                    class=\"translate-middle p-1\"\n                    pill\n                    notification\n                ><h4 style=\"padding: 12px;\">\n                  Saatavilla &nbsp;\n                  <img\n                      style=\"width: 50px;\"\n                      :src=\"require(`@/assets/ok.png`)\"\n                      alt=\"ok\"\n                  />\n                </h4>\n                </MDBBadge>\n\n\n\n\n\n              </td>\n              <td v-else>\n\n                <MDBBtn\n                    class=\"provider-selection\"\n                    size=\"lg\"\n                    @click=\"getProviderInfo(provider, 'orange')\"\n                >\n\n                  {{provider.yritys}} <br>\n                  <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span>\n                </MDBBtn>\n\n\n\n                <MDBBadge\n                    color=\"info\"\n                    class=\"translate-middle p-1\"\n                    pill\n                    notification\n                ><h4 style=\"padding: 12px;\">Sovittaessa</h4></MDBBadge>\n\n              </td>\n\n            </tr>\n            <tr>\n            </tr>\n            </tbody>\n          </MDBTable>\n\n\n\n          <!--          Booking {{booking}}-->\n\n        </div>\n        <div v-else>\n          <h2 style=\"width: 100%;\">Yrityksiä hetkellä ei löytyy</h2>\n        </div>\n\n\n\n      </MDBCol>\n      <MDBBtn block outline=\"danger\" size=\"lg\" @click=\"removeBooking\">Poista tilaus</MDBBtn>\n    </MDBRow>\n  </MDBContainer>\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  MDBBtn, MDBContainer, MDBTable, MDBRow,\n  MDBBtnClose,\n  MDBCol, MDBTextarea,\n  MDBIcon,\n  MDBBadge,\n}from \"mdb-vue-ui-kit\";\nimport dt from '../components/controllers/datetime'\nimport recipientFinal from '../pages/RecipientPanelFinal'\nimport successMessage from '../components/notifications/successMessage'\nimport dist from '../components/controllers/distance'\nimport providerService from '../service/providers'\nimport imageService from '../service/image'\nimport VueDatePicker from '@vuepic/vue-datepicker';\n//import socket from \"@/socket\";\nimport {ref} from 'vue'\nimport recipientService from \"@/service/recipients\";\nimport socket from \"@/socket\";\nimport uploadService from \"@/service/image\";\n//import socket from \"@/socket\";\n\n\nexport default {\n  name: \"recipient-panel-result\",\n  props: {\n    test: Boolean,\n    chatusers: Array,\n\n    selecteduser: null,\n    messages: Array,\n    loggedInUser: Object,\n    booking: null,\n    images: Array,\n    bookingTime: null,\n    providers: Array,\n    confirmedBookings: Array,\n    line: String\n  },\n  data () {\n    return {\n      //image: [],\n      //chatUser: {},\n      count: 0,\n      datetime: dt,\n      distance: dist,\n      selectedProvider: null,\n      proSlides: [],\n      isProviderSelected: false,\n      availability: \"\",\n      orderMessage: null,\n      isOrdered: false,\n      isEditDescription: false,\n      description: this.booking.description,\n\n      isEditDate: false,\n      bookingDate: null,\n      bookingDateToDisplay: this.booking.date,\n      //isAddImage: false,\n      isAddFirstImage: false,\n      isPressedAddlmage: false,\n      isAddImage: false,\n      isAddImagePanel: false,\n      isEditImage: false,\n\n\n      isUploadImage: false,\n      isUploaded: false,\n      isImageCreated: false,\n      isAddNewImage: false,\n      isEditPanel: false,\n\n      value: null,\n      imageIndex: 0,\n      file: null,\n      isImageSelected: false,\n      isAdditionalImageSelected: false,\n      showImage: null,\n      tempImages: [],\n      imagesx: [],\n      imagesxxx: [],\n      room: \"\",\n      roomUserCount: 0,\n      filterResult: \"\"\n    }\n  },\n\n  components: {\n    successMessage,\n    VueDatePicker,\n    dist,\n    recipientFinal,\n    MDBBtn,\n    MDBBtnClose,\n    MDBContainer,\n    MDBTable,\n    MDBRow,\n    MDBCol,\n    MDBTextarea,\n    MDBIcon,\n    MDBBadge\n  },\n  methods: {\n\n    editDate () {\n      this.isEditDate = true;\n    },\n    async handleInternalDate () {\n\n      if (this.bookingDate) {\n        this.bookingDateToDisplay = (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear();\n        console.log(\"eeeeee \" + (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear());\n        await recipientService.newDate(this.booking.id, {\n          year: this.bookingDate.getFullYear(),\n          month: this.bookingDate.getMonth(),\n          day: this.bookingDate.getDate(),\n          hours: this.bookingDate.getHours(),\n          minutes: this.bookingDate.getMinutes()\n        })\n\n        const updatedDate = {\n          year: this.bookingDate.getFullYear(),\n          month: this.bookingDate.getMonth(),\n          day: this.bookingDate.getDate(),\n          hours: this.bookingDate.getHours(),\n          minutes: this.bookingDate.getMinutes()\n        }\n\n        this.$emit(\"updateBookingDate\", updatedDate);\n      }\n      console.log(\"Date is handled\")\n     // console.log(\"Selected date: \" + this.date)\n    },\n    handleFileChange(e, i) {\n      //this.$emit('input', e.target.client[0])\n      console.log(\"i in file change \" + i)\n      this.imageIndex = i;\n      try {\n\n        const files = e.target.files[0]\n        console.log('event target client ', e.target.files[0])\n\n        if (files) {\n          const tempImage = URL.createObjectURL(files)\n          this.tempImages.push(tempImage);\n          this.showImage = URL.createObjectURL(files)\n          this.file = e.target.files[0]\n\n          this.isAddImage = true;\n          this.isEditImage = true;\n        }\n\n      } catch (err) {\n        console.log('Error:', err)\n      }\n\n      this.value = e.target.files[0]\n      // if (e.target.files[0]) {\n      //   this.isImageSelected = true;\n      // } else {\n      //   this.isImageSelected = false;\n      // }\n    },\n    pressedAddImage () {\n      this.isAddImage = false\n      this.isEditImage = false;\n      this.isEditPanel = false;\n      this.isPressedAddlmage = true;\n      this.isAddImagePanel = true;\n    },\n    async addImage () {\n\n\n    },\n    pressEditPanel (index) {\n      //this.isImageSelected = false;\n      this.isEditImage = false;\n      this.value = null;\n      this.imageIndex = index;\n      //this.isEditImage = true;\n\n      this.isEditPanel = true;\n      this.isAddImagePanel = false\n      //this.isImageCreated = false;\n      //this.isUploaded = false;\n\n      //this.showImage = null;\n      //this.value = null;\n    },\n    closeEditPanel () {\n      //this.imageIndex = index;\n      //this.isEditImage = true;\n      this.isAddImagePanel = false\n      this.isEditPanel = false\n      this.isEditImage = false;\n      this.value = null;\n    },\n    closeAddPanel () {\n      this.isAddImagePanel = false\n      this.isPressedAddlmage = false;\n      this.value = null;\n    },\n    async uploadEditedImage (index, img) {\n\n      console.log(\"Edited image index is: \" + index);\n\n      this.isEditPanel = false;\n      this.isEditImage = false;\n\n      // this.images.push({\n      //   blob: this.showImage\n      // })\n\n\n\n\n\n      const data = new FormData();\n      data.append('file', this.file, this.file.name)\n\n      //this.$emit(\"editImage\", index, image.imgCreated._id,  this.showImage);\n      console.log(\"Image id \" + this.images[index]._id)\n\n      //this.images[this.imageIndex] = {_id: image._id, blob: this.showImage}\n\n\n\n      const image = await imageService.updateImage(this.images[index]._id, data);\n\n      if (image) {\n        this.images[this.imageIndex] = {_id: this.images[index]._id, blob: this.showImage}\n\n        this.images.forEach(img => {\n          console.log(\"Image name \" + img._id)\n        })\n\n\n        //this.$emit(\"editImage\", index, image.imgCreated._id,  this.showImage);\n        console.log(\"New image id is \" + image._id)\n        this.imgId = image._id;\n        this.file = null;\n\n        //this.$emit(\"editImage\", image, img)\n\n\n\n        this.isEditPanel = false;\n\n      }\n\n      //this.imageIndex = null;\n\n    },\n    async addAdditionalImage () {\n      this.value = null;\n      this.isAddImagePanel = false;\n      this.isAddImage = false;\n      this.isPressedAddlmage = false;\n      const data = new FormData();\n\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking.id, img.imgCreated._id)\n      const image = {\n        _id: img.imgCreated._id,\n        blob: this.showImage\n      }\n      this.$emit(\"addImage\", image);\n\n      // this.images.push({\n      //   _id: img.imgCreated._id,\n      //   blob: this.showImage\n      // })\n\n\n    },\n    async removeImg (id) {\n      //this.value = null;\n      if (!this.images[id].blob) {\n        console.log(\"removed image is blob\")\n\n      }\n\n      console.log(\"removable image id is \" + this.images[id]._id)\n\n      await recipientService.removeImage(this.booking.id, this.images[id]._id);\n      await imageService.remove(this.images[id]._id, this.booking.id);\n\n      this.$emit(\"removeImage\", id);\n\n      this.isEditPanel = false;\n\n\n      //this.imageIndex = null\n      //this.isEditDescription = false;\n\n      //this.isImageSelected = false;\n      //this.showImage = null;\n    },\n    getDistance () {\n      //console.log(\"Distance +++++??? \" + dist.distance())\n      console.log(\"sss \" + dist.test())\n    },\n    selectUser (user) {\n      this.$emit('select', user);\n    },\n    noSelectUser () {\n      this.$emit(\"noSelect\");\n    },\n    onMessage (content, date) {\n      this.$emit(\"message\", content, date);\n    },\n    finalinfo (data) {\n      console.log(\"Final info in result pressed \");\n      this.$emit(\"finalinfo\", data)\n\n    },\n    getChatCredentials () {\n\n    },\n    async pressAddFirstImage () {\n      this.isAddFirstImage = true;\n      this.imageIndex = 0;\n    },\n\n    pressAdditionalImage (index) {\n      //this.imageIndex = this.booking[0].image.length - 1;\n      this.isAddImage = true;\n      this.imageIndex = this.images.length;\n      //this.imageIndex = \"new\";\n      //this.isAddNewImage = true;\n\n      console.log(\"Images index = \" + this.imageIndex);\n      this.isAddImage = true;\n    },\n\n\n\n    async uploadFirstImage (index) {\n      const data = new FormData();\n      this.isUploadImage = true;\n      this.imageIndex = 0;\n      //this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking.id, img.imgCreated._id);\n\n      if (img) {\n        this.file = null;\n\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name\n        }\n\n        this.$emit(\"addImage\", image);\n\n        this.imageIndex = 0;\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n\n      }\n\n\n\n    },\n    async uploadAdditionalImage () {\n      this.isAdditionalImageSelected = false;\n      this.isAddImage = false;\n      this.value = null;\n      //this.isEditImage = false;\n      //this.imageIndex = null;\n      //this.imageIndex = this.booking[0].image.length - 1;\n      console.log(\"Image index index \" + this.imageIndex)\n      const data = new FormData();\n\n      this.isUploadImage = true;\n      //this.imageIndex = 0;\n      this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking.id, img.imgCreated._id);\n\n      if (img) {\n        //this.imgId = img.imgCreated._id;\n        this.file = null;\n        //this.showImage = null;\n        //this.value = null;\n\n        //console.log(\"xxx \" + img.imgCreated._id)\n        //console.log(\"Image itself \" + img.imgCreated.image)\n        //await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name\n        }\n\n        //this.imagesxxx.push(image);\n\n        this.$emit(\"addImage\", image);\n\n        //this.images.push(image);\n\n        // const booking = await recipientService.getBookingById(this.booking[0].id);\n        //\n        // setTimeout( async () => {\n        //   booking[0].image.forEach(im=> {\n        //     this.images.push(im)\n        //   })\n        //   //this.images = this.images.concat(booking[0].image)\n        // }, 500)\n\n\n        /*const booking = await recipientService.getBookingById(this.booking[0].id);\n\n        this.imagesxxx = booking[0].image\n*/\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n\n\n        //this.imageIndex = null;\n      }\n\n\n\n    },\n\n    pressedEditDescription () {\n      this.isEditDescription = true\n      console.log(\"Descripton: \" + this.description);\n    },\n    saveEditedDescription () {\n      this.isEditDescription = false;\n      const description = {\n        description: this.description\n      }\n      this.$emit(\"editDescription\", this.description);\n      recipientService.editDescription(this.booking.id, description)\n      //this.description = \"\";\n    },\n    cancelEditDescription () {\n      console.log(\"Is here something happening??\")\n    },\n    providerGetBooking (id, booking) {\n      //const id = this.provider.user.id;\n      console.log(\"Sended to user id... \" + id)\n      socket.emit(\"accept provider\", {\n        id,\n        booking: booking\n      })\n    },\n    async orderSuccess (prov) {\n      //console.log(\"Ordered!!!\")\n\n      this.isProviderSelected = false;\n\n      //this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n      console.log(\"Provider id \" + prov.id)\n      console.log(\"Recpient id: \" + this.booking.id);\n\n      const providerID = {\n        providerID: this.selectedProvider.id\n      };\n\n\n      //await recipientService.addProviderID(this.booking[0].id, providerID);\n\n      await recipientService.addProviderData(this.booking.id, this.selectedProvider.id);\n\n      //socket.emit(\"send booking notification\", this.booking[0], this.selectedProvider.id);\n\n      //const providerName =\n      //const status = \"notSeen\";\n      const createBookingStatus = await recipientService.updateRecipient(this.booking.id, {status: \"notSeen\"});\n      console.log(\"Is status updated: \" + createBookingStatus.status);\n\n\n      const recipientId = this.booking.id;\n\n      //--------------- About need delete selected and confirmed provider ------------\n\n      //const booking = await providerServise.updateProvider(provId, {booking: [this.booking.id]})\n      // To ordered\n      const booking = await providerService.addProviderBooking(prov.id, recipientId);\n      if (booking === \"Recipient is added!\") {\n        const chatUserDataNavbar = {\n          status: \"\",\n          userID: prov.user.id,\n          name: prov.yritys,\n          room: this.room\n        };\n        this.$emit('remove:confirmed:provider', prov.id, this.booking, chatUserDataNavbar);\n        this.$emit('set:order:to:send', this.booking)\n        // Room info to provider\n        // const roomForNavbar = {\n        //   selfID: this.prov.user.id,\n        //   client:\n        // }\n        this.roomToDb(prov.id, {userID: this.booking.user.id, client: this.booking.user.username, room: this.room});\n        //this.providerGetBooking(prov.user.id, booking);\n        const id = prov.user.id;\n\n        socket.emit(\"accept provider\", {\n          id,\n          booking: this.booking,\n          //room: {status: \"\", userID: this.booking[0].user.id, name: this.booking[0].user.username, room: this.room}\n        })\n\n        // name: this.booking[0].user.username\n\n\n\n        this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n\n        console.log(\"Booking made - id: \" + booking.id);\n\n        this.isOrdered = true;\n\n        setTimeout(() => {\n          this.orderMessage = null;\n        }, 3000)\n\n      } else {\n        this.orderMessage = \"Olet lähetänyt tilauksen!\"\n        setTimeout(() => {\n          this.orderMessage = null;\n        }, 3000)\n        //console.log(\"Yritys on jo tilattu!\")\n      }\n\n\n\n    },\n    getProviderInfo (provider, marker) {\n\n      this.selectedProvider = provider;\n      provider.reference.forEach(slide => {\n        this.proSlides = [\n            ...this.proSlides,\n          {\n            id: slide.id,\n            size: '1400-933',\n            src: require(`/server/uploads/pro/${slide.name}`),\n            thumb: require(`/server/uploads/pro/${slide.name}`),\n            subHtml: `<div class=\"lightGallery-captions\">\n                <h2>Terve</h2>\n\n            </div>\"`\n          }\n        ]\n      })\n      this.availability = marker;\n      this.isProviderSelected = true;\n\n      //console.log(\"Booking username \" + this.booking[0].user.username)\n      //console.log(\"Recipient room: \" + (provider.yritys + this.booking[0].user.username))\n      this.room = provider.yritys + this.booking.user.username\n\n      socket.emit(\"room users count\")\n      socket.on('get room users count', (data) => {\n        console.log(\"Can we get users data from backend in recipient final??? \" + data.users.length)\n        this.roomUserCount = data.users.length;\n      })\n\n      const username = this.booking.user.username;\n      const room = provider.yritys + this.booking.user.username;\n\n\n\n      const chatCredentials = {\n        room: room,\n        userID: this.chatUser.id,\n        username: username,\n      }\n\n\n\n      const providerDatax = {\n        userID: provider.user.id,\n        username: provider.user.username,\n        room: room\n      }\n\n      this.$emit(\"provider\", providerDatax);\n\n      const providerData = \"Allu\"\n\n      const id = provider.user.id;\n      const name = provider.user.username;\n\n      // data to create new room\n      this.$emit(\"chatCredentials\", chatCredentials)\n\n      //socket.emit(\"online\", (room));\n\n      // socket.emit(\"create new room user\", {\n      //   room: room,\n      //   username: username\n      // })\n\n\n\n      socket.emit(\"create room users\", {\n        room: room,\n        username: username,\n        providerUsername: provider.user.username,\n        providerID: provider.user.id\n      })\n\n\n\n      //socket.emit(\"update room\", room, id, name)\n      // let rooms = [\"Oopersama\", \"tvsama\"]\n      // socket.emit(\"join all room\", rooms);\n      // iolrhjwefiogäqhj\n    },\n    async roomToDb (id, room) {\n      await providerService.addRoom(id, room)\n    },\n    addFilter () {\n      const filterListedProviders = document.getElementById(\"listOfProviders\")\n\n      filterListedProviders.addEventListener(\"change\", (event) => {\n        console.log(\"Filtered provider: \" + event.target.value);\n        this.$emit(\"filter_provider\", event.target.value);\n        // if (event.target.value === \"distance\") {\n        //   this.$emit(\"filter_provider\", event.target.value);\n        // } else if (event.target.value === \"feedback\") {\n        //\n        //   this.$emit(\"filter_feedback\")\n        // }\n\n\n\n      })\n    },\n    handleCanselFinal (result) {\n      this.isProviderSelected = result;\n    },\n    canselResult () {\n      this.$emit('cansel:result', false)\n    },\n    async removeBooking () {\n      // booking[0].id\n      console.log(\"In start booking id \" + this.booking.id)\n      if (confirm(\"Oletko varmaa, että haluat poistaa tilauksen!?\") === true) {\n        console.log(\"You pressed OK!\")\n\n\n        this.$emit(\"remove:booking\", this.booking.id);\n\n      } else {\n        console.log(\"You canceled!\")\n      }\n      //await recipientService.removeBooking(this.booking[0].id);\n\n    },\n  },\n\n  async mounted() {\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      this.chatUser = user;\n\n      /*const booking = await recipientService.getBookingById(this.booking[0].id);\n      this.imagesxxx = booking[0].image*/\n      /*booking[0].image.forEach(bi => {\n        this.tempImages.push(bi.name)\n      })*/\n\n\n\n\n\n      //this.joinServer(username, userID);\n    }\n\n\n  }\n}\n</script>\n\n\n<style scoped>\n.edit-panel {\n  border: solid grey;\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.add-panel {\n  border: solid grey;\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.add-additional-panel {\n  border: solid blue;\n}\n.btn {\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.close-btn {\n  float: right;\n  padding: 20px;\n}\nimg.loading {\n  width: 100%;\n  height: 400px;\n  background: transparent url(https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif) no-repeat scroll center center;\n}\n.success {\n  color: white;\n  background: #7bc47b;\n  font-size: 20px;\n  border: solid #0e920e;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\ninput[type=\"file\"] {\n  display: none;\n}\n.custom-file-upload {\n  width: 100%;\n\n  color: white;\n  font-size: 18px;\n  background-color: #87958e;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 20px 12px;\n  margin-bottom: 0;\n  cursor: pointer;\n}\n.imageSection {\n  margin-bottom: 20px;\n}\n.provider-selection {\n  width: 300px;\n  padding: 20px;\n  background-color: grey;\n  border: solid #4c4949;\n  color: #f0eeee;\n  font-size: 150%;\n}\n\n</style>","import { render } from \"./RecipientPanelResult.vue?vue&type=template&id=ae1b9e40&scoped=true\"\nimport script from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanelResult.vue?vue&type=style&index=0&id=ae1b9e40&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ae1b9e40\"]])\n\nexport default __exports__"],"names":["compare","rec","prov","receiverDate","Date","y","m","d","hour","min","providerDate","providerMatchingForClient","re","pFrom","pTo","pFromDate","pToDate","res","distance","origin","google","maps","LatLng","destination","service","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","unitSystem","UnitSystem","METRIC","durationInTraffic","avoidHighways","avoidTolls","response_data","responseDis","status","DistanceMatrixStatus","OK","console","log","rows","elements","text","alert","test","_createVNode","_createTextVNode","theDist","geometry","spherical","computeDistanceBetween","toFixed","_createElementVNode","class","for","disabled","value","_hoisted_23","_hoisted_24","_hoisted_25","style","_hoisted_39","$data","isProviderSelected","_createBlock","_component_MDBContainer","key","_component_recipientFinal","$options","handleCanselFinal","orderSuccess","$props","provider","selectedProvider","proSlides","room","available","availability","booking","chatusers","selecteduser","messages","onMessage","onSelect","selectUser","onNoSelect","noSelectUser","onFinalinfo","finalinfo","_component_MDBIcon","onClick","canselResult","size","_hoisted_1","_toDisplayString","line","_component_successMessage","message","orderMessage","_component_MDBRow","_component_MDBCol","_component_MDBTable","border","isEditDescription","_createElementBlock","_hoisted_3","_component_MDBTextarea","label","description","$event","col","_component_MDBBtnClose","_cache","_hoisted_2","_hoisted_5","_component_MDBBtn","outline","block","saveEditedDescription","_hoisted_4","pressedEditDescription","isEditDate","_hoisted_7","bookingDateToDisplay","_component_VueDatePicker","bookingDate","placeholder","onInternalModelChange","handleInternalDate","state","_ctx","isNoDate","_hoisted_6","editDate","_Fragment","_renderList","images","im","i","src","blob","require","name","alt","isEditPanel","pressEditPanel","imageIndex","_hoisted_9","closeEditPanel","id","type","onChange","handleFileChange","_hoisted_11","_hoisted_12","_hoisted_13","isEditImage","color","uploadEditedImage","removeImg","showImage","isPressedAddlmage","pressedAddImage","isAddImagePanel","_hoisted_15","closeAddPanel","_hoisted_16","_hoisted_17","_hoisted_18","isAddImage","addAdditionalImage","isOrdered","lg","providers","length","_hoisted_20","_hoisted_21","_hoisted_22","filterResult","args","addFilter","_hoisted_27","timeoffer","map","to","datetime","bookingTime","yearFrom","monthFrom","dayFrom","hoursFrom","minutesFrom","yearTo","monthTo","dayTo","hoursTo","minutesTo","includes","_hoisted_28","getProviderInfo","yritys","_hoisted_29","_hoisted_30","_component_MDBBadge","pill","notification","_hoisted_31","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_40","removeBooking","props","Boolean","Array","loggedInUser","Object","confirmedBookings","String","data","count","dt","dist","this","date","isAddFirstImage","isUploadImage","isUploaded","isImageCreated","isAddNewImage","file","isImageSelected","isAdditionalImageSelected","tempImages","imagesx","imagesxxx","roomUserCount","components","successMessage","VueDatePicker","recipientFinal","MDBBtn","MDBBtnClose","MDBContainer","MDBTable","MDBRow","MDBCol","MDBTextarea","MDBIcon","MDBBadge","methods","async","getMonth","getDate","getFullYear","recipientService","newDate","year","month","day","hours","getHours","minutes","getMinutes","updatedDate","$emit","e","files","target","tempImage","URL","createObjectURL","push","err","index","img","FormData","append","_id","image","imageService","updateImage","forEach","imgId","create","addImage","imgCreated","removeImage","remove","getDistance","user","content","getChatCredentials","pressAdditionalImage","editDescription","cancelEditDescription","providerGetBooking","socket","emit","addProviderData","createBookingStatus","updateRecipient","recipientId","providerService","addProviderBooking","chatUserDataNavbar","userID","roomToDb","client","username","setTimeout","marker","reference","slide","thumb","subHtml","on","users","chatCredentials","chatUser","providerDatax","providerUsername","providerID","addRoom","filterListedProviders","document","getElementById","addEventListener","event","result","confirm","loggedUserJSON","window","localStorage","getItem","JSON","parse","__exports__","render"],"sourceRoot":""}