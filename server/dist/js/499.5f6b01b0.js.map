{"version":3,"file":"js/499.5f6b01b0.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/controllers/datetime.js","webpack://prore-mongo/./src/components/notifications/errorMessage.js","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue?7f3a"],"sourcesContent":["\nconst compare = (rec, prov) => {\n    const receiverDate = new Date(rec.y, rec.m, rec.d, rec.hour, rec.min);\n    const providerDate = new Date(prov.y, prov.m, prov.d, prov.hour, prov.min)\n    return providerDate >= receiverDate;\n}\n\nconst providerMatchingForClient = (re, pFrom, pTo) => {\n    //const rDate = new Date(re.y, re.m, re.d, re.hour, re.min);\n    const pFromDate = new Date(pFrom.y, pFrom.m, pFrom.d, pFrom.hour, pFrom.min);\n    const pToDate = new Date(pTo.y, pTo.m, pTo.d, pTo.hour, pTo.min);\n    return re >= pFromDate && re < pToDate;\n}\nexport default { compare, providerMatchingForClient }","const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n            <img className={'errorImg'} alt={'error'} src={require('@/assets/error.png')}/>\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage","<template>\n\n\n  <MDBContainer v-if=\"isProviderSelected\">\n    <recipientFinal\n        @cansel:final = handleCanselFinal\n        @provider:ordered = orderSuccess\n        :proRefSlides = proRefSlides\n        :test = test\n        :provider = selectedProvider\n        :offer = offer\n        :proSlides = slides\n        :room = room\n        :available = availability\n        :booking = booking\n\n        :chatusers = chatusers\n\n        :initialize_chat = handleInitializeChat\n\n        :selecteduser = selecteduser\n        :messages = messages\n        @message = onMessage\n        @select = selectUser\n        @noSelect = noSelectUser\n        @join_chat_panel = handleJoinChatPanel\n\n    />\n\n  </MDBContainer>\n  <MDBContainer v-else>\n    <div style=\"display: flex; justify-content: right; padding: 20px;\">\n      <MDBBtnClose\n          white\n          style=\"cursor: pointer;\"\n          @click=\"canselResult\"\n      />\n    </div>\n\n    <prompt-panel\n        :promptPanelContent = promptPanelContent\n        @prompt:no = handlePromptNo\n        @prompt:yes = handlePromptYes\n    />\n\n<!--    <MDBIcon-->\n<!--        style=\"float:right; cursor: pointer;\"-->\n<!--        @click=\"canselResult\"-->\n<!--        size=\"3x\"-->\n<!--    >-->\n<!--      <i class=\"fas fa-undo\"></i>-->\n<!--    </MDBIcon>-->\n\n    <h2>Tarvin tässä osaaja - {{line}}</h2>\n\n    <h5 v-if=\"booking.created_ms - new Date().getTime() <= 0 && booking.offers.length < 1\" class=\"expired_date\">\n      Tilaus on vanhentunut. Muokkaa tilauksen päivämäärä / aikaa tai poista tilaus!\n    </h5>\n    <successMessage\n        :message = orderMessage\n    />\n\n    <MDBRow style=\"margin-top: 50px;\">\n      <MDBCol>\n\n        <MDBTable border=\"primary\" style=\"font-size: 17px; color: #dddddd; text-align: left;\">\n          <tbody>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              {{booking.description}}\n\n\n            </td>\n            <td v-else>\n              <MDBRow>\n                <MDBCol >\n                  <MDBTextarea\n                      label=\"Muokkaa tehtävän kuvausta...\"\n                      white\n                      rows=\"4\" v-model=\"description\"\n                      style=\"font-size: 14px; padding: 20px;\"\n                  />\n                </MDBCol>\n                <MDBCol col=\"1\">\n                  <MDBBtnClose\n                      white\n                      @click=\"isEditDescription = false\"\n                      style=\"float: right; cursor: pointer\"\n\n                  />\n                </MDBCol>\n              </MDBRow>\n\n\n\n\n            </td>\n          </tr>\n          <tr v-if=\"booking.offers.length < 1\">\n            <td v-if=\"!isEditDescription\">\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"pressedEditDescription\">Muokkaa tehtävän kuvausta</MDBBtn>\n            </td>\n            <td v-else>\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"saveEditedDescription\">Tallenna tehtävän kuvaus</MDBBtn>\n            </td>\n          </tr>\n          <tr>\n            <td v-if=\"!isEditDate\">\n              <h3 :class=\"{expired_date: booking.created_ms - new Date().getTime() <= 0 && booking.offers.length < 1}\">\n                {{bookingDateToDisplay}} &emsp;\n                klo &nbsp;\n                {{new Date(booking.created).getHours() < 10 ? \"0\" + new Date(booking.created).getHours() : new Date(booking.created).getHours()}}\n                :\n                {{new Date(booking.created).getMinutes() < 10 ? \"0\" + new Date(booking.created).getMinutes() : new Date(booking.created).getMinutes()}}\n\n              </h3>\n              <MDBBtn v-if=\"booking.offers.length < 1\" block size=\"lg\" outline=\"info\" @click=\"editDate\">\n                <span :class=\"{expired_warning: booking.created_ms - new Date().getTime() <= 0}\">Muokkaa päivämäärä</span>\n              </MDBBtn>\n            </td>\n            <td v-else>\n              <MDBRow>\n                <MDBCol col=\"8\">\n                  <h4 :class=\"{expired_date: booking.created_ms - new Date().getTime() <= 0}\">\n                    {{bookingDateToDisplay}} &emsp;\n                    klo &nbsp;\n                    {{new Date(booking.created).getHours() < 10 ? \"0\" + new Date(booking.created).getHours() : new Date(booking.created).getHours()}}\n                    :\n                    {{new Date(booking.created).getMinutes() < 10 ? \"0\" + new Date(booking.created).getMinutes() : new Date(booking.created).getMinutes()}}\n                  </h4>\n\n                  <VueDatePicker\n                      style=\"margin-bottom: 20px;\"\n                      dark\n                      v-model=\"bookingDate\"\n                      :min-date=\"new Date()\"\n                      placeholder=\"Valitse sopivaa aika...\"\n                      @internal-model-change=\"handleInternalDate\"\n                      :state=\"isNoDate ? false : null\"\n                  >\n\n                  </VueDatePicker>\n                </MDBCol>\n                <MDBCol col=\"4\">\n                  <MDBBtnClose\n                      white\n                      @click=\"isEditDate = false\"\n                      style=\"float: right; cursor: pointer\"\n\n                  />\n                </MDBCol>\n              </MDBRow>\n\n            </td>\n\n          </tr>\n\n          </tbody>\n        </MDBTable>\n\n        <div v-for=\"(im, i) in images\" :key=\"i\">\n          <img\n              class=\"loading\"\n              style=\"width: 100%;\"\n              :src=\"im.blob ? im.blob : require(`/server/uploads/${im.name}`)\"\n              :alt=\"im.name\"\n          />\n\n          <MDBBtn v-if=\"!isEditPanel\" block outline=\"success\" @click=\"pressEditPanel(i)\">Muokkaa kuva</MDBBtn>\n          <div class=\"edit-panel\" v-if=\"isEditPanel && imageIndex === i\">\n            <error-message :message = wrong_SizeType_Message />\n            <MDBRow v-if=\"booking.offers.length < 1\">\n              <MDBCol>\n                <MDBBtnClose\n                    v-if=\"!value\"\n                    white\n                    class=\"close-btn\"\n                    style=\"float: right;\"\n                    @click=\"closeEditPanel\"\n                />\n                <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\n                <label  for=\"file-upload\" class=\"custom-file-upload\">\n                  <span v-if=\"value\">\n                  Muokka tehtävän kuvausta: {{value.name}}\n\n                   </span>\n                  <span v-else>Valitse uusi kuva tehtävästä</span>\n                </label>\n                <MDBBtn v-if=\"isEditImage\" block color=\"success\" @click=\"uploadEditedImage(i)\">Upload edited image</MDBBtn>\n                <MDBBtn class=\"btn\" block size=\"lg\" color=\"danger\" @click=\"removeImg(i)\">Poista kuva</MDBBtn>\n              </MDBCol>\n              <MDBCol v-if=\"value\">\n                <MDBBtnClose\n                    white\n                    class=\"close-btn\"\n                    style=\"float: right;\"\n                    @click=\"closeEditPanel\"\n                />\n                <img\n                    style=\"width:100px; padding-top: 20px;\"\n                    :src=\"this.showImage\"\n                    alt=\"addEdit\"\n                />\n              </MDBCol>\n            </MDBRow>\n\n          </div>\n\n\n\n\n        </div>\n\n        <MDBBtn v-if=\"!isPressedAddlmage & booking.offers.length < 1\" block color=\"primary\" @click=\"pressedAddImage\">Lisää uusi kuva tehtävästä</MDBBtn>\n        <div class=\"add-panel\" v-if=\"isPressedAddlmage && isAddImagePanel\">\n\n          <error-message :message = wrong_SizeType_Message />\n          <MDBRow>\n\n            <MDBCol>\n              <MDBBtnClose\n                  v-if=\"!value\"\n                  white\n                  class=\"close-btn\"\n                  @click=\"closeAddPanel\"\n              />\n              <input   id=\"file-upload-x\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\n              <label  for=\"file-upload-x\" class=\"custom-file-upload\">\n                  <span v-if=\"value\">\n                  Muokka tehtävän kuvausta: {{value.name}}\n+\n                   </span>\n                <span v-else>Valitse lisää kuva tehtävästä</span>\n              </label>\n              <MDBBtn v-if=\"isAddImage\" block outline=\"primary\" @click=\"addAdditionalImage\">Tallenna kuva</MDBBtn>\n            </MDBCol>\n            <MDBCol v-if=\"value\">\n              <MDBBtnClose\n                  class=\"close-btn\"\n                  white\n                  @click=\"closeAddPanel\"\n              />\n              <img\n                  style=\"width:100px\"\n                  :src=\"this.showImage\"\n                  alt=\"addShow\"\n              />\n            </MDBCol>\n          </MDBRow>\n\n        </div>\n\n\n      </MDBCol>\n\n<!--      <MDBCol v-if=\"!booking.isIncludeOffers\">-->\n<!--          <div v-if=\"providers.length > 0\">-->\n<!--            <div class=\"ui large form\">-->\n<!--              <div class=\"field\">-->\n<!--                <h3 style=\"margin-bottom: 20px;\">Palveluntarjoajat</h3>-->\n<!--                <select style=\"padding: 20px; background-color: #3c3535; color: lightgrey; font-size: 18px;\" id=\"listOfProviders\" v-model=\"filterResult\" @click=\"addFilter\">-->\n<!--                  <option value=\"\">Suodata...</option>-->\n<!--                  <option value=\"distance\">Etäisyyden mukaan - lähin ensin</option>-->\n<!--                  <option value=\"rating\">positiivisen palauteen mukaan</option>-->\n<!--                  &lt;!&ndash;                <option>Rating</option>&ndash;&gt;-->\n<!--                  &lt;!&ndash;                <option>Else more</option>&ndash;&gt;-->\n<!--                </select>-->\n<!--              </div>-->\n\n<!--            </div>-->\n<!--            <br>-->\n\n<!--            <MDBTable  style=\"font-size: 18px; text-align: center; position: relative;\">-->\n<!--              <tbody>-->\n<!--              <tr v-for=\"provider in providers\" :key=\"provider.id\">-->\n\n\n<!--                <td v-if=\"provider.timeoffer.map(to =>-->\n\n<!--                  datetime.providerMatchingForClient(-->\n<!--                      bookingTime,-->\n<!--                      {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},-->\n<!--                      {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}-->\n<!--                  )-->\n<!--                ).includes(true)\">-->\n<!--                  <MDBBtn class=\"provider-selection\"-->\n<!--                          outline=\"success\"-->\n<!--                          size=\"lg\"-->\n<!--                          @click=\"getProviderInfo(provider,'green')\"-->\n<!--                  >-->\n\n<!--                    {{provider.yritys}}<br>-->\n<!--                    <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span><br>-->\n<!--                    <span style=\"font-size: 14px;\">{{provider.priceByHour ? (provider.priceByHour + \" eur / tunti\") : \"Urakkahinta\"}}</span>-->\n\n<!--                  </MDBBtn>-->\n\n<!--                  <MDBBadge-->\n\n<!--                      color=\"success\"-->\n<!--                      class=\"translate-middle p-4\"-->\n<!--                      pill-->\n<!--                      notification-->\n<!--                  ><span style=\" font-size: 14px;\">-->\n<!--                  Saatavilla &nbsp;-->\n<!--                  <img-->\n<!--                      style=\"width: 20px;\"-->\n<!--                      :src=\"require(`@/assets/ok.png`)\"-->\n<!--                      alt=\"ok\"-->\n<!--                  />-->\n<!--                </span>-->\n<!--                  </MDBBadge>-->\n\n\n\n\n\n\n\n<!--                </td>-->\n<!--                <td v-else>-->\n\n<!--                  <MDBBtn-->\n<!--                      class=\"provider-selection\"-->\n<!--                      outline=\"info\"-->\n<!--                      size=\"lg\"-->\n<!--                      @click=\"getProviderInfo(provider, 'orange')\"-->\n<!--                  >-->\n\n<!--                    {{provider.yritys}} <br>-->\n<!--                    <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span><br>-->\n<!--                    <span style=\"font-size: 14px;\">{{provider.priceByHour ? (provider.priceByHour + \" eur / tunti\") : \"Urakkahinta\"}}</span>-->\n<!--                  </MDBBtn>-->\n\n\n\n<!--                  <MDBBadge-->\n\n<!--                      color=\"info\"-->\n<!--                      class=\"translate-middle p-4\"-->\n<!--                      pill-->\n<!--                      notification-->\n<!--                  ><span style=\" font-size: 14px; \">Sovittaessa</span></MDBBadge>-->\n\n<!--                </td>-->\n\n<!--              </tr>-->\n<!--              <tr>-->\n<!--              </tr>-->\n<!--              </tbody>-->\n<!--            </MDBTable>-->\n\n\n\n<!--            &lt;!&ndash;          Booking {{booking}}&ndash;&gt;-->\n\n<!--          </div>-->\n<!--          <div v-else>-->\n<!--            <h2 style=\"width: 100%;\">Yrityksiä hetkellä ei löytyy</h2>-->\n<!--          </div>-->\n<!--      </MDBCol>-->\n      <MDBCol lg=\"6\">\n        <div v-if=\"booking_offers.length > 0\">\n          <div class=\"ui large form\">\n            <div class=\"field\">\n              <h3 style=\"margin-bottom: 20px;\">Tarjoukset</h3>\n              <select style=\"padding: 20px; background-color: #3c3535; color: lightgrey; font-size: 18px;\" id=\"listOfProviders\" v-model=\"filterResult\" @click=\"addFilter\">\n                <option value=\"\">Suodata...</option>\n                <option value=\"distance\">Etäisyyden mukaan - lähin ensin</option>\n                <option value=\"rating\">Positiivisen palauteen mukaan - enemmän ensin</option>\n                <option value=\"price\">Hinnan mukaan - halvin ensin</option>\n                <!--                <option>Rating</option>-->\n                <!--                <option>Else more</option>-->\n              </select>\n\n            </div>\n\n          </div>\n          <br>\n\n          <MDBTable  style=\"font-size: 18px; text-align: center; position: relative;\">\n            <tbody>\n            <tr v-for=\"offer in booking_offers\" :key=\"offer.id\">\n\n              <td>\n\n                <MDBBtn\n                    class=\"provider-selection\"\n                    outline=\"info\"\n                    size=\"lg\"\n                    @click=\"getProviderInfo(offer.provider, offer, 'orange')\"\n                >\n\n                  {{offer.provider.yritys}} <br>\n                  <span style=\"font-size: 14px;\">Etäisyys: {{offer.distance}} km</span><br>\n\n                </MDBBtn>\n\n\n\n                <MDBBadge\n                    v-if=\"offer.isNewOffer\"\n                    color=\"danger\"\n                    class=\"translate-middle p-3\"\n                    pill\n                    notification\n                >\n                  <span style=\" font-size: 14px; \">\n                    uusi! <br>{{offer.price}} eur\n                  </span>\n                </MDBBadge>\n                <MDBBadge\n                    v-else\n                    color=\"info\"\n                    class=\"translate-middle p-3\"\n                    pill\n                    notification\n                >\n                  <span style=\" font-size: 14px; \">\n                    {{offer.price}} eur\n                  </span>\n                </MDBBadge>\n\n              </td>\n\n            </tr>\n            <tr>\n            </tr>\n            </tbody>\n          </MDBTable>\n\n        </div>\n        <div v-else>\n          <h2 style=\"width: 100%;\">Odotetaan tarjouksia...</h2>\n        </div>\n\n      </MDBCol>\n\n<!--      <div v-if=\"confirmPanel\" class=\"confirmation\">-->\n<!--        <h3>Oletko varma,että haluat poista tilauksen?</h3>-->\n<!--        <div style=\"float: right;\">-->\n<!--          <div style=\"display: flex; width: 300px; justify-content: space-around;\">-->\n<!--            <MDBBtn color=\"success\" size=\"large\">Kyllä</MDBBtn>-->\n<!--            <MDBBtn color=\"danger\" size=\"large\">Poistu</MDBBtn>-->\n<!--          </div>-->\n<!--        </div>-->\n<!--      </div>-->\n\n      <MDBBtn block outline=\"danger\" size=\"lg\" @click=\"removeOfferedBookings\">Poista tilaus</MDBBtn>\n    </MDBRow>\n\n<!--    Booking offers {{booking_offers}}-->\n\n\n  </MDBContainer>\n\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  MDBBtn, MDBContainer, MDBTable, MDBRow,\n  MDBBtnClose,\n  MDBCol, MDBTextarea,\n  MDBIcon,\n  MDBBadge,\n}from \"mdb-vue-ui-kit\";\nimport dt from '../components/controllers/datetime'\nimport recipientFinal from '../pages/RecipientPanelFinal'\nimport successMessage from '../components/notifications/successMessage'\nimport errorMessage from '../components/notifications/errorMessage'\nimport dist from '../components/controllers/distance'\nimport providerService from '../service/providers'\nimport offerService from '../service/offers'\nimport imageService from '../service/image'\nimport promptPanel from '../components/PromptPanel'\nimport VueDatePicker from '@vuepic/vue-datepicker';\n//import socket from \"@/socket\";\nimport {ref} from 'vue'\nimport recipientService from \"@/service/recipients\";\nimport socket from \"@/socket\";\nimport uploadService from \"@/service/image\";\nimport dateFormat from \"dateformat\";\n//import socket from \"@/socket\";\n\n\nexport default {\n  name: \"recipient-panel-result\",\n  props: {\n    test: Boolean,\n    chatusers: Array,\n    proRefSlides: Array,\n    selecteduser: null,\n    messages: Array,\n    loggedInUser: Object,\n    booking: null,\n    booking_offers: [],\n    images: Array,\n\n    bookingTime: null,\n    providers: Array,\n    confirmedBookings: Array,\n    line: String\n  },\n  data () {\n    return {\n      //image: [],\n      IMAGE_SIZE: 1000000,\n      offer: null,\n      chatUser: null,\n      //initializeChatRoom: {},\n      //chatRoomData: {},\n      count: 0,\n      //confirmPanel: null,\n      promptPanelContent: null,\n\n\n      wrong_SizeType_Message: null,\n\n      datetime: dt,\n      distance: dist,\n      selectedProvider: null,\n      proSlides: [],\n\n      isProviderSelected: false,\n      availability: \"\",\n      orderMessage: null,\n      isOrdered: false,\n      isEditDescription: false,\n      description: this.booking.description,\n\n      isEditDate: false,\n      bookingDate:  new Date(this.booking.created),        //null,\n      bookingDateToDisplay: this.booking.date,\n      //isAddImage: false,\n      isAddFirstImage: false,\n      isPressedAddlmage: false,\n      isAddImage: false,\n      isAddImagePanel: false,\n      isEditImage: false,\n\n\n      isUploadImage: false,\n      isUploaded: false,\n      isImageCreated: false,\n      isAddNewImage: false,\n      isEditPanel: false,\n\n      value: null,\n      imageIndex: 0,\n      file: null,\n      files: null,\n      isImageSelected: false,\n      isAdditionalImageSelected: false,\n      showImage: null,\n      tempImages: [],\n      imagesx: [],\n      imagesxxx: [],\n      room: \"\",\n      roomUserCount: 0,\n      filterResult: \"\",\n    }\n  },\n\n  components: {\n    successMessage,\n    errorMessage,\n    VueDatePicker,\n    promptPanel,\n    dist,\n    recipientFinal,\n    MDBBtn,\n    MDBBtnClose,\n    MDBContainer,\n    MDBTable,\n    MDBRow,\n    MDBCol,\n    MDBTextarea,\n    MDBIcon,\n    MDBBadge\n  },\n\n  methods: {\n    handlePromptNo () {\n      console.log(\"Said NO!\")\n      this.promptPanelContent = null;\n    },\n    handlePromptYes () {\n      console.log(\"Said YES!\");\n      this.promptPanelContent = null;\n      this.$emit(\"removeOfferedBooking\", this.booking, this.booking.offers);\n    },\n    editDate () {\n      this.isEditDate = true;\n\n\n    },\n    async handleInternalDate () {\n\n      if (this.bookingDate) {\n        console.log(\"new date: \" +  new Date(this.bookingDate).getTime());\n        this.bookingDateToDisplay = (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear();\n        console.log(\"eeeeee \" + (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear());\n        const dateInMs = new Date(this.bookingDate).getTime();\n        const renewCreated = new Date(this.bookingDate);\n        await recipientService.newDate(this.booking.id, {\n          year: this.bookingDate.getFullYear(),\n          month: this.bookingDate.getMonth(),\n          day: this.bookingDate.getDate(),\n          hours: this.bookingDate.getHours(),\n          minutes: this.bookingDate.getMinutes(),\n          date_ms: dateInMs\n        })\n\n        const updatedDate = {\n          year: this.bookingDate.getFullYear(),\n          month: this.bookingDate.getMonth(),\n          day: this.bookingDate.getDate(),\n          hours: this.bookingDate.getHours(),\n          minutes: this.bookingDate.getMinutes()\n        }\n\n        this.$emit(\"updateBookingDate\", this.booking, updatedDate);\n      }\n      //this.isEditDate = false;\n      console.log(\"Date is handled\")\n     // console.log(\"Selected date: \" + this.date)\n    },\n    handleFileChange(e, i) {\n      //this.$emit('input', e.target.client[0])\n      console.log(\"i in file change \" + i)\n      this.imageIndex = i;\n      try {\n\n        const files = e.target.files[0]\n        console.log('event target client ', e.target.files[0])\n\n        if (files) {\n          const tempImage = URL.createObjectURL(files)\n          this.tempImages.push(tempImage);\n          this.showImage = URL.createObjectURL(files)\n          this.file = e.target.files[0];\n          this.files = e.target.files[0];\n\n          this.isAddImage = true;\n          this.isEditImage = true;\n        }\n\n      } catch (err) {\n        console.log('Error:', err)\n      }\n\n      this.value = e.target.files[0]\n      // if (e.target.files[0]) {\n      //   this.isImageSelected = true;\n      // } else {\n      //   this.isImageSelected = false;\n      // }\n    },\n    pressedAddImage () {\n      this.isAddImage = false\n      this.isEditImage = false;\n      this.isEditPanel = false;\n      this.isPressedAddlmage = true;\n      this.isAddImagePanel = true;\n    },\n    async addImage () {\n\n\n    },\n    pressEditPanel (index) {\n      this.isEditImage = false;\n      this.value = null;\n      this.imageIndex = index;\n      this.isPressedAddlmage = false;\n      this.isEditPanel = true;\n      this.isAddImagePanel = false\n    },\n    closeEditPanel () {\n      this.isAddImagePanel = false\n      this.isEditPanel = false\n      this.isEditImage = false;\n      this.value = null;\n    },\n    closeAddPanel () {\n      this.isAddImagePanel = false\n      this.isPressedAddlmage = false;\n      this.value = null;\n    },\n    async uploadEditedImage (index, img) {\n\n      console.log(\"Edited image index is: \" + index);\n\n      this.isEditPanel = false;\n      this.isEditImage = false;\n\n      const data = new FormData();\n      data.append('file', this.file, this.file.name)\n\n      console.log(\"Image id \" + this.images[index]._id)\n      const editImgType = this.file.type;\n      if (editImgType ===\"image/jpeg\" || editImgType === \"image/jpg\" || editImgType === \"image/png\" || editImgType === \"image/gif\") {\n        if (this.file.size <= this.IMAGE_SIZE) {\n          const image = await imageService.updateImage(this.images[index]._id, data);\n\n          if (image) {\n            this.$emit(\"editImage\", index, image._id,  this.showImage);\n            // this.images[this.imageIndex] = {_id: this.images[index]._id, blob: this.showImage}\n            //\n            // this.images.forEach(img => {\n            //   console.log(\"Image name \" + img._id)\n            // })\n\n            console.log(\"ORDRED in EDIT pikkus \" + this.booking.ordered.length)\n            let ordered = [];\n            this.booking.ordered.forEach(b => {\n              console.log(\"CVCVCV \" + b.user.username);\n              ordered = ordered.concat(b.user.id);\n            })\n\n            const reader = new FileReader();\n\n            if (this.file) {\n              reader.onload = (e) => {\n                const bytes = new Uint8Array(e.target.result);\n                console.log(\"FILES.... \" + this.files)\n\n                const image_id = image._id;\n\n                socket.emit(\"display edited booking image\", image_id, bytes, this.booking.id, ordered)\n\n              };\n              reader.readAsArrayBuffer(this.files);\n            }\n\n            console.log(\"New image id is \" + image._id)\n            this.imgId = image._id;\n            this.file = null;\n\n            this.isEditPanel = false;\n\n\n            this.closeAddPanel();\n\n          }\n        } else {\n          this.isEditPanel = true;\n          this.closeAddPanel();\n          this.wrong_SizeType_Message = \"Väärä formaati. Kuva pitäisi olla jpeg, jpg, png tai gif formaatissa!\";\n          setTimeout(() => {\n            this.wrong_SizeType_Message = null;\n          }, 3000);\n        }\n\n      }else {\n        this.isEditPanel = true;\n        this.closeAddPanel();\n        this.wrong_SizeType_Message = \"Kuvan maximi koko on oltava 3 MB!\";\n        setTimeout(() => {\n          this.wrong_SizeType_Message = null;\n        }, 3000);\n      }\n\n\n    },\n\n    // Add booking image\n    async addAdditionalImage () {\n      this.value = null;\n      //this.file = null;\n      this.isAddImagePanel = false;\n      this.isAddImage = false;\n      this.isPressedAddlmage = false;\n      const data = new FormData();\n\n      data.append('file', this.file, this.file.name)\n      console.log(\"IMG size - \" + this.file.size);\n\n      console.log(\"Image type_ \" + this.file.type);\n\n      const type = this.file.type;\n      if (type ===\"image/jpeg\" || type === \"image/jpg\" || type === \"image/png\" || type === \"image/gif\") {\n        console.log(\"Pildi formaat on OK\")\n        if (this.file.size <= this.IMAGE_SIZE) {\n\n          const reader = new FileReader();\n\n          const img = await imageService.create(data);\n\n          if (img) {\n            await recipientService.addImage(this.booking.id, img.imgCreated._id)\n            // const new_image = {\n            //   _id: img.imgCreated._id,\n            //   image: img.imgCreated.image,\n            //   name: img.imgCreated.name\n            // }\n\n            const _image = {\n              _id: img.imgCreated._id,\n              blob: this.showImage\n            }\n            this.$emit(\"addImage\", _image, this.booking.id);\n            console.log(\"ORDRED pikkus \" + this.booking.ordered.length)\n            let ordered = [];\n            this.booking.ordered.forEach(b => {\n              console.log(\"CVCVCV \" + b.user.username);\n              ordered = ordered.concat(b.user.id);\n            })\n\n            reader.onload = (e) => {\n              const bytes = new Uint8Array(e.target.result);\n              console.log(\"FILES IN UPLOAD.... \" + this.files)\n\n              const image_bytes = {\n                id: img.imgCreated._id,\n                bytes: bytes\n              }\n              socket.emit(\"display booking image\", image_bytes, this.booking.id, ordered)\n\n            };\n            reader.readAsArrayBuffer(this.files);\n            // image_id, bytes, this.booking.id, ordered\n            //socket.emit(\"display booking image\", new_image, this.booking.id, ordered)\n          }\n        } else {\n\n          console.log(\"Pildi suurus peab olema väiksem kui 1 MB\");\n          this.isAddImagePanel = true\n          this.isPressedAddlmage = true;\n          this.wrong_SizeType_Message = \"Kuvan maximi koko on 3 MB.\";\n\n          setTimeout(() => {\n            this.wrong_SizeType_Message = null;\n          }, 3000);\n        }\n      } else {\n        console.log(\"Pildi formaat on FAKE\")\n        this.wrong_SizeType_Message = \"Väärä formaati. Kuva pitäisi olla jpeg, jpg, png tai gif formaatissa!\";\n        setTimeout(() => {\n          this.wrong_SizeType_Message = null;\n        }, 3000);\n      }\n\n    },\n    async removeImg (id) {\n      //this.value = null;\n      if (!this.images[id].blob) {\n        console.log(\"removed image is blob\")\n\n      }\n\n      console.log(\"removable image id is \" + this.images[id]._id)\n\n      await recipientService.removeImage(this.booking.id, this.images[id]._id);\n      await imageService.remove(this.images[id]._id, this.booking.id);\n      let bIDs = [];\n\n      this.booking.ordered.forEach(bo => {\n        bIDs = bIDs.concat(bo.user.id);\n      })\n\n      socket.emit(\"stop display booking image\", this.images[id]._id, this.booking, bIDs);\n\n      this.$emit(\"removeImage\", id);\n\n      this.isEditPanel = false;\n\n    },\n    getDistance () {\n      //console.log(\"Distance +++++??? \" + dist.distance())\n      console.log(\"sss \" + dist.test())\n    },\n    selectUser (user) {\n      this.$emit('select', user);\n    },\n    noSelectUser () {\n      this.$emit(\"noSelect\");\n    },\n    onMessage (content, date) {\n      this.$emit(\"message\", content, date);\n    },\n    // initializeChat () {\n    //   this.$emit(\"initializeChat\", {\n    //     initChatRoom: this.initializeChatRoom,\n    //     chatData: this.chatRoomData\n    //   });\n    // },\n    handleJoinChatPanel () {\n      console.log(\"Final info in result pressed \");\n\n      this.$emit(\"joinChatPanel\", this.room);\n    },\n\n    async pressAddFirstImage () {\n      this.isAddFirstImage = true;\n      this.imageIndex = 0;\n    },\n\n    pressAdditionalImage (index) {\n      //this.imageIndex = this.booking[0].image.length - 1;\n      this.isAddImage = true;\n      this.imageIndex = this.images.length;\n      //this.imageIndex = \"new\";\n      //this.isAddNewImage = true;\n\n      console.log(\"Images index = \" + this.imageIndex);\n      this.isAddImage = true;\n    },\n\n\n\n    // async uploadFirstImage (index) {\n    //   const data = new FormData();\n    //   this.isUploadImage = true;\n    //   this.imageIndex = 0;\n    //   //this.isUploaded = true;\n    //   //isUploaded && imageIndex === i\n    //   data.append('file', this.file, this.file.name)\n    //   console.log(\"IMG size - \" + this.file.size);\n    //   //const img = await imageService.create(data);\n    //   //console.log(\"ABOUT: \" + img);\n    //   //await recipientService.addImage(this.booking.id, img.imgCreated._id);\n    //\n    //   // if (img) {\n    //   //   this.file = null;\n    //   //\n    //   //   const image = {\n    //   //     _id: img.imgCreated._id,\n    //   //     image: img.imgCreated.image,\n    //   //     name: img.imgCreated.name\n    //   //   }\n    //   //\n    //   //   this.$emit(\"addImage\", image);\n    //   //\n    //   //   this.imageIndex = 0;\n    //   //\n    //   //   this.isImageSelected = false;\n    //   //   this.isUploaded = true;\n    //   //\n    //   //\n    //   // }\n    //\n    //\n    //\n    // },\n\n    // Ei toimi ilmselt!!!\n    async uploadAdditionalImage () {\n      this.isAdditionalImageSelected = false;\n      this.isAddImage = false;\n      this.value = null;\n      //this.isEditImage = false;\n      //this.imageIndex = null;\n      //this.imageIndex = this.booking[0].image.length - 1;\n      console.log(\"Image index index \" + this.imageIndex)\n      const data = new FormData();\n\n      this.isUploadImage = true;\n      //this.imageIndex = 0;\n      this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking.id, img.imgCreated._id);\n\n      if (img) {\n        //this.imgId = img.imgCreated._id;\n        this.file = null;\n        //this.showImage = null;\n        //this.value = null;\n\n        //console.log(\"xxx \" + img.imgCreated._id)\n        //console.log(\"Image itself \" + img.imgCreated.image)\n        //await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name,\n          blob: this.showImage,\n        }\n\n        //this.imagesxxx.push(image);\n\n        this.$emit(\"addImage\", image);\n\n        //this.images.push(image);\n\n        // const booking = await recipientService.getBookingById(this.booking[0].id);\n        //\n        // setTimeout( async () => {\n        //   booking[0].image.forEach(im=> {\n        //     this.images.push(im)\n        //   })\n        //   //this.images = this.images.concat(booking[0].image)\n        // }, 500)\n\n\n        /*const booking = await recipientService.getBookingById(this.booking[0].id);\n\n        this.imagesxxx = booking[0].image\n*/\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n\n\n        //this.imageIndex = null;\n      }\n\n\n\n    },\n\n    pressedEditDescription () {\n      this.isEditDescription = true\n      console.log(\"Descripton: \" + this.description);\n    },\n    saveEditedDescription () {\n      this.isEditDescription = false;\n      const description = {\n        description: this.description\n      }\n      this.$emit(\"editDescription\", this.description);\n      recipientService.editDescription(this.booking.id, description)\n      //this.description = \"\";\n    },\n    cancelEditDescription () {\n      console.log(\"Is here something happening??\")\n    },\n    providerGetBooking (id, booking) {\n      //const id = this.provider.user.id;\n      console.log(\"Sended to user id... \" + id)\n      socket.emit(\"accept provider\", {\n        id,\n        booking: booking\n      })\n    },\n\n    // For just confirm provider\n    async orderSuccess (prov) {\n      console.log(\"Include offers? \" + this.booking.isIncludeOffers)\n      if (this.booking.isIncludeOffers) {\n        this.canselResult();\n\n        // TODO teised offerid maha võtta\n\n        console.log(\"## bef \" + this.booking.ordered.length)\n\n\n\n        this.$emit(\"offer_confirmed\", this.booking , prov.id);\n        console.log(\"## aft \" + this.booking.ordered.length)\n        const pro = await providerService.getProvByProvId(prov.id);\n\n        console.log(\"Offer confirmation user id \" + pro.user.id);\n\n        const providerID = {\n          providerID: this.selectedProvider.id\n        };\n\n        await recipientService.updateRecipient(this.booking.id, {status: \"confirmed\"});\n\n        //const res = await recipientService.getBookingById(this.booking.id);\n\n        const recipientId = this.booking.id;\n\n\n        console.log(\"Username here???? \" + this.booking.user.username);\n\n\n        let bookingOffers = [];\n        let offerMakers = [];\n        let ampIDs = [];\n        let restProsNoOfferDone = [];\n\n        if (this.booking) {\n          bookingOffers = this.booking.offers;\n          const allMatchedPros = this.booking.ordered;\n          for (let id in allMatchedPros) {\n\n            if (allMatchedPros[id].user.id !== pro.user.id) {\n\n\n              ampIDs.push(allMatchedPros[id])\n\n              // console.log(\"Removing this pro from DB: \" + allMatchedPros[id].user.id)\n              // await providerService.removeProviderBooking(allMatchedPros[id].id, this.booking.id);\n              // await recipientService.removeProviderData(this.booking.id, allMatchedPros[id].id);\n\n\n\n            }\n          }\n          for (let i in bookingOffers) {\n            if (bookingOffers[i].room !== this.room) {\n              await offerService.removeBookingOffer(bookingOffers[i].id, this.booking.id);\n            }\n          }\n        }\n\n        let madeOffer = {};\n\n        for (let sender in bookingOffers) {\n\n          console.log(\"Offer maker id heeeeeere \" + bookingOffers[sender].provider.user.id);\n\n\n\n          if (bookingOffers[sender].provider.user.id !== pro.user.id) {\n            //offerMakers = offerMakers.concat(bookingOffers[sender].provider.user);\n\n            offerMakers = offerMakers.concat(bookingOffers[sender]);\n\n            //offerMakers = offerMakers.concat(bookingOffers[sender]);\n            console.log(\"eeeeeeeeeeeeeeeeeeeee \" + bookingOffers[sender].provider.user.id)\n\n            await providerService.removeProviderBooking(bookingOffers[sender].provider.id, this.booking.id);\n            await recipientService.removeProviderData(this.booking.id, bookingOffers[sender].provider.id);\n\n          } else {\n            madeOffer = bookingOffers[sender];\n          }\n\n        }\n        console.log(\"offerMakers length \" + offerMakers.length)\n        ampIDs.forEach(ai => {\n\n          if (!offerMakers.some(om => om.provider.id === ai.id)) {\n            restProsNoOfferDone.push(ai);\n          }\n          // offerMakers.forEach(om => {\n          //   if (ai !== om.provider.user.id) {\n          //     restProsNoOfferDone.push(ai);\n          //   }\n          // })\n        })\n\n        console.log(\"ampIDs \" + ampIDs.map(mi => mi.id))\n        console.log(\"REST OF PROS \" + restProsNoOfferDone.map(ma => ma));\n\n        for (let id in restProsNoOfferDone) {\n          console.log(\"Test id \" + restProsNoOfferDone[id].id)\n          await providerService.removeProviderBooking(restProsNoOfferDone[id].id, this.booking.id);\n          await recipientService.removeProviderData(this.booking.id, restProsNoOfferDone[id].id);\n        }\n\n        // TODO kui tellija tilab yrityse siis tellija peab teiste juures kustuma!! Ordered juures peavad kustuma teised id:d\n\n        socket.emit(\"confirm offer\", pro.user.id, this.booking, madeOffer);\n\n\n        socket.emit(\"deal done notification\", offerMakers, restProsNoOfferDone, this.booking, madeOffer);\n\n      } else {\n        this.isProviderSelected = false;\n\n        console.log(\"No booking with offers here!\")\n        // console.log(\"Provider id \" + prov.id)\n        // console.log(\"Recpient id: \" + this.booking.id);\n        //\n        // const providerID = {\n        //   providerID: this.selectedProvider.id\n        // };\n        //\n        // await recipientService.addProviderData(this.booking.id, this.selectedProvider.id);\n        //\n        // const createBookingStatus = await recipientService.updateRecipient(this.booking.id, {status: \"notSeen\"});\n        //\n        // const recipientId = this.booking.id;\n        //\n        // const booking = await providerService.addProviderBooking(prov.id, recipientId);\n        // if (booking === \"Recipient is added!\") {\n        //   const pro_data = {\n        //     status: \"\",\n        //     userID: prov.user.id,\n        //     name: prov.user.username,\n        //     room: this.room\n        //   };\n        //\n        //   console.log(\"#### HERE ##### \" + prov.user.username);\n        //   this.$emit('client:confirmed_provider', prov.id, this.booking, pro_data);\n        //\n        //   const id = prov.user.id;\n        //\n        //   socket.emit(\"accept provider\", {\n        //     id,\n        //     booking: this.booking,\n        //   })\n        //\n        // }\n        //\n        // this.handleJoinChatPanel();\n      }\n\n    },\n    // For price offers\n    async orderSuccess_standing (prov) {\n      this.isProviderSelected = false;\n\n      console.log(\"Provider id \" + prov.id)\n      console.log(\"Recpient id: \" + this.booking.id);\n\n      this.canselResult();\n\n      this.$emit(\"offer_confirmed\", this.booking);\n      const providerID = {\n        providerID: this.selectedProvider.id\n      };\n\n\n      //await recipientService.addProviderID(this.booking[0].id, providerID);\n\n      //await recipientService.addProviderData(this.booking.id, this.selectedProvider.id);\n\n      //socket.emit(\"send booking notification\", this.booking[0], this.selectedProvider.id);\n\n      //const providerName =\n      //const status = \"notSeen\";\n      const createBookingStatus = await recipientService.updateRecipient(this.booking.id, {status: \"confirmed\"});\n\n\n\n      const recipientId = this.booking.id;\n\n      //--------------- About need delete selected and confirmed provider ------------\n\n      //const booking = await providerServise.updateProvider(provId, {booking: [this.booking.id]})\n      // To ordered\n      //const booking = await providerService.addProviderBooking(prov.id, recipientId);\n      // if (booking === \"Recipient is added!\") {\n      //   const chatUserDataNavbar = {\n      //     status: \"\",\n      //     userID: prov.user.id,\n      //     name: prov.user.username,\n      //     room: this.room\n      //   };\n      //   this.$emit('client:confirmed_provider', prov.id, this.booking, chatUserDataNavbar);\n      //   //this.$emit('set:order:to:send', prov.id, this.booking, chatUserDataNavbar)\n      //\n      //   this.roomToDb(prov.id, {userID: this.booking.user.id, client: this.booking.user.username, room: this.room});\n      //   //this.providerGetBooking(prov.user.id, booking);\n      //   const id = prov.user.id;\n      //\n      //\n      //\n      // }\n\n      // socket.emit(\"accept provider\", {\n      //   id,\n      //   booking: this.booking,\n      // })\n\n      //this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n\n\n\n      // this.isOrdered = true;\n      //\n      // setTimeout(() => {\n      //   this.orderMessage = null;\n      // }, 3000)\n\n      //this.initializeChat();\n\n    },\n    async getProviderInfo (provider, offer, marker) {\n      this.proSlides = [];\n      this.offer = offer;\n      this.selectedProvider = provider\n      if (this.booking.isIncludeOffers) {\n        if (offer.isNewOffer) {\n          this.$emit(\"editBookingOfferStatus\", offer)\n        }\n      }\n      provider.reference.forEach(slide => {\n        this.proSlides = [\n            ...this.proSlides,\n            slide\n        ]\n      })\n      // provider.reference.forEach(slide => {\n      //   this.proSlides = [\n      //       ...this.proSlides,\n      //     {\n      //       id: slide.id,\n      //       size: '1400-933',\n      //       src: require(`/server/uploads/pro/${slide.name}`),\n      //       thumb: require(`/server/uploads/pro/${slide.name}`),\n      //       subHtml: `<div class=\"lightGallery-captions\">\n      //           <h2>Terve</h2>\n      //\n      //       </div>\"`\n      //     }\n      //   ]\n      // })\n      this.availability = marker;\n      this.isProviderSelected = true;\n\n\n      let room = \"\";\n      let username = \"\";\n\n      if (this.chatUser) {\n        username = this.chatUser.username;\n        room = provider.yritys + username;\n        this.room = room;\n      }\n\n    },\n    async roomToDb (id, room) {\n      await providerService.addRoom(id, room)\n    },\n    addFilter () {\n      const filterListedProviders = document.getElementById(\"listOfProviders\")\n\n      filterListedProviders.addEventListener(\"change\", (event) => {\n        console.log(\"Filtered provider: \" + event.target.value);\n        this.$emit(\"filter_provider\", event.target.value);\n\n      })\n    },\n    handleCanselFinal (result) {\n      this.isProviderSelected = result;\n    },\n    canselResult () {\n      this.$emit('cansel:result', false)\n    },\n    async removeOfferedBookings () {\n      //this.confirmPanel = \"TEST CONFIRM\"\n\n\n      // this.promptPanelContent = null;\n      // this.promptPanelContent = \"Oletko varma, että haluat poistaa tilausken?\"\n\n\n\n\n      if (confirm(\"Oletko varmaa, että haluat poistaa tilauksen!?\") === true) {\n\n        this.$emit(\"removeOfferedBooking\", this.booking, this.booking.offers);\n\n      } else {\n        console.log(\"You canceled!\")\n      }\n    },\n  },\n\n  async mounted() {\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      this.chatUser = user;\n\n    }\n\n\n  }\n}\n</script>\n\n\n<style scoped>\n.edit-panel {\n  border: solid grey;\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.add-panel {\n  border: solid grey;\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.add-additional-panel {\n  border: solid blue;\n}\n.btn {\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.close-btn {\n  float: right;\n  padding: 20px;\n}\nimg.loading {\n  width: 100%;\n  height: 400px;\n  background: transparent url(https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif) no-repeat scroll center center;\n}\n.success {\n  color: white;\n  background: #7bc47b;\n  font-size: 20px;\n  border: solid #0e920e;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\ninput[type=\"file\"] {\n  display: none;\n}\n.custom-file-upload {\n  width: 100%;\n\n  color: white;\n  font-size: 18px;\n  background-color: #87958e;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 20px 12px;\n  margin-bottom: 0;\n  cursor: pointer;\n}\n.imageSection {\n  margin-bottom: 20px;\n}\n.provider-selection {\n  width: 300px;\n  padding: 20px;\n  background-color: darkslategrey;\n  border: solid #4c4949;\n  color: #f0eeee;\n  font-size: 150%;\n}\n\n@media only screen and (max-width: 1000px) {\n  .provider-selection {\n    width: 250px;\n    padding: 20px;\n    background-color: darkslategrey;\n    border: solid #4c4949;\n    color: #f0eeee;\n    font-size: 150%;\n  }\n}\n\nselect option {\n  border: solid red;\n}\n.expired_warning {\n  color: palevioletred;\n}\n.expired_date {\n  color: palevioletred;\n  border: 1px solid #F05C5CFF;\n  margin-top: 17px;\n  padding: 7px;\n}\n\n.confirmation {\n  width: 80%;\n  height: 200px;\n  margin: auto;\n  color: white;\n  background: #a5a1a1;\n  font-size: 20px;\n  border: solid #6e716e;\n  border-radius: 5px;\n  padding: 10px;\n  /*margin-bottom: 10px auto;*/\n}\n\n</style>","import { render } from \"./RecipientPanelResult.vue?vue&type=template&id=13c62d0d&scoped=true\"\nimport script from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanelResult.vue?vue&type=style&index=0&id=13c62d0d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-13c62d0d\"]])\n\nexport default __exports__"],"names":["compare","rec","prov","receiverDate","Date","y","m","d","hour","min","providerDate","providerMatchingForClient","re","pFrom","pTo","pFromDate","pToDate","ErrorMessage","message","_createVNode","require","style","key","class","for","$data","isProviderSelected","_createBlock","_component_MDBContainer","default","_withCtx","_component_recipientFinal","$options","handleCanselFinal","orderSuccess","proRefSlides","$props","test","provider","selectedProvider","offer","proSlides","_ctx","slides","room","available","availability","booking","chatusers","initialize_chat","handleInitializeChat","selecteduser","messages","onMessage","onSelect","selectUser","onNoSelect","noSelectUser","onJoin_chat_panel","handleJoinChatPanel","_","_createElementVNode","_hoisted_1","_component_MDBBtnClose","white","onClick","canselResult","_component_prompt_panel","promptPanelContent","handlePromptNo","handlePromptYes","_toDisplayString","line","created_ms","getTime","offers","length","_createElementBlock","_hoisted_2","_createCommentVNode","_component_successMessage","orderMessage","_component_MDBRow","_component_MDBCol","_component_MDBTable","border","isEditDescription","_hoisted_4","_component_MDBTextarea","label","rows","modelValue","description","_cache","$event","col","_hoisted_3","_hoisted_5","_hoisted_7","_component_MDBBtn","outline","block","size","saveEditedDescription","_createTextVNode","_hoisted_6","pressedEditDescription","isEditDate","_hoisted_9","_normalizeClass","expired_date","bookingDateToDisplay","created","getHours","getMinutes","_component_VueDatePicker","dark","bookingDate","placeholder","onInternalModelChange","handleInternalDate","state","isNoDate","_hoisted_8","editDate","expired_warning","_Fragment","_renderList","images","im","i","src","blob","name","alt","_hoisted_10","isEditPanel","pressEditPanel","imageIndex","_hoisted_11","_component_error_message","wrong_SizeType_Message","value","closeEditPanel","id","type","onChange","handleFileChange","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","isEditImage","color","uploadEditedImage","removeImg","showImage","_hoisted_16","isPressedAddlmage","pressedAddImage","isAddImagePanel","_hoisted_17","closeAddPanel","_hoisted_18","_hoisted_19","_hoisted_20","isAddImage","addAdditionalImage","_hoisted_21","lg","booking_offers","_hoisted_22","_hoisted_23","_hoisted_24","filterResult","args","addFilter","getProviderInfo","yritys","_hoisted_25","distance","isNewOffer","_component_MDBBadge","pill","notification","_hoisted_26","price","_hoisted_27","_hoisted_28","removeOfferedBookings","props","Boolean","Array","loggedInUser","Object","bookingTime","providers","confirmedBookings","String","data","IMAGE_SIZE","chatUser","count","datetime","dt","dist","isOrdered","this","date","isAddFirstImage","isUploadImage","isUploaded","isImageCreated","isAddNewImage","file","files","isImageSelected","isAdditionalImageSelected","tempImages","imagesx","imagesxxx","roomUserCount","components","successMessage","errorMessage","VueDatePicker","promptPanel","recipientFinal","MDBBtn","MDBBtnClose","MDBContainer","MDBTable","MDBRow","MDBCol","MDBTextarea","MDBIcon","MDBBadge","methods","console","log","$emit","getMonth","getDate","getFullYear","dateInMs","recipientService","newDate","year","month","day","hours","minutes","date_ms","updatedDate","e","target","tempImage","URL","createObjectURL","push","err","addImage","index","img","FormData","append","_id","editImgType","image","imageService","updateImage","ordered","forEach","b","user","username","concat","reader","FileReader","onload","bytes","Uint8Array","result","image_id","socket","emit","readAsArrayBuffer","imgId","setTimeout","create","imgCreated","_image","image_bytes","removeImage","remove","bIDs","bo","getDistance","content","pressAddFirstImage","pressAdditionalImage","uploadAdditionalImage","editDescription","cancelEditDescription","providerGetBooking","isIncludeOffers","pro","providerService","getProvByProvId","updateRecipient","status","bookingOffers","offerMakers","ampIDs","restProsNoOfferDone","allMatchedPros","offerService","removeBookingOffer","madeOffer","sender","removeProviderBooking","removeProviderData","ai","some","om","map","mi","ma","orderSuccess_standing","marker","reference","slide","roomToDb","addRoom","filterListedProviders","document","getElementById","addEventListener","event","confirm","mounted","loggedUserJSON","window","localStorage","getItem","JSON","parse","__exports__","render"],"sourceRoot":""}