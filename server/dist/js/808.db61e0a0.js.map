{"version":3,"file":"js/808.db61e0a0.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/notifications/errorMessage.js","webpack://prore-mongo/./src/pages/ProviderPanel.vue","webpack://prore-mongo/./src/components/EditPrice.vue","webpack://prore-mongo/./src/components/EditPrice.vue?37bc","webpack://prore-mongo/./src/components/EditProfession.vue","webpack://prore-mongo/./src/components/EditProfession.vue?2e26","webpack://prore-mongo/./src/components/FeedbackList.vue","webpack://prore-mongo/./src/components/FeedbackList.vue?832c","webpack://prore-mongo/./src/pages/ProviderPanel.vue?7004"],"sourcesContent":["const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n            <img className={'errorImg'} alt={'error'} src={require('@/assets/error.png')}/>\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage","<template>\n  <div >\n<!--    <MDBRow>-->\n<!--      <MDBCol>-->\n\n<!--      </MDBCol>-->\n\n<!--    </MDBRow>-->\n\n    <MDBRow style=\"margin-top: 17px;\">\n      <MDBCol class=\"proPanelHeader\" md=\"4\">\n\n        <div class=\"pro-panel-header\">\n          <div class=\"header-content\">\n            <h2>{{provider.yritys}}</h2>\n            <h2>{{provider.address}}</h2>\n          </div>\n\n        </div>\n\n      </MDBCol>\n\n    </MDBRow>\n\n    <MDBContainer style=\"margin-bottom: 50px;\">\n      <calendar\n          v-if=\"isProviderCalendar\"\n          :userIsProvider = userIsProvider\n          :bookings = bookings\n          :filled_days = filled_days\n          :filled = filled\n          :bookingsConfirmed = bookingsConfirmed\n      />\n\n\n\n      <MDBRow>\n\n\n        <MDBCol>\n          <div v-if=\"!provider.profession\" class=\"spinner-border\" role=\"status\">\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n          <div v-else class=\"pro-panel\">\n            <error-notification\n                :message = rangeErrorMessage\n            />\n            <errorNotification\n                :message = errorMessage\n            />\n            <successNotification\n                :message = successMessage\n            />\n\n            <MDBTable responsive borderless style=\"position: relative; color: #ddd; font-size: 14px; text-align: left;\">\n              <tbody>\n              <tr >\n                <td>\n                  {{provider.range === 0 ? \"Tarjoan palvelua paikalla\" : \"Palvelun säde: \" + provider.range + \" km\"}}\n                </td>\n                <td v-if=\"!isEditRange\">\n                  <MDBBtn outline=\"info\" block size=\"sm\" @click=\"isEditRange = true\">Muokkaa toimintaalueetta</MDBBtn>\n                </td>\n                <td v-else>\n                  <div style=\"border: solid #ddd; margin-bottom: 10px; padding: 7px; \">\n                    <div style=\"display: flex; justify-content: right; padding: 10px;\">\n                      <MDBBtnClose\n                          white\n                          @click=\"isEditRange = false\"\n                      />\n                    </div>\n                    <div>\n                      <MDBInput white label=\"Säde - km\" v-model=\"range\" size=\"sm\" type=\"number\" /><br>\n                    </div>\n\n                    <MDBBtn v-if=\"range.length > 0\" outline=\"info\" block size=\"sm\" @click=\"saveNewRange\">Tallenna uusi säde</MDBBtn>\n                  </div>\n\n                </td>\n              </tr>\n              <tr>\n                <td :class=\"{hide: isFeedback}\">\n                  Palaute\n                </td>\n                <td v-if=\"isFeedback\" colspan=\"2\">\n                  <feedback-list\n                      :feedback = provider.feedback\n                      @closeFeedbackList = handleCloseFeedbackList\n                  />\n                </td>\n                <td v-else>\n                  <MDBRow class=\"rating\">\n                    <MDBCol>\n                      <MDBIcon  style=\"padding: 10px; color: limegreen;\" i class=\"far fa-thumbs-up\" size=\"2x\"\n                      ></MDBIcon>\n\n\n\n                      <MDBBadge color=\"success\" class=\"translate-middle p-1\"\n                                pill\n                                notification>\n                        <h2 style=\"min-width: 19px; font-size: 14px\">{{provider.rating.positive}}</h2>\n                      </MDBBadge>\n                    </MDBCol>\n                    <MDBCol>\n                      <MDBIcon  style=\"padding: 10px; color: palevioletred\" i class=\"far fa-thumbs-down\" size=\"2x\"\n                      ></MDBIcon>\n\n\n                      <MDBBadge color=\"danger\" class=\"translate-middle p-1\"\n                                pill\n                                notification>\n                        <h2 style=\"min-width: 19px; font-size: 14px\">{{provider.rating.negative}}</h2>\n                      </MDBBadge>\n                    </MDBCol>\n                    <MDBCol>\n                      <MDBBtn block color=\"secondary\" @click=\"getFeedbackListData\">Katso oma arvostelua</MDBBtn>\n                    </MDBCol>\n\n                  </MDBRow>\n\n                </td>\n              </tr>\n              <tr v-if=\"!isProviderCalendar\">\n                <td>\n                  Tarjoan palvelua 24/7\n                </td>\n                <td>\n                  <MDBBtn outline=\"info\"  size=\"sm\" @click=\"isProviderCalendar = true\">Vaihda kalenteriin</MDBBtn>\n                </td>\n              </tr>\n              <tr v-else>\n                <td>\n                  Päätän, koska tarjoan palvelua\n                </td>\n                <td>\n                  <MDBBtn outline=\"info\" block size=\"sm\" @click=\"isProviderCalendar = false\">Vaihda 24/7</MDBBtn>\n                </td>\n              </tr>\n\n              <tr>\n\n                <td :class=\"{hide: isEditProfession}\">\n                  <div v-for=\"(pro, i) in provider.profession\" :key=\"i\">\n                    {{pro}}\n                  </div>\n\n                </td>\n                <td v-if=\"isEditProfession\" colspan=\"2\">\n                  <edit-profession\n                      :provider = provider\n                      @additionalProfession = handleAddProfession\n                      @editProfession = handleEditProfession\n                      @removeProfession = handleRemoveProfession\n                      @cancel:editProfession = handleCancelEditProfession\n                  />\n                </td>\n                <td v-else>\n                  <MDBBtn outline=\"info\" block size=\"sm\" @click=\"editProfessionPro\">Muokkaa osaamista</MDBBtn>\n                </td>\n              </tr>\n\n              <tr>\n                <td :class=\"{hide: isEditPrice}\">\n                  {{provider.priceByHour}}&nbsp;Euroa\n                </td>\n                <td v-if=\"isEditPrice\" colspan=\"2\">\n                  <editPrice\n                      :currentPrice = provider.priceByHour\n                      @cancel:editPrice = cancelEditPrice\n                      @save:editedPrice = saveEditedPrice\n                  />\n                </td>\n                <td v-else>\n                  <MDBBtn outline=\"info\" block size=\"sm\" @click=\"editPrice\">Muokkaa tuntihinta</MDBBtn>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  Katso kartalta\n                </td>\n                <td>\n                  <MDBBtn outline=\"info\" block size=\"sm\" @click=\"this.$router.push('/pro-public-search')\">Kartalta</MDBBtn>\n                </td>\n              </tr>\n\n              </tbody>\n            </MDBTable>\n\n          </div>\n\n        </MDBCol>\n\n      </MDBRow>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!--      <MDBRow >-->\n<!--        <MDBCol lg=\"8\" v-if=\"isProviderCalendar\">-->\n\n<!--          <errorNotification-->\n<!--              :message = timeEditErrorMessage-->\n<!--          />-->\n\n<!--          <successNotification-->\n<!--              :message = timeEditSuccessMessage-->\n<!--          />-->\n\n<!--          <div v-if=\"isTimeToEdit\" style=\"border: solid orange;  padding-bottom: 20px; padding-top: 20px;margin-bottom: 10px;\">-->\n<!--            <div v-for=\"(item, i) in dayMarkerData\" :key=\" i\">-->\n\n<!--              <MDBTable  borderless style=\"margin-right: 2px; font-size: 14px; color: #ddd; text-align: left;\" >-->\n\n<!--                <tbody >-->\n<!--                <tr  v-for=\"(time, index) in item.time\" :key=\"index\">-->\n\n<!--                  <td>-->\n<!--                    {{ time.index }} {{time.text}}-->\n\n<!--                  </td>-->\n<!--                  <td>-->\n<!--                    <div style=\"\">-->\n<!--                      <VueDatePicker dark  v-model=\"times[time.index]\"  time-picker range @update:model-value=\"handleTime\">-->\n<!--                        <template #trigger>-->\n<!--                          <MDBIcon class=\"clickable-text\" @click=\"onEdit(time.timeId, time.index)\">-->\n<!--                            <i class=\"fas fa-edit\" size=\"lg\" style=\"cursor: pointer\"></i>-->\n<!--                          </MDBIcon>-->\n<!--                        </template>-->\n<!--                      </VueDatePicker>-->\n<!--                    </div>-->\n\n\n<!--                  </td>-->\n\n<!--                  <td>-->\n<!--                    <MDBBtnClose white @click=\"delTimeRange(time.timeId, time.index)\"/>-->\n\n<!--                  </td>-->\n\n<!--                </tr>-->\n<!--                <tr v-if=\"item.type === 'highlight'\" class=\"table-dark\">-->\n\n<!--                  <td>-->\n<!--                    {{item.hours >= 10 ? item.hours : \"0\" + item.hours}} :-->\n<!--                    {{item.minutes >= 10 ? item.minutes : \"0\" + item.minutes}}-->\n<!--                  </td>-->\n<!--                  <td >-->\n<!--                    <MDBBtn v-if=\" dayPanelIndex === null || dayPanelIndex !== i\" block color=\"dark\" @click=\"openTask(i)\">-->\n<!--                      Ava-->\n<!--                    </MDBBtn>-->\n\n<!--                    <MDBBtn v-if=\"dayPanelIndex === i \" block color=\"dark\" @click=\"closeTask(i)\">-->\n<!--                      Sulje-->\n<!--                    </MDBBtn>-->\n<!--                  </td>-->\n\n<!--                </tr>-->\n\n<!--                <tr v-if=\"item.type === 'highlight' && dayPanelIndex === i\" class=\"table-dark\">-->\n\n<!--                  <td colspan=\"4\">-->\n<!--                    <div  class=\"flex flex-wrap align-items-center justify-content-center\">-->\n<!--                      <div v-for=\"(booking, num) in item.booking\" :key=\"num\" class=\"scalein animation-duration-3000 animation-iteration flex align-items-center justify-content-center-->\n<!--                        font-bold   w-full\">-->\n<!--                        <div >-->\n<!--                          <info-->\n<!--                              v-if=\"booking.onTime[0].day === item.day && num === i\"-->\n<!--                              style=\"width: 100%;\"-->\n<!--                              :index = i-->\n<!--                              status = \"for-provider\"-->\n<!--                              :msg = booking[i]-->\n<!--                              :content = booking-->\n<!--                              :provider = provider-->\n<!--                              @remove:proConfirmed = handleRemoveProConfirmed-->\n<!--                          />-->\n<!--                        </div>-->\n\n<!--                      </div>-->\n<!--                    </div>-->\n<!--                  </td>-->\n<!--                </tr>-->\n<!--                </tbody>-->\n<!--              </MDBTable>-->\n\n<!--            </div>-->\n<!--            <div style=\"display: flex; justify-content: right; padding: 20px;\">-->\n<!--              <span style=\"color: greenyellow; cursor: pointer;\" @click=\"closeDayPanel\">Valmis</span>-->\n<!--            </div>-->\n\n<!--          </div>-->\n\n<!--          <div v-if=\"!isEditTime\">-->\n<!--            <VueDatePicker-->\n<!--                dark-->\n\n<!--                style=\"margin-bottom: 50px; justify-content: center;\"-->\n<!--                @internal-model-change=\"handleInternal\"-->\n\n<!--                @overlay-toggle=\"onOverlayToggle\"-->\n\n<!--                range auto-range=\"0\"-->\n<!--                v-model=\"date\"-->\n<!--                @update:model-value=\"handleDate\"-->\n<!--                inline-->\n<!--                locale=\"fi\" selectText=\"Valitse\"-->\n<!--                :min-date=\"new Date()\"-->\n<!--                :markers=\"markers\"-->\n<!--                :highlight=\"filled\"-->\n<!--                teleport-center-->\n<!--                :month-change-on-scroll=\"false\"-->\n<!--                :start-time=\"startTime\"-->\n\n<!--            >-->\n\n<!--            </VueDatePicker>-->\n<!--          </div>-->\n\n<!--        </MDBCol>-->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!--        <MDBCol v-if=\"isEditPrice\">-->\n<!--          <editPrice-->\n<!--              :currentPrice = provider.priceByHour-->\n<!--              @cancel:editPrice = cancelEditPrice-->\n<!--              @save:editedPrice = saveEditedPrice-->\n<!--          />-->\n\n<!--        </MDBCol>-->\n<!--        <MDBCol v-else-if=\"isEditProfession\">-->\n<!--          <edit-profession-->\n<!--              :provider = provider-->\n<!--              @additionalProfession = handleAddProfession-->\n<!--              @editProfession = handleEditProfession-->\n<!--              @removeProfession = handleRemoveProfession-->\n<!--              @cancel:editProfession = handleCancelEditProfession-->\n<!--          />-->\n<!--        </MDBCol>-->\n<!--        <MDBCol v-else-if=\"isFeedback\">-->\n<!--          <feedback-list-->\n<!--              :feedback = provider.feedback-->\n<!--              @closeFeedbackList = handleCloseFeedbackList-->\n<!--          />-->\n<!--        </MDBCol>-->\n<!--        <MDBCol  v-else>-->\n<!--          <div v-if=\"!provider.profession\" class=\"spinner-border\" role=\"status\">-->\n<!--            <span class=\"visually-hidden\">Loading...</span>-->\n<!--          </div>-->\n<!--          <div v-else class=\"pro-panel\">-->\n<!--            <error-notification-->\n<!--                :message = rangeErrorMessage-->\n<!--            />-->\n<!--            <errorNotification-->\n<!--                :message = errorMessage-->\n<!--            />-->\n<!--            <successNotification-->\n<!--                :message = successMessage-->\n<!--            />-->\n\n<!--            <MDBTable borderless style=\"position: relative; color: #ddd; font-size: 14px; text-align: left;\">-->\n<!--              <tbody>-->\n<!--              <tr >-->\n<!--                <td>-->\n<!--                  {{provider.range === 0 ? \"Tarjoan palvelua paikalla\" : \"Palvelun säde: \" + provider.range + \" km\"}}-->\n<!--                </td>-->\n<!--                <td v-if=\"!isEditRange\">-->\n<!--                  <MDBBtn outline=\"info\" block size=\"sm\" @click=\"isEditRange = true\">Muokkaa toimintaalueetta</MDBBtn>-->\n<!--                </td>-->\n<!--                <td v-else>-->\n<!--                  <div style=\"border: solid #ddd; margin-bottom: 10px; padding: 7px; \">-->\n<!--                    <div style=\"display: flex; justify-content: right; padding: 10px;\">-->\n<!--                      <MDBBtnClose-->\n<!--                          white-->\n<!--                          @click=\"isEditRange = false\"-->\n<!--                      />-->\n<!--                    </div>-->\n<!--                    <div>-->\n<!--                      <MDBInput white label=\"Säde - km\" v-model=\"range\" size=\"sm\" type=\"number\" /><br>-->\n<!--                    </div>-->\n\n<!--                    <MDBBtn v-if=\"range.length > 0\" outline=\"info\" block size=\"sm\" @click=\"saveNewRange\">Tallenna uusi säde</MDBBtn>-->\n<!--                  </div>-->\n\n<!--                </td>-->\n<!--              </tr>-->\n<!--              <tr>-->\n<!--                <td>-->\n<!--                  Palaute-->\n<!--                </td>-->\n<!--                <td>-->\n<!--                  <MDBRow class=\"rating\">-->\n<!--                    <MDBCol>-->\n<!--                      <MDBIcon  style=\"padding: 10px; color: limegreen;\" i class=\"far fa-thumbs-up\" size=\"2x\"-->\n<!--                                ></MDBIcon>-->\n\n\n\n<!--                      <MDBBadge color=\"success\" class=\"translate-middle p-1\"-->\n<!--                                pill-->\n<!--                                notification>-->\n<!--                        <h2 style=\"min-width: 19px; font-size: 14px\">{{provider.rating.positive}}</h2>-->\n<!--                      </MDBBadge>-->\n<!--                    </MDBCol>-->\n<!--                    <MDBCol>-->\n<!--                      <MDBIcon  style=\"padding: 10px; color: palevioletred\" i class=\"far fa-thumbs-down\" size=\"2x\"-->\n<!--                                ></MDBIcon>-->\n\n\n<!--                      <MDBBadge color=\"danger\" class=\"translate-middle p-1\"-->\n<!--                                pill-->\n<!--                                notification>-->\n<!--                        <p style=\"min-width: 19px; font-size: 14px\">{{provider.rating.negative}}</p>-->\n<!--                      </MDBBadge>-->\n<!--                    </MDBCol>-->\n<!--                    <MDBCol>-->\n<!--                      <MDBBtn block color=\"secondary\" @click=\"getFeedbackListData\">Katso oma arvostelua</MDBBtn>-->\n<!--                    </MDBCol>-->\n\n<!--                  </MDBRow>-->\n\n<!--                </td>-->\n<!--              </tr>-->\n<!--              <tr v-if=\"!isProviderCalendar\">-->\n<!--                <td>-->\n<!--                  Tarjoan palvelua 24/7-->\n<!--                </td>-->\n<!--                <td>-->\n<!--                  <MDBBtn outline=\"info\"  size=\"sm\" @click=\"isProviderCalendar = true\">Vaihda kalenteriin</MDBBtn>-->\n<!--                </td>-->\n<!--              </tr>-->\n<!--              <tr v-else>-->\n<!--                <td>-->\n<!--                  Päätän, koska tarjoan palvelua-->\n<!--                </td>-->\n<!--                <td>-->\n<!--                  <MDBBtn outline=\"info\" block size=\"sm\" @click=\"isProviderCalendar = false\">Vaihda 24/7</MDBBtn>-->\n<!--                </td>-->\n<!--              </tr>-->\n\n<!--              <tr>-->\n\n<!--                <td>-->\n<!--                  <div v-for=\"(pro, i) in provider.profession\" :key=\"i\">-->\n<!--                    {{pro}}-->\n<!--                  </div>-->\n\n<!--                </td>-->\n<!--                <td>-->\n<!--                  <MDBBtn outline=\"info\" block size=\"sm\" @click=\"editProfessionPro\">Muokkaa osaamista</MDBBtn>-->\n<!--                </td>-->\n<!--              </tr>-->\n\n<!--              <tr>-->\n<!--                <td>-->\n<!--                  {{provider.priceByHour}}&nbsp;Euroa-->\n<!--                </td>-->\n<!--                <td>-->\n<!--                  <MDBBtn outline=\"info\" block size=\"sm\" @click=\"editPrice\">Muokkaa tuntihinta</MDBBtn>-->\n<!--                </td>-->\n<!--              </tr>-->\n<!--              <tr>-->\n<!--                <td>-->\n<!--                  Katso kartalta-->\n<!--                </td>-->\n<!--                <td>-->\n<!--                  <MDBBtn outline=\"info\" block size=\"sm\" @click=\"this.$router.push('/pro-public-search')\">Kartalta</MDBBtn>-->\n<!--                </td>-->\n<!--              </tr>-->\n\n<!--              </tbody>-->\n<!--            </MDBTable>-->\n\n<!--          </div>-->\n\n<!--        </MDBCol>-->\n<!--      </MDBRow>-->\n\n\n\n\n\n\n\n\n\n\n<!--      times {{times }}-->\n<!--      -&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-->\n<!--      filled_days {{filled_days}}<br>-->\n<!--      filled {{filled}}-->\n\n    </MDBContainer>\n  </div>\n\n\n</template>\n\n<script>\n\n/* eslint-disable */\n\n\nimport VueDatePicker from '@vuepic/vue-datepicker';\nimport providerService from '../service/providers'\nimport editPrice from '../components/EditPrice'\n\nimport editProfession from '../components/EditProfession'\n\nimport errorNotification from '../components/notifications/errorMessage'\nimport successNotification from '../components/notifications/successMessage'\n//import infoNotification from '../components/notifications/infoMessage'\n//import monthConverter from '../components/controllers/month-converter'\nimport calendar from '../pages/Calendar'\nimport info from '../components/CompletedBookingPanel'\nimport '@/css/style.css';\nimport '@/css/notification.css'\n\n//import validateToken from \"@/components/validateToken\";\nimport socket from \"@/socket\";\n// inline auto-apply\nimport {\n  MDBContainer,\n  MDBIcon,\n  MDBRow,\n  MDBCol,\n  MDBTable,\n  MDBBtn,\n  MDBBtnClose,\n  MDBBadge,\n  MDBInput,\n}from \"mdb-vue-ui-kit\";\nimport {ref, watchEffect} from \"vue\";\nimport  { DatePickerInstance } from \"@vuepic/vue-datepicker\"\n\nimport addDays from \"date-fns/addDays\";\nimport availableService from '../service/calendarOffers';\nimport FeedbackList from \"@/components/FeedbackList\";\n\n\nimport Gallery from '@/pages/Gallery.vue'\n\n\n\n//import socket from \"@/socket\";\nexport default {\n  name: \"Provider-panel\",\n  props: {\n    userIsProvider: Object,\n    bookings: Array,\n    filled_days: Array,\n    filled: Array,\n    bookingsConfirmed: Array\n\n  },\n  components: {\n    Gallery,\n    FeedbackList,\n    calendar,\n\n    info,\n    //liveChat,\n    errorNotification,\n    successNotification,\n    //infoNotification,\n    //monthConverter,\n    editPrice,\n    editProfession,\n    MDBContainer,\n    MDBIcon,\n    MDBRow,\n    MDBCol,\n    MDBTable,\n    MDBBtn,\n    MDBBtnClose,\n    MDBBadge,\n    MDBInput,\n    VueDatePicker\n  },\n  data () {\n    const watchEffect = (() => {\n      // if (this.filled_days.length > 0) {\n      //\n      // }\n      // this.setHighlights()\n      addDays(new Date(), 1)\n\n    })\n    const date = ref()\n    //const startTime = ref([{ hours: 10, minutes: 5 }, { hours: 12, minutes: 10 }]);\n    const startTime = ref([{ hours: new Date().getHours(), minutes: new Date().getMinutes() }, { hours: new Date().getHours(), minutes: new Date().getMinutes() }]);\n    //const startTime = ref()\n\n    return {\n      dateForTimeEdit: null,\n      date,\n      //startTime: date,\n      //startTime: [{ hours: 10, minutes: 5 }, { hours: 12, minutes: 10 }],\n      startTime,\n      editMarkedTimeID: null,\n      editMarketIndex: null,\n      activeDate: null,\n\n      setMarkers: null,\n      dayMarkerData: [],\n      isEditTime: false,\n      selfProvider: this.userIsProvider,\n      confirmedBookings: [],\n      testi: {},\n      un: \"\",\n      ri: \"\",\n      rooms: [],\n      close: true,\n      isGallery: false,\n      proImages: [],\n\n      isCalendarVisible: false,\n\n      //filled: [addDays(new Date(), 4)],\n      //filled: [addDays(new Date(), 2)],\n      //filled: [addDays(new Date(), 25 - new Date().getDate())],\n      //filled: [],\n      filledTimes: [],\n      dayPanelIndex: null,\n      isHandleTask: false,\n      watchEffect\n      //plugins: [lgThumbnail, lgZoom],\n\n    }\n  },\n  setup () {\n\n    const isProviderCalendar = ref(false)\n    const testii = ref(null)\n    const weekDay = ref(\"\")\n    const timerange = ref(null)\n    const datee = ref(null)\n    const range =ref(\"\")\n    const isRangeSelected = ref(false)\n    const isEditRange = ref(false)\n    const isEditPrice = ref(false)\n    const isFeedback = ref(false)\n    const isEditProfession = ref(false)\n    const clearTime = ref(null)\n    const dateTest = ref(null)\n    //const date = ref()   //ref([new Date(), new Date()])\n\n    const markers = ref([])\n    //const filled = ref([])\n    const contents = ref([])\n    const isContents = ref(false)\n    const markedDays = ref([])\n    const time = ref({})\n    const isConfirmTime = ref(false)\n    const times = ref([])\n    const datetime = ref({})\n    const userId = ref(\"\")\n    const provider = ref({})\n    const creditLeft = ref(null)\n    const providerTimes = ref([])\n    const errorMessage = ref(null)\n    const successMessage = ref(null)\n    const timeEditSuccessMessage = ref(null)\n    const timeEditErrorMessage = ref(null)\n    const rangeErrorMessage = ref(null)\n    const oblicationInfoMessage= ref(null)\n    const editTime = ref({})\n    const isTimeToEdit = ref(false)\n    const editArr = ref([])\n    const timeToEdit = ref(null)\n    const isDisplayConfirmed = ref(false)\n\n    //const startTime = ref(this.activeDate === new Date.getDate() ? [{ hours: 10, minutes: 5 }, { hours: 12, minutes: 10 }] : [{ hours: 0, minutes: 0 }, { hours: 0, minutes: 0 }]);\n    const highlightedDates = ref([\n      addDays(new Date(), 1),\n      addDays(new Date(), 2),\n      addDays(new Date(), 7),\n    ])\n    // const fi = () => {\n    //\n    //   this.filled_days.forEach(fd => {\n    //     let filledDay = null;\n    //     if (fd.month === new Date().getMonth()) {\n    //       //filledDay = addDays(new Date(), fd[0].day   - new Date().getDate());\n    //       filledDay = addDays(new Date(), 3)\n    //\n    //     }\n    //     this.filled = this.filled.concat(filledDay);\n    //   })\n    // }\n    return {\n      isProviderCalendar,\n      testii,\n      weekDay,\n      timerange,\n      datee,\n      range,\n      isRangeSelected,\n      isEditRange,\n      isEditPrice,\n      isFeedback,\n      isEditProfession,\n      clearTime,\n      dateTest,\n      //date,\n      markers,\n      //filled,\n      contents,\n      isContents,\n      markedDays,\n      time,\n      isConfirmTime,\n      times,\n      datetime,\n      userId,\n      provider,\n      creditLeft,\n      providerTimes,\n      errorMessage,\n      timeEditSuccessMessage,\n      timeEditErrorMessage,\n      rangeErrorMessage,\n      oblicationInfoMessage,\n      successMessage,\n      editTime,\n      isTimeToEdit,\n      editArr,\n      timeToEdit,\n      watchEffect,\n      highlightedDates,\n      isDisplayConfirmed,\n\n    }\n  },\n  mounted () {\n    // console.log(\"Filled days length \" + this.filled_days.length)\n    // this.filled_days.forEach(fd => {\n    //   console.log(\"hddddddddddddddddddddd\")\n    //   this.filled = [\n    //     ...this.filled,\n    //     addDays(new Date(), fd.day - new Date().getDate())\n    //   ]\n    // })\n  },\n\n  beforeMount () {\n\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (!loggedUserJSON) {\n      this.$router.push('/');\n    } else {\n      const user = JSON.parse(loggedUserJSON)\n      this.userId = user.id\n\n      this.providerData();\n      //this.createFilledTimes();\n\n    }\n\n  },\n  methods: {\n\n\n    // handleUpdateGallery (img) {\n    //   // this.proImages = [\n    //   //     ...this.proImages,\n    //   //     img\n    //   // ]\n    //   this.proImages.push(img);\n    // },\n    openTask (index) {\n      this.dayPanelIndex = index;\n      this.isHandleTask = true;\n      //this.isDisplayConfirmed = !this.isDisplayConfirmed;\n      this.isDisplayConfirmed = true;\n      console.log(\"Index in open - \" + index);\n    },\n    closeTask (index) {\n      this.dayPanelIndex = null;\n      this.isHandletask = false;\n      this.isDisplayConfirmed = false;\n      console.log(\"Index in close - \" + index);\n    },\n\n    closeDayPanel () {\n      this.isTimeToEdit = false;\n      this.isEditTime = false;\n      this.isDisplayConfirmed = false;\n      this.dayPanelIndex = null;\n    },\n\n    goToMap () {\n      this.$router.push('/provider-public')\n    },\n\n    getDate () {\n      const today = new Date().getTime();\n      //const tomorrow = new Date(86400000);\n      const addWeek = new Date().getTime() + (7 * 86400000)\n      //console.log(\"Today is: \" + today)\n\n      const day_ms = 86400000;\n      console.log(\"and now \" + today)\n      console.log(\"week_ms added  is: \" + addWeek);\n\n      const days = (addWeek - today) / day_ms;\n\n      console.log(\"Days between - \" + days)\n    },\n\n    saveNewRange () {\n      const rangeInt = parseInt(this.range);\n\n      if (rangeInt > 0) {\n        if (this.range.includes(\",\")) {\n          this.range = \"\";\n          this.rangeErrorMessage = \"Pilkku (,) ei ole sallittu merkki, laita piste (.)!\";\n          setTimeout(() => {\n            this.rangeErrorMessage = null;\n          }, 3000);\n        } else {\n          this.isEditRange = false;\n          providerService.editRange(this.provider.id, {range: this.range});\n          this.provider.range = this.range;\n        }\n\n      } else {\n        this.range = \"\";\n        this.rangeErrorMessage = \"Säde tulee olla positiivinen numero!\";\n        setTimeout(() => {\n          this.rangeErrorMessage = null;\n        }, 3000);\n      }\n\n    },\n\n    getIt () {\n      let username = \"aaa\"\n      let room = \"room\"\n\n      socket.auth = { username, room };\n      socket.connect();\n\n      let room1 = \"Oopersama\"\n      socket.emit('updateRoom', room1);\n    },\n\n    // xxx(test) {\n    //   console.log(\"Test nimi \" + test)\n    //\n    //\n    // },\n\n    joinAllRooms () {\n      const rooms = [\"111\", \"222\"];\n      socket.emit('joinAllClientRooms', rooms);\n    },\n\n    handleRemoveProConfirmed (booking) {\n      console.log(\"Info closed here?? \" + booking.header)\n      this.$emit(\"removeProBookingConfirmed\", booking);\n      this.confirmedBookings = this.confirmedBookings.filter(cp => cp.id !== booking.id);\n      this.successMessage = \"Siit saab kustutada selle teavituse soovi korral!\"\n      setTimeout(() => {\n        this.successMessage = null\n      }, 3000)\n\n    },\n\n    socketResetTest() {\n      //console.log(\"Socket reset test\")\n      socket.disconnect()\n      socket.connect()\n    },\n    openChatPanel (evt) {\n      evt.preventDefault()\n      console.log(\"Will chat open...\")\n      const sessionID = localStorage.getItem(\"sessionID\");\n\n      if (sessionID) {\n        this.usernameAlreadySelected = true;\n        socket.auth = { sessionID };\n        socket.connect();\n      }\n\n      socket.on(\"session\", ({ sessionID, userID, roomName }) => {\n            // attach the session ID to the next reconnection attempts\n            socket.auth = { sessionID };\n            // store it in the localStorage\n            localStorage.setItem(\"sessionID\", sessionID);\n\n\n            // save the ID of the user\n            socket.userID = userID;\n            socket.roomName = roomName;\n      });\n      /*this.$router\n          .push({ path: '/chat' })\n          .then(() => { this.$router.go() })\n      */\n    },\n    createOrdered (date) {\n\n    },\n    handleInternal (date) {\n      this.editArr = [];\n\n      let editarr = []\n      this.dayMarkerData = [];\n      this.editTime = {}\n      //let editTimeArr = []\n      this.isTimeToEdit = false;\n      if (date) {\n        console.log(\"DATE\" + date[0].getDate())\n\n        this.activeDate = date[0].getDate();\n        this.dateForTimeEdit = date;\n\n        console.log(\"get date \" + this.activeDate)\n        let dateStr = date.toString().substring(8, 10)\n        let dateInt = parseInt(dateStr);\n\n        this.weekDay = date.toString().substring(0, 3)\n\n        let time = {}\n        let content = {}\n\n        console.log(\"length xxxxxxxx \" + this.markers.length)\n\n        this.filled_days.forEach(f => {\n          if (dateInt === f.day) {\n            console.log(\"On\")\n            this.isTimeToEdit = true;\n            editarr.push({\n              type: \"highlight\",\n              day: dateInt,\n              weekDay: this.weekDay,\n              hours: f.hours,\n              minutes: f.minutes,\n              booking: this.bookingsConfirmed.filter(bc => bc.onTime[0].day === dateInt)\n            });\n\n          } else {\n            console.log(\"Ei ole\")\n          }\n\n        })\n\n        let isCompared = false;\n        const markerType = \"\"\n\n        const markerContents = [];\n        this.markers.forEach(m => {\n          if (m.date.getDate() === dateInt) {\n            isCompared = true;\n            this.isTimeToEdit = true\n            time = {\n              type: \"marker\",\n              day: dateInt,\n              weekDay: this.weekDay,\n              time: m.content\n            }\n            markerContents.push(m.content);\n            this.editArr.push(time)\n          }\n\n        })\n\n        if (isCompared) {\n          this.dayMarkerData = this.dayMarkerData.concat({\n            type: \"marker\",\n            day: dateInt,\n            weekday: this.weekDay,\n            time: markerContents\n\n          })\n\n        }\n\n        this.times = []\n        if (this.providerTimes) {\n          this.providerTimes.forEach(offer => {\n            this.initializeTime(offer);\n          })\n        }\n\n        this.editArr = this.editArr.concat(editarr);\n        this.dayMarkerData = this.dayMarkerData.concat(editarr);\n\n      }\n\n\n    },\n    onTimePickerOpen (date) {\n\n      console.log(\"Timepicker open! \")\n    },\n    onTimePickerClose () {\n      console.log(\"Timepicker is closed!\")\n    },\n\n    onOverlayToggle (overlay) {\n      console.log(`Overlay ${overlay.overlay} is ${overlay.open ? 'opened' : 'closed'}`);\n    },\n    editPrice () {\n      this.isEditPrice = true;\n    },\n\n    async saveEditedPrice (newPrice) {\n      //console.log(\"New price is: \" + newPrice);\n      const providerSalary = {\n        priceByHour: newPrice\n      }\n      const updated = await providerService.updateProvider(this.provider.id, providerSalary)\n      if (updated) {\n\n\n\n        this.provider.priceByHour = newPrice;\n        console.log(\"Price: \" + this.provider.priceByHour)\n        this.isEditPrice = false;\n        this.successMessage = \"Tuntihinta on muokattu!\"\n        setTimeout(() => {\n          this.successMessage = null\n        }, 2000)\n      }\n\n\n    },\n    cancelEditPrice (isEdit) {\n      this.isEditPrice = isEdit;\n    },\n    getFeedbackListData () {\n      this.isFeedback = true;\n    },\n    handleCloseFeedbackList () {\n      this.isFeedback = false;\n    },\n    editProfessionPro () {\n      this.isEditProfession = true;\n\n    },\n    handleEditProfession (index, profession) {\n\n      console.log(\"Profession is \" + profession + \" and index \" + index);\n      this.provider.profession[0] = profession;\n      providerService.editProfession(this.provider.id, {index: index, pro: profession});\n    },\n    handleAddProfession (pro) {\n      console.log(\"Uus amet on \" + pro);\n      providerService.additionalProfession(this.provider.id, {profession: pro});\n      if (!this.provider.profession.includes(pro)) {\n        this.provider.profession.push(pro);\n      }\n\n    },\n    handleRemoveProfession (index, profession) {\n      console.log(\"Profession index is \" + index + \" and profession is \" + profession);\n      providerService.removeProfession(this.provider.id, {profession: profession})\n      this.provider.profession.splice(index, 1);\n    },\n\n    handleCancelEditProfession () {\n      this.isEditProfession = false;\n    },\n    // removeExpiredDateTime () {\n    //   this.providerTimes.forEach(timerange => {\n    //     let year = timerange.yearFrom;\n    //     let month = timerange.monthFrom;\n    //     let day = timerange.dayFrom;\n    //     let hour = timerange.hoursFrom;\n    //     let minute = timerange.minutesFrom;\n    //     if (new Date(year, month, day, hour, minute).getTime() < new Date().getTime()) {\n    //       //this.delTimeRange(timerange.id);\n    //       this.removeExpiredTimeMarker(timerange);\n    //     }\n    //   })\n    //\n    // },\n    async editTimeTest () {\n      const newTimeoffer = {hoursFrom: 1};\n      await availableService.updateOffer('6431407f53469b1f48eeb2f0', newTimeoffer)\n    },\n    updateTimesAndMarkers () {\n\n      this.providerTimes.forEach(times => {\n        console.log(\"Provider times: \" + times.hoursFrom);\n        this.setTimeMarkers(times)\n      })\n\n      this.providerTimes.forEach(offer => {\n        this.initializeTime(offer);\n      })\n    },\n    // async removeExpiredTimeMarker (marker) {\n    //   console.log(\"Expired--- \" + marker.id)\n    //\n    //   await availableService.removeTimeOffer(this.provider.id, marker.id);\n    //   this.markers = this.markers.filter(marker => marker.content.timeId !== marker.id);\n    //   this.providerTimes = this.providerTimes.filter(time => time.id !== marker.id);\n    //   console.log(\"M pikkus \" + this.markers.length)\n    // },\n    async delTimeRange (timerangeId, index) {\n      await availableService.removeTimeOffer(this.provider.id, timerangeId);\n\n      console.log(\"Id argumendina? \" + timerangeId)\n\n      this.times.splice(index, 1);\n\n      this.providerTimes = this.providerTimes.filter(time => time.id !== timerangeId);\n\n\n      this.markers = this.markers.filter(marker => marker.content.timeId !== timerangeId);\n\n      console.log(\"MARKERS LEN \" + this.markers.length)\n\n      this.dayMarkerData = this.dayMarkerData.filter(dpd => dpd.type === \"marker\");\n\n      if (this.dayMarkerData.length > 1) {\n        this.dayMarkerData = this.dayMarkerData.filter(item => item.time.some(it => it.timeId !== timerangeId))\n\n      } else {\n        console.log(\"Something else!!\")\n        this.dayMarkerData[0].time = this.dayMarkerData[0].time.filter(item => item.timeId !== timerangeId);\n      }\n      if (this.dayMarkerData[0].time.length === 0) {\n        this.isTimeToEdit = false;\n      }\n    },\n\n    onClose () {\n\n      console.log(\"On close...\")\n    },\n    async handleDate () {\n      console.log(\"Date handled!\")\n      const timeDate = {\n        yearFrom: this.date[0].getFullYear(),\n        monthFrom: this.date[0].getMonth(),\n        dayFrom: this.date[0].getDate(),\n        hoursFrom: this.date[0].getHours(),\n        minutesFrom: this.date[0].getMinutes(),\n        yearTo: this.date[1].getFullYear(),\n        monthTo: this.date[1].getMonth(),\n        dayTo: this.date[1].getDate(),\n        hoursTo: this.date[1].getHours(),\n        minutesTo: this.date[1].getMinutes()\n      }\n\n\n\n\n      const savedTimeRange = await availableService.addAdditionalOffer(this.provider.id, timeDate);\n\n      console.log(\"Provider times \" + this.providerTimes)\n\n      this.providerTimes = this.providerTimes.concat(savedTimeRange);\n\n      this.times = [];\n      this.markers = [];\n\n      this.providerTimes.forEach((times, index) => {\n        this.setTimeMarkers(times, index)\n        this.initializeTime(times);\n      })\n\n\n      // NB ------------------------------------------------------\n\n      let dayHighlightData = [];\n\n      let time = {}\n      this.editArr = [];\n      this.dayMarkerData = [];\n\n      console.log(\"------------- PT -------- \" + this.providerTimes.length)\n      console.log(\"------------- ML --------- \" + this.markers.length)\n\n      this.filled_days.forEach(f => {\n        if (this.date[0].getDate() === f.day) {\n          console.log(\"On\")\n          this.isTimeToEdit = true;\n          dayHighlightData.push({\n            type: \"highlight\",\n            day: this.date[0].getDate(),\n            weekDay: this.weekDay,\n            hours: f.hours,\n            minutes: f.minutes,\n            booking: this.bookingsConfirmed.filter(bc => bc.onTime[0].day === this.date[0].getDate())\n          });\n\n        } else {\n          console.log(\"Ei ole\")\n        }\n\n      })\n      let d;\n\n      //TODO siin probleem\n      const timeContents = [];\n      this.markers.forEach(m => {\n        if (m.date.getDate() === savedTimeRange.dayFrom) {\n          this.isTimeToEdit = true;\n          time = {\n            day: savedTimeRange.dayFrom,\n            weekDay: this.weekDay,\n            time: m.content\n          }\n          timeContents.push(m.content)\n          //this.editArr.push(time);\n\n        }\n\n      })\n\n      this.dayMarkerData = this.dayMarkerData.concat({\n        type: \"marker\",\n        day: savedTimeRange.dayFrom,\n        weekday: this.weekDay,\n        time: timeContents\n      })\n      // this.dayPanelData = {\n      //   type: \"marker\",\n      //   day: savedTimeRange.dayFrom,\n      //   weekday: this.weekDay,\n      //   time: timeContents\n      //\n      // }\n      this.dayMarkerData = this.dayMarkerData.concat(dayHighlightData);\n    },\n    async confirmEditedTime (id) {\n      console.log(\"Confirmed??? \" + id + \" hours edited: \" + this.t)\n      let offerForEdit;\n      const time = this.timeToEdit\n      if (time) {\n        //this.markers = [];\n\n        offerForEdit = {\n          hoursFrom: time[0].hours,\n          minutesFrom: time[0].minutes,\n          hoursTo: time[1].hours,\n          minutesTo: time[1].minutes\n        }\n\n        const edited = await availableService.updateOffer(id, offerForEdit)\n        console.log(\"Offer edited: \" + edited)\n        this.timeEditSuccessMessage = \"Aika muokattu onnistuneesti!\"\n        //this.providerTimes = this.providerTimes.filter(time => time.id !== id ? time : edited);\n\n\n\n\n        this.isEditTime = false;\n\n        //this.providerTimes = this.providerTimes.concat(edited)\n\n        //this.testii = edited;\n\n\n\n        //console.log(\"Times after edit:: \")\n        setTimeout(() => {\n          this.timeEditSuccessMessage = null\n        }, 2000)\n        this.isTimeToEdit = false;\n      } else {\n        this.timeEditErrorMessage = \"Ensin on vaihdettava kellonaika!\"\n        setTimeout(() => {\n          this.timeEditErrorMessage = null\n        }, 2000)\n      }\n      //this.updateTimesAndMarkers();\n\n      //console.log(\"Time need to confirmation: \" + time[0].hours + \" : \" + time[0].minutes)\n      this.timeToEdit = null;\n\n    },\n    onEdit (id, index) {\n      console.log(\"Editing time id \" + id)\n      console.log(\"Index on \" + index)\n      this.editMarkedTimeID = id;\n      this.editMarketIndex = index;\n\n\n      this.isEditTime = true;\n\n    },\n    async handleTime (date) {\n\n      this.xxx = date\n      console.log(\"Time is handled \" + date[0].hours + \" \" + date[1].hours )\n      console.log(\"ID NOW HERE\" + this.editMarkedTimeID)\n\n      const offerForEdit = {\n        hoursFrom: date[0].hours,\n        minutesFrom: date[0].minutes,\n        hoursTo: date[1].hours,\n        minutesTo: date[1].minutes\n      }\n\n      this.times[this.editMarketIndex] = [{hours: date[0].hours, minutes: date[0].minutes}, {hours: date[1].hours, minutes: date[1].minutes}];\n\n\n      const edited = await availableService.updateOffer(this.editMarkedTimeID, offerForEdit)\n      console.log(\"Offer edited: \" + edited)\n      this.timeEditSuccessMessage = \"Aika muokattu onnistuneesti!\";\n\n      setTimeout(() => {\n        this.timeEditSuccessMessage = null\n      }, 2000)\n      this.isTimeToEdit = false;\n\n      this.providerTimes = this.providerTimes.filter(time => time.id !== this.editMarkedTimeID ? time : edited);\n\n      const startHours = date[0].hours >= 10 ? date[0].hours : \"0\" + date[0].hours;\n      const endHours = date[1].hours >= 10 ? date[1].hours : \"0\" + date[1].hours;\n      const startMinutes = date[0].minutes >= 10 ? date[0].minutes : \"0\" + date[0].minutes;\n      const endMinutes = date[1].minutes >= 10 ? date[1].minutes : \"0\" + date[1].minutes;\n      let newTimeContent = startHours + \" : \" + startMinutes + \" - \" + endHours + \" : \" + endMinutes;\n\n      this.markers.map(marker => marker.content.timeId === this.editMarkedTimeID ? marker.content.text = newTimeContent : marker);\n\n      this.isEditTime = false;\n      //this.isConfimTime = true;\n      this.timeToEdit = date;\n\n    },\n\n    setMarkedDay (markedDay) {\n      const day = markedDay - new Date().getDate()\n      //this.markedDays = this.markedDays.concat(markedDay)\n      this.markedDays.push(markedDay)\n      console.log(\"Day to set_ \" + day);\n    },\n    cancelTime () {\n      console.log(\"Time cancelled!\")\n\n    },\n    async addAvailableDate () {\n      const availableDate = {\n        yearFrom: this.date[0].getFullYear(),\n        monthFrom: this.date[0].getMonth(),\n        dayFrom: this.date[0].getDate(),\n        hoursFrom: this.date[0].getHours(),\n        minutesFrom: this.date[0].getMinutes(),\n        yearTo: this.date[1].getFullYear(),\n        monthTo: this.date[1].getMonth(),\n        dayTo: this.date[1].getDate(),\n        hoursTo: this.date[1].getHours(),\n        minutesTo: this.date[1].getMinutes()\n      }\n      const saved = await availableService.addAdditionalOffer(this.provider.id, availableDate);\n      console.log(\"Saved? \" + saved);\n    },\n\n    // setHighlights () {\n    //   addDays(new Date(), 1),\n    //   this.filled_days.forEach(fd => {\n    //     let filledDay = null;\n    //     if (fd.month === new Date().getMonth()) {\n    //       filledDay =  addDays(new Date(), 3)         //addDays(new Date(), (fd[0].day   - new Date().getDate()));\n    //       this.filled = this.filled.concat(filledDay);\n    //     }\n    //   })\n    // },\n\n\n\n    async setTimeMarkers (offer, index) {\n      //this.markers = [];\n      console.log(\"KERTA \" + offer.id)\n      let markedDay = null;\n      this.contents = [];\n      // markedDay = offer.dayFrom - new Date().getDate()\n      // DODO need to add year funcionality\n      if (offer.monthFrom === new Date().getMonth()) {\n        markedDay = addDays(new Date(), offer.dayFrom - new Date().getDate());\n      } else {\n        markedDay = addDays(\n            new Date(offer.yearFrom, offer.monthFrom, 0), offer.dayFrom);\n      }\n\n      console.log(\"MAKKED DAY \" + markedDay.getDate())\n\n      console.log(\"Test markers: \" + new Date(offer.yearFrom, offer.monthFrom, offer.dayFrom, offer.hoursFrom, offer.minutesFrom))\n      let i;\n\n      const mDate = new Date(offer.yearFrom, offer.monthFrom, offer.dayFrom, offer.hoursFrom, offer.minutesFrom);\n      const lastDate = new Date(offer.yearTo, offer.monthTo, offer.dayTo, offer.hoursTo, offer.minutesTo);\n\n      const startHours = offer.hoursFrom >= 10 ? offer.hoursFrom : \"0\" + offer.hoursFrom;\n      const endHours = offer.hoursTo >= 10 ? offer.hoursTo : \"0\" + offer.hoursTo;\n      const startMinutes = offer.minutesFrom >= 10 ? offer.minutesFrom : \"0\" + offer.minutesFrom;\n      const endMinutes = offer.minutesTo >= 10 ? offer.minutesTo : \"0\" + offer.minutesTo;\n      let timeContent = startHours + \" : \" + startMinutes + \" - \" + endHours + \" : \" + endMinutes;\n\n      let content = {text: timeContent, index: index, timeId: offer.id, date: mDate,  color: 'red'};\n\n\n      this.contents.push({text: timeContent, index: index, timeId: offer.id, color: 'red'})\n\n      let mContent = {text: timeContent, index: index, timeId: offer.id, color: 'red'}\n\n      console.log(\"Marker added \" + offer.id)\n      if (this.markers)\n      if (lastDate >= new Date()) {\n        this.markers = this.markers.concat({\n          dFrom: offer.dayFrom,\n          date: markedDay,\n          type: 'line',\n          color: 'orange',\n          content: content\n        })\n      } else {\n        await availableService.removeTimeOffer(this.provider.id, offer.id);\n      }\n\n      console.log(\"Time pikkus \" + this.times.length)\n      this.times.forEach((time, index) => {\n\n      })\n\n    },\n    async providerData () {\n      //console.log(\"User id in provider panel: \" + this.userId)\n      const provider = await providerService.getProvider(this.userId);\n\n      if (provider) {\n        this.provider = provider;\n\n        this.creditLeft = ((provider.proTime - new Date().getTime()) / 86400000).toFixed() < 0 ? 0 : ((provider.proTime - new Date().getTime()) / 86400000).toFixed();\n        // provider.reference.forEach((item, id) => {\n        //   this.proImages = [\n        //       ...this.proImages,\n        //     {\n        //       id: id,\n        //       size: '1400-933',\n        //       src: require(`/server/uploads/pro/${item.name}`),\n        //       thumb: require(`/server/uploads/pro/${item.name}`),\n        //       subHtml: `<div class=\"lightGallery-captions\">\n        //\n        //\n        //   </div>\"`\n        //     }\n        //   ]\n        // })\n\n        this.providerTimes = provider.timeoffer;\n\n        if (!provider.isAvailable24_7) {\n          this.isProviderCalendar = true;\n        }\n        //console.log(\"Provider rooms are: \" + provider.room.map(pr => pr));\n        this.rooms = provider.room;\n\n        // this.un = provider.user.username;\n        // this.ri = provider.yritys;\n      }\n\n      //this.confirmedBookings = provider.booking.filter(booking => booking.status === \"confirmed\")\n\n\n      this.times = []\n      if (this.providerTimes) {\n\n        this.providerTimes.forEach(offer => {\n\n          this.initializeTime(offer);\n        })\n\n\n\n        this.providerTimes.forEach((offer, index) => {\n          this.setTimeMarkers(offer, index);\n        })\n      }\n\n      //this.removeExpiredDateTime();\n\n      console.log(\"Provider times pikkus \" + this.providerTimes.length)\n      console.log(\"Markerite pikkus \" + this.markers.length)\n\n      //}\n\n\n    },\n    createFilledTimes () {\n      let time_data = {};\n      this.filled_days.forEach(fd => {\n        time_data = {\n          day: fd.day,\n          time: fd,\n\n        }\n      })\n    },\n\n    initializeTime (offer) {\n      let time = []\n      const compareDate = new Date(offer.yearFrom, offer.monthFrom, offer.dayFrom, offer.hoursFrom, offer.minutesFrom);\n      time.push(\n          {\n            day: offer.dayFrom,\n            hours: offer.hoursFrom,\n            minutes: offer.minutesFrom\n          },\n          {\n            day: offer.dayTo,\n            hours: offer.hoursTo,\n            minutes: offer.minutesTo\n          }\n\n      )\n      if (compareDate >= new Date()) {\n        this.times.push(time)\n      }\n\n\n    },\n\n    test (index) {\n      console.log(\"What ever: \" + index)\n    },\n  },\n\n}\n// lang=\"scss\"\n</script>\n\n<style  lang=\"scss\">\n@import url(\"https://cdn.jsdelivr.net/npm/lightgallery@2.0.0-beta.4/css/lightgallery.css\");\n@import url(\"https://cdn.jsdelivr.net/npm/lightgallery@2.0.0-beta.4/css/lg-zoom.css\");\n@import url(\"https://cdn.jsdelivr.net/npm/lightgallery@2.0.0-beta.4/css/lg-video.css\");\n\n.proPanelHeader {\n  padding: 50px 30px 50px 30px;\n  text-align: left;\n}\n\n\n@media only screen and (max-width: 400px) {\n  .hide {\n    display: none !important;\n  }\n}\n\n//:root {\n//  --text-color: #9cebeb;\n//  --dp-cell-size: 60px;\n//  --dp-cell-padding: 10px;\n//  --dp-month-year-row-button-size: 45px;\n//  --dp-button-icon-height: 30px;\n//  --dp-font-size: 1.5rem;\n//\n//\n//\n//  .dp__theme_dark {\n//    --dp-background-color: #212121;\n//    --dp-text-color: #fff;\n//    --dp-hover-color: #484848;\n//    --dp-hover-text-color: #fff;\n//    --dp-hover-icon-color: #959595;\n//    --dp-primary-color: #b24d00;\n//    --dp-primary-disabled-color: #61a8ea;\n//    --dp-primary-text-color: #fff;\n//    --dp-secondary-color: #a9a9a9;\n//    --dp-border-color: #2d2d2d;\n//    --dp-menu-border-color: #2d2d2d;\n//    --dp-border-color-hover: #aaaeb7;\n//    --dp-border-color-focus: #aaaeb7;\n//    --dp-disabled-color: #737373;\n//    --dp-disabled-color-text: #d0d0d0;\n//    --dp-scroll-bar-background: #212121;\n//    --dp-scroll-bar-color: #484848;\n//    --dp-success-color: #00701a;\n//    --dp-success-color-disabled: #428f59;\n//    --dp-icon-color: #959595;\n//    --dp-danger-color: #e53935;\n//    --dp-marker-color: #e53935;\n//    --dp-tooltip-color: #3e3e3e;\n//    --dp-highlight-color: rgb(64, 64, 39);\n//    --dp-range-between-dates-background-color: var(--dp-hover-color, #484848);\n//    --dp-range-between-dates-text-color: var(--dp-hover-text-color, #fff);\n//    --dp-range-between-border-color: var(--dp-hover-color, #fff);\n//  }\n//\n//}\n//@media only screen and (max-width: 1000px) {\n//  .proPanelHeader {\n//    padding: 50px 30px 50px 30px;\n//    text-align: center;\n//  }\n//  :root {\n//    --text-color: #9cebeb;\n//    --dp-cell-size: 35px;\n//    --dp-cell-padding: 5px;\n//    --dp-month-year-row-button-size: 35px;\n//    --dp-font-size: 1rem;\n//    --dp-highlight-color: rgb(245, 131, 156);\n//  }\n//}\n\n.center {\n  margin: auto;\n  width: 25%;\n\n  padding: 7px;\n}\n\n/*.info {*/\n\n\n/*  color: white;*/\n/*  background: lightblue;*/\n/*  font-size: 20px;*/\n/*  border: solid #35bbc7;*/\n/*  border-radius: 5px;*/\n/*  margin-left: 20px;*/\n\n/*  margin-bottom: 10px;*/\n/*}*/\n\n.action-row {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n.file-marker > div {\n  padding: 0 3px;\n  /*height: 130px;*/\n  /*margin-top: -0.8em;*/\n  margin-top: -1em;\n}\n.box-title {\n  background: #141414 none repeat scroll 0 0;\n  color: palevioletred;\n  display: inline-block;\n  /*padding: 0 2px;*/\n  font-size: 16px;\n  padding: 0 10px;\n\n  margin-left: 8em;\n}\n.box-contents {\n  /*border: solid red;*/\n  padding: 20px;\n  overflow-y: auto;\n}\n#info-block section {\n  border: 1px solid #a0dde0;\n  margin-bottom: 20px;\n}\n.datepicker_opacity {\n  opacity: 0.5;\n}\n\n//.watermark{\n//  color:yellow;\n//\n//  //background-color:rgba(255, 0, 0, 0.5);\n//  //background-color:#221a16;\n//  background-color: blue;\n//  //opacity: 0.2  ;\n//  height:300px;\n//  width:1300px;\n//\n//  display:flex;\n//  align-items:center;\n//  justify-content:center;\n//  //top: 50vh; left: 50vw; transform: translate(-50%, -50%);\n//  top: 50vh; left: 50vw; transform: translate(-50%, -50%);\n//  position:fixed;\n//  //bottom:5px;\n//  //right:5px;\n//}\n\n\n\n\n#wrapper{position:relative; height:40px; width:100%;}\n//#wrapper p{position:absolute;  top:0;left:0; display:block; white-space:nowrap}\n</style>","<template>\n  <MDBContainer>\n    <div class=\"edit-price\">\n      <error-msg :message = priceErrorMessage />\n      <div style=\"display: flex; justify-content: right;\">\n        <MDBBtnClose white style=\"padding: 13px; cursor: pointer;\" @click=\"cancelEdit\" />\n\n      </div>\n\n      <MDBInput type=\"Number\" label=\"Uusi tuntihinta\" size=\"lg\" white v-model=\"price\" wrapperClass=\"mb-4\"/>\n\n      <MDBBtn outline=\"success\" block size=\"lg\" style=\"margin-bottom: 20px;\" @click=\"handleEditPrice\">Kinnita</MDBBtn>\n<!--      <MDBBtn outline=\"danger\" block size=\"lg\" @click=\"cancelEdit\">Poistu</MDBBtn>-->\n    </div>\n\n  </MDBContainer>\n</template>\n\n<script>\n\nimport {\n  MDBContainer,\n  MDBBtn,\n  MDBInput,\n  MDBBtnClose\n  //MDBIcon\n}from \"mdb-vue-ui-kit\";\nimport {ref} from \"vue\";\nimport errorMsg from '.././components/notifications/errorMessage'\nexport default {\n  name: \"edit-price\",\n  props: {\n    currentPrice: Number\n  },\n  setup () {\n    const price = ref(null)\n    const priceErrorMessage = ref(null)\n    return {\n      price,\n      priceErrorMessage\n    }\n  },\n  components: {\n    errorMsg,\n    MDBContainer,\n    MDBBtn,\n    MDBInput,\n    MDBBtnClose\n    //MDBIcon\n  },\n  data () {\n    return {\n      errorMessage: null\n    }\n  },\n  methods: {\n    handleEditPrice () {\n      const priceInt = parseInt(this.price);\n\n      if (this.price) {\n        if (priceInt > 0) {\n          console.log(\"Pos\")\n          this.$emit('save:editedPrice', this.price);\n\n        } else {\n          this.price = null;\n          this.priceErrorMessage = \"Hinta ei voi olla negatiivinen numero!\"\n          setTimeout(() => {\n            this.priceErrorMessage = null;\n          }, 3000);\n        }\n\n      } else {\n        this.priceErrorMessage = \"Tuntihinta puuttuu!\"\n        setTimeout (() => {\n          this.priceErrorMessage = null;\n        }, 3000);\n      }\n    },\n    cancelEdit () {\n      this.$emit('cancel:editPrice' , false)\n      this.errorMessage = \"Here is some error!\"\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./EditPrice.vue?vue&type=template&id=38547ce2\"\nimport script from \"./EditPrice.vue?vue&type=script&lang=js\"\nexport * from \"./EditPrice.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div >\n    <MDBContainer>\n      <div class=\"edit-profession\">\n<!--        <MDBIcon-->\n<!--            style=\"float:right; cursor: pointer;\"-->\n<!--            @click=\"cancelEditProfession\"-->\n\n<!--        >-->\n<!--          <i class=\"fas fa-undo\"></i>-->\n<!--        </MDBIcon>-->\n        <MDBBtnClose\n            white\n            style=\"float:right; cursor: pointer;\"\n            @click=\"cancelEditProfession\"\n        />\n        <div v-if=\"provider && provider.profession.length === 1\">\n\n          <MDBRow v-for=\"(pro, index) in provider.profession\" :key=\"index\">\n            <MDBCol col=\"12\">\n              <p style=\"color: #ddd;\">{{pro}}</p>\n            </MDBCol>\n            <MDBCol col=\"12\">\n              <form @submit.prevent=\"submit\">\n\n                <div style=\" margin-bottom: 20px;\" >\n                  <Dropdown @change=\"changeCurrentProfession(index)\" v-model=\"selected\" :options=\"proList\"   filter optionLabel=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\" placeholder=\"Valitse ammattilainen\" class=\"w-full md:w-100rem\">\n\n                    <template value=\"slotProps\" >\n                      <div v-if=\"slotProps.value\" >\n                        <div >{{ slotProps.value.label }}</div>\n                      </div>\n                      <span v-else>\n                        {{ slotProps.placeholder }}\n                      </span>\n                    </template>\n                    <template  #optiongroup=\"slotProps\"  >\n                      <div style=\"\" class=\"flex align-items-center\">\n                        <div >{{ slotProps.option.label }}</div>\n                      </div>\n                    </template>\n                  </Dropdown>\n                </div>\n\n              </form>\n            </MDBCol>\n          </MDBRow>\n\n<!--          <MDBTable  borderless style=\"font-size: 18px;  text-align: left;\">-->\n<!--            <tbody>-->\n<!--            <tr>-->\n<!--              <td>-->\n<!--                <p style=\"color: #ddd;\">{{pro}}</p>-->\n<!--              </td>-->\n<!--            </tr>-->\n<!--            <tr v-for=\"(pro, index) in provider.profession\" :key=\"index\">-->\n<!--              <td>-->\n<!--                <form @submit.prevent=\"submit\">-->\n\n<!--                  <div style=\" margin-bottom: 20px;\" >-->\n<!--                    <Dropdown @change=\"changeCurrentProfession(index)\" v-model=\"selected\" :options=\"proList\"   filter optionLabel=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\" placeholder=\"Valitse ammattilainen\" class=\"w-full md:w-100rem\">-->\n\n<!--                      <template value=\"slotProps\" >-->\n<!--                        <div v-if=\"slotProps.value\" >-->\n<!--                          <div >{{ slotProps.value.label }}</div>-->\n<!--                        </div>-->\n<!--                        <span v-else>-->\n<!--                          {{ slotProps.placeholder }}-->\n<!--                        </span>-->\n<!--                      </template>-->\n<!--                      <template  #optiongroup=\"slotProps\"  >-->\n<!--                        <div style=\"\" class=\"flex align-items-center\">-->\n<!--                          <div >{{ slotProps.option.label }}</div>-->\n<!--                        </div>-->\n<!--                      </template>-->\n<!--                    </Dropdown>-->\n<!--                  </div>-->\n\n<!--                </form>-->\n<!--              </td>-->\n\n<!--            </tr>-->\n<!--            </tbody>-->\n<!--          </MDBTable>-->\n        </div>\n\n        <div v-else>\n<!--          <MDBRow v-for=\"(pro, index) in provider.profession\" :key=\"index\">-->\n<!--            <MDBCol>-->\n<!--              <p style=\"color: #ddd;\">{{pro}}</p>-->\n<!--            </MDBCol>-->\n<!--            <MDBCol>-->\n<!--              -->\n<!--            </MDBCol>-->\n<!--          </MDBRow>-->\n\n          <MDBTable  borderless style=\"font-size: 18px; text-align: left;\">\n            <tbody>\n            <tr v-for=\"(pro, index) in provider.profession\" :key=\"index\">\n              <td>\n                {{pro}}\n              </td>\n              <td>\n                <MDBBtnClose white @click=\"removeProfession(index, pro)\"/>\n              </td>\n            </tr>\n            </tbody>\n          </MDBTable>\n        </div>\n\n        <MDBBtn block color=\"primary\" size=\"lg\" style=\"margin-bottom: 20px;\" @click=\"addProfessionPressed\">Lisää ammatti</MDBBtn>\n\n        <div v-if=\"isAddProfession\" style=\"margin-top: 13px; margin-bottom: 20px;\" >\n          <Dropdown @change=\"changeNewProfession\" v-model=\"selectedNewProfession\" :options=\"proList\"   filter optionLabel=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\" placeholder=\"Valitse ammattilainen\" class=\"w-full md:w-100rem\">\n\n            <template value=\"slotProps\" >\n              <div v-if=\"slotProps.value\" >\n                <div >{{ slotProps.value.label }}</div>\n              </div>\n              <span v-else>\n              {{ slotProps.placeholder }}\n            </span>\n            </template>\n            <template  #optiongroup=\"slotProps\"  >\n              <div style=\"\" class=\"flex align-items-center\">\n                <div >{{ slotProps.option.label }}</div>\n              </div>\n            </template>\n          </Dropdown>\n        </div>\n\n        <MDBBtn v-if=\"additionalProfession.length > 2\" outline=\"success\" block size=\"lg\" @click=\"handleAddAdditionalProfession\">Kinnita uus amet</MDBBtn>\n        <!--      <MDBBtn outline=\"danger\" block size=\"lg\" style=\"margin-top: 20px;\" @click=\"cancelEditProfession\">Poistu</MDBBtn>-->\n      </div>\n\n    </MDBContainer>\n  </div>\n\n</template>\n\n<script>\n\n\nimport {\n  MDBContainer,\n  MDBBtn,\n  //MDBInput,\n  MDBRow,\n  MDBCol,\n  MDBTable,\n  //MDBIcon,\n  MDBBtnClose\n}from \"mdb-vue-ui-kit\";\nimport {ref} from \"vue\";\nimport list from '@/components/profession/proList'\nimport Dropdown from 'primevue/dropdown';\nimport '@/css/style.css'\nimport '@/css/pro.css'\nexport default {\n  name: \"editProfession\",\n  props: {\n    provider: Object\n  },\n  components: {\n    Dropdown,\n    MDBContainer,\n    MDBBtn,\n    //MDBInput,\n    MDBRow,\n    MDBCol,\n    MDBTable,\n    //MDBIcon,\n    MDBBtnClose\n  },\n  setup () {\n    const profession = ref(\"\")\n    const selected = ref(null)\n    const selectedNewProfession = ref(null)\n    const isAddProfession = ref(false)\n    const additionalProfession = ref(\"\")\n    const proList = ref(list)\n    return {\n      profession,\n      selected,\n      selectedNewProfession,\n      isAddProfession,\n      additionalProfession,\n      proList\n    }\n  },\n  methods: {\n    changeCurrentProfession (index) {\n      console.log(\"Selected xx \" + index + \" \" + this.selected.label);\n      this.$emit(\"editProfession\", index, this.selected.label);\n      this.selected = null;\n    },\n    changeNewProfession () {\n      console.log(\"New new \" + this.selectedNewProfession.label);\n      this.isAddProfession = false;\n      this.$emit(\"additionalProfession\", this.selectedNewProfession.label);\n      this.selectedNewProfession = null;\n    },\n    addProfessionPressed () {\n      this.selectedNewProfession = \"\";\n      this.isAddProfession = true;\n\n      //this.$emit(\"add:profession\", this.profession);\n    },\n    addNewProfession () {\n      this.selectedNewProfession = \"\";\n      const newProfession = document.getElementById(\"new_profession\");\n\n      newProfession.addEventListener(\"change\", (event) => {\n\n        this.isAddProfession = false;\n        this.$emit(\"additionalProfession\", event.target.value);\n\n      })\n      this.selectedNewProfession = \"\";\n\n    },\n    // If only one profession\n    editProfession (index) {\n      this.isAddProfession = false;\n      const profession = document.getElementById(\"edit_profession\");\n\n      profession.addEventListener(\"change\", (event) => {\n\n        this.$emit(\"editProfession\", index, event.target.value);\n      })\n      this.selected = \"\";\n    },\n\n    removeProfession (index, profession) {\n      this.isAddProfession = false;\n      this.$emit(\"removeProfession\", index, profession);\n      //this.selected = \"\"\n      this.selected = null;\n    },\n    cancelEditProfession () {\n      this.$emit(\"cancel:editProfession\")\n    },\n\n    // cancelEdit () {\n    //   console.log(\"Heiii\")\n    //   this.$emit('cancel:editPrice' , false)\n    //   this.errorMessage = \"Here is some error!\"\n    //\n    // }\n  }\n\n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./EditProfession.vue?vue&type=template&id=7469cf65\"\nimport script from \"./EditProfession.vue?vue&type=script&lang=js\"\nexport * from \"./EditProfession.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"pro-panel-feedback\" >\r\n    <p style=\"text-align: right; cursor: pointer; color: green;\" @click=\"$emit('closeFeedbackList')\">Valmis</p>\r\n    <div v-if=\"feedback.length > 0\">\r\n      <div style=\"text-align: left;\" v-for=\"fb in feedback\" :key=\"fb.id\">\r\n        <p style=\"margin-bottom: 10px;\">{{fb.neg ? fb.neg : fb.pos}}</p>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <p>Ei arvostelua vielä!</p>\r\n    </div>\r\n\r\n<!--    <p>{{feedback.length > 0 ? feedback.pos  : \"Ei arvostelua vielä!\"}}</p>-->\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"FeedbackList\",\r\n  props: {\r\n    feedback: Array\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./FeedbackList.vue?vue&type=template&id=74c75656\"\nimport script from \"./FeedbackList.vue?vue&type=script&lang=js\"\nexport * from \"./FeedbackList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ProviderPanel.vue?vue&type=template&id=5bc14d3a\"\nimport script from \"./ProviderPanel.vue?vue&type=script&lang=js\"\nexport * from \"./ProviderPanel.vue?vue&type=script&lang=js\"\n\nimport \"./ProviderPanel.vue?vue&type=style&index=0&id=5bc14d3a&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["ErrorMessage","message","_createVNode","require","class","key","role","style","colspan","_createElementBlock","_component_MDBRow","default","_withCtx","_component_MDBCol","md","_createElementVNode","_hoisted_1","_hoisted_2","_toDisplayString","$setup","provider","yritys","address","_","_component_MDBContainer","isProviderCalendar","_createBlock","_component_calendar","userIsProvider","$props","bookings","filled_days","filled","bookingsConfirmed","_createCommentVNode","profession","_hoisted_4","_component_error_notification","rangeErrorMessage","_component_errorNotification","errorMessage","_component_successNotification","successMessage","_component_MDBTable","responsive","borderless","range","isEditRange","_hoisted_6","_hoisted_7","_hoisted_8","_component_MDBBtnClose","white","onClick","_cache","$event","_component_MDBInput","label","modelValue","size","type","length","_component_MDBBtn","outline","block","$options","saveNewRange","_createTextVNode","_hoisted_5","_normalizeClass","hide","isFeedback","_hoisted_9","_component_feedback_list","feedback","onCloseFeedbackList","handleCloseFeedbackList","_hoisted_10","_component_MDBIcon","i","_component_MDBBadge","color","pill","notification","_hoisted_11","rating","positive","_hoisted_12","negative","getFeedbackListData","_hoisted_14","_hoisted_13","isEditProfession","_Fragment","_renderList","pro","_hoisted_15","_component_edit_profession","onAdditionalProfession","handleAddProfession","onEditProfession","handleEditProfession","onRemoveProfession","handleRemoveProfession","handleCancelEditProfession","_hoisted_16","editProfessionPro","isEditPrice","priceByHour","_hoisted_17","_component_editPrice","currentPrice","cancelEditPrice","saveEditedPrice","_hoisted_18","editPrice","$router","push","_hoisted_3","_component_error_msg","priceErrorMessage","cancelEdit","price","wrapperClass","handleEditPrice","name","props","Number","setup","ref","components","errorMsg","MDBContainer","MDBBtn","MDBInput","MDBBtnClose","data","methods","priceInt","parseInt","this","console","log","$emit","setTimeout","__exports__","value","cancelEditProfession","index","col","onSubmit","_withModifiers","args","_ctx","submit","_component_Dropdown","onChange","changeCurrentProfession","selected","options","proList","filter","optionLabel","optionGroupLabel","optionGroupChildren","placeholder","optiongroup","slotProps","option","removeProfession","addProfessionPressed","isAddProfession","changeNewProfession","selectedNewProfession","additionalProfession","handleAddAdditionalProfession","Object","Dropdown","MDBRow","MDBCol","MDBTable","list","addNewProfession","newProfession","document","getElementById","addEventListener","event","target","editProfession","fb","id","neg","pos","Array","Gallery","FeedbackList","calendar","info","errorNotification","successNotification","MDBIcon","MDBBadge","VueDatePicker","watchEffect","addDays","Date","date","startTime","hours","getHours","minutes","getMinutes","dateForTimeEdit","editMarkedTimeID","editMarketIndex","activeDate","setMarkers","dayMarkerData","isEditTime","selfProvider","confirmedBookings","testi","un","ri","rooms","close","isGallery","proImages","isCalendarVisible","filledTimes","dayPanelIndex","isHandleTask","testii","weekDay","timerange","datee","isRangeSelected","clearTime","dateTest","markers","contents","isContents","markedDays","time","isConfirmTime","times","datetime","userId","creditLeft","providerTimes","timeEditSuccessMessage","timeEditErrorMessage","oblicationInfoMessage","editTime","isTimeToEdit","editArr","timeToEdit","isDisplayConfirmed","highlightedDates","mounted","beforeMount","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","providerData","openTask","closeTask","isHandletask","closeDayPanel","goToMap","getDate","today","getTime","addWeek","day_ms","days","rangeInt","includes","providerService","editRange","getIt","username","room","socket","auth","connect","room1","emit","joinAllRooms","handleRemoveProConfirmed","booking","header","cp","socketResetTest","disconnect","openChatPanel","evt","preventDefault","sessionID","usernameAlreadySelected","on","userID","roomName","setItem","createOrdered","handleInternal","editarr","dateStr","toString","substring","dateInt","forEach","f","day","bc","onTime","isCompared","markerContents","m","content","concat","weekday","offer","initializeTime","onTimePickerOpen","onTimePickerClose","onOverlayToggle","overlay","open","newPrice","providerSalary","updated","updateProvider","isEdit","splice","editTimeTest","newTimeoffer","hoursFrom","availableService","updateOffer","updateTimesAndMarkers","setTimeMarkers","delTimeRange","timerangeId","removeTimeOffer","marker","timeId","dpd","item","some","it","onClose","handleDate","timeDate","yearFrom","getFullYear","monthFrom","getMonth","dayFrom","minutesFrom","yearTo","monthTo","dayTo","hoursTo","minutesTo","savedTimeRange","addAdditionalOffer","dayHighlightData","timeContents","confirmEditedTime","offerForEdit","t","edited","onEdit","handleTime","xxx","startHours","endHours","startMinutes","endMinutes","newTimeContent","map","text","setMarkedDay","markedDay","cancelTime","addAvailableDate","availableDate","saved","mDate","lastDate","timeContent","dFrom","getProvider","proTime","toFixed","timeoffer","isAvailable24_7","createFilledTimes","time_data","fd","compareDate","test","render"],"sourceRoot":""}