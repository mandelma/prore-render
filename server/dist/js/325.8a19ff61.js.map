{"version":3,"file":"js/325.8a19ff61.js","mappings":"6MAaeA,MAAA,4C,GAbfC,IAAA,EA2BsCD,MAAA,e,GAEvBE,GAAG,iB,GAgBHF,MAAA,0B,GAGSG,MAAM,a,GAhD9BF,IAAA,G,GAAAA,IAAA,G,GA0DqBD,MAAA,GAASI,MAAM,2B,GAUnBA,MAAM,mB,GAeJJ,MAAA,uB,GAnFnBC,IAAA,EAsJ4BD,MAAA,iG,GAtJ5BC,IAAA,EAmKWG,MAAM,iBAA4DJ,MAAA,qH,GAChEA,MAAA,4C,GAMIA,MAAA,6F,GACEA,MAAA,4F,EA3KnB,Q,GAyLeA,MAAA,0B,GAzLfC,IAAA,G,GAAAA,IAAA,G,GAAAA,IAAA,EAsOuBI,QAAQ,K,GAtO/BJ,IAAA,G,EAAA,S,GAAAA,IAAA,G,GA0PgBI,QAAQ,K,GA1PxBJ,IAAA,G,GAiQgBI,QAAQ,K,GAjQxBJ,IAAA,EA6Q0BG,MAAM,S,GAEnBJ,MAAA,2D,GASAA,MAAA,uC,GAxRbC,IAAA,EA0RwCD,MAAA,yB,GA1RxCC,IAAA,EAqSuCD,MAAA,yB,GACxBA,MAAA,gB,GAtSfC,IAAA,EAkTgDD,MAAA,yB,GAY9BI,MAAM,mB,GA9TxBH,IAAA,G,GAAAA,IAAA,G,EAAA,Q,GAAAA,IAAA,EAuVuFD,MAAA,0D,GAvVvFC,IAAA,G,GAyVcD,MAAA,sE,0aAxVZM,EAAAA,EAAAA,IA2WM,aA1WJC,EAAAA,EAAAA,IAqWeC,GAAA,CApWXR,MAAA,uEAIC,CAPTS,SAAAC,EAAAA,EAAAA,KAWM,IAwIM,EAxINC,EAAAA,EAAAA,IAwIM,aAvIJA,EAAAA,EAAAA,IAqIM,OArIAP,OAZdQ,EAAAA,EAAAA,IAAA,EAAAC,eAYsCC,EAAAC,aAAoB,sB,EAChDJ,EAAAA,EAAAA,IAaM,MAbNK,EAaM,EAZJT,EAAAA,EAAAA,IAEUU,EAAA,CAFDC,KAAK,KAAKlB,MAAA,iBAAwBmB,QAAOC,EAAAC,gB,CAd9DZ,SAAAC,EAAAA,EAAAA,KAec,IAAwCY,EAAA,MAAAA,EAAA,MAAxCX,EAAAA,EAAAA,IAAwC,KAArCP,MAAM,4BAA0B,aAfjDmB,EAAA,G,gBAiBYZ,EAAAA,EAAAA,IAOM,aANJJ,EAAAA,EAAAA,IAKEiB,EAAA,CAJEC,MAAA,GACAzB,MAAA,iBACAkB,KAAK,KACJC,QAAKG,EAAA,KAAAA,EAAA,GAAAI,GAAEC,EAAAC,QAAQC,IAAI,UAKlBf,EAAAgB,kBA3BpBC,EAAAA,EAAAA,IAAA,SA2BoC,WAA1BzB,EAAAA,EAAAA,IAAmE,IAAnE0B,EAAgD,qBAEhDrB,EAAAA,EAAAA,IAcM,MAdNsB,EAcM,EAZJ1B,EAAAA,EAAAA,IAUW2B,EAAA,CATPT,MAAA,GACAU,WAAA,GACAC,MAAM,uCAlCtBC,WAmCyBvB,EAAAwB,QAnCzB,sBAAAhB,EAAA,KAAAA,EAAA,GAAAI,GAmCyBZ,EAAAwB,QAAOZ,GAChBxB,GAAG,eACHgB,KAAK,KACLqB,aAAa,Q,CAtC7B9B,SAAAC,EAAAA,EAAAA,KAwCc,IAAwH,CAArGI,EAAAwB,UAAO,WAA1BE,EAAAA,EAAAA,IAAwHhB,EAAA,CAxCtIvB,IAAA,EAwC0CwB,MAAA,GAAMzB,MAAA,wDAA2DmB,QAAOC,EAAAqB,mB,sBAxClHV,EAAAA,EAAAA,IAAA,UAAAR,EAAA,G,qBA6CUZ,EAAAA,EAAAA,IAmBM,MAnBN+B,EAmBM,EAlBJnC,EAAAA,EAAAA,IAiBWoC,EAAA,CAjBCC,SAAQxB,EAAAyB,kBA9ChCR,WA8C8DvB,EAAAgC,KA9C9D,sBAAAxB,EAAA,KAAAA,EAAA,GAAAI,GA8C8DZ,EAAAgC,KAAIpB,GAAGqB,QAASjC,EAAAkC,QAAWC,OAAA,GAAOC,YAAY,QAAQC,iBAAiB,QAAQC,oBAAoB,QAAQC,YAAY,wBAAwBjD,MAAM,sB,CAWzLkD,aAAW5C,EAAAA,EAAAA,KAIf6C,GAJ0B,EAChC5C,EAAAA,EAAAA,IAGM,MAHN6C,EAGM,EADJ7C,EAAAA,EAAAA,IAAwC,YAAA8C,EAAAA,EAAAA,IAA/BF,EAAUG,OAAOtB,OAAK,QA5DjD3B,SAAAC,EAAAA,EAAAA,KAgDc,IAQW,EARXC,EAAAA,EAAAA,IAQW,WARXgD,EAQW,CAPEhC,EAAA4B,UAAUpD,QAAK,WAA1BG,EAAAA,EAAAA,IAGM,MApDtBsD,EAAA,EAmDkBjD,EAAAA,EAAAA,IAAuC,YAAA8C,EAAAA,EAAAA,IAA9B9B,EAAA4B,UAAUpD,MAAMiC,OAAK,mBAEhC9B,EAAAA,EAAAA,IAEG,OAvDnBuD,GAAAJ,EAAAA,EAAAA,IAsDiB9B,EAAA4B,UAAUF,aAAW,SAtDtC9B,EAAA,G,0CAkEUZ,EAAAA,EAAAA,IAiCM,OAjCCP,OAlEjBQ,EAAAA,EAAAA,IAAA,CAAAkD,qBAkE+ChD,EAAAiD,mB,gBACnCpD,EAAAA,EAAAA,IAAyE,KAAtEX,MAAA,uBAA0B,4CAAwC,KACrEW,EAAAA,EAAAA,IA4BM,MA5BNqD,EA4BM,EAzBJzD,EAAAA,EAAAA,IAWgB0D,GAAA,CAVZjE,MAAA,mDAxElBqC,WAyE2BvB,EAAAoD,YAzE3B,sCAyE2BpD,EAAAoD,YAAWxC,GAKCN,EAAA+C,YAJrBC,KAAA,GACC,WAAQ,IAAMC,KACf,qBACCC,sBAAuB3C,EAAA4C,mBAEvBC,OAAO7C,EAAA8C,UAAmB,M,yFAI/B9D,EAAAA,EAAAA,IAWM,MAXN+D,EAWM,EAVJnE,EAAAA,EAAAA,IASEoE,GAAA,CAPElD,MAAA,GACAW,MAAM,QACNwC,KAAK,YAxFzBvC,WAyF6BvB,EAAA+D,eAzF7B,sBAAAvD,EAAA,KAAAA,EAAA,GAAAI,GAyF6BZ,EAAA+D,eAAcnD,GACvBvB,MAAM,OACLgB,QAAOC,EAAA0D,kBACRvC,aAAa,Q,0CAUvB5B,EAAAA,EAAAA,IAiCM,OAjCCP,OAtGjBQ,EAAAA,EAAAA,IAAA,CAAAkD,qBAsG+ChD,EAAAiD,kBAAkB/D,MAAA,0B,WACrDW,EAAAA,EAAAA,IAuBS,UAvBDX,MAAA,gGAAkGE,GAAG,WAvGzH,sBAAAoB,EAAA,KAAAA,EAAA,GAAAI,GAuG6IZ,EAAAiE,QAAOrD,GAAGP,QAAKG,EAAA,KAAAA,EAAA,OAAA0D,IAAErD,EAAAsD,kBAAAtD,EAAAsD,oBAAAD,K,gBAChJrE,EAAAA,EAAAA,IAAoD,UAA5CuE,SAAA,GAAS/E,MAAM,KAAI,oBAAgB,IAC3CQ,EAAAA,EAAAA,IAA2C,UAAnCR,MAAM,KAAI,oBAAgB,IAClCQ,EAAAA,EAAAA,IAA2C,UAAnCR,MAAM,KAAI,oBAAgB,IAClCQ,EAAAA,EAAAA,IAA2C,UAAnCR,MAAM,KAAI,oBAAgB,IAClCQ,EAAAA,EAAAA,IAA2C,UAAnCR,MAAM,KAAI,oBAAgB,IAClCQ,EAAAA,EAAAA,IAA2C,UAAnCR,MAAM,KAAI,oBAAgB,IAClCQ,EAAAA,EAAAA,IAA2C,UAAnCR,MAAM,KAAI,oBAAgB,IAClCQ,EAAAA,EAAAA,IAA2C,UAAnCR,MAAM,KAAI,oBAAgB,IAClCQ,EAAAA,EAAAA,IAA2C,UAAnCR,MAAM,KAAI,oBAAgB,IAClCQ,EAAAA,EAAAA,IAA2C,UAAnCR,MAAM,KAAI,oBAAgB,IAClCQ,EAAAA,EAAAA,IAA6C,UAArCR,MAAM,MAAK,qBAAiB,IACpCQ,EAAAA,EAAAA,IAA6C,UAArCR,MAAM,MAAK,qBAAiB,IACpCQ,EAAAA,EAAAA,IAA6C,UAArCR,MAAM,MAAK,qBAAiB,IACpCQ,EAAAA,EAAAA,IAA6C,UAArCR,MAAM,MAAK,qBAAiB,IACpCQ,EAAAA,EAAAA,IAA6C,UAArCR,MAAM,MAAK,qBAAiB,IACpCQ,EAAAA,EAAAA,IAA6C,UAArCR,MAAM,MAAK,qBAAiB,IACpCQ,EAAAA,EAAAA,IAA6C,UAArCR,MAAM,MAAK,qBAAiB,IACpCQ,EAAAA,EAAAA,IAA6C,UAArCR,MAAM,MAAK,qBAAiB,IACpCQ,EAAAA,EAAAA,IAA6C,UAArCR,MAAM,MAAK,qBAAiB,IACpCQ,EAAAA,EAAAA,IAA+C,UAAvCR,MAAM,OAAM,sBAAkB,IACtCQ,EAAAA,EAAAA,IAA+C,UAAvCR,MAAM,OAAM,sBAAkB,IACtCQ,EAAAA,EAAAA,IAA+C,UAAvCR,MAAM,OAAM,sBAAkB,iBAtByFW,EAAAiE,WAyBvHjE,EAAAoD,aAAepD,EAAA+D,iBAAc,WADvCrC,EAAAA,EAAAA,IAMS2C,GAAA,CArIrBlF,IAAA,EAiIgBmF,MAAM,UACLjE,QAAOC,EAAAiE,iB,CAlIxB5E,SAAAC,EAAAA,EAAAA,KAmIa,IAEDY,EAAA,MAAAA,EAAA,MArIZgE,EAAAA,EAAAA,IAmIa,2BAnIb/D,EAAA,G,iBAAAQ,EAAAA,EAAAA,IAAA,WA0IoBjB,EAAAgC,MAAQhC,EAAAyE,mBAAgB,WADlCjF,EAAAA,EAAAA,IAMI,KA/IdL,IAAA,EA2IeG,OA3IfQ,EAAAA,EAAAA,IAAA,CAAA4E,UA2IkC1E,EAAA2E,iBACpBzF,MAAA,yBACH,4BAED,KA/IV+B,EAAAA,EAAAA,IAAA,aAsJiBjB,EAAA4E,YAAS,WAApBpF,EAAAA,EAAAA,IAWM,MAXNqF,EAWM,EAVJhF,EAAAA,EAAAA,IAA2E,KAAxEX,MAAA,kCAAyCmB,QAAKG,EAAA,KAAAA,EAAA,OAAA0D,IAAE5D,EAAAwE,cAAAxE,EAAAwE,gBAAAZ,KAAc,WACjEzE,EAAAA,EAAAA,IAQEsF,GAAA,CANGC,UAAYC,EAAAD,UACZE,SAAUD,EAAAC,SACVC,aAAeF,EAAAE,aACf,gBAAc7E,EAAA8E,WACdC,aAAa/E,EAAAgF,aACb,eAAahF,EAAAiF,W,iGAImBvF,EAAAwF,mBAAqBxF,EAAA4E,YAAS,WAArEpF,EAAAA,EAAAA,IAqGM,MArGNiG,EAqGM,EApGJ5F,EAAAA,EAAAA,IAEM,MAFN6F,EAEM,EADJ7F,EAAAA,EAAAA,IAAgG,KAA7FX,MAAA,kDAAwDmB,QAAKG,EAAA,KAAAA,EAAA,OAAA0D,IAAE5D,EAAAqF,oBAAArF,EAAAqF,sBAAAzB,KAAoB,aAGxFzE,EAAAA,EAAAA,IAmBSmG,GAAA,MA3LjBjG,SAAAC,EAAAA,EAAAA,KAyKU,IAcS,EAdTH,EAAAA,EAAAA,IAcSoG,GAAA,CAdDC,GAAG,KAAG,CAzKxBnG,SAAAC,EAAAA,EAAAA,KA0KY,IAUM,EAVNC,EAAAA,EAAAA,IAUM,MAVNkG,EAUM,EATJlG,EAAAA,EAAAA,IAGM,MAHNmG,GAGMrD,EAAAA,EAAAA,IAFF3C,EAAAiG,OAAOC,OAAOC,SAASC,OAAS,EAAIpG,EAAAiG,OAAOC,OAAOC,SAAWnG,EAAAiG,OAAOC,OAAOG,MAAQ,GAAI,gBACvF1D,EAAAA,EAAAA,IAAG3C,EAAAiG,OAAOC,OAAOG,OAAQ,cAC7B,IAGAxG,EAAAA,EAAAA,IACuI,OADlIX,MAAA,gBACCoH,KAAoC,IAA/BtG,EAAAiG,OAAOM,KAAKC,OAAOC,QAAmBzG,EAAAiG,OAAOM,KAAKC,OAAOE,SAAWC,EAAQ,MAA+BC,IAAI,a,OAlLxIC,IAmLcpH,EAAAA,EAAAA,IAA2EqH,GAAA,CAA5DZ,OAAWlG,EAAAiG,OAAOC,OAAOC,SAAWnG,EAAAiG,OAAOC,OAAOG,O,wBAnL/E5F,EAAA,KAwLUhB,EAAAA,EAAAA,IAESoG,GAAA,MA1LnBlG,SAAAC,EAAAA,EAAAA,KAyLY,IAA0D,EAA1DC,EAAAA,EAAAA,IAA0D,IAA1DkH,GAA0DpE,EAAAA,EAAAA,IAAxB3C,EAAAiG,OAAOe,aAAW,MAzLhEvG,EAAA,OAAAA,EAAA,KA6LQhB,EAAAA,EAAAA,IAyEWwH,GAAA,CAzEDC,WAAA,GAAWC,WAAA,GAAWjI,MAAA,uD,CA7LxCS,SAAAC,EAAAA,EAAAA,KA8LU,IAuEQ,EAvERC,EAAAA,EAAAA,IAuEQ,eAtERA,EAAAA,EAAAA,IAOK,0BANHA,EAAAA,EAAAA,IAEK,UAFD,aAEJ,KACAA,EAAAA,EAAAA,IAEK,WAAA8C,EAAAA,EAAAA,IAAA,KADKsD,OAAOmB,QAAM,MAGzBvH,EAAAA,EAAAA,IAOK,0BANHA,EAAAA,EAAAA,IAEK,UAFD,iBAEJ,KACAA,EAAAA,EAAAA,IAEK,WAAA8C,EAAAA,EAAAA,IAAA,KADIsD,OAAOoB,SAAO,MAGzBxH,EAAAA,EAAAA,IAOK,0BANHA,EAAAA,EAAAA,IAEK,UAFD,cAEJ,KACAA,EAAAA,EAAAA,IAEK,WAAA8C,EAAAA,EAAAA,IAAA,KADIsD,OAAOqB,MAAQC,KAAKtB,OAAOqB,MAAQ,MAAQ,mCAAX,MAG3CzH,EAAAA,EAAAA,IAOK,0BANHA,EAAAA,EAAAA,IAEK,UAFD,qBAEJ,KACAA,EAAAA,EAAAA,IAEK,WAAA8C,EAAAA,EAAAA,IAAA,KADIsD,OAAOuB,YAAcD,KAAKtB,OAAOuB,YAAc,iBAAH,sCAGxCvB,OAAOwB,SAASrB,OAAS,IAAH,WAArC5G,EAAAA,EAAAA,IAcK,KA7OfkI,EAAA,EAgOY7H,EAAAA,EAAAA,IAEK,MAFAP,OAhOjBQ,EAAAA,EAAAA,IAAA,CAAA6H,kBAgO4C3H,EAAA4H,uBAAsB,YAEtD,GACW5H,EAAA4H,sB,WAGXpI,EAAAA,EAAAA,IAMK,KANLqI,EAMK,EALHpI,EAAAA,EAAAA,IAIEqI,GAAA,CAHE5I,MAAA,eACCuI,SAAQ,KAAQxB,OAAOwB,SACvBM,oBAAoBzH,EAAA0H,4B,gDAPG,WAA9BxI,EAAAA,EAAAA,IAEK,KArOjByI,EAAA,EAoOcxI,EAAAA,EAAAA,IAA+H4E,GAAA,CAAvH6D,MAAA,GAAM5D,MAAM,OAAQjE,QAAKG,EAAA,KAAAA,EAAA,GAAAI,GAAEZ,EAAA4H,qBAAsB,I,CApOvEjI,SAAAC,EAAAA,EAAAA,KAoO6E,IAAyB,EApOtG4E,EAAAA,EAAAA,IAoO6E,wBAAyB7B,EAAAA,EAAAA,IAAG3C,EAAAiG,OAAOwB,SAASrB,QAAS,KAAE,MApOpI3F,EAAA,WAAAQ,EAAAA,EAAAA,IAAA,YA8OyBgF,OAAOkC,WAAQ,WAA9B3I,EAAAA,EAAAA,IASK,KAvPf4I,EAAA,gBA+OYvI,EAAAA,EAAAA,IAEK,UAFD,cAEJ,KACAA,EAAAA,EAAAA,IAIK,YAHHA,EAAAA,EAAAA,IAEI,KAFAwI,KAAI,UAAcpC,OAAOkC,SAAUlC,OAAO,UAAS,+BAEvD,EArPdqC,SAAArH,EAAAA,EAAAA,IAAA,OAwPoBjB,EAAAiG,OAAOM,KAAKnH,KAAOY,EAAAuI,SAAM,WAAnC/I,EAAAA,EAAAA,IAOK,KA/PfgJ,EAAA,EA0PY3I,EAAAA,EAAAA,IAIK,KAJL4I,EAIK,EAHHhJ,EAAAA,EAAAA,IAES4E,GAAA,CAFAnF,MAAA,gBAAsBoF,MAAM,UAAUlE,KAAK,KAAMC,QAAOC,EAAAoI,iB,CA3P/E/I,SAAAC,EAAAA,EAAAA,KA2PgG,IAC9DY,EAAA,MAAAA,EAAA,MA5PlCgE,EAAAA,EAAAA,IA2PgG,SAC9D3E,EAAAA,EAAAA,IAA+B,KAA5BP,MAAM,mBAAiB,aA5P5DmB,EAAA,G,qBAAAQ,EAAAA,EAAAA,IAAA,OAgQoBjB,EAAAiG,OAAOM,KAAKnH,KAAOY,EAAAuI,QAAWvI,EAAA2I,SAhQlD1H,EAAAA,EAAAA,IAAA,SAgQyD,WAA/CzB,EAAAA,EAAAA,IAIK,KApQfoJ,EAAA,EAiQY/I,EAAAA,EAAAA,IAEK,KAFLgJ,EAEK,EADHpJ,EAAAA,EAAAA,IAAmF4E,GAAA,CAA1E6D,MAAA,GAAM5D,MAAM,UAAUlE,KAAK,KAAMC,QAAOC,EAAAwI,e,CAlQ/DnJ,SAAAC,EAAAA,EAAAA,KAkQ8E,IAAUY,EAAA,MAAAA,EAAA,MAlQxFgE,EAAAA,EAAAA,IAkQ8E,kBAlQ9E/D,EAAA,G,yBAAAA,EAAA,QAAAQ,EAAAA,EAAAA,IAAA,OA6QiBjB,EAAA2I,UAAO,WAAlBnJ,EAAAA,EAAAA,IAuDM,MAvDNuJ,EAuDM,EArDJlJ,EAAAA,EAAAA,IAMM,MANNmJ,EAMM,EALJvJ,EAAAA,EAAAA,IAIEiB,EAAA,CAHAC,MAAA,GACAP,KAAK,KACJC,QAAKG,EAAA,MAAAA,EAAA,IAAAI,GAAEZ,EAAA2I,SAAU,QAItB9I,EAAAA,EAAAA,IA0CO,cAzCLA,EAAAA,EAAAA,IAAqE,IAArEoJ,EAA6C,aAAStG,EAAAA,EAAAA,IAAE3C,EAAAwB,SAAO,IAxRzEgD,EAAAA,EAAAA,IAwR+E,iBACzD7B,EAAAA,EAAAA,IAAGrC,EAAA4I,qBAAsB,IACrC,GAAS5I,EAAA4I,sBAAmB,WAA5B1J,EAAAA,EAAAA,IAAiG,IAAjG2J,EAA6D,sCA1RvElI,EAAAA,EAAAA,IAAA,QA2RUxB,EAAAA,EAAAA,IAKE2B,EAAA,CAJET,MAAA,GACAW,MAAM,cA7RpBC,WA8RuBvB,EAAAoJ,YA9RvB,sBAAA5I,EAAA,MAAAA,EAAA,IAAAI,GA8RuBZ,EAAAoJ,YAAWxI,GACpBa,aAAa,Q,sCAKjB5B,EAAAA,EAAAA,IAAsE,KAAnEX,MAAA,uBAA0B,yCAAqC,IACzDoB,EAAA+I,qBAAkB,WAA3B7J,EAAAA,EAAAA,IAAyG,IAAzG8J,EAA0D,iDArSpErI,EAAAA,EAAAA,IAAA,QAsSUpB,EAAAA,EAAAA,IAyBM,MAzBN0J,EAyBM,EAxBJ9J,EAAAA,EAAAA,IAUgB0D,GAAA,CATZjE,MAAA,yBAxShBqC,WAySyBvB,EAAAoD,YAzSzB,sBAAA5C,EAAA,MAAAA,EAAA,IAAAI,GAySyBZ,EAAAoD,YAAWxC,GACpB0C,KAAA,GACC,WAAQ,IAAMC,KACf,qBACCC,sBAAuB3C,EAAA4C,mBACvBC,OAAO7C,EAAA8C,UAAmB,M,kEAItBrD,EAAAkJ,4BAAyB,WAAlChK,EAAAA,EAAAA,IAAgH,IAAhHiK,EAAkE,gDAlT9ExI,EAAAA,EAAAA,IAAA,QAmTYxB,EAAAA,EAAAA,IAUEiK,GAAA,CATEC,UAAU,KACVrI,MAAM,qBACNX,MAAA,GACAiJ,KAAK,IAvTrBrI,WAyTyBvB,EAAA6J,iBAzTzB,sBAAArJ,EAAA,MAAAA,EAAA,IAAAI,GAyTyBZ,EAAA6J,iBAAgBjJ,GACzBkJ,gBAAgB,wCAChBC,cAAc,MACdtI,aAAa,Q,wBAEjB5B,EAAAA,EAAAA,IAAuE,OAAvEmK,GAAuErH,EAAAA,EAAAA,IAAtC3C,EAAA6J,iBAAiBzD,QAAS,QAAK,QAIpE3G,EAAAA,EAAAA,IAAgG4E,GAAA,CAAxF6D,MAAA,GAAO9D,SAAUpE,EAAAiK,kBAAmB3F,MAAM,UAAWjE,QAAOC,EAAA4J,c,CAlU5EvK,SAAAC,EAAAA,EAAAA,KAkU0F,IAAKY,EAAA,MAAAA,EAAA,MAlU/FgE,EAAAA,EAAAA,IAkU0F,aAlU1F/D,EAAA,G,8BAAAQ,EAAAA,EAAAA,IAAA,OA0UkBjB,EAAAwF,kBA1UlBvE,EAAAA,EAAAA,IAAA,SA0UkC,WAA5BzB,EAAAA,EAAAA,IAQM,MAlVZ2K,EAAA,CA2UmBnK,EAAAC,aA3UnBgB,EAAAA,EAAAA,IAAA,SA2U8B,WAAtBzB,EAAAA,EAAAA,IAMM,MAjVd4K,EAAA,EA4UUvK,EAAAA,EAAAA,IAA0H,OAApHyG,IAAKK,EAAQ,KAA2BC,IAAI,OAAO1H,MAAA,+BAAsCmB,QAAKG,EAAA,MAAAA,EAAA,QAAA0D,IAAE5D,EAAA+J,mBAAA/J,EAAA+J,qBAAAnG,K,OA5UhHoG,UAuVkBtK,EAAAC,aAAeD,EAAAuK,4BAA8B,IAAMvK,EAAAwF,mBAAgB,WAA/EhG,EAAAA,EAAAA,IAaM,MAbNgL,EAaM,CAZOxK,EAAAoD,cAAW,WAAtB5D,EAAAA,EAAAA,IAMM,MA9VdiL,EAAA,EAyVU5K,EAAAA,EAAAA,IAEI,IAFJ6K,EAA0E,mBAC1D/H,EAAAA,EAAAA,IAAE3C,EAAAoD,YAAYuH,UAAY,OAAS3K,EAAAoD,YAAYwH,WAAa,GAAK,QAAW5K,EAAAoD,YAAYyH,WAAa,KAAO7K,EAAAoD,YAAY0H,aAAa1E,OAAS,EAAI,IAAMpG,EAAAoD,YAAY0H,aAAe9K,EAAAoD,YAAY0H,eAAU,kBAEzNjL,EAAAA,EAAAA,IAAsI,KAAnIX,MAAA,uGAAoG,+BAA2B,mBAClIW,EAAAA,EAAAA,IAAyI,KAAtIX,MAAA,wGAAsG,gCAA4B,QA7V/I+B,EAAAA,EAAAA,IAAA,sBAgWQpB,EAAAA,EAAAA,IAEI,KAFDX,MAAA,yEAA2E,oDAE9E,QAlWR+B,EAAAA,EAAAA,IAAA,UAAAR,EAAA,I,eAyWIZ,EAAAA,EAAAA,IAAoB,OAAfT,GAAG,OAAK,W,wKCzWjB,SAAS2L,GAAEC,GACTA,EAAEC,eAAeC,QAAU,IAAIC,MAC7B,CAAC,EACD,CACEC,GAAAA,CAAIC,EAAGC,GACL,OAAO,IAAIH,MAAM,CAAC,EAAG,CACnBC,GAAAA,CAAIG,EAAGC,GACL,MAAO,CAACC,EAAGC,EAAGC,KACZ,MAAMC,EAAIZ,EAAEa,UAAUC,QAAQR,QACpB,IAANM,EAIe,mBAARA,EAAEJ,GAIb,WACE,IACE,MAAMO,QAAUH,EAAEJ,GAAGC,GACrBC,EAAEK,EACJ,CAAE,MAAOA,GACPJ,EAAEI,EACJ,CACD,EAPD,GAHEJ,EAAE,IAAIK,MAAM,UAAUR,mCAAmCF,MAJzDK,EAAE,IAAIK,MAAM,oBAAoBV,eAc9B,CAER,GAEJ,GAGN,CACA,SAASW,GAAEjB,GACTA,EAAEC,eAAeC,QAAU,IAAIC,MAC7B,CAAC,EACD,CACEC,GAAAA,CAAIC,EAAGC,GACL,OAAON,EAAEkB,QAAQC,QAAQb,EAC3B,GAGN,CACA,SAASc,GAAEpB,GAAI,GACbqB,OAAOpB,eAAiBoB,OAAOpB,gBAAkB,CAAC,OAAwB,IAArBoB,OAAOR,WAAyBb,OAAmC,IAAnBqB,OAAOH,SAAsBD,GAAEI,QAA3CtB,GAAEsB,OAC7F,CCvCA,MAAMC,IAAcC,EAAAA,GAAAA,IAAkC,cAAe,CACnEC,IAAKA,IAAM,8BAAgBC,MAAMC,GAAM,IAAIA,EAAEC,mBAG/CC,K,0BF2YA,IACE9I,KAAM,mBACN+I,MAAO,CACLC,eAAgBC,OAChB5H,aAAc,KACdH,UAAWgI,MACX9H,SAAU8H,MACVC,mBAAoBC,SAEtBC,WAAY,CACVC,YAAW,KACXC,UAAS,aACTC,aAAY,KACZC,SAAQ,KACRC,OAAM,KACNC,YAAW,KACXC,OAAM,KACNC,OAAM,KACNC,QAAO,KACPC,SAAQ,KACRC,YAAW,KACXC,SAAQ,KACRC,YAAW,KACXC,aAAY,KACZC,SAAQ,KACRC,cAAaA,GAAAA,GAEfC,IAAAA,GAEE,MAAO,CACLC,YAAY,EACZC,IAAK,KACLC,aAAa,EACbC,SAAUC,EAAAA,EACV9F,SAAS,EACT1C,OAAQ,CAAC,EACTT,kBAAkB,EAClBvF,aAAa,EACbyO,qBAAqB,EACrB1M,KAAM,KACN2M,SAAU,KACVpG,OAAQ,KACRqG,WAAY,KACZpN,QAAS,KACTR,kBAAkB,EAClB6N,MAAO,KACPC,MAAO,KACPvE,4BAA6B,EAC7B5F,gBAAgB,EAChB1B,iBAAiB,EACjB8L,aAAc,cACdC,kBAAmB,GACnB/K,QAAS,EACT/B,QAAS+M,EAAAA,EACTC,KAAM,KACNtH,qBAAqB,EACrBuH,aAAa,EACbvK,WAAW,EACXwK,UAAW,GAEXC,oBAAqB,KACrBjM,YAAa,KACbW,gBAAgB,EAChBU,kBAAkB,EAClB6K,UAAW,KACXlG,YAAa,GACbS,iBAAkB,GAClB0F,iBAAiB,EACjBtF,mBAAmB,EAEvB,EAEAuF,SAAU,CACRtG,mBAAAA,GACE,MAA4B,KAArB3B,KAAK6B,aAAsB7B,KAAKgI,eACzC,EACAlG,kBAAAA,GACE,OAA4B,OAArB9B,KAAKnE,aAAwBmE,KAAKgI,eAC3C,EACA/F,yBAAAA,GACE,MAAiC,KAA1BjC,KAAKsC,kBAA2BtC,KAAKgI,eAC9C,GAGF,aAAME,GAGJ,MAAMC,EAAiBrD,OAAOsD,aAAaC,QAAQ,iBACnD,GAAIF,EAAgB,CAClB,MAAMnJ,EAAOsJ,KAAKC,MAAMJ,GACxBnI,KAAKoH,SAAWpI,EAAKoI,SACrBpH,KAAKgB,OAAShC,EAAKnH,EAErB,CAEAmI,KAAKwI,qBAELxI,KAAKyI,YAELzI,KAAK0I,sBAEL,MAAMC,EAAiBC,SAASC,eAC/B,YAEDF,EAAeG,iBAAiB,UAAWC,IACzC/I,KAAKtD,QAAUsM,WAAWD,EAAMrK,OAAO5G,OACvCkI,KAAKgH,aAAc,EAELhH,KAAKyH,kBACPuB,WAAWD,EAAMrK,OAAO5G,MACnC,IAYH,MAAMmR,EAAQL,SAASC,eAAe,gBAEhCK,EAAS,CAAEC,IAAK,UAAWC,KAAM,YACjCC,EAAgB,CACpBC,MAAOJ,EAAOC,IAAM,GACpBI,MAAOL,EAAOC,IAAM,GACpBK,KAAMN,EAAOE,IAAM,GACnBK,KAAMP,EAAOE,IAAM,IAEf1O,EAAU,CACdgP,OAAQL,EACRM,sBAAuB,CAAEC,QAAS,MAClCC,OAAQ,CAAC,qBAAsB,WAAY,OAAQ,OAAQ,qBAC3DC,cAAc,GAGVC,EAAe,IAAIC,OAAOC,KAAKC,OAAOC,aAAalB,EAAOvO,GAGhEqP,EAAaK,YAAY,iBAAiB,KACxC,IAAIC,EAAQN,EAAaO,WACzBtK,KAAKsH,MAAQ+C,EAAME,SAASC,SAASrB,MACrCnJ,KAAKyK,MAAQJ,EAAME,SAASC,SAASpB,MAErCpJ,KAAK0K,eAAeL,EAAME,SAASC,SAASrB,MAAOkB,EAAME,SAASC,SAASpB,OAC3EpJ,KAAK/F,QAAUoQ,EAAMM,kBACrBC,QAAQC,IAAI,gBAAkBR,EAAMM,mBACpCC,QAAQC,IAAI,mBAAqB7K,KAAKsH,MAAM,GAGhD,EACAwD,QAAS,CACP,wBAAMtC,GAOJ,IACE,MAAMuC,EAAe,CACnBC,OAAQ,CACNC,SAAU,QACVC,UAAW,UAGfN,QAAQC,IAAI,mBAAoBE,GAEhC,MAAMI,QAAmBpG,GAAYqG,qBAErC,GAA4B,YAAxBD,EAAWX,SAAwB,CAErC,MAAMa,QAAiBtG,GAAYuG,mBAAmB,CACpDC,QAAS,IACTC,oBAAoB,IAEtBZ,QAAQC,IAAI,YAAaQ,EAASL,OAAOC,UACzCL,QAAQC,IAAI,aAAcQ,EAASL,OAAOE,UAC5C,MACEN,QAAQC,IAAI,6BAEhB,CAAE,MAAOY,GACPb,QAAQa,MAAM,yBAA0BA,EAC1C,CACF,EACA,mBAAMC,SACe3G,GAAY4G,cAAc,CAAC,GAAG,CAACN,EAAUI,KACtDA,EACFb,QAAQa,MAAM,0BAA2BA,IAG3Cb,QAAQC,IAAI,YAAaQ,EAASL,OAAOC,UACzCL,QAAQC,IAAI,aAAcQ,EAASL,OAAOE,WAAU,GAKxD,EACAU,oBAAAA,GACE,OAAO,IAAIC,SAASC,IAClB,GAAIhH,OAAOkF,QAAUlF,OAAOkF,OAAOC,MAAQD,OAAOC,KAAKM,SACrDuB,QACK,CACLhH,OAAOiH,QAAU,IAAMD,IACvB,MAAME,EAASpD,SAASqD,cAAc,UACtCD,EAAOjN,IACH,wIACJiN,EAAOE,OAAQ,EACfF,EAAOG,OAAQ,EACfvD,SAASwD,KAAKC,YAAYL,EAC5B,IAEF,EACFM,YAAAA,CAAcC,GACZ,MAAMtD,EAAQL,SAASC,eAAe0D,GAGhCrD,EAAS,CAAEC,IAAK,UAAWC,KAAM,YACjCC,EAAgB,CACpBC,MAAOJ,EAAOC,IAAM,GACpBI,MAAOL,EAAOC,IAAM,GACpBK,KAAMN,EAAOE,IAAM,GACnBK,KAAMP,EAAOE,IAAM,IAEf1O,EAAU,CACdgP,OAAQL,EACRM,sBAAuB,CAAEC,QAAS,MAClCC,OAAQ,CAAC,qBAAsB,WAAY,OAAQ,OAAQ,qBAC3DC,cAAc,GAIVC,EAAeyC,OAAOtC,OAAOC,aAAalB,EAAOvO,GAEvDqP,EAAaK,YAAY,iBAAiB,KACxC,IAAIC,EAAQN,EAAaO,WACzBtK,KAAKsH,MAAQ+C,EAAME,SAASC,SAASrB,MACrCnJ,KAAKyK,MAAQJ,EAAME,SAASC,SAASpB,MACrCpJ,KAAKvG,kBAAmB,EACxBuG,KAAK0K,eAAeL,EAAME,SAASC,SAASrB,MAAOkB,EAAME,SAASC,SAASpB,OAC3EpJ,KAAK/F,QAAUoQ,EAAMM,iBAAiB,GAI1C,EACAvQ,iBAAAA,GACE4F,KAAK/F,QAAU,IACjB,EAEAwG,0BAAAA,GACET,KAAKK,qBAAsB,CAC7B,EACAoM,OAAAA,GACE7B,QAAQC,IAAI,aAEd,EACApO,iBAAAA,GACEmO,QAAQC,IAAI,wBACZD,QAAQC,IAAI,YAAc7K,KAAKxD,gBAC3BwD,KAAKxD,eACPwD,KAAKnE,YAAc,KAEnBmE,KAAKnE,YAAc,IAAIG,IAM3B,EACA,gBAAMF,CAAY4Q,GAKhB,GAJA9B,QAAQC,IAAI,gBAAkB6B,GAC1BA,IACF1M,KAAKxD,gBAAiB,GAEpBwD,KAAKgH,YAAa,OACI2F,EAAAA,EAAgBC,cAI1C,CACF,EAOApS,iBAAAA,GACEoQ,QAAQC,IAAI,WAAa7K,KAAKvF,KAAKV,OACnCiG,KAAK6M,2BAA2B7M,KAAKvF,KAAKV,MAAOiG,KAAKtD,SACtDsD,KAAKyH,kBAAoBzH,KAAKvF,KAAKV,MACnCiG,KAAKtE,iBAAkB,CACzB,EACAmC,UAAAA,CAAWmB,GACTgB,KAAK8M,MAAM,cAAe9N,EAG5B,EAEAjB,YAAAA,GACEiC,KAAK8M,MAAM,aACb,EACA9O,SAAAA,CAAU+O,EAASC,EAAMN,GAEvB1M,KAAK8M,MAAM,aAAcC,EAASC,EAAMN,EAE1C,EACAjE,SAAAA,GACE,IAAIwE,EAAQrE,SAASC,eAAe,OACpCoE,EAAMtV,MAAMuV,OAAS,OACrBD,EAAMtV,MAAMwV,MAAQ,MACtB,EACAC,OAAAA,GACEpN,KAAKzG,QAAQ8T,KAAK,MAGpB,EACA3E,mBAAAA,GACM4E,UAAUC,aACZD,UAAUC,YAAYjC,oBAAmBD,IACvC,MAAM,SAAEJ,EAAQ,UAAEC,GAAcG,EAASL,OAEzChL,KAAKsH,MAAQ2D,EACbjL,KAAKyK,MAAQS,EACbN,QAAQC,IAAI,SAAWI,GACvBjL,KAAKwN,yBAA0BvC,EAAUC,EAAU,GAIzD,EAEAuC,SAAAA,CAAU1Q,EAAO2Q,GACf,MAAMC,EAAW/E,SAASqD,cAAc,OAIxC,OAFA0B,EAASC,UAAY,YACrBD,EAASE,YAAc,QAChB,CACLC,KAAM,2EACNC,UAAWhR,EACXiR,YAAa,EACbC,YAAaP,EACbQ,aAAc,EACdC,MAAO,EACPC,YAAa,CACXC,EAAG,GACHxJ,GAAI,IAGV,EAEA2I,wBAAAA,CAA0BvC,EAAUC,GAElC,IACE,IAAIlB,OAAOC,KAAKqE,IAAI1F,SAASC,eAAe,OAAQ,CAClD0F,KAAM,GACNrF,OAAQ,IAAIc,OAAOC,KAAKuE,OAAOvD,EAAUC,GACzCuD,UAAWzE,OAAOC,KAAKyE,UAAUC,QACjCC,SAAU,IAGd,CAAE,MAAMC,GACNjE,QAAQC,IAAI,sBAAwBgE,EAAIC,QAC1C,CAUA9O,KAAK0K,eAAgBO,EAAUC,EACjC,EAEAR,cAAAA,CAAgBvB,EAAK4F,GAEnBC,EAAAA,EAAMnL,IAAI,4DAA8DsF,EACpE,IAAM4F,EADA,gDAGL7J,MAAK+J,IACJ,GAAIA,EAASpI,KAAKqI,cAChBlP,KAAKyL,MAAQwD,EAASpI,KAAKqI,cAE3BtE,QAAQC,IAAIoE,EAASpI,KAAKqI,mBACrB,CACO,IAAIlF,OAAOC,KAAKqE,IAAI1F,SAASC,eAAe,OAAQ,CAC9D0F,KAAM,GACNrF,OAAQ,IAAIc,OAAOC,KAAKuE,OAAOrF,EAAK4F,GACpCN,UAAWzE,OAAOC,KAAKyE,UAAUC,UAKnC3O,KAAK/F,QAAUgV,EAASpI,KAAKsI,QAAQ,GAAGxE,iBAC1C,KAGDyE,OAAM3D,IACLzL,KAAKyL,MAAQA,EAAMqD,QACnBlE,QAAQC,IAAIY,EAAMqD,QAAQ,GAElC,EAEAO,WAAAA,CAAaC,EAAWC,EAAWC,EAASC,GAY1C,IAAIC,EAAS,IAAI1F,OAAOC,KAAKuE,OAAOc,EAAWC,GAC3CI,EAAc,IAAI3F,OAAOC,KAAKuE,OAAOgB,EAASC,GAClD,OAAQzF,OAAOC,KAAKM,SAASqF,UAAUC,uBAAuBH,EAAQC,GAAe,KAAMG,QAAQ,EACrG,EAEA9S,eAAAA,GACMgD,KAAK/F,SACP+F,KAAK9C,kBAAmB,EACxB8C,KAAK6M,2BAA2B7M,KAAKyH,kBAAmBzH,KAAKtD,WAE7DkO,QAAQC,IAAI,qBACZ7K,KAAKvG,kBAAmB,EAG5B,EAEAsW,eAAAA,CAAiBC,GACf,IAAItD,EAEJ,GAAI1M,KAAKnE,YAAa,CACpB,IAAIoU,EAAOjQ,KAAKnE,YAAYqU,cACxBC,EAAQnQ,KAAKnE,YAAYwH,WACzB+M,EAAMpQ,KAAKnE,YAAYuH,UACvBiN,EAAOrQ,KAAKnE,YAAYyH,WACxBgN,EAAStQ,KAAKnE,YAAY0H,aAE9BqH,QAAQC,IAAI,kBAAoB,IAAI7O,KAAKiU,EAAME,EAAOC,EAAKC,EAAMC,IACjE5D,EAAO,IAAI1Q,KAAKiU,EAAME,EAAOC,EAAKC,EAAMC,EAC1C,CAEA,OAAOtQ,KAAKiH,SAASsJ,0BACjB7D,EACA,CAAC7H,EAAGmL,EAAGQ,SAAUrL,EAAG6K,EAAGS,UAAWC,EAAGV,EAAGW,QAASN,KAAML,EAAGY,UAAWC,IAAKb,EAAGc,aAC7E,CAACjM,EAAGmL,EAAGe,OAAQ5L,EAAG6K,EAAGgB,QAASN,EAAGV,EAAGiB,MAAOZ,KAAML,EAAGkB,QAASL,IAAKb,EAAGmB,WAE3E,EAEA,wBAAMC,CAAoBvJ,EAAWwJ,EAAYC,GAE/C,IASI5E,EATA6E,GAAkB,EAElBC,EAAM,IAAIxH,OAAOC,KAAKqE,IAAI1F,SAASC,eAAe,OAAQ,CAC5D0F,KAAM,EACNrF,OAAQ,IAAIc,OAAOC,KAAKuE,OAAOxO,KAAKsH,MAAOtH,KAAKyK,OAChDgE,UAAWzE,OAAOC,KAAKyE,UAAUC,UAKnC,GAHA/D,QAAQC,IAAI,gBAAkBhD,EAAUhJ,QACxC+L,QAAQC,IAAI,oBAAsByG,GAE9BtR,KAAKnE,YAAa,CACpB,IAAIoU,EAAOjQ,KAAKnE,YAAYqU,cACxBC,EAAQnQ,KAAKnE,YAAYwH,WACzB+M,EAAMpQ,KAAKnE,YAAYuH,UACvBiN,EAAOrQ,KAAKnE,YAAYyH,WACxBgN,EAAStQ,KAAKnE,YAAY0H,aAE9BqH,QAAQC,IAAI,kBAAoB,IAAI7O,KAAKiU,EAAME,EAAOC,EAAKC,EAAMC,IACjE5D,EAAO,IAAI1Q,KAAKiU,EAAME,EAAOC,EAAKC,EAAMC,EAC1C,CASA,IAAIxR,EAAQ,EAEZ,GAAI+I,EAAUhJ,OAAS,EAAG,CACxBmB,KAAKtB,OAAS,CAAC,EAEf,IAAK,IAAI+S,EAAM,EAAGA,EAAM5J,EAAUhJ,OAAQ4S,IAAO,CAC/C7G,QAAQC,IAAI,gBAAkBhD,EAAU4J,GAAK5R,QAG5BG,KAAKsH,MAAOtH,KAAKyK,MAElC5C,EAAU4J,GAAKJ,WAAWK,SAAQjX,IAChC,GAAIA,IAAS4W,EAAY,CAKvBzG,QAAQC,IAAI,OAASpQ,EAAKoF,QACJgI,EAAU4J,GAAKxG,SAAUpD,EAAU4J,GAAKvG,UAQ9D,GAPAN,QAAQC,IAAI,gBAAkB7K,KAAKqP,YAAYrP,KAAKsH,MAAOtH,KAAKyK,MAAO5C,EAAU4J,GAAKxG,SAAUpD,EAAU4J,GAAKvG,YAK/GlL,KAAK5C,gBAAiB,EAElB4C,KAAKqP,YAAYrP,KAAKsH,MAAOtH,KAAKyK,MAAO5C,EAAU4J,GAAKxG,SAAUpD,EAAU4J,GAAKvG,YAAcoG,EAAM,CAGvG,IAAIK,EAFJ7S,IAgBI+I,EAAU4J,GAAKG,gBACjBD,EAAS,IAAI3H,OAAOC,KAAK4H,OAAO,CAC9BxG,SAAU,IAAIrB,OAAOC,KAAKuE,OAAO3G,EAAU4J,GAAKxG,SAAUpD,EAAU4J,GAAKvG,WACzE0D,SAAU,GACV4C,IAAKA,EACLM,MAAOjK,EAAU4J,GAAK5R,OACtBkS,KAAM/R,KAAKyN,UAAU,WAAY,aACjC1T,MAAO,CAAEgD,MAAO,QAAUiV,WAAY,OAAQC,SAAU,UAGtDpK,EAAU4J,GAAKS,UAAUrT,OAAS,EACpCgJ,EAAU4J,GAAKS,UAAUV,KAAIW,IAC3BvH,QAAQC,IAAI,SAAWsH,EAAK3B,UAC5B5F,QAAQC,IAAI,qBACR7K,KAAKiH,SAASsJ,0BACV7D,EACA,CAAC7H,EAAGsN,EAAK3B,SAAUrL,EAAGgN,EAAK1B,UAAWC,EAAGyB,EAAKxB,QAASN,KAAM8B,EAAKvB,UAAWC,IAAKsB,EAAKrB,aACvF,CAACjM,EAAGsN,EAAKpB,OAAQ5L,EAAGgN,EAAKnB,QAASN,EAAGyB,EAAKlB,MAAOZ,KAAM8B,EAAKjB,QAASL,IAAKsB,EAAKhB,aAYrFQ,EANE3R,KAAKiH,SAASsJ,0BACd7D,EACA,CAAC7H,EAAGsN,EAAK3B,SAAUrL,EAAGgN,EAAK1B,UAAWC,EAAGyB,EAAKxB,QAASN,KAAM8B,EAAKvB,UAAWC,IAAKsB,EAAKrB,aACvF,CAACjM,EAAGsN,EAAKpB,OAAQ5L,EAAGgN,EAAKnB,QAASN,EAAGyB,EAAKlB,MAAOZ,KAAM8B,EAAKjB,QAASL,IAAKsB,EAAKhB,aAC9EtJ,EAAU4J,GAAKG,gBAET,IAAI5H,OAAOC,KAAK4H,OAAO,CAC9BxG,SAAU,IAAIrB,OAAOC,KAAKuE,OAAO3G,EAAU4J,GAAKxG,SAAUpD,EAAU4J,GAAKvG,WACzE0D,SAAU,GACV4C,IAAKA,EACLM,MAAOjK,EAAU4J,GAAK5R,OACtBkS,KAAM/R,KAAKyN,UAAU,WAAY,eAK1B,IAAIzD,OAAOC,KAAK4H,OAAO,CAC9BxG,SAAU,IAAIrB,OAAOC,KAAKuE,OAAO3G,EAAU4J,GAAKxG,SAAUpD,EAAU4J,GAAKvG,WACzE0D,SAAU,GACV4C,IAAKA,EACLM,MAAOjK,EAAU4J,GAAK5R,OACtBkS,KAAM/R,KAAKyN,UAAU,SAAU,eAInC,IAGFkE,EAAS,IAAI3H,OAAOC,KAAK4H,OAAO,CAC9BxG,SAAU,IAAIrB,OAAOC,KAAKuE,OAAO3G,EAAU4J,GAAKxG,SAAUpD,EAAU4J,GAAKvG,WACzE0D,SAAU,GACV4C,IAAKA,EACLM,MAAOjK,EAAU4J,GAAK5R,OACtBkS,KAAM/R,KAAKyN,UAAU,SAAU,gBAQrC3I,OAAOsN,iBAAmBpS,KAAKqS,WAE/B,MAEMC,EAAa,IAAItI,OAAOC,KAAKsI,WAAW,CAG5C,GAGFvI,OAAOC,KAAKlB,MAAMqB,YAAYuH,EAAQ,SAAS,WAI7C/G,QAAQC,IAAI,UAAY4G,GACxB,IAAItN,EAAIsN,EAEJF,GACFA,EAAgBiB,QAGlBjB,EAAkBe,EAGlBA,EAAWG,KAAKjB,EAAIG,GAGpBW,EAAWI,WAAW,6DAGlB7K,EAAU4J,GAAK5R,OAHG,yDAKYsE,EALZ,uBASxB,IAEAyG,QAAQC,IAAI,mBAAqB0G,EAEnC,CAEF,IAGJ,CAGIzS,EAAQ,GACVkB,KAAK5C,gBAAiB,EACtB4C,KAAKtH,aAAc,GAGnBsH,KAAK5C,gBAAiB,EAExB4C,KAAKgD,4BAA8BlE,EACnC8L,QAAQC,IAAI,WAAa/L,GACzBkB,KAAK2S,kBAGP,CAEF,EAEAC,cAAAA,CAAgBC,EAAUC,EAAWC,EAASC,GAC5C,GAAIhT,KAAKtB,OAAOM,KAAKoI,WAAapH,KAAKoH,SAAU,CAClCpH,KAAKtB,OAAOmB,OAASG,KAAKoH,SAAvC,MAIM6L,EAAiB,CACrBC,OAAQ,MACRC,WAAYH,EACZH,SAAUA,EACVO,UAAWN,EACXO,kBAAmBN,EACnBO,UAAU,EACV3L,KAAM3H,KAAK2H,KACX4L,IAAKvT,KAAKtB,OAAOmB,OACjBuH,SAAUpH,KAAKoH,SACfoM,eAAgBxT,KAAKoH,SACrBqM,SAAUzT,KAAKgB,OACf0S,iBAAkB1T,KAAKtB,OAAOM,KAAKoI,SACnCuM,WAAY3T,KAAKtB,OAAOM,KAAKnH,IAEzB+b,EAAkB,CACtBT,WAAYH,EACZH,SAAUA,EACVO,UAAWN,EACXO,kBAAmBN,EACnBpL,KAAM3H,KAAK2H,KACXkM,MAAO7T,KAAKtB,OAAOM,KAAKnH,GACxB0b,IAAKvT,KAAKtB,OAAOmB,OAGjBiU,OAAQ9T,KAAKgB,OACboG,SAASpH,KAAKoH,UAIhBpH,KAAK8M,MAAM,iBAAkB,CAC3BiH,aAAcd,EACde,SAAUJ,GAGd,CACF,EAEAzS,eAAAA,GAqBEnB,KAAK4S,gBAAe,EAAO,IAAK,GAAG,GACnC5S,KAAK3C,WAAY,CACnB,EAEA,gBAAMgV,CAAYlO,GAChByG,QAAQC,IAAI,gBAAkB,IAAI7O,KAAKgE,KAAKnE,cAClCmE,KAAKnE,YAKf+O,QAAQC,IAAI,mBACZ,MAAM0I,EAAM,CAACvT,KAAKyH,mBAMZwM,QAAmCtH,EAAAA,EAAgBuH,iCAAiC,CAACC,OAAQZ,IAEnG,IAAIa,EAAc,GAElBH,EAA2BvC,SAAQ2C,IAEjCzJ,QAAQC,IAAI,YAAcwJ,EAAIrV,KAAKnH,IACnC,IAAIyc,EAAWC,SAASvU,KAAKqP,YAAYrP,KAAKsH,MAAOtH,KAAKyK,MAAO4J,EAAIpJ,SAAUoJ,EAAInJ,YAAY4E,QAAQ,GACvGlF,QAAQC,IAAI,uBAAyByJ,GACrCF,EAAcA,EAAYI,OAAO,CAC/B3c,GAAIwc,EAAIrV,KAAKnH,GACbyZ,KAAMgD,EACNf,IAAKvT,KAAKyH,mBACV,IAGJgN,GAAAA,EAAOC,KAAK,oBAAqBN,GAEjC,MAAMvM,QAAkB8E,EAAAA,EAAgBC,eACpC/E,IAEEA,EAAU1D,GAAGnF,KAAKoI,WAAapH,KAAKoH,WACtCpH,KAAKmH,qBAAsB,GAG7ByD,QAAQC,IAAI,uBAAyB7K,KAAK2H,MAE1C3H,KAAKtB,OAASmJ,EAAU1D,GAEpBnE,KAAKoH,SACPpH,KAAK2H,KAAO3H,KAAKtB,OAAOmB,OAASG,KAAKoH,SAEtCpH,KAAK2H,KAAO,WAEd3H,KAAK/B,kBAAmB,EAK5B,EACAsD,aAAAA,GACEqJ,QAAQC,IAAI,+BAAiC7K,KAAK/F,SAC9C+F,KAAKxD,iBACPwD,KAAKnE,YAAc,MAErBmE,KAAKoB,SAAU,CACjB,EAGA,kBAAMuB,GAEJ,GAAI3C,KAAK0C,kBAAmB,OAE5B1C,KAAK0C,mBAAoB,EACzB1C,KAAKgI,iBAAkB,EACvB,IAAI2M,EAAY,KAEhB,GAAyB,KAArB3U,KAAK6B,aAA2C,OAArB7B,KAAKnE,aAAkD,KAA1BmE,KAAKsC,iBAAyB,CACxF,GAAItC,KAAKnE,YAAa,CACpB,IAAIoU,EAAOjQ,KAAKnE,YAAYqU,cACxBC,EAAQnQ,KAAKnE,YAAYwH,WACzB+M,EAAMpQ,KAAKnE,YAAYuH,UACvBiN,EAAOrQ,KAAKnE,YAAYyH,WACxBgN,EAAStQ,KAAKnE,YAAY0H,aAC9B,MAAMqR,EAAY,IAAI5Y,KAAKiU,EAAME,EAAOC,EAAKC,EAAMC,GAAQuE,UAE3DF,EAAY,CACVG,QAAS9U,KAAKnE,YACdkZ,WAAYH,EACZI,OAAQhV,KAAK6B,YACb5H,QAAS+F,KAAK/F,QACdgR,SAAUjL,KAAKsH,MACf4D,UAAWlL,KAAKyK,MAChBjD,aAAcxH,KAAKyH,kBACnBwN,iBAAiB,EACjBhF,KAAMjQ,KAAKnE,YAAYqU,cACvBC,MAAOnQ,KAAKnE,YAAYwH,WACxB+M,IAAKpQ,KAAKnE,YAAYuH,UACtB8R,MAAOlV,KAAKnE,YAAYyH,WACxB6R,QAASnV,KAAKnE,YAAY0H,aAC1B9D,YAAaO,KAAKsC,iBAClB4Q,OAAQ,UACRkC,QAASpV,KAAKtB,OAAO7G,GAEzB,CAEA+S,QAAQC,IAAI,YAAc7K,KAAK/F,SAC/B,MAAMob,QAAgBC,EAAAA,EAAiBC,aAAavV,KAAKgB,OAAQ2T,GAG3Da,QAAmBF,EAAAA,EAAiBG,eAAeJ,EAAQxd,UAC3Dyd,EAAAA,EAAiBI,gBAAgBL,EAAQxd,GAAImI,KAAKtB,OAAO7G,IAC/D,MAAM8d,QAA0BhJ,EAAAA,EAAgBiJ,mBAAmB5V,KAAKtB,OAAO7G,GAAIwd,EAAQxd,IAC3F,GAAI8c,GAAmC,wBAAtBgB,EAA6C,CAC5D/K,QAAQC,IAAI,aAAe7K,KAAKtB,OAAOmB,OAASG,KAAKoH,WACrD,MAAMO,EAAO3H,KAAKtB,OAAOmB,OAASG,KAAKoH,SAQjCvP,GALImI,KAAKtB,OAAOM,KAAKnH,GACnBmI,KAAKtB,OAAOM,KAAKoI,SAIdpH,KAAKtB,OAAOM,KAAKnH,UACtBmI,KAAK8M,MAAM,qBAAsBuI,SACjCZ,GAAAA,EAAOC,KAAK,kBAAmB,CACnC7c,KACAwd,QAASG,IAGXb,EAAY,IAEd,MACE/J,QAAQC,IAAI,qCAGd7K,KAAKzG,QAAQ8T,KAAK,YACpB,MACEzC,QAAQC,IAAI,0CAIhB,EAEA,wBAAMzM,GACJ4B,KAAK/B,kBAAmB,EAExB+B,KAAKjC,eAEL,MAAM8J,QAAkB8E,EAAAA,EAAgBC,eACtB,OAAd/E,GACF7H,KAAKoR,mBAAmBvJ,EAAW7H,KAAKyH,kBAAmBzH,KAAKtD,QAEpE,EAEAa,YAAAA,GACEyC,KAAK3C,WAAY,CACnB,EAEA,uBAAMyF,GACJ9C,KAAKtH,aAAc,EACnBsH,KAAKnE,YAAc,KACnBmE,KAAKxD,gBAAiB,EACtBwD,KAAKtD,QAAU,QACTsD,KAAK6M,2BAA2B7M,KAAKyH,kBAAmBzH,KAAKtD,SACnEsD,KAAK9C,kBAAmB,EAGxB8C,KAAKjC,cASP,EAEA/E,cAAAA,GACEgH,KAAKtH,aAAc,EACnBsH,KAAKjC,eACL6M,QAAQC,IAAI,mBACd,EAkBA,gCAAMgC,CAA4BwE,EAAYC,GAE5C1G,QAAQC,IAAI,4BAA8ByG,GAC1C,MAAMzJ,QAAkB8E,EAAAA,EAAgBC,eACtB,OAAd/E,IACG/C,OAAOkF,OAGVhK,KAAKoR,mBAAmBvJ,EAAWwJ,EAAYC,GAKrD,EACAqB,gBAAAA,GACM3S,KAAKgD,4BAA8B,EACrChD,KAAKwH,aAAe,gBAEpBxH,KAAKwH,aAAe,eAExB,I,WGzzCJ,MAAMqO,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAASC,KAEpE,S,wFCTAle,IAAA,EASqCG,MAAM,a,GAT3CH,IAAA,EAU0CG,MAAM,a,GAVhDH,IAAA,EAWqBG,MAAM,Q,2EAVzBoC,EAAAA,EAAAA,IAeehC,EAAA,MAhBjBC,SAAAC,EAAAA,EAAAA,KAEI,IAaM,EAbNC,EAAAA,EAAAA,IAaM,2BAZJL,EAAAA,EAAAA,IAWO8d,EAAAA,GAAA,MAdbC,EAAAA,EAAAA,IAIkCjd,EAAAkd,OAJlC,CAIkBC,EAAMC,M,WADlBle,EAAAA,EAAAA,IAWO,QATFL,IAAKue,EACNpe,OANVQ,EAAAA,EAAAA,IAAA,CAMgB,UAAS,SAAA6d,KACmB,SAATF,EAAIG,KAA4B,SAATH,O,CAE7B,SAATA,IAAI,WAAhBje,EAAAA,EAAAA,IAAuD,OAAvDU,EAA+C,MACrB,SAATud,IAAI,WAArBje,EAAAA,EAAAA,IAA8D,OAA9D0B,EAAsD,QAAC,WACvD1B,EAAAA,EAAAA,IAAkC,OAAlC2B,EAA0B,OAAC,M,WAXnCV,EAAA,G,uBAqBA,GACEqD,KAAM,cACN+I,MAAO,CACL3G,OAAQ2X,QAEV1Q,WAAY,CACVG,aAAYA,EAAAA,IAEdc,IAAAA,GACE,MAAO,CACL,CAEJ,EACAoB,SAAU,CACRgO,KAAAA,GACE,IAAIM,EAAa,GACbC,EAAYC,KAAKC,MAAM1W,KAAKrB,QAC5BgY,EAAc3W,KAAKrB,OAAS,GAAK,GAErC,IAAK,IAAI0F,EAAI,EAAGA,EAAImS,EAAWnS,IAC7BkS,EAAWlJ,KAAK,QAEdsJ,GACFJ,EAAWlJ,KAAK,QAElB,MAAOkJ,EAAW1X,OAAS,EACzB0X,EAAWlJ,KAAK,SAGlB,OAAOkJ,CACT,I,UC5CJ,MAAMV,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O,oMCRO/d,MAAM,sB,GADbH,IAAA,G,GAKWD,MAAA,0B,GALXC,IAAA,G,0CACEK,EAAAA,EAAAA,IAaM,MAbNU,EAaM,EAZJL,EAAAA,EAAAA,IAA+G,KAA5GX,MAAA,0DAA+DmB,QAAKG,EAAA,KAAAA,EAAA,GAAAI,GAAEC,EAAAwT,MAAM,uBAAsB,UAC1FpP,EAAAwC,SAASrB,OAAS,IAAH,WAA1B5G,EAAAA,EAAAA,IAIM,MAPV0B,EAAA,gBAIM1B,EAAAA,EAAAA,IAEM8d,EAAAA,GAAA,MANZC,EAAAA,EAAAA,IAIkDtY,EAAAwC,UAAN0W,K,WAAtC3e,EAAAA,EAAAA,IAEM,OAFDN,MAAA,sBAAkDC,IAAKgf,EAAG/e,I,EAC7DS,EAAAA,EAAAA,IAAgE,IAAhEsB,GAAgEwB,EAAAA,EAAAA,IAA9Bwb,EAAGC,IAAMD,EAAGC,IAAMD,EAAGnF,KAAG,Q,sBAG9DxZ,EAAAA,EAAAA,IAEM,MAVVoC,EAAApB,EAAA,KAAAA,EAAA,KASMX,EAAAA,EAAAA,IAA2B,SAAxB,wBAAoB,Q,CAS7B,OACEiE,KAAM,eACN+I,MAAO,CACLpF,SAAUuF,Q,UChBd,MAAMoQ,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O,qBCNA,MAAMgB,EAAUA,CAACC,EAAKC,KAClB,MAAMC,EAAe,IAAIjb,KAAK+a,EAAIlS,EAAGkS,EAAI5R,EAAG4R,EAAIrG,EAAGqG,EAAI1G,KAAM0G,EAAIlG,KAC3DqG,EAAe,IAAIlb,KAAKgb,EAAKnS,EAAGmS,EAAK7R,EAAG6R,EAAKtG,EAAGsG,EAAK3G,KAAM2G,EAAKnG,KACtE,OAAOqG,GAAgBD,CAAY,EAGjC1G,EAA4BA,CAAC4G,EAAIC,EAAOC,KAE1C,MAAMC,EAAY,IAAItb,KAAKob,EAAMvS,EAAGuS,EAAMjS,EAAGiS,EAAM1G,EAAG0G,EAAM/G,KAAM+G,EAAMvG,KAClE0G,EAAU,IAAIvb,KAAKqb,EAAIxS,EAAGwS,EAAIlS,EAAGkS,EAAI3G,EAAG2G,EAAIhH,KAAMgH,EAAIxG,KAC5D,OAAOsG,GAAMG,GAAaH,EAAKI,CAAO,EAE1C,KAAiBT,UAASvG,4B","sources":["webpack://prore-mongo/./src/pages/RecipientPublic.vue","webpack://prore-mongo/./node_modules/@capacitor/synapse/dist/synapse.mjs","webpack://prore-mongo/../../src/index.ts","webpack://prore-mongo/./src/pages/RecipientPublic.vue?a5fc","webpack://prore-mongo/./src/components/RatingStars.vue","webpack://prore-mongo/./src/components/RatingStars.vue?d511","webpack://prore-mongo/./src/components/FeedbackList.vue","webpack://prore-mongo/./src/components/FeedbackList.vue?832c","webpack://prore-mongo/./src/components/controllers/datetime.js"],"sourcesContent":["<template>\r\n  <div>\r\n    <MDBContainer\r\n        style=\"position: relative; z-index: 1;\r\n        /*width: 80%;*/\r\n        margin-top: 80px;\r\n        opacity: 0.8;\r\n        \"\r\n    >\r\n\r\n<!--      <MDBBtn color=\"danger\" @click=\"puhasta\">Puhasta kaardi andmed</MDBBtn>-->\r\n      <div >\r\n        <div :class=\"{hideMainPanel: !isMainPanel}\" class=\"client-map-panel\">\r\n          <div style=\"display: flex; justify-content: right;\">\r\n            <MDBIcon size=\"lg\" style=\"padding: 10px;\" @click=\"closeMainPanel\">\r\n              <i class=\"fas fa-expand-arrows-alt\"></i>\r\n            </MDBIcon>\r\n            <div>\r\n              <MDBBtnClose\r\n                  white\r\n                  style=\" padding: 10px;\"\r\n                  size=\"lg\"\r\n                  @click=\"$router.go(-1)\"\r\n              />\r\n            </div>\r\n\r\n          </div>\r\n          <p v-if=\"!isNoAddressGiven\" style=\"color: red;\">Anna osoittesi!</p>\r\n\r\n          <div id=\"address-panel\">\r\n\r\n            <MDBInput\r\n                white\r\n                inputGroup\r\n                label=\"Anna toinen osoitteesi kun ei täsmää\"\r\n                v-model=\"address\"\r\n                id=\"autocomplete\"\r\n                size=\"lg\"\r\n                wrapperClass=\"mb-4\"\r\n            >\r\n              <MDBBtnClose v-if=\"address\" white style=\"float: right; margin-right: 7px; margin-top: 5px;\" @click=\"clearOrderAddress\"/>\r\n            </MDBInput>\r\n\r\n          </div>\r\n\r\n          <div style=\" margin-bottom: 20px;\" >\r\n            <Dropdown  @change=\"changedProfession\"   v-model=\"prof\" :options=\"prodata\"   filter optionLabel=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\" placeholder=\"Valitse ammattilainen\" class=\"w-full md:w-100rem\">\r\n\r\n              <template value=\"slotProps\" >\r\n                <div v-if=\"slotProps.value\" >\r\n                  <!--              <img :alt=\"slotProps.value.label\" src=\"https://primefaces.org/cdn/primevue/images/flag/flag_placeholder.png\" :class=\"`mr-2 flag flag-${slotProps.value.code.toLowerCase()}`\" style=\"width: 18px\" />-->\r\n                  <div >{{ slotProps.value.label }}</div>\r\n                </div>\r\n                <span v-else>\r\n              {{ slotProps.placeholder }}\r\n            </span>\r\n              </template>\r\n              <template  #optiongroup=\"slotProps\"  >\r\n                <div style=\"\" class=\"flex align-items-center\">\r\n                  <!--              <img :alt=\"slotProps.option.label\" src=\"https://primefaces.org/cdn/primevue/images/flag/flag_placeholder.png\" :class=\"`mr-2 flag flag-${slotProps.option.code.toLowerCase()}`\" style=\"width: 18px\" />-->\r\n                  <div >{{ slotProps.option.label }}</div>\r\n                </div>\r\n              </template>\r\n            </Dropdown>\r\n          </div>\r\n\r\n          <div  :class=\"{hideDistSelectPanel: !isDistSelection}\">\r\n            <p style=\"text-align: left;\">Valitse kiinnostavaa ajankohta tai heti!</p>\r\n            <div class=\"distSelectPanel\">\r\n\r\n\r\n              <VueDatePicker\r\n                  style=\"margin-bottom: 20px; width: 70%; padding: 7px;\"\r\n                  v-model=\"bookingDate\"\r\n                  dark\r\n                  :min-date=\"new Date()\"\r\n                  teleport-center\r\n                  @internal-model-change=\"handleInternalDate\"\r\n                  @update:model-value=\"handleDate\"\r\n                  :state=\"isNoDate ? false : null\"\r\n              >\r\n\r\n              </VueDatePicker>\r\n              <div style=\"margin-top: 15px;\">\r\n                <MDBCheckbox\r\n\r\n                    white\r\n                    label=\"Heti!\"\r\n                    name=\"selection\"\r\n                    v-model=\"isSelectNotNow\"\r\n                    value=\"true\"\r\n                    @click=\"removeDateIfExist\"\r\n                    wrapperClass=\"mb-4\"\r\n                />\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n          <div  :class=\"{hideDistSelectPanel: !isDistSelection}\" style=\" margin-bottom: 13px;\">\r\n            <select style=\"padding: 12px; width: 100%; margin-bottom: 25px; background-color: dimgrey; color: white;\" id=\"distance\" v-model=\"distBtw\" @click=\"filterByDistance\">\r\n              <option disabled value=\"0\">Valitse etäisyys</option>\r\n              <option value=\"1\">1 km ympärilläsi</option>\r\n              <option value=\"2\">2 km ympärilläsi</option>\r\n              <option value=\"3\">3 km ympärilläsi</option>\r\n              <option value=\"4\">4 km ympärilläsi</option>\r\n              <option value=\"5\">5 km ympärilläsi</option>\r\n              <option value=\"6\">6 km ympärilläsi</option>\r\n              <option value=\"7\">7 km ympärilläsi</option>\r\n              <option value=\"8\">8 km ympärilläsi</option>\r\n              <option value=\"9\">9 km ympärilläsi</option>\r\n              <option value=\"10\">10 km ympärilläsi</option>\r\n              <option value=\"20\">20 km ympärilläsi</option>\r\n              <option value=\"30\">30 km ympärilläsi</option>\r\n              <option value=\"40\">40 km ympärilläsi</option>\r\n              <option value=\"50\">50 km ympärilläsi</option>\r\n              <option value=\"60\">60 km ympärilläsi</option>\r\n              <option value=\"70\">70 km ympärilläsi</option>\r\n              <option value=\"80\">80 km ympärilläsi</option>\r\n              <option value=\"90\">90 km ympärilläsi</option>\r\n              <option value=\"100\">100 km ympärilläsi</option>\r\n              <option value=\"200\">200 km ympärilläsi</option>\r\n              <option value=\"300\">300 km ympärilläsi</option>\r\n            </select>\r\n            <MDBBtn\r\n                v-if=\"bookingDate || isSelectNotNow\"\r\n                color=\"success\"\r\n                @click=\"findSuitablePro\"\r\n            >\r\n              Etsi ammatilainen\r\n            </MDBBtn>\r\n\r\n          </div>\r\n\r\n          <p\r\n              v-if=\"prof && isPressedFindBtn\"\r\n              :class=\"{noClients: isActiveProffs}\"\r\n              style=\"color: palevioletred;\"\r\n          >\r\n            Ei ammattilaisia vielä!\r\n          </p>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div v-if=\"isMapChat\" style=\"background-color: white; margin: auto; padding: 10px; width: 350px;  border: solid darkgrey\">\r\n        <p style=\"float: right; color: limegreen;\" @click=\"closeMapChat\">Valmis</p>\r\n        <chat-panel\r\n\r\n            :chatusers = chatusers\r\n            :messages =messages\r\n            :selecteduser = selecteduser\r\n            @select:user = selectUser\r\n            @noSelected = noSelectUser\r\n            @on:message = onMessage\r\n        />\r\n      </div>\r\n\r\n      <div class=\"map-info-table\" v-else-if=\"isTargetSelected && !isMapChat\" style=\"background-color: white; color: darkslategrey; padding: 10px; width: 90%; margin: auto;  border: solid darkgrey\">\r\n        <div style=\"display: flex; justify-content: right;\">\r\n          <p style=\" font-size: 15px; padding: 10px; color: green;\" @click=\"outFromMarkerPanel\">Valmis</p>\r\n        </div>\r\n\r\n        <MDBRow>\r\n          <MDBCol lg=\"4\">\r\n            <div style=\"background-color: dimgrey; border-radius: 10px; padding: 13px; margin-bottom: 13px;\">\r\n              <div style=\"color: #ddd; font-size: 11px; display: flex; justify-content: right; padding: 7px 0;\">\r\n               {{ target.rating.positive.length > 0 ? target.rating.positive / target.rating.count : 0 }} tähteä &nbsp;\r\n                ( {{ target.rating.count }} antajaa )\r\n              </div>\r\n<!--              proAvatar: this.provider.user.avatar.isImage === true ? this.provider.user.avatar.imageUrl : null,-->\r\n<!--              <img style=\"width: 100px;\" :src=\"require(`@/assets/avatar/avatar.png`)\" alt=\"pro-image\"/>-->\r\n              <img style=\"width: 100px;\"\r\n                   :src=\"target.user.avatar.isImage === true ? target.user.avatar.imageUrl : require(`@/assets/avatar/avatar.png`)\" alt=\"pro-image\"/>\r\n              <rating-stars :rating = \"(target.rating.positive / target.rating.count)\" />\r\n            </div>\r\n\r\n\r\n          </MDBCol>\r\n          <MDBCol>\r\n            <p style=\"margin-bottom: 13px;\">{{target.description}}</p>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n        <MDBTable responsive borderless style=\"font-size: 14px; width: 100%; text-align: left;\">\r\n          <tbody>\r\n          <tr>\r\n            <td>\r\n              Yritys:\r\n            </td>\r\n            <td>\r\n              {{ this.target.yritys }}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              Y - tunnus:\r\n            </td>\r\n            <td>\r\n              {{this.target.ytunnus}}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              Työalue:\r\n            </td>\r\n            <td>\r\n              {{this.target.range ? this.target.range + \" km\" : \"Palvelun tarjous vain paikalla!\"}}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              Palvelun hinta:\r\n            </td>\r\n            <td>\r\n              {{this.target.priceByHour ? this.target.priceByHour + \" Euroa / tunti\": \"Urakkahinta sovittaessa!\"}}\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"this.target.feedback.length > 0\">\r\n            <td :class=\"{hideFeedbackTitle: isShowRatingResults}\">\r\n              Palaute\r\n            </td>\r\n            <td v-if=\"!isShowRatingResults\">\r\n              <MDBBtn block color=\"info\" @click=\"isShowRatingResults = true\">Katso arvostelut &nbsp;( {{ target.feedback.length }} )</MDBBtn>\r\n            </td>\r\n            <td v-else colspan=\"2\">\r\n              <feedback-list\r\n                  style=\"color: #ddd\"\r\n                  :feedback = this.target.feedback\r\n                  @closeFeedbackList = handleCloseMapFeedbackList\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"this.target.pro_link\">\r\n            <td>\r\n              Kotisivu\r\n            </td>\r\n            <td>\r\n              <a :href=\"'//' + this.target.pro_link\" target=\"_blank\">\r\n                Palveluntarjoajan kotisivu\r\n              </a>\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"target.user.id !== userId\">\r\n<!--            v-if=\"isCreatingChatPanel\"-->\r\n            <td colspan=\"2\">\r\n              <MDBBtn  style=\"float: right;\" color=\"warning\" size=\"lg\" @click=\"createChatPanel\">\r\n                &nbsp;&nbsp;&nbsp;<i class=\"far fa-comments\"></i>\r\n              </MDBBtn>\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"target.user.id !== userId && !isOrder\">\r\n            <td colspan=\"2\">\r\n              <MDBBtn  block color=\"success\" size=\"lg\" @click=\"createBooking\">Tee tilaus</MDBBtn>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </MDBTable>\r\n\r\n      </div>\r\n\r\n\r\n<!--      Make order panel-->\r\n\r\n      <div v-if=\"isOrder\" class=\"order\">\r\n<!--        <p style=\"color: green; display: flex; justify-content: right; padding: 20px;\" @click=\"isOrder = false\">Valmis</p>-->\r\n        <div style=\"display: flex; justify-content: right; padding: 20px;\">\r\n          <MDBBtnClose\r\n            white\r\n            size=\"lg\"\r\n            @click=\"isOrder = false\"\r\n          />\r\n        </div>\r\n<!--        @submit.prevent=\"confirmOrder\"-->\r\n        <form >\r\n          <p style=\"color: #00a6ff; text-align: left;\">Address: {{address}}</p>\r\n          order label {{ isNoOrderLabelAdded }}\r\n          <p v-if=\"isNoOrderLabelAdded\" style=\"color: palevioletred; \">Anna otsikko, pakollinen kenttä!</p>\r\n          <MDBInput\r\n              white\r\n              label=\"Anna otsiko\"\r\n              v-model=\"orderHeader\"\r\n              wrapperClass=\"mb-4\"\r\n          />\r\n\r\n\r\n<!--          orderDate-->\r\n          <p style=\"text-align: left;\">Missä ajalla haluaisit ammattilaista?</p>\r\n          <p v-if=\"isNoOrderDateAdded\" style=\"color:palevioletred;\">Anna päivämäärä ja aika, pakollinen kenttä!</p>\r\n          <div style=\"color: #fff;\">\r\n            <VueDatePicker\r\n                style=\"margin-bottom: 20px;\"\r\n                v-model=\"bookingDate\"\r\n                dark\r\n                :min-date=\"new Date()\"\r\n                teleport-center\r\n                @internal-model-change=\"handleInternalDate\"\r\n                :state=\"isNoDate ? false : null\"\r\n            >\r\n\r\n            </VueDatePicker>\r\n            <p v-if=\"isNoOrderDescriptionAdded\" style=\"color: palevioletred;\">Anna kuvaus tehtävästä, pakollinen kenttä!</p>\r\n            <MDBTextarea\r\n                maxlength=\"70\"\r\n                label=\"Tehtävän kuvaus...\"\r\n                white\r\n                rows=\"2\"\r\n\r\n                v-model=\"orderDescription\"\r\n                invalidFeedback=\"Ole hyvä ja kirjoita tehtävän kuvaus.\"\r\n                validFeedback=\"Ok!\"\r\n                wrapperClass=\"mb-4\"\r\n            />\r\n            <span class=\"message-counter\">{{ orderDescription.length }} / 70</span>\r\n          </div>\r\n<!--          <MDBBtn block type=\"submit\" :disabled=\"isOrderBtnDisabled\" color=\"success\">Tilaa</MDBBtn>-->\r\n        </form>\r\n        <MDBBtn block :disabled=\"isOrderBtnClicked\" color=\"success\" @click=\"confirmOrder\">Tilaa</MDBBtn>\r\n\r\n      </div>\r\n\r\n\r\n\r\n<!--      <p style=\"color: red;\">selecteduser {{selecteduser}}</p>-->\r\n\r\n      <div v-if=\"!isTargetSelected\">\r\n        <div v-if=!isMainPanel >\r\n          <img :src=\"require(`@/assets/left_back.png`)\" alt=\"back\" style=\"float: right; padding: 10px;\" @click=\"returnToMainPanel\"/>\r\n\r\n<!--          <MDBIcon size=\"2x\" style=\"float: right; padding: 10px;\" @click=\"returnToMainPanel\">-->\r\n<!--            <i class=\"fas fa-expand-arrows-alt\"></i>-->\r\n<!--          </MDBIcon>-->\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n<!--      style=\"background-color:white; width: 40%; float: right;\"-->\r\n      <div v-if=\"!isMainPanel && countOfSelectedProfessional > 0 && !isTargetSelected\" style=\"background-color:white; width: 300px; margin: auto;\">\r\n        <div v-if=\"bookingDate\">\r\n          <p  style=\"color: blue; font-size: 14px; text-align: left; padding: 15px\">\r\n            Valittu aika: {{bookingDate.getDate() + \" / \" + (bookingDate.getMonth() + 1) + \" klo \" +  bookingDate.getHours() + \":\" + (bookingDate.getMinutes().length < 2 ? \"0\" + bookingDate.getMinutes() : bookingDate.getMinutes())}}\r\n          </p>\r\n          <p style=\"color: darkgreen; font-size: 17px; font-weight: bold; text-align: left; padding-left: 15px;\">Vihreä merkki - saatavilla </p>\r\n          <p style=\"color: darkorange; font-size: 17px ; font-weight: bold; text-align: left; padding-left: 15px;\">Oranssi merkki - sovitaessa </p>\r\n        </div>\r\n\r\n        <p style=\"color: #9fa6b2; font-size: 14px; text-align: left; padding: 15px; \">\r\n          Napsauta merkkiä nähdäksesi palveluntarjoajan!\r\n        </p>\r\n\r\n      </div>\r\n\r\n\r\n    </MDBContainer>\r\n\r\n    <div id=\"map\"></div>\r\n\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\n/*global google*/\r\nimport axios from 'axios'\r\nimport recipientService from '../service/recipients'\r\nimport providerService from '../service/providers'\r\nimport dt from '../components/controllers/datetime'\r\nimport {\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBBtnClose,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBIcon,\r\n  MDBBadge,\r\n  MDBTextarea,\r\n  MDBTable,\r\n  MDBCheckbox\r\n} from \"mdb-vue-ui-kit\";\r\nimport {loadGoogleMaps}  from '@/components/utils/loadGoogleMaps'\r\nimport distance from '../components/controllers/distance'\r\nimport gMap from '../components/location'\r\nimport proData from '@/components/profession/proList'\r\nimport chatPanel from '@/pages/LiveChat'\r\nimport VueDatePicker from '@vuepic/vue-datepicker';\r\nimport feedbackList from \"@/components/FeedbackList\";\r\nimport Dropdown from 'primevue/dropdown';\r\n\r\nimport { Geolocation } from '@capacitor/geolocation';\r\n\r\nimport '@/css/pro.css'\r\n//import {Client} from \"@googlemaps/google-maps-services-js\";\r\nimport  { onMounted, ref } from \"vue\";\r\nimport socket from \"@/socket\";\r\nimport RatingStars from \"@/components/RatingStars\";\r\nexport default {\r\n  name: \"recipient-public\",\r\n  props: {\r\n    userIsProvider: Object,\r\n    selecteduser: null,\r\n    chatusers: Array,\r\n    messages: Array,\r\n    isProviderLoggedIn: Boolean\r\n  },\r\n  components: {\r\n    RatingStars,\r\n    chatPanel,\r\n    MDBContainer,\r\n    MDBInput,\r\n    MDBBtn,\r\n    MDBBtnClose,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBIcon,\r\n    MDBBadge,\r\n    MDBTextarea,\r\n    MDBTable,\r\n    MDBCheckbox,\r\n    feedbackList,\r\n    Dropdown,\r\n    VueDatePicker\r\n  },\r\n  data () {\r\n\r\n    return {\r\n      isMapReady: false,\r\n      obj: null,\r\n      stateActive: false,\r\n      datetime: dt,\r\n      isOrder: false,\r\n      target: {}, // Selected provider from map\r\n      isTargetSelected: false,\r\n      isMainPanel: true,\r\n      isCreatingChatPanel: false,\r\n      prof: null,\r\n      username: null,\r\n      userId: null,\r\n      providerId: null,\r\n      address: null,\r\n      isNoAddressGiven: true,\r\n      myLat: null,\r\n      mylng: null,\r\n      countOfSelectedProfessional: 0,\r\n      isActiveProffs: false,\r\n      isDistSelection: false,\r\n      professional: \"Automaalari\",\r\n      currentProfession: \"\",\r\n      distBtw: 0,\r\n      prodata: proData,\r\n      room: null,\r\n      isShowRatingResults: false,\r\n      isChatPanel: true,\r\n      isMapChat: false,\r\n      providers: [],\r\n\r\n      selectedProPosition: null,\r\n      bookingDate: null,\r\n      isSelectNotNow: false,\r\n      isPressedFindBtn: false,\r\n      orderDate: null,\r\n      orderHeader: \"\",\r\n      orderDescription: \"\",\r\n      isCompleteOrder: false,\r\n      isOrderBtnClicked: false\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    isNoOrderLabelAdded () {\r\n      return this.orderHeader === \"\" && this.isCompleteOrder;\r\n    },\r\n    isNoOrderDateAdded () {\r\n      return this.bookingDate === null && this.isCompleteOrder;\r\n    },\r\n    isNoOrderDescriptionAdded () {\r\n      return this.orderDescription === \"\" && this.isCompleteOrder;\r\n    }\r\n  },\r\n\r\n  async mounted () {\r\n    //await loadGoogleMaps();\r\n\r\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      this.username = user.username;\r\n      this.userId = user.id\r\n      //console.log(\"User token: \" + this.loggedUser.token)\r\n    }\r\n\r\n    this.getCurrentLocation();\r\n\r\n    this.resizeMap();\r\n\r\n    this.userCurrentLocation();\r\n\r\n    const selectDistance = document.getElementById\r\n    (\"distance\");\r\n\r\n    selectDistance.addEventListener(\"change\", (event) => {\r\n      this.distBtw = parseFloat(event.target.value);\r\n      this.stateActive = true;\r\n      const data = {\r\n        profession: this.currentProfession,\r\n        distance: parseFloat(event.target.value)\r\n      }\r\n\r\n      //window.localStorage.setItem('mapSearchData', JSON.stringify(data));\r\n\r\n      //console.log(\"+++++++++++ \" + this.countOfSelectedProfessional > 0)\r\n\r\n      //this.showClientLocationOnTheMap(this.currentProfession, this.distBtw);\r\n\r\n    })\r\n\r\n    //this.setUserPlace (\"address-autocomplete\");\r\n\r\n    const input = document.getElementById(\"autocomplete\");\r\n\r\n    const center = { lat: 50.064192, lng: -130.605469 };\r\n    const defaultBounds = {\r\n      north: center.lat + 0.1,\r\n      south: center.lat - 0.1,\r\n      east: center.lng + 0.1,\r\n      west: center.lng - 0.1,\r\n    };\r\n    const options = {\r\n      bounds: defaultBounds,\r\n      componentRestrictions: { country: \"fi\" },\r\n      fields: [\"address_components\", \"geometry\", \"icon\", \"name\", \"formatted_address\"],\r\n      strictBounds: false,\r\n      //types: [\"establishment\"],\r\n    };\r\n    const autocomplete = new google.maps.places.Autocomplete(input, options)\r\n    //const autocomplete = client.places.Autocomplete(input, options);\r\n\r\n    autocomplete.addListener(\"place_changed\", () => {\r\n      let place = autocomplete.getPlace()\r\n      this.myLat = place.geometry.location.lat();\r\n      this.myLng = place.geometry.location.lng();\r\n\r\n      this.getAddressFrom(place.geometry.location.lat(), place.geometry.location.lng())\r\n      this.address = place.formatted_address;\r\n      console.log(\"Address xxxx \" + place.formatted_address)\r\n      console.log(\"place-----------\" + this.myLat)\r\n    });\r\n\r\n  },\r\n  methods: {\r\n    async getCurrentLocation() {\r\n\r\n      // for iOS: In ios/App/Info.plist, add:\r\n      // <key>NSLocationWhenInUseUsageDescription</key>\r\n      // <string>Your location is used for...</string>\r\n      // <key>NSLocationAlwaysUsageDescription</key>\r\n      // <string>Your location is used for...</string>\r\n      try {\r\n        const mockLocation = {\r\n          coords: {\r\n            latitude: 60.1699,\r\n            longitude: 24.9384\r\n          }\r\n        };\r\n        console.log('Mocked location:', mockLocation);\r\n        // Request geolocation permission\r\n        const permission = await Geolocation.requestPermissions();\r\n\r\n        if (permission.location === 'granted') {\r\n          // Get current position\r\n          const position = await Geolocation.getCurrentPosition({\r\n            timeout: 20000, // 20 seconds\r\n            enableHighAccuracy: true\r\n          });\r\n          console.log('Latitude:', position.coords.latitude);\r\n          console.log('Longitude:', position.coords.longitude);\r\n        } else {\r\n          console.log('Location permission denied');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error getting location', error);\r\n      }\r\n    },\r\n    async watchLocation() {\r\n      const wait = await Geolocation.watchPosition({}, (position, error) => {\r\n        if (error) {\r\n          console.error('Error watching location', error);\r\n          return;\r\n        }\r\n        console.log('Latitude:', position.coords.latitude);\r\n        console.log('Longitude:', position.coords.longitude);\r\n      });\r\n\r\n      // To stop watching the location\r\n      // Geolocation.clearWatch({ id: wait });\r\n    },\r\n    loadGoogleMapsScript() {\r\n      return new Promise((resolve) => {\r\n        if (window.google && window.google.maps && google.maps.geometry) {\r\n          resolve();\r\n        } else {\r\n          window.initMap = () => resolve();\r\n          const script = document.createElement(\"script\");\r\n          script.src =\r\n              `https://maps.googleapis.com/maps/api/js?key=${process.env.VUE_APP_MAP_KEY}&libraries=places,geometry&v=beta&callback=initMap`\r\n          script.async = true;\r\n          script.defer = true;\r\n          document.head.appendChild(script);\r\n        }\r\n      });\r\n      },\r\n    setUserPlace (currentId) {\r\n      const input = document.getElementById(currentId);\r\n\r\n\r\n      const center = { lat: 50.064192, lng: -130.605469 };\r\n      const defaultBounds = {\r\n        north: center.lat + 0.1,\r\n        south: center.lat - 0.1,\r\n        east: center.lng + 0.1,\r\n        west: center.lng - 0.1,\r\n      };\r\n      const options = {\r\n        bounds: defaultBounds,\r\n        componentRestrictions: { country: \"fi\" },\r\n        fields: [\"address_components\", \"geometry\", \"icon\", \"name\", \"formatted_address\"],\r\n        strictBounds: false,\r\n        //types: [\"establishment\"],\r\n      };\r\n\r\n      const autocomplete = client.places.Autocomplete(input, options);\r\n\r\n      autocomplete.addListener(\"place_changed\", () => {\r\n        let place = autocomplete.getPlace()\r\n        this.myLat = place.geometry.location.lat();\r\n        this.myLng = place.geometry.location.lng();\r\n        this.isNoAddressGiven = true;\r\n        this.getAddressFrom(place.geometry.location.lat(), place.geometry.location.lng())\r\n        this.address = place.formatted_address;\r\n        // console.log(\"Address xxxx \" + place.formatted_address)\r\n        // console.log(\"place-----------\" + this.myLat)\r\n      });\r\n    },\r\n    clearOrderAddress () {\r\n      this.address = null;\r\n    },\r\n\r\n    handleCloseMapFeedbackList () {\r\n      this.isShowRatingResults = false;\r\n    },\r\n    puhasta () {\r\n      console.log(\"Puhastatud\")\r\n      //window.localStorage.removeItem('mapSearchProData');\r\n    },\r\n    removeDateIfExist () {\r\n      console.log(\"Clicked, functioning\");\r\n      console.log(\"IS now`` \" + this.isSelectNotNow)\r\n      if (this.isSelectNotNow) {\r\n        this.bookingDate = null;\r\n      } else {\r\n        this.bookingDate = new Date();\r\n      }\r\n\r\n      // if (this.bookingDate && !this.isSelectNow) {\r\n      //   this.bookingDate = new Date();\r\n      // }\r\n    },\r\n    async handleDate (date) {\r\n      console.log(\"Date handled!\" + date);\r\n      if (date) {\r\n        this.isSelectNotNow = false;\r\n      }\r\n      if (this.stateActive) {\r\n        const providers = await providerService.getProviders()\r\n        if (providers !== null) {\r\n          //this.otherUserLocations(providers, this.currentProfession, this.distBtw);\r\n        }\r\n      }\r\n    },\r\n    // handleInternalDate () {\r\n    //   console.log(\"InternalDate!!!\")\r\n    // },\r\n    /*isNoDate () {\r\n      console.log(\"No date\")\r\n    },*/\r\n    changedProfession () {\r\n      console.log(\"Changed \" + this.prof.label);\r\n      this.showClientLocationOnTheMap(this.prof.label, this.distBtw);\r\n      this.currentProfession = this.prof.label;\r\n      this.isDistSelection = true;\r\n    },\r\n    selectUser(user) {\r\n      this.$emit('select:user', user);\r\n      //if (!user.self)\r\n      //this.selectedUser = user;\r\n    },\r\n\r\n    noSelectUser () {\r\n      this.$emit(\"noSelected\");\r\n    },\r\n    onMessage(content, blob, date) {\r\n\r\n      this.$emit(\"on:message\", content, blob, date);\r\n\r\n    },\r\n    resizeMap() {\r\n      var myMap = document.getElementById('map');\r\n      myMap.style.height = \"100%\";\r\n      myMap.style.width = \"100%\";\r\n    },\r\n    receive (){\r\n      this.$router.push('/rf')\r\n      //this.$router.push('recipient-form');\r\n\r\n    },\r\n    userCurrentLocation () {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          const { latitude, longitude } = position.coords;\r\n          // Show a map centered at latitude / longitude.\r\n          this.myLat = latitude\r\n          this.myLng = longitude\r\n          console.log(\"myLat \" + latitude)\r\n          this.showUserLocationOnTheMap (latitude, longitude)\r\n        });\r\n      }\r\n\r\n    },\r\n\r\n    pinSymbol(color, stroke_color) {\r\n      const priceTag = document.createElement(\"div\");\r\n\r\n      priceTag.className = \"price-tag\";\r\n      priceTag.textContent = \"$2.5M\";\r\n      return {\r\n        path: 'M 0,0 C -2,-20 -10,-22 -10,-30 A 10,10 0 1,1 10,-30 C 10,-22 2,-20 0,0 z',\r\n        fillColor: color,\r\n        fillOpacity: 1,\r\n        strokeColor: stroke_color,\r\n        strokeWeight: 2,\r\n        scale: 1,\r\n        labelOrigin: {\r\n          x: 60,\r\n          y: -25\r\n        }\r\n      };\r\n    },\r\n    // Kasutaja sihtkoht, otsitakse automaatselt\r\n    showUserLocationOnTheMap (latitude, longitude) {\r\n      //const client = new Client({});\r\n      try {\r\n        new google.maps.Map(document.getElementById(\"map\"), {\r\n          zoom: 13,\r\n          center: new google.maps.LatLng(latitude, longitude),\r\n          mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n          accuracy: 50,\r\n\r\n        });\r\n      } catch(err) {\r\n        console.log(\"Error to load map: \" + err.message);\r\n      }\r\n\r\n\r\n      // new google.maps.Marker({\r\n      //   position: new google.maps.LatLng(latitude, longitude),\r\n      //   accuracy: 50,\r\n      //   map: map,\r\n      //   icon: this.pinSymbol('yellow'),\r\n      //   label: { color: '#00aaff', fontWeight: 'bold', fontSize: '14px', text: 'Olen tällä' }\r\n      // })\r\n      this.getAddressFrom (latitude, longitude)\r\n    },\r\n    // Siis kui sisestada käsitsi aadress\r\n    getAddressFrom (lat, long) {\r\n      //const client = new Client({});\r\n      axios.get('https://maps.googleapis.com/maps/api/geocode/json?latlng=' + lat +\r\n          \",\" + long\r\n          + \"&key=\" + process.env.VUE_APP_MAP_KEY)\r\n          .then(response => {\r\n            if (response.data.error_message) {\r\n              this.error = response.data.error_message;\r\n\r\n              console.log(response.data.error_message)\r\n            } else {\r\n              const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n                zoom: 13,\r\n                center: new google.maps.LatLng(lat, long),\r\n                mapTypeId: google.maps.MapTypeId.ROADMAP\r\n              });\r\n\r\n              // AIzaSyBDA2EBoGezJx51wQtxoW3Ecq5Ql8CCAiE\r\n\r\n              this.address = response.data.results[1].formatted_address\r\n            }\r\n\r\n          })\r\n          .catch(error => {\r\n            this.error = error.message\r\n            console.log(error.message)\r\n          })\r\n    },\r\n\r\n    distanceBtw (originLat, originLng, destLat, destLng) {\r\n      // let distance = null;\r\n      //\r\n      // this.loadGoogleMapsScript().then(() => {\r\n      //\r\n      //   const origin = new google.maps.LatLng(originLat, originLng);\r\n      //   const destination = new google.maps.LatLng(destLat, destLng);\r\n      //\r\n      //   distance = (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 100).toFixed(2) ;\r\n      //   console.log(\"Distance (km):\", (distance / 1000).toFixed(2));\r\n      // });\r\n      // return distance;\r\n      var origin = new google.maps.LatLng(originLat, originLng);\r\n      var destination = new google.maps.LatLng(destLat, destLng);\r\n      return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\r\n    },\r\n\r\n    findSuitablePro () {\r\n      if (this.address) {\r\n        this.isPressedFindBtn = true;\r\n        this.showClientLocationOnTheMap(this.currentProfession, this.distBtw);\r\n      } else {\r\n        console.log(\"No address given!\");\r\n        this.isNoAddressGiven = false;\r\n      }\r\n\r\n    },\r\n\r\n    datetimeFitting (to) {\r\n      let date;\r\n\r\n      if (this.bookingDate) {\r\n        let year = this.bookingDate.getFullYear();\r\n        let month = this.bookingDate.getMonth();\r\n        let day = this.bookingDate.getDate();\r\n        let hour = this.bookingDate.getHours();\r\n        let minute = this.bookingDate.getMinutes();\r\n\r\n        console.log(\"Booking date 2 \" + new Date(year, month, day, hour, minute));\r\n        date = new Date(year, month, day, hour, minute);\r\n      }\r\n\r\n      return this.datetime.providerMatchingForClient(\r\n          date,\r\n          {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\r\n          {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\r\n      )\r\n    },\r\n\r\n    async otherUserLocations (providers, profession, dist) {\r\n      //const client = new Client({});\r\n      let prev_infowindow = false;\r\n\r\n      let map = new google.maps.Map(document.getElementById(\"map\"), {\r\n        zoom: 9,\r\n        center: new google.maps.LatLng(this.myLat, this.myLng),\r\n        mapTypeId: google.maps.MapTypeId.ROADMAP\r\n      });\r\n      console.log(\"Users count: \" + providers.length)\r\n      console.log(\"Current distance \" + dist)\r\n      let date;\r\n      if (this.bookingDate) {\r\n        let year = this.bookingDate.getFullYear();\r\n        let month = this.bookingDate.getMonth();\r\n        let day = this.bookingDate.getDate();\r\n        let hour = this.bookingDate.getHours();\r\n        let minute = this.bookingDate.getMinutes();\r\n\r\n        console.log(\"Booking date 2 \" + new Date(year, month, day, hour, minute));\r\n        date = new Date(year, month, day, hour, minute);\r\n      }\r\n\r\n       // new google.maps.Marker({\r\n       //   position: new google.maps.LatLng(this.myLat, this.myLng),\r\n       //   accuracy: 50,\r\n       //   map: map,\r\n       //   icon: this.pinSymbol('yellow'),\r\n       //   label: { color: '#00aaff', fontWeight: 'bold', fontSize: '14px', text: 'Olen tällä' }\r\n       // })\r\n      let count = 0;\r\n\r\n      if (providers.length > 0) {\r\n        this.target = {};\r\n\r\n        for (let pos = 0; pos < providers.length; pos++) {\r\n          console.log(\"------------ \" + providers[pos].yritys);\r\n          //console.log(\"Client latitude: \" + recipient[pos].latitude)\r\n          //console.log(\"Client longitude: \" + recipient[pos].longitude)\r\n          let myLatLong = [this.myLat, this.myLng];\r\n\r\n          providers[pos].profession.forEach(prof => {\r\n            if (prof === profession) {\r\n\r\n\r\n\r\n              //his.providers.push(providers[pos])\r\n              console.log(\"Pro \" + prof.yritys)\r\n              let providerLatLng = [providers[pos].latitude, providers[pos].longitude];\r\n              console.log(\"Distance btw \" + this.distanceBtw(this.myLat, this.myLng, providers[pos].latitude, providers[pos].longitude));\r\n\r\n              //distance.theDist()\r\n\r\n              //this.countOfSelectedClient++;\r\n              this.isActiveProffs = true;\r\n\r\n              if (this.distanceBtw(this.myLat, this.myLng, providers[pos].latitude, providers[pos].longitude) <= dist) {\r\n                count ++;\r\n\r\n                let marker;\r\n                // if (providers[pos].isAvailable24_7) {\r\n                //   console.log(\"Yes it is availblr\")\r\n                //   marker = new google.maps.Marker({\r\n                //     position: new google.maps.LatLng(providers[pos].latitude, providers[pos].longitude),\r\n                //     accuracy: 50,\r\n                //     map: map,\r\n                //     title: providers[pos].yritys,\r\n                //     icon: this.pinSymbol('green'),\r\n                //     label: { color: '#79f759',  fontWeight: 'bold', fontSize: '14px', text: \"Saatavilla!\"}\r\n                //   })\r\n                // }\r\n\r\n                // text: \"Saatavilla!\"\r\n                if (providers[pos].isAvailable24_7) {\r\n                  marker = new google.maps.Marker({\r\n                    position: new google.maps.LatLng(providers[pos].latitude, providers[pos].longitude),\r\n                    accuracy: 50,\r\n                    map: map,\r\n                    title: providers[pos].yritys,\r\n                    icon: this.pinSymbol('seagreen', 'darkgreen'),\r\n                    label: { color: 'green',  fontWeight: 'bold', fontSize: '14px', }\r\n                  })\r\n                } else {\r\n                  if (providers[pos].timeoffer.length > 0) {\r\n                    providers[pos].timeoffer.map(time => {\r\n                      console.log(\"Year: \" + time.yearFrom)\r\n                      console.log(\"Fitting datetime: \" +\r\n                          this.datetime.providerMatchingForClient(\r\n                              date,\r\n                              {y: time.yearFrom, m: time.monthFrom, d: time.dayFrom, hour: time.hoursFrom, min: time.minutesFrom},\r\n                              {y: time.yearTo, m: time.monthTo, d: time.dayTo, hour: time.hoursTo, min: time.minutesTo}\r\n                          )\r\n\r\n                      )\r\n\r\n\r\n                      if (this.datetime.providerMatchingForClient(\r\n                          date,\r\n                          {y: time.yearFrom, m: time.monthFrom, d: time.dayFrom, hour: time.hoursFrom, min: time.minutesFrom},\r\n                          {y: time.yearTo, m: time.monthTo, d: time.dayTo, hour: time.hoursTo, min: time.minutesTo}\r\n                      ) || providers[pos].isAvailable24_7) {\r\n\r\n                        marker = new google.maps.Marker({\r\n                          position: new google.maps.LatLng(providers[pos].latitude, providers[pos].longitude),\r\n                          accuracy: 50,\r\n                          map: map,\r\n                          title: providers[pos].yritys,\r\n                          icon: this.pinSymbol('seagreen', 'darkgreen'),\r\n                          //label: { color: '#79f759',  fontWeight: 'bold', fontSize: '14px', text: \"Saatavilla!\"}\r\n                        })\r\n                      } else {\r\n\r\n                        marker = new google.maps.Marker({\r\n                          position: new google.maps.LatLng(providers[pos].latitude, providers[pos].longitude),\r\n                          accuracy: 50,\r\n                          map: map,\r\n                          title: providers[pos].yritys,\r\n                          icon: this.pinSymbol('orange', 'darkorange'),\r\n                          //label: { color: '#f79859',  fontWeight: 'bold', fontSize: '14px', text: \"Sovitaessa!\"}\r\n                        })\r\n\r\n                      }\r\n                    })\r\n                  } else {\r\n                    marker = new google.maps.Marker({\r\n                      position: new google.maps.LatLng(providers[pos].latitude, providers[pos].longitude),\r\n                      accuracy: 50,\r\n                      map: map,\r\n                      title: providers[pos].yritys,\r\n                      icon: this.pinSymbol('orange', 'darkorange'),\r\n                      //label: { color: '#f79859',  fontWeight: 'bold', fontSize: '14px', text: \"Sovitaessa!\"}\r\n                    })\r\n                  }\r\n                }\r\n\r\n\r\n\r\n                window.myGlobalFunction = this.openMarker;\r\n\r\n                const content = \"class='map-info-window'\"\r\n\r\n                const infowindow = new google.maps.InfoWindow({\r\n                  //content: \"Hei hei!\"\r\n                  //content:'<p id=\"map-info-window\">Hello World!</p>'\r\n                  //content: \"TMI: \" + providers[pos].yritys\r\n                });\r\n\r\n                google.maps.event.addListener(marker, 'click', function() {\r\n                  //infowindow.setContent(content);\r\n\r\n\r\n                  console.log(\"POOOOS \" + pos)\r\n                  let p = pos\r\n\r\n                  if( prev_infowindow ) {\r\n                    prev_infowindow.close();\r\n                  }\r\n\r\n                  prev_infowindow = infowindow;\r\n\r\n\r\n                  infowindow.open(map,marker);\r\n\r\n                  //infowindow.setContent(\"<div  class='map-info-window'>\" + '<p style=\"color: green; \">'+providers[pos].yritys+'</p>' + '<p style=\"color: red; \" onclick=\"myGlobalFunction('+ p +' )\">Tiedot</p>' + \"</div>\")\r\n                  infowindow.setContent(\"<div  \" +\r\n                      \"class='map-info-window'>\" +\r\n                      '<p style=\"color: green; \">'+\r\n                      providers[pos].yritys+'</p>' +\r\n                      '<p style=\"color: red; \" ' +\r\n                      'onclick=\"myGlobalFunction('+ p +' )\"' +\r\n                      '>Tiedot' +\r\n                      '</p>' +\r\n                      \"</div>\")\r\n                });\r\n\r\n                console.log(\"Prev infowondow \" + prev_infowindow)\r\n\r\n              }\r\n\r\n            }\r\n          })\r\n\r\n        }\r\n\r\n\r\n        if (count > 0) {\r\n          this.isActiveProffs = true;\r\n          this.isMainPanel = false;\r\n\r\n        } else {\r\n          this.isActiveProffs = false;\r\n        }\r\n        this.countOfSelectedProfessional = count;\r\n        console.log(\"countxx \" + count)\r\n        this.identifyProfText();\r\n        //console.log(\"Count \" + this.countOfSelectedClients)\r\n\r\n      }\r\n\r\n    },\r\n\r\n    handleInitChat (isActive, bookingId, counter, isCounter) {\r\n      if (this.target.user.username !== this.username) {\r\n        const room = this.target.yritys + this.username;\r\n        //console.log(\"Username in map: \" + this.target.user.username);\r\n        //console.log(\"Room in map \" + this.room);\r\n\r\n        const createChatRoom = {\r\n          status: \"map\",\r\n          useCounter: isCounter,\r\n          isActive: isActive,\r\n          bookingID: bookingId,\r\n          same_room_counter: counter,\r\n          isOnline: true,\r\n          room: this.room,\r\n          pro: this.target.yritys,\r\n          username: this.username,\r\n          bookerUsername: this.username,\r\n          bookerID: this.userId,\r\n          providerUsername: this.target.user.username,\r\n          providerID: this.target.user.id\r\n        }\r\n        const chatCredentials = {\r\n          useCounter: isCounter,\r\n          isActive: isActive,\r\n          bookingID: bookingId,\r\n          same_room_counter: counter,\r\n          room: this.room,\r\n          proID: this.target.user.id,\r\n          pro: this.target.yritys,\r\n          // userID: this.target.user.id,\r\n          // username: this.target.user.username\r\n          userID: this.userId,\r\n          username:this.username\r\n        }\r\n        //this.$emit(\"chatCredentials\", chatCredentials);\r\n\r\n        this.$emit(\"initializeChat\", {\r\n          initChatRoom: createChatRoom,\r\n          chatData: chatCredentials\r\n        });\r\n\r\n      }\r\n    },\r\n\r\n    createChatPanel () {\r\n      // if (this.target.user.username !== this.username) {\r\n      //   const room = this.target.yritys + this.username;\r\n      //   console.log(\"Username in map: \" + this.target.user.username);\r\n      //   console.log(\"Room in map \" + this.room);\r\n      //   // Room users in server will be created\r\n      //   socket.emit(\"create room users\", {\r\n      //     room: this.room,\r\n      //     pro: this.target.yritys,\r\n      //     status: \"map\",\r\n      //     username: this.username,\r\n      //     providerUsername: this.target.user.username,\r\n      //     providerID: this.target.user.id\r\n      //   })\r\n      //   const chatCredentials = {\r\n      //     room: this.room,\r\n      //     userID: this.target.user.id,\r\n      //     username: this.target.user.username\r\n      //   }\r\n      //   this.$emit(\"chatCredentials\", chatCredentials);\r\n      // }\r\n      this.handleInitChat(false, \"0\", 0, true);\r\n      this.isMapChat = true\r\n    },\r\n\r\n    async openMarker (p) {\r\n      console.log(\"Booking date \" + new Date(this.bookingDate));\r\n      const d = this.bookingDate;\r\n\r\n\r\n      //this.noSelectUser();\r\n      //console.log(\"Profession \" + this.currentProfession);\r\n      console.log(\"Pro profession \" )\r\n      const pro = [this.currentProfession]\r\n      // if (this.target.user.username !== this.username) {\r\n      //   this.room = this.target.yritys + this.username;\r\n      // }\r\n\r\n\r\n      const providersMatchingProSearch = await providerService.getProvidersMatchingByProfession({result: pro});\r\n\r\n      let dataForward = [];\r\n\r\n      providersMatchingProSearch.forEach(pms => {\r\n\r\n        console.log(\"Results: \" + pms.user.id);\r\n        let distance = parseInt(this.distanceBtw(this.myLat, this.myLng, pms.latitude, pms.longitude)).toFixed(0)\r\n        console.log(\"Distance to display \" + distance);\r\n        dataForward = dataForward.concat({\r\n          id: pms.user.id,\r\n          dist: distance,\r\n          pro: this.currentProfession\r\n        })\r\n      })\r\n\r\n      socket.emit(\"map search report\", dataForward);\r\n\r\n      const providers = await providerService.getProviders()\r\n      if (providers) {\r\n        //console.log(\"watcher position \" + this.myLat + \" / \" + this.myLng);\r\n        if (providers[p].user.username !== this.username) {\r\n          this.isCreatingChatPanel = true\r\n        }\r\n\r\n        console.log(\"Room in client map: \" + this.room);\r\n\r\n        this.target = providers[p];\r\n        //window.localStorage.setItem('mapSearchProData', JSON.stringify(p));\r\n        if (this.username) {\r\n          this.room = this.target.yritys + this.username;\r\n        } else {\r\n          this.room = \"nipitiri\";\r\n        }\r\n        this.isTargetSelected = true;\r\n        //console.log(\"Pooooos ---- \" + p);\r\n        //this.otherUserLocations(providers, this.currentProfession, this.distBtw)\r\n      }\r\n\r\n    },\r\n    createBooking () {\r\n      console.log(\"Here you can make an order! \" + this.address)\r\n      if (this.isSelectNotNow) {\r\n        this.bookingDate = null;\r\n      }\r\n      this.isOrder = true;\r\n    },\r\n\r\n\r\n    async confirmOrder () {\r\n      //console.log(\"Order, target id \" + this.target.id);\r\n      if (this.isOrderBtnClicked) return;\r\n\r\n      this.isOrderBtnClicked = true;\r\n      this.isCompleteOrder = true;\r\n      let recipient = null;\r\n\r\n      if (this.orderHeader !== \"\" && this.bookingDate !== null && this.orderDescription !== \"\") {\r\n        if (this.bookingDate) {\r\n          let year = this.bookingDate.getFullYear();\r\n          let month = this.bookingDate.getMonth();\r\n          let day = this.bookingDate.getDate();\r\n          let hour = this.bookingDate.getHours();\r\n          let minute = this.bookingDate.getMinutes();\r\n          const dateForMs = new Date(year, month, day, hour, minute).getTime();\r\n\r\n          recipient = {\r\n            created: this.bookingDate,\r\n            created_ms: dateForMs,\r\n            header: this.orderHeader,\r\n            address: this.address,\r\n            latitude: this.myLat,\r\n            longitude: this.myLng,\r\n            professional: this.currentProfession,\r\n            isIncludeOffers: false,\r\n            year: this.bookingDate.getFullYear(),\r\n            month: this.bookingDate.getMonth(),\r\n            day: this.bookingDate.getDate(),\r\n            hours: this.bookingDate.getHours(),\r\n            minutes: this.bookingDate.getMinutes(),\r\n            description: this.orderDescription,\r\n            status: \"notSeen\",\r\n            ordered: this.target.id\r\n          }\r\n        }\r\n\r\n        console.log(\"Address: \" + this.address);\r\n        const booking = await recipientService.addRecipient(this.userId, recipient)\r\n\r\n\r\n        const proBooking = await recipientService.getBookingById(booking.id);\r\n        await recipientService.addProviderData(booking.id, this.target.id);\r\n        const bookingToProvider = await providerService.addProviderBooking(this.target.id, booking.id);\r\n        if (recipient && bookingToProvider === \"Recipient is added!\") {\r\n          console.log(\"Iiiiisss \" + (this.target.yritys + this.username))\r\n          const room = this.target.yritys + this.username;\r\n          const chatUserDataNavbar = {\r\n            status: \"\",\r\n            userID: this.target.user.id,\r\n            name: this.target.user.username,\r\n            room: room\r\n          };\r\n\r\n          const id = this.target.user.id;\r\n          await this.$emit('booking_map:update', booking)\r\n          await socket.emit(\"accept provider\", {\r\n            id,\r\n            booking: proBooking,\r\n          })\r\n\r\n          recipient = null;\r\n\r\n        } else {\r\n          console.log(\"There is error to load recipient!\")\r\n        }\r\n\r\n        this.$router.push('/received')\r\n      } else {\r\n        console.log(\"Not all requied credentials are setted!\")\r\n      }\r\n\r\n\r\n    },\r\n\r\n    async outFromMarkerPanel () {\r\n      this.isTargetSelected = false\r\n      //this.isMainPanel = true;\r\n      this.noSelectUser();\r\n      //window.localStorage.removeItem('mapSearchProData');\r\n      const providers = await providerService.getProviders()\r\n      if (providers !== null) {\r\n        this.otherUserLocations(providers, this.currentProfession, this.distBtw);\r\n      }\r\n    },\r\n\r\n    closeMapChat () {\r\n      this.isMapChat = false\r\n    },\r\n\r\n    async returnToMainPanel () {\r\n      this.isMainPanel = true;\r\n      this.bookingDate = null;\r\n      this.isSelectNotNow = false;\r\n      this.distBtw = 0;\r\n      await this.showClientLocationOnTheMap(this.currentProfession, this.distBtw);\r\n      this.isPressedFindBtn = false;\r\n\r\n      //window.localStorage.removeItem('mapSearchData')\r\n      this.noSelectUser();\r\n\r\n      // const providers = await providerService.getProviders()\r\n      // if (providers !== null) {\r\n      //   this.otherUserLocations(providers, \"\", \"\");\r\n      // }\r\n      //this.currentProfession = \"\"\r\n      // this.prof = \"\";\r\n      // this.distBtw = 0\r\n    },\r\n\r\n    closeMainPanel () {\r\n      this.isMainPanel = false;\r\n      this.noSelectUser();\r\n      console.log(\"Close main panel\")\r\n    },\r\n\r\n    // renderClients (event) {\r\n    //   console.log(\"Event value \" + event.target.value)\r\n    //   //this.countOfSelectedClients = 0;\r\n    //\r\n    //   if (event.target.value) {\r\n    //     // @click=\"renderClients($event)\"\r\n    //     this.showClientLocationOnTheMap(event.target.value)\r\n    //\r\n    //   }\r\n    //   this.prof = event.target.value\r\n    //\r\n    //   event.target.value = \"\"\r\n    //\r\n    // },\r\n\r\n\r\n    async showClientLocationOnTheMap (profession, dist) {\r\n\r\n      console.log(\"Current distance herexx  \" + dist)\r\n      const providers = await providerService.getProviders()\r\n      if (providers !== null) {\r\n        if (!window.google) {\r\n          this.otherUserLocations(providers, profession, dist);\r\n        } else {\r\n          this.otherUserLocations(providers, profession, dist);\r\n        }\r\n\r\n      }\r\n\r\n    },\r\n    identifyProfText () {\r\n      if (this.countOfSelectedProfessional > 1) {\r\n        this.professional = \"ammattilaista\"\r\n      } else {\r\n        this.professional = \"ammattilainen\"\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.custom-input input {\r\n  color: pink !important;\r\n  border: 2px solid red !important;\r\n}\r\n.ui.button,\r\n.dot.circle {\r\n  background-color: #ff5a5f;\r\n  color: white;\r\n}\r\n\r\n.distSelectPanel {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n\r\n\r\n.pac-icon {\r\n  display: none;\r\n}\r\n.pac-item {\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n.pac-item:hover {\r\n  background-color: #ececec;\r\n}\r\n.pac-item-query {\r\n  font-size: 16px;\r\n}\r\n.spinner-border {\r\n\r\n}\r\n\r\n.client-map-panel {\r\n  background-color: #2b2a2a;\r\n  padding: 10px;\r\n  margin: auto;\r\n  width: 30%;\r\n  float: right;\r\n}\r\n\r\n\r\n#map {\r\n  background:  url(/src/assets/map.gif)  no-repeat center center;\r\n\r\n}\r\n\r\n#map {\r\n   position: absolute;\r\n\r\n  /*height: 500px; !* The height is 400 pixels *!*/\r\n  /*width: 100%; !* The width is the width of the web page *!*/\r\n\r\n   top: 120px;\r\n   right: 0;\r\n   bottom: 20px;\r\n   left: 0;\r\n }\r\n\r\n.map-info-window {\r\n  /*width: 200px;*/\r\n\r\n}\r\n\r\n#address-panel {\r\n  margin-top: 10px;\r\n}\r\n\r\n@media only screen and (max-width: 500px) {\r\n  .hideFeedbackTitle {\r\n    display: none !important;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 1000px) {\r\n  #address-panel {\r\n    display: none !important;\r\n  }\r\n  .client-map-panel {\r\n    background-color: #2b2a2a;\r\n    padding: 10px;\r\n    margin: auto;\r\n    width: 80%;\r\n    float: none;\r\n  }\r\n}\r\n\r\n.activeClients {\r\n  display: none !important;\r\n}\r\n.noClients {\r\n  display: none !important;\r\n}\r\n.hideDistSelectPanel {\r\n  display: none !important;\r\n}\r\n.hideMainPanel {\r\n  display: none !important;\r\n}\r\nh3 {\r\n  padding: 10px;\r\n  color: #0095ff;\r\n}\r\n.minmax-icon {\r\n  padding: 12px;\r\n}\r\n\r\n.map-info-table  td {\r\n  border: 1px solid lightgrey;\r\n  padding: 5px;\r\n}\r\n\r\n.order{\r\n  color:#dddddd;\r\n\r\n  /*background-color:rgba(255, 0, 0, 0.5);*/\r\n  /*background-color:#221a16;*/\r\n  background-color: #434240;\r\n  /*opacity: 0.2  ;*/\r\n  /*height:300px;*/\r\n  width:90%;\r\n  margin: auto;\r\n  padding: 14px;\r\n  /*display:flex;*/\r\n  /*align-items:center;*/\r\n  /*justify-content:center;*/\r\n\r\n\r\n  /*top: 50vh; left: 50vw; transform: translate(-50%, -50%);*/\r\n  /*top: 50vh; left: 50vw; transform: translate(-50%, -50%);*/\r\n  position:relative;\r\n  /*bottom:5px;*/\r\n  /*right:5px;*/\r\n}\r\n\r\n</style>","function s(t) {\n  t.CapacitorUtils.Synapse = new Proxy(\n    {},\n    {\n      get(e, o) {\n        return new Proxy({}, {\n          get(w, r) {\n            return (c, p, n) => {\n              const i = t.Capacitor.Plugins[o];\n              if (i === void 0) {\n                n(new Error(`Capacitor plugin ${o} not found`));\n                return;\n              }\n              if (typeof i[r] != \"function\") {\n                n(new Error(`Method ${r} not found in Capacitor plugin ${o}`));\n                return;\n              }\n              (async () => {\n                try {\n                  const a = await i[r](c);\n                  p(a);\n                } catch (a) {\n                  n(a);\n                }\n              })();\n            };\n          }\n        });\n      }\n    }\n  );\n}\nfunction u(t) {\n  t.CapacitorUtils.Synapse = new Proxy(\n    {},\n    {\n      get(e, o) {\n        return t.cordova.plugins[o];\n      }\n    }\n  );\n}\nfunction y(t = !1) {\n  window.CapacitorUtils = window.CapacitorUtils || {}, window.Capacitor !== void 0 && !t ? s(window) : window.cordova !== void 0 && u(window);\n}\nexport {\n  y as exposeSynapse\n};\n","import { registerPlugin } from '@capacitor/core';\nimport { exposeSynapse } from '@capacitor/synapse';\n\nimport type { GeolocationPlugin } from './definitions';\n\nconst Geolocation = registerPlugin<GeolocationPlugin>('Geolocation', {\n  web: () => import('./web').then((m) => new m.GeolocationWeb()),\n});\n\nexposeSynapse();\n\nexport * from './definitions';\nexport { Geolocation };\n","import { render } from \"./RecipientPublic.vue?vue&type=template&id=5065c12a\"\nimport script from \"./RecipientPublic.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPublic.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPublic.vue?vue&type=style&index=0&id=5065c12a&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <MDBContainer>\r\n    <div >\r\n      <span\r\n          v-for=\"(star, index) in stars\"\r\n          :key=\"index\"\r\n          class=\"starGap\"\r\n          :class=\"['star', { full: star === 'full', half: star === 'half' }]\"\r\n      >\r\n        <span v-if=\"star === 'full'\" class=\"full-star\">★</span>\r\n        <span v-else-if=\"star === 'half'\" class=\"half-star  \">★</span>\r\n        <span v-else class=\"star\">★</span>\r\n\r\n\r\n      </span>\r\n    </div>\r\n  </MDBContainer>\r\n</template>\r\n\r\n<script>\r\nimport { MDBContainer } from 'mdb-vue-ui-kit';\r\nexport default {\r\n  name: \"RatingStars\",\r\n  props: {\r\n    rating: Number\r\n  },\r\n  components: {\r\n    MDBContainer\r\n  },\r\n  data () {\r\n    return {\r\n      // rating: 1.2\r\n    }\r\n  },\r\n  computed: {\r\n    stars() {\r\n      let starsArray = [];\r\n      let fullStars = Math.floor(this.rating);\r\n      let hasHalfStar = this.rating % 1 >= 0.1;\r\n\r\n      for (let i = 0; i < fullStars; i++) {\r\n        starsArray.push(\"full\");\r\n      }\r\n      if (hasHalfStar) {\r\n        starsArray.push(\"half\");\r\n      }\r\n      while (starsArray.length < 5) {\r\n        starsArray.push(\"empty\");\r\n      }\r\n\r\n      return starsArray;\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.full-star {\r\n  font-size: 37px;\r\n  color: yellow;\r\n\r\n}\r\n.half-star {\r\n  font-size: 37px;\r\n  background: linear-gradient(to right, yellow 50%, darkgrey 50%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  display: inline-block;\r\n}\r\n.star {\r\n  font-size: 37px;\r\n  color: darkgrey;\r\n  display: inline-block;\r\n}\r\n.starGap {\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n}\r\n\r\n@media (max-width: 530px) {\r\n  .full-star {\r\n    font-size: 24px;\r\n    color: yellow;\r\n    display: inline-block;\r\n  }\r\n  .half-star {\r\n    font-size: 24px;\r\n    background: linear-gradient(to right, yellow 50%, darkgrey 50%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    display: inline-block;\r\n  }\r\n  .star {\r\n    font-size: 24px;\r\n    color: darkgrey;\r\n    display: inline-block;\r\n  }\r\n  .starGap {\r\n    display: inline-block;\r\n    margin-right: 7px;\r\n  }\r\n}\r\n@media(max-width: 440px) {\r\n  .starGap {\r\n    display: inline-block;\r\n    margin-right: 3px;\r\n  }\r\n}\r\n@media(max-width: 330px) {\r\n  .full-star {\r\n    font-size: 17px;\r\n    color: yellow;\r\n    display: inline-block;\r\n  }\r\n  .half-star {\r\n    font-size: 17px;\r\n    background: linear-gradient(to right, yellow 50%, darkgrey 50%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    display: inline-block;\r\n  }\r\n  .star {\r\n    font-size: 17px;\r\n    color: darkgrey;\r\n    display: inline-block;\r\n  }\r\n}\r\n\r\n\r\n\r\n/*.stars {*/\r\n/*  text-align: center;*/\r\n/*  display: flex;*/\r\n/*  gap: 10px;*/\r\n/*}*/\r\n\r\n\r\n.stars {\r\n  font-size: 40px;\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n</style>","import { render } from \"./RatingStars.vue?vue&type=template&id=7c73cb5d&scoped=true\"\nimport script from \"./RatingStars.vue?vue&type=script&lang=js\"\nexport * from \"./RatingStars.vue?vue&type=script&lang=js\"\n\nimport \"./RatingStars.vue?vue&type=style&index=0&id=7c73cb5d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7c73cb5d\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"pro-panel-feedback\" >\r\n    <p style=\"text-align: right; cursor: pointer; color: orangered;\" @click=\"$emit('closeFeedbackList')\">Poistu</p>\r\n    <div v-if=\"feedback.length > 0\">\r\n      <div style=\"text-align: left;\" v-for=\"fb in feedback\" :key=\"fb.id\">\r\n        <p style=\"margin-bottom: 10px;\">{{fb.neg ? fb.neg : fb.pos}}</p>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <p>Ei arvostelua vielä!</p>\r\n    </div>\r\n\r\n<!--    <p>{{feedback.length > 0 ? feedback.pos  : \"Ei arvostelua vielä!\"}}</p>-->\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"FeedbackList\",\r\n  props: {\r\n    feedback: Array\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./FeedbackList.vue?vue&type=template&id=33943349\"\nimport script from \"./FeedbackList.vue?vue&type=script&lang=js\"\nexport * from \"./FeedbackList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nconst compare = (rec, prov) => {\n    const receiverDate = new Date(rec.y, rec.m, rec.d, rec.hour, rec.min);\n    const providerDate = new Date(prov.y, prov.m, prov.d, prov.hour, prov.min)\n    return providerDate >= receiverDate;\n}\n\nconst providerMatchingForClient = (re, pFrom, pTo) => {\n    //const rDate = new Date(re.y, re.m, re.d, re.hour, re.min);\n    const pFromDate = new Date(pFrom.y, pFrom.m, pFrom.d, pFrom.hour, pFrom.min);\n    const pToDate = new Date(pTo.y, pTo.m, pTo.d, pTo.hour, pTo.min);\n    return re >= pFromDate && re < pToDate;\n}\nexport default { compare, providerMatchingForClient }"],"names":["style","key","id","value","class","colspan","_createElementBlock","_createVNode","_component_MDBContainer","default","_withCtx","_createElementVNode","_normalizeClass","hideMainPanel","$data","isMainPanel","_hoisted_1","_component_MDBIcon","size","onClick","$options","closeMainPanel","_cache","_","_component_MDBBtnClose","white","$event","_ctx","$router","go","isNoAddressGiven","_createCommentVNode","_hoisted_2","_hoisted_3","_component_MDBInput","inputGroup","label","modelValue","address","wrapperClass","_createBlock","clearOrderAddress","_hoisted_4","_component_Dropdown","onChange","changedProfession","prof","options","prodata","filter","optionLabel","optionGroupLabel","optionGroupChildren","placeholder","optiongroup","slotProps","_hoisted_8","_toDisplayString","option","_hoisted_5","_hoisted_6","_hoisted_7","hideDistSelectPanel","isDistSelection","_hoisted_9","_component_VueDatePicker","bookingDate","handleDate","dark","Date","onInternalModelChange","handleInternalDate","state","isNoDate","_hoisted_10","_component_MDBCheckbox","name","isSelectNotNow","removeDateIfExist","distBtw","args","filterByDistance","disabled","_component_MDBBtn","color","findSuitablePro","_createTextVNode","isPressedFindBtn","noClients","isActiveProffs","isMapChat","_hoisted_11","closeMapChat","_component_chat_panel","chatusers","$props","messages","selecteduser","selectUser","onNoSelected","noSelectUser","onMessage","isTargetSelected","_hoisted_12","_hoisted_13","outFromMarkerPanel","_component_MDBRow","_component_MDBCol","lg","_hoisted_14","_hoisted_15","target","rating","positive","length","count","src","user","avatar","isImage","imageUrl","require","alt","_hoisted_16","_component_rating_stars","_hoisted_17","description","_component_MDBTable","responsive","borderless","yritys","ytunnus","range","this","priceByHour","feedback","_hoisted_18","hideFeedbackTitle","isShowRatingResults","_hoisted_20","_component_feedback_list","onCloseFeedbackList","handleCloseMapFeedbackList","_hoisted_19","block","pro_link","_hoisted_21","href","_hoisted_22","userId","_hoisted_23","_hoisted_24","createChatPanel","isOrder","_hoisted_25","_hoisted_26","createBooking","_hoisted_27","_hoisted_28","_hoisted_29","isNoOrderLabelAdded","_hoisted_30","orderHeader","isNoOrderDateAdded","_hoisted_31","_hoisted_32","isNoOrderDescriptionAdded","_hoisted_33","_component_MDBTextarea","maxlength","rows","orderDescription","invalidFeedback","validFeedback","_hoisted_34","isOrderBtnClicked","confirmOrder","_hoisted_35","_hoisted_36","returnToMainPanel","_hoisted_37","countOfSelectedProfessional","_hoisted_38","_hoisted_39","_hoisted_40","getDate","getMonth","getHours","getMinutes","s","t","CapacitorUtils","Synapse","Proxy","get","e","o","w","r","c","p","n","i","Capacitor","Plugins","a","Error","u","cordova","plugins","y","window","Geolocation","registerPlugin","web","then","m","GeolocationWeb","exposeSynapse","props","userIsProvider","Object","Array","isProviderLoggedIn","Boolean","components","RatingStars","chatPanel","MDBContainer","MDBInput","MDBBtn","MDBBtnClose","MDBRow","MDBCol","MDBIcon","MDBBadge","MDBTextarea","MDBTable","MDBCheckbox","feedbackList","Dropdown","VueDatePicker","data","isMapReady","obj","stateActive","datetime","dt","isCreatingChatPanel","username","providerId","myLat","mylng","professional","currentProfession","proData","room","isChatPanel","providers","selectedProPosition","orderDate","isCompleteOrder","computed","mounted","loggedUserJSON","localStorage","getItem","JSON","parse","getCurrentLocation","resizeMap","userCurrentLocation","selectDistance","document","getElementById","addEventListener","event","parseFloat","input","center","lat","lng","defaultBounds","north","south","east","west","bounds","componentRestrictions","country","fields","strictBounds","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","geometry","location","myLng","getAddressFrom","formatted_address","console","log","methods","mockLocation","coords","latitude","longitude","permission","requestPermissions","position","getCurrentPosition","timeout","enableHighAccuracy","error","watchLocation","watchPosition","loadGoogleMapsScript","Promise","resolve","initMap","script","createElement","async","defer","head","appendChild","setUserPlace","currentId","client","puhasta","date","providerService","getProviders","showClientLocationOnTheMap","$emit","content","blob","myMap","height","width","receive","push","navigator","geolocation","showUserLocationOnTheMap","pinSymbol","stroke_color","priceTag","className","textContent","path","fillColor","fillOpacity","strokeColor","strokeWeight","scale","labelOrigin","x","Map","zoom","LatLng","mapTypeId","MapTypeId","ROADMAP","accuracy","err","message","long","axios","response","error_message","results","catch","distanceBtw","originLat","originLng","destLat","destLng","origin","destination","spherical","computeDistanceBetween","toFixed","datetimeFitting","to","year","getFullYear","month","day","hour","minute","providerMatchingForClient","yearFrom","monthFrom","d","dayFrom","hoursFrom","min","minutesFrom","yearTo","monthTo","dayTo","hoursTo","minutesTo","otherUserLocations","profession","dist","prev_infowindow","map","pos","forEach","marker","isAvailable24_7","Marker","title","icon","fontWeight","fontSize","timeoffer","time","myGlobalFunction","openMarker","infowindow","InfoWindow","close","open","setContent","identifyProfText","handleInitChat","isActive","bookingId","counter","isCounter","createChatRoom","status","useCounter","bookingID","same_room_counter","isOnline","pro","bookerUsername","bookerID","providerUsername","providerID","chatCredentials","proID","userID","initChatRoom","chatData","providersMatchingProSearch","getProvidersMatchingByProfession","result","dataForward","pms","distance","parseInt","concat","socket","emit","recipient","dateForMs","getTime","created","created_ms","header","isIncludeOffers","hours","minutes","ordered","booking","recipientService","addRecipient","proBooking","getBookingById","addProviderData","bookingToProvider","addProviderBooking","__exports__","render","_Fragment","_renderList","stars","star","index","full","half","Number","starsArray","fullStars","Math","floor","hasHalfStar","fb","neg","compare","rec","prov","receiverDate","providerDate","re","pFrom","pTo","pFromDate","pToDate"],"sourceRoot":""}