{"version":3,"file":"js/831.7c360c29.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/notifications/errorMessage.js","webpack://prore-mongo/./src/service/calendarOffers.js","webpack://prore-mongo/./src/components/Info.vue","webpack://prore-mongo/./src/components/Info.vue?5bb4","webpack://prore-mongo/./src/pages/ProviderPanel.vue","webpack://prore-mongo/./src/components/EditPrice.vue","webpack://prore-mongo/./src/components/EditPrice.vue?37bc","webpack://prore-mongo/./src/components/EditProfession.vue","webpack://prore-mongo/./src/components/EditProfession.vue?2e26","webpack://prore-mongo/./src/pages/ProviderPanel.vue?7004"],"sourcesContent":["const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage","const axios = require('axios');\nconst baseUrl = '/api/offers';\n\nconst getOffers = async () => {\n    const offers = await axios.get(baseUrl);\n    return offers.data;\n}\n\nconst addFirstOffer = async (offer) => {\n    const newOffer = await axios.post(`${baseUrl}`, offer);\n    return newOffer.data;\n}\n\nconst addAdditionalOffer = async (id, offer) => {\n    const additionalOffer = await axios.post(`${baseUrl}/${id}`, offer);\n    return additionalOffer.data;\n}\n\nconst removeTimeOffer = async (providerId, offerId) => {\n    const removedTimeRange = await axios.delete(`${baseUrl}/${providerId}/timeoffer/${offerId}`);\n    return removedTimeRange.data;\n}\n\nconst updateOffer = async (id, timeOffer) => {\n    const updated = await axios.put(`${baseUrl}/${id}`, timeOffer)\n    return updated.data\n}\n\nexport default { getOffers, addFirstOffer, addAdditionalOffer, removeTimeOffer, updateOffer };","<template>\n  <div v-if=\"status === 'for-recipient'\">\n    <div class = \"waiting-info\">\n      <b>{{msg.provider}}</b> -\n      {{msg.header}}\n      <monthConverter :num=\" msg.onTime[0].month\" />, {{msg.onTime[0].day}}, {{msg.onTime[0].year}}\n      kello\n      {{msg.onTime[0].hours}} : {{msg.onTime[0].minutes}}\n    </div>\n\n  </div>\n\n  <div v-else>\n    <div  class=\"info\">\n      <MDBBtnClose\n          class=\"closeConfirmedBooking\"\n          @click=\"handleCloseInfo\"\n      />\n      <div v-if=\"status === 'for-provider'\">\n        <h2><b>{{msg.header}}</b></h2> {{msg.address}}\n        <monthConverter :num=\" msg.onTime[0].month\" />, {{msg.onTime[0].day}}, {{msg.onTime[0].year}}\n        kello\n        {{msg.onTime[0].hours}} : {{msg.onTime[0].minutes}}\n      </div>\n      <div v-else-if=\"status === 'recipient'\">\n        <b>{{msg.provider}}</b> -\n        {{msg.header}}\n        <monthConverter :num=\" msg.onTime[0].month\" />, {{msg.onTime[0].day}}, {{msg.onTime[0].year}}\n        kello\n        {{msg.onTime[0].hours}} : {{msg.onTime[0].minutes}}\n      </div>\n  </div>\n\n\n\n\n\n\n\n\n  </div>\n</template>\n\n<script>\nimport {MDBBtnClose} from 'mdb-vue-ui-kit'\nimport monthConverter from './controllers/month-converter'\nexport default {\n  name: \"Info\",\n  props: {\n    status: String,\n    msg: String\n  },\n  components: {\n    MDBBtnClose,\n    monthConverter\n  },\n  methods: {\n    handleCloseInfo () {\n      this.$emit('close:info')\n    },\n  }\n}\n</script>\n\n<style scoped>\n.info {\n  color: white;\n  background: lightblue;\n  font-size: 20px;\n  border: solid #acbbbc;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n\n}\n.waiting-info {\n  width: 100%;\n  color: grey;\n  background: #f5f532;\n  font-size: 20px;\n  border: solid #acbbbc;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n.closeConfirmedBooking {\n  float: right;\n}\n</style>","import { render } from \"./Info.vue?vue&type=template&id=49920980&scoped=true\"\nimport script from \"./Info.vue?vue&type=script&lang=js\"\nexport * from \"./Info.vue?vue&type=script&lang=js\"\n\nimport \"./Info.vue?vue&type=style&index=0&id=49920980&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-49920980\"]])\n\nexport default __exports__","<template>\n  <div>\n    <h1 style=\"margin-top: 100px; margin-bottom: 50px\">TMI:n hallintapaneeli...</h1>\n\n\n    <info\n        v-for=\"bc in confirmedBookings\" :key=\"bc.id\"\n        status = \"for-provider\"\n        :msg = bc\n        @close:info = closeInfo\n    />\n<!--    <div v-if=\"bookings\">\n      <infoNotification\n          v-for=\"booking in bookings\" :key=\"booking.id\"\n\n          :message = booking.header\n\n      />\n      <MDBBtnClose\n\n      />\n    </div>-->\n<!--    <loading v-model:active=\"visible\" :can-cancel=\"true\"></loading>-->\n    <MDBContainer>\n      <MDBRow >\n        <MDBCol v-if=\"isProviderCalendar\">\n          <MDBContainer>\n            <!--          {{times}}-->\n            <errorNotification\n                :message = timeEditErrorMessage\n            />\n            <successNotification\n                :message = timeEditSuccessMessage\n            />\n            <div v-if=\"isTimeToEdit\">\n              <div  v-for=\"(item, i) in editArr\" :key=\"i\" style=\"border: solid orange; padding-bottom: 20px; padding-top: 20px;margin-bottom: 10px;\">\n                <div style=\"font-size: 16px;\">{{item.weekDay}} - {{item.day}}</div>\n\n                <MDBTable borderless style=\"font-size: 18px; text-align: left;\" >\n                  <tbody >\n                  <tr v-for=\"(time, index) in item.time\" :key=\"index\">\n\n                    <td>\n                      {{times[time.index][0].hours >= 10 ? times[time.index][0].hours : \"0\" + times[time.index][0].hours}} :\n                      {{times[time.index][0].minutes >= 10 ? times[time.index][0].minutes : \"0\" + times[time.index][0].minutes}} -\n                      {{times[time.index][1].hours >= 10 ? times[time.index][1].hours : \"0\" + times[time.index][1].hours}} :\n                      {{times[time.index][1].minutes >= 10 ? times[time.index][1].minutes : \"0\" + times[time.index][1].minutes}}\n                    </td>\n                    <td>\n                      <VueDatePicker v-model=\"times[time.index]\"  time-picker range @update:model-value=\"handleTime\">\n                        <template #trigger>\n                          <MDBIcon class=\"clickable-text\">\n                            <i class=\"fas fa-edit\" size=\"lg\" style=\"cursor: pointer\"></i>\n                          </MDBIcon>\n                        </template>\n                      </VueDatePicker>\n\n                    </td>\n                    <td>\n                      <MDBIcon>\n                        <i class=\"far fa-save\"  size=\"lg\" @click=\"confirmEditedTime(time.timeId)\" style=\"cursor: pointer\"></i>\n                      </MDBIcon>\n                    </td>\n                    <td>\n                      <MDBBtnClose @click=\"delTimeRange(time.timeId)\"/>\n<!--                      <MDBIcon @click=\"delTimeRange(time.timeId)\" style=\"cursor: pointer\">-->\n<!--                        <i class=\"far fa-calendar-times\" size=\"6x\"></i>-->\n<!--                      </MDBIcon>-->\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n\n                    </td>\n                  </tr>\n                  </tbody>\n                </MDBTable>\n                <MDBBtn outline=\"warning\" size=\"lg\" @click=\"isTimeToEdit = false\" style=\"cursor: pointer\">Poistu</MDBBtn>\n              </div>\n            </div>\n\n\n            <VueDatePicker\n                style=\"margin-bottom: 50px; justify-content: center;\"\n                @internal-model-change=\"handleInternal\"\n                range auto-range=\"0\"\n                v-model=\"date\"\n                @update:model-value=\"handleDate\"\n                inline\n                locale=\"fi\" selectText=\"Valitse\"\n                :min-date=\"new Date()\"\n                :markers=\"markers\"\n                :highlight=\"highlightedDates\"\n                teleport-center\n                :month-change-on-scroll=\"false\"\n            >\n\n            </VueDatePicker>\n\n          </MDBContainer>\n\n        </MDBCol>\n        <MDBCol v-if=\"isEditPrice\">\n          <editPrice\n            @cancel:editPrice = cancelEditPrice\n            @save:editedPrice = saveEditedPrice\n          />\n\n        </MDBCol>\n        <MDBCol v-else-if=\"isEditProfession\">\n          <edit-profession\n              :provider = provider\n              @add:profession = handleAddProfession\n              @cancel:editProfession = handleCancelEditProfession\n          />\n        </MDBCol>\n        <MDBCol v-else>\n          <div v-if=\"!provider.profession\" class=\"spinner-border\" role=\"status\">\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n          <div v-else>\n            <h2>{{provider.yritys}}:</h2>\n            <errorNotification\n                :message = errorMessage\n            />\n            <successNotification\n                :message = successMessage\n            />\n\n            <MDBTable borderless style=\"font-size: 18px; text-align: left;\">\n              <tbody>\n              <tr v-if=\"!isProviderCalendar\">\n                <td>\n                  Tarjoan palvelua 24/7\n                </td>\n                <td>\n                  <MDBBtn outline=\"info\" block size=\"lg\" @click=\"isProviderCalendar = true\">Vaihda kalenteriin</MDBBtn>\n                </td>\n              </tr>\n              <tr v-else>\n                <td>\n                  Päätän, koska tarjoan palvelua\n                </td>\n                <td>\n                  <MDBBtn outline=\"info\" block size=\"lg\" @click=\"isProviderCalendar = false\">Vaihda 24/7</MDBBtn>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  {{provider.address}}\n                </td>\n                <td>\n                  <MDBBtn outline=\"info\" block size=\"lg\" @click=\"editAddress\">Muokkaa osoitetta</MDBBtn>\n                </td>\n              </tr>\n              <tr>\n\n                <td>\n                  <div v-for=\"(pro, i) in provider.profession\" :key=\"i\">\n                    {{pro}}\n                  </div>\n\n                </td>\n                <td>\n                  <MDBBtn outline=\"info\" block size=\"lg\" @click=\"editProfessionPro\">Muokkaa osaamista</MDBBtn>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  {{provider.priceByHour}}&nbsp;Euroa\n                </td>\n                <td>\n                  <MDBBtn outline=\"info\" block size=\"lg\" @click=\"editPrice\">Muokkaa tuntihinta</MDBBtn>\n                </td>\n              </tr>\n\n              <!--\n              <tr>\n                <td colspan=\"2\">\n                  <MDBBtn outline=\"info\" block size=\"lg\" @click=\"removeExpiredDateTime\">Remove expired dates</MDBBtn>\n                </td>\n              </tr>\n              -->\n              </tbody>\n            </MDBTable>\n\n          </div>\n\n        </MDBCol>\n      </MDBRow>\n\n      provider {{provider}}\n\n<!--      &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;{{bookingsConfirmed}}-&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-->\n<!--      <router-link :to=\"{ path: '/notification' }\"><button>Login test</button></router-link>-->\n    </MDBContainer>\n<!--    Provider {{provider}}-->\n  </div>\n</template>\n\n<script>\n\n// TODO Fix to get companies ( not own company in list )\n\n// :min-date=\"new Date()\"\nimport VueDatePicker from '@vuepic/vue-datepicker';\nimport providerService from '../service/providers'\nimport editPrice from '../components/EditPrice'\nimport editProfession from '../components/EditProfession'\n//import liveChat from '../pages/LiveChat'\nimport errorNotification from '../components/notifications/errorMessage'\nimport successNotification from '../components/notifications/successMessage'\n//import infoNotification from '../components/notifications/infoMessage'\n//import monthConverter from '../components/controllers/month-converter'\nimport info from '../components/Info'\n//import validateToken from \"@/components/validateToken\";\nimport socket from \"@/socket\";\n// inline auto-apply\nimport {\n  MDBContainer,\n  MDBIcon,\n  MDBRow,\n  MDBCol,\n  MDBTable,\n  MDBBtn,\n  MDBBtnClose\n}from \"mdb-vue-ui-kit\";\nimport {ref} from \"vue\";\n\nimport addDays from \"date-fns/addDays\";\nimport availableService from '../service/calendarOffers';\n//import socket from \"@/socket\";\nexport default {\n  name: \"Provider-panel\",\n  props: {\n    userIsProvider: Object,\n    bookings: Array,\n    bookingsConfirmed: Array\n  },\n  components: {\n    info,\n    //liveChat,\n    errorNotification,\n    successNotification,\n    //infoNotification,\n    //monthConverter,\n    editPrice,\n    editProfession,\n    MDBContainer,\n    MDBIcon,\n    MDBRow,\n    MDBCol,\n    MDBTable,\n    MDBBtn,\n    MDBBtnClose,\n    VueDatePicker\n  },\n  data () {\n    return {\n      confirmedBookings: [],\n      testi: {},\n      un: \"\",\n      ri: \"\",\n      rooms: [],\n      close: true\n    }\n  },\n  setup () {\n    const isProviderCalendar = ref(true)\n    const testii = ref(null)\n    const weekDay = ref(\"\")\n    const timerange = ref(null)\n    const datee = ref(null)\n    const isEditPrice = ref(false)\n    const isEditProfession = ref(false)\n    const clearTime = ref(null)\n    const dateTest = ref(null)\n    const date = ref(null)\n    const markers = ref([])\n    const contents = ref([])\n    const isContents = ref(false)\n    const markedDays = ref([])\n    const time = ref({})\n    const isConfirmTime = ref(false)\n    const times = ref([])\n    const datetime = ref({})\n    const userId = ref(\"\")\n    const provider = ref({})\n    const providerTimes = ref([])\n    const errorMessage = ref(null)\n    const successMessage = ref(null)\n    const timeEditSuccessMessage = ref(null)\n    const timeEditErrorMessage = ref(null)\n    const oblicationInfoMessage= ref(null)\n    const editTime = ref({})\n    const isTimeToEdit = ref(false)\n    const editArr = ref([])\n    const timeToEdit = ref(null)\n    const highlightedDates = ref([\n      addDays(new Date(), 1),\n      addDays(new Date(), 2),\n      addDays(new Date(), 7),\n    ])\n    return {\n      isProviderCalendar,\n      testii,\n      weekDay,\n      timerange,\n      datee,\n      isEditPrice,\n      isEditProfession,\n      clearTime,\n      dateTest,\n      date,\n      markers,\n      contents,\n      isContents,\n      markedDays,\n      time,\n      isConfirmTime,\n      times,\n      datetime,\n      userId,\n      provider,\n      providerTimes,\n      errorMessage,\n      timeEditSuccessMessage,\n      timeEditErrorMessage,\n      oblicationInfoMessage,\n      successMessage,\n      editTime,\n      isTimeToEdit,\n      editArr,\n      timeToEdit,\n      highlightedDates\n    }\n  },\n\n  mounted () {\n\n\n\n    /*const validated = validateToken()\n    if (!validated) {\n      console.log(\"user is no validated\")\n      this.$router.push('/login');\n    } else {\n      console.log(\"User is validated\")\n      this.userId = validated.id\n      this.providerData();\n    }*/\n\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (!loggedUserJSON) {\n      this.$router.push('/');\n    } else {\n      const user = JSON.parse(loggedUserJSON)\n      this.userId = user.id\n      console.log(\"User token in provider: \" + user.token)\n\n      this.providerData();\n\n    }\n\n\n    //this.providerData();\n\n  },\n  methods: {\n\n    getIt () {\n      let username = \"aaa\"\n      let room = \"room\"\n\n      socket.auth = { username, room };\n      socket.connect();\n\n      let room1 = \"Oopersama\"\n      socket.emit('updateRoom', room1);\n    },\n\n    xxx(test) {\n      console.log(\"Test nimi \" + test)\n\n\n    },\n\n    joinAllRooms () {\n      const rooms = [\"111\", \"222\"];\n      socket.emit('joinAllClientRooms', rooms);\n    },\n\n    closeInfo () {\n      console.log(\"Info closed here?? \")\n\n      this.successMessage = \"Siit saab kustutada selle teavituse soovi korral!\"\n      setTimeout(() => {\n        this.successMessage = null\n      }, 3000)\n\n    },\n\n    socketResetTest() {\n      //console.log(\"Socket reset test\")\n      socket.disconnect()\n      socket.connect()\n    },\n    openChatPanel (evt) {\n      evt.preventDefault()\n      console.log(\"Will chat open...\")\n      const sessionID = localStorage.getItem(\"sessionID\");\n\n      if (sessionID) {\n        this.usernameAlreadySelected = true;\n        socket.auth = { sessionID };\n        socket.connect();\n      }\n\n      socket.on(\"session\", ({ sessionID, userID, roomName }) => {\n            // attach the session ID to the next reconnection attempts\n            socket.auth = { sessionID };\n            // store it in the localStorage\n            localStorage.setItem(\"sessionID\", sessionID);\n\n\n            // save the ID of the user\n            socket.userID = userID;\n            socket.roomName = roomName;\n      });\n      /*this.$router\n          .push({ path: '/chat' })\n          .then(() => { this.$router.go() })\n      */\n    },\n    handleInternal (date) {\n\n      this.editArr = [];\n      this.editTime = {}\n      //let editTimeArr = []\n      this.isTimeToEdit = false;\n      if (date) {\n\n        let dateStr = date.toString().substring(8, 10)\n        let dateInt = parseInt(dateStr);\n\n        this.weekDay = date.toString().substring(0, 3)\n\n\n        let time = {}\n        //let times = [];\n        this.markers.forEach(m => {\n          if (m.date.getDate() === dateInt) {\n            this.isTimeToEdit = true\n            time = {\n              day: dateInt,\n              weekDay: this.weekDay,\n              time: m.content\n            }\n\n          }\n\n        })\n\n        // times for selected day orange box\n        this.editArr.push(time)\n\n      }\n\n\n    },\n    editPrice () {\n      this.isEditPrice = true;\n    },\n    editProfessionPro () {\n      this.isEditProfession = true;\n    },\n    handleAddProfession (pro) {\n      console.log(\"Uus amet on \" + pro);\n      this.provider.profession.push(pro);\n    },\n    async saveEditedPrice (newPrice) {\n      //console.log(\"New price is: \" + newPrice);\n      const providerSalary = {\n        priceByHour: newPrice\n      }\n      const updated = await providerService.updateProvider(this.provider.id, providerSalary)\n      if (updated) {\n\n\n\n        this.provider.priceByHour = newPrice;\n        console.log(\"Price: \" + this.provider.priceByHour)\n        this.isEditPrice = false;\n        this.successMessage = \"Tuntihinta on muokattu!\"\n        setTimeout(() => {\n          this.successMessage = null\n        }, 2000)\n      }\n\n\n    },\n    cancelEditPrice (isEdit) {\n      this.isEditPrice = isEdit;\n    },\n    handleCancelEditProfession () {\n      this.isEditProfession = false;\n    },\n    removeExpiredDateTime () {\n      this.providerTimes.forEach(timerange => {\n        let year = timerange.yearFrom;\n        let month = timerange.monthFrom;\n        let day = timerange.dayFrom;\n        let hour = timerange.hoursFrom;\n        let minute = timerange.minutesFrom;\n        if (new Date(year, month, day, hour, minute).getTime() < new Date().getTime()) {\n          this.delTimeRange(timerange.id);\n        }\n      })\n\n    },\n    async editTimeTest () {\n      const newTimeoffer = {hoursFrom: 1};\n      await availableService.updateOffer('6431407f53469b1f48eeb2f0', newTimeoffer)\n      //console.log(\"Is time updated? \" + this.provider.timeoffer.map(p => p.hoursFrom));\n      //console.log(\"Updated: \" + updateTime.hoursFrom)\n    },\n    updateTimesAndMarkers () {\n\n      this.providerTimes.forEach(times => {\n        console.log(\"Provider times: \" + times.hoursFrom);\n        this.setTimeMarkers(times)\n      })\n\n      this.providerTimes.forEach(offer => {\n        this.initializeTime(offer);\n      })\n    },\n    async delTimeRange (timerangeId) {\n      await availableService.removeTimeOffer(this.provider.id, timerangeId);\n\n      //console.log(\"Aga id argumendina? \" + timerangeId)\n      this.providerTimes = this.providerTimes.filter(time => time.id !== timerangeId);\n      //this.editArr.time = this.editArr.filter(eat => eat.time.timeId !== timerangeId)\n      this.times = [];\n      this.markers = [];\n\n      this.updateTimesAndMarkers();\n\n      if (this.editArr.length > 1) {\n\n        this.updateTimesAndMarkers();\n\n        this.editArr[0].time = this.editArr[0].time.filter(eat => eat.timeId !== timerangeId)\n\n      } else {\n        this.editArr = [];\n        this.updateTimesAndMarkers();\n\n      }\n\n    },\n\n    onTimePickerOpen () {\n      console.log(\"Timepicker opened\")\n    },\n    alertFn (x) {\n      console.log(\"Opened \" + x)\n    },\n\n    onClose () {\n\n      console.log(\"On close...\")\n    },\n    async handleDate () {\n      console.log(\"Date handled!\")\n      const timeDate = {\n        yearFrom: this.date[0].getFullYear(),\n        monthFrom: this.date[0].getMonth(),\n        dayFrom: this.date[0].getDate(),\n        hoursFrom: this.date[0].getHours(),\n        minutesFrom: this.date[0].getMinutes(),\n        yearTo: this.date[1].getFullYear(),\n        monthTo: this.date[1].getMonth(),\n        dayTo: this.date[1].getDate(),\n        hoursTo: this.date[1].getHours(),\n        minutesTo: this.date[1].getMinutes()\n      }\n\n\n      const savedTimeRange = await availableService.addAdditionalOffer(this.provider.id, timeDate);\n\n      this.providerTimes = this.providerTimes.concat(savedTimeRange);\n\n\n      this.times = [];\n      this.markers = [];\n      this.editArr = [];\n\n\n      //this.updateTimesAndMarkers();\n\n      this.providerTimes.forEach(offer => {\n        this.initializeTime(offer);\n      })\n\n      this.providerTimes.forEach(times => {\n        this.setTimeMarkers(times)\n      })\n\n      // ------------------------------------\n\n\n      //-------------------------------------\n\n\n\n\n      let time = {}\n\n      this.markers.forEach(m => {\n        if (m.date.getDate() === savedTimeRange.dayFrom) {\n          this.isTimeToEdit = true;\n          time = {\n            day: savedTimeRange.dayFrom,\n            weekDay: this.weekDay,\n            time: m.content\n          }\n\n        }\n\n      })\n      this.editArr.push(time);\n\n      //this.editArr[0].day = savedTimeRange.dayFrom\n\n\n\n\n      //this.providerData ();\n    },\n    async confirmEditedTime (id) {\n      console.log(\"Confirmed??? \" + id + \" hours edited: \" + this.t)\n      let offerForEdit;\n      const time = this.timeToEdit\n      if (time) {\n        //this.markers = [];\n\n        offerForEdit = {\n          hoursFrom: time[0].hours,\n          minutesFrom: time[0].minutes,\n          hoursTo: time[1].hours,\n          minutesTo: time[1].minutes\n        }\n\n        const edited = await availableService.updateOffer(id, offerForEdit)\n        console.log(\"Offer edited: \" + edited)\n        this.timeEditSuccessMessage = \"Aika muokattu onnistuneesti!\"\n        //this.providerTimes = this.providerTimes.filter(time => time.id !== id ? time : edited);\n\n\n        this.providerTimes = this.providerTimes.map(time => time.id !== id ? time : edited);\n\n        //this.providerTimes = this.providerTimes.concat(edited)\n\n        this.testii = edited;\n\n\n\n        //console.log(\"Times after edit:: \")\n        setTimeout(() => {\n          this.timeEditSuccessMessage = null\n        }, 2000)\n        this.isTimeToEdit = false;\n      } else {\n        this.timeEditErrorMessage = \"Ensin on vaihdettava kellonaika!\"\n        setTimeout(() => {\n          this.timeEditErrorMessage = null\n        }, 2000)\n      }\n      //this.updateTimesAndMarkers();\n\n      //console.log(\"Time need to confirmation: \" + time[0].hours + \" : \" + time[0].minutes)\n      this.timeToEdit = null;\n\n    },\n    handleTime (date) {\n\n      //this.isConfimTime = true;\n      this.timeToEdit = date;\n\n      //console.log(\"Time is handled \" + date[0].hours )\n    },\n\n    setMarkedDay (markedDay) {\n      const day = markedDay - new Date().getDate()\n      //this.markedDays = this.markedDays.concat(markedDay)\n      this.markedDays.push(markedDay)\n      console.log(\"Day to set_ \" + day);\n    },\n    cancelTime () {\n      console.log(\"Time cancelled!\")\n\n    },\n    async addAvailableDate () {\n      const availableDate = {\n        yearFrom: this.date[0].getFullYear(),\n        monthFrom: this.date[0].getMonth(),\n        dayFrom: this.date[0].getDate(),\n        hoursFrom: this.date[0].getHours(),\n        minutesFrom: this.date[0].getMinutes(),\n        yearTo: this.date[1].getFullYear(),\n        monthTo: this.date[1].getMonth(),\n        dayTo: this.date[1].getDate(),\n        hoursTo: this.date[1].getHours(),\n        minutesTo: this.date[1].getMinutes()\n      }\n      const saved = await availableService.addAdditionalOffer(this.provider.id, availableDate);\n      console.log(\"Saved? \" + saved);\n    },\n    /*initializeMarkers (day) {\n      if (this.contents.length > 0) {\n        this.markers.push(\n            {\n              date: addDays(new Date(), day),\n              type: 'line',\n              color: 'orange',\n              tooltip: this.contents\n            }\n        )\n      }\n\n    },*/\n    setTimeMarkers (offer) {\n      let markedDay = null;\n      this.contents = [];\n      // markedDay = offer.dayFrom - new Date().getDate()\n      // DODO need to add year funcionality\n      if (offer.monthFrom === new Date().getMonth()) {\n        markedDay = addDays(new Date(), offer.dayFrom - new Date().getDate());\n      } else {\n        markedDay = addDays(\n            new Date(offer.yearFrom, offer.monthFrom, 0), offer.dayFrom);\n      }\n\n      console.log(\"Test markers: \" + new Date(offer.yearFrom, offer.monthFrom, offer.dayFrom))\n\n\n      //let timeIds = [];\n      //let time = this.times;\n      //let timeContent = time[0].hours + \" : \" + time[0].minutes + \" - \" + time[1].hours + \" : \" + time[1].minutes;\n      this.times.forEach((time, index) => {\n\n        if (time[0].day === offer.dayFrom) {\n\n          //timeIds = timeIds.concat(offer.id)\n          //this.contents.push({text: \"Muokka\", index: index, hours: time.hours, minutes: time, color: 'orange'})\n          let timeContent = time[0].hours + \" : \" + time[0].minutes + \" - \" + time[1].hours + \" : \" + time[1].minutes;\n          this.contents.push({text: timeContent, index: index, timeId: this.providerTimes[index].id, color: 'red'})\n\n          this.markers = this.markers.concat({\n            dFrom: offer.dayFrom,\n            date: markedDay,\n            type: 'line',\n            color: 'orange',\n            content: this.contents\n          })\n\n        }\n\n      })\n    },\n    async providerData () {\n      //console.log(\"User id in provider panel: \" + this.userId)\n      const provider = await providerService.getProvider(this.userId);\n      //const provider = this.userIsProvider;\n      //if (provider) {\n\n      console.log(\"Test provider status here: \" + provider.status)\n\n        this.provider = provider;\n\n\n\n        this.providerTimes = provider.timeoffer;\n        if (provider) {\n\n          console.log(\"Provider rooms are: \" + provider.room.map(pr => pr));\n          this.rooms = provider.room;\n\n          this.un = provider.user.username;\n          this.ri = provider.yritys;\n        }\n\n        this.confirmedBookings = provider.booking.filter(pro => pro.status === \"confirmed\")\n\n\n        this.times = []\n\n        this.providerTimes.forEach(offer => {\n          this.initializeTime(offer);\n        })\n\n        this.removeExpiredDateTime();\n\n        this.providerTimes.forEach(offer => {\n          this.setTimeMarkers(offer);\n        })\n      //}\n\n\n    },\n\n    initializeTime (offer) {\n      let time = []\n      time.push(\n          {\n            day: offer.dayFrom,\n            hours: offer.hoursFrom,\n            minutes: offer.minutesFrom\n          },\n          {\n            day: offer.dayTo,\n            hours: offer.hoursTo,\n            minutes: offer.minutesTo\n          }\n\n      )\n      this.times.push(time)\n\n    },\n\n    test (index) {\n      console.log(\"What ever: \" + index)\n    },\n  },\n\n\n  /*unmounted() {\n    socket.off(\"connect\");\n    socket.off(\"disconnect\");\n    socket.off(\"users\");\n    socket.off(\"user connected\");\n    socket.off(\"user disconnected\");\n    socket.off(\"private message\");\n  },*/\n}\n</script>\n\n<style>\n.center {\n  margin: auto;\n  width: 25%;\n\n  padding: 7px;\n}\n.error {\n  color: white;\n  background: #f5839c;\n  font-size: 20px;\n  border: solid #f75959;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n.success {\n  color: white;\n  background: lightgreen;\n  font-size: 20px;\n  border: solid #0e920e;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n.info {\n  width: 50%;\n  margin-left: 45%;\n  color: white;\n  background: lightblue;\n  font-size: 20px;\n  border: solid #35bbc7;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n\n.action-row {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n}\n\n\n\n</style>","<template>\n  <MDBContainer>\n    <h1>Editing price</h1>\n\n    <MDBInput label=\"Tuntihinta\" v-model=\"price\" wrapperClass=\"mb-4\"/>\n\n    <MDBBtn outline=\"success\" block size=\"lg\" @click=\"handleEditPrice\">Kinnita</MDBBtn>\n    <MDBBtn outline=\"danger\" block size=\"lg\" @click=\"cancelEdit\">Poistu</MDBBtn>\n  </MDBContainer>\n</template>\n\n<script>\n\nimport {\n  MDBContainer,\n  MDBBtn,\n  MDBInput\n}from \"mdb-vue-ui-kit\";\nimport {ref} from \"vue\";\nexport default {\n  name: \"edit-price\",\n  setup () {\n    const price = ref(null)\n    return {\n      price\n    }\n  },\n  components: {\n    MDBContainer,\n    MDBBtn,\n    MDBInput\n  },\n  data () {\n    return {\n      errorMessage: null\n    }\n  },\n  methods: {\n    handleEditPrice () {\n      this.$emit('save:editedPrice', this.price);\n    },\n    cancelEdit () {\n      this.$emit('cancel:editPrice' , false)\n      this.errorMessage = \"Here is some error!\"\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./EditPrice.vue?vue&type=template&id=0be60056\"\nimport script from \"./EditPrice.vue?vue&type=script&lang=js\"\nexport * from \"./EditPrice.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <MDBContainer>\n\n    <div v-if=\"provider.profession.length === 1\">\n\n      <MDBTable  borderless style=\"font-size: 18px; text-align: left;\">\n        <tbody>\n        <tr v-for=\"(pro, index) in provider.profession\" :key=\"index\">\n          <td>\n            <MDBInput\n                style=\"margin-bottom: 20px;\"\n                size=\"lg\"\n                v-model=\"profession\"\n                label=\"Muokkaa ammattia\"\n            >\n            </MDBInput>\n          </td>\n          <td>\n            <MDBIcon size=\"2x\">\n              <i class=\"far fa-save\"></i>\n            </MDBIcon>\n          </td>\n        </tr>\n        </tbody>\n      </MDBTable>\n\n\n<!--      <MDBBtn block color=\"success\" size=\"lg\">Kinnita uus amet</MDBBtn>-->\n    </div>\n    <div v-else>\n      <MDBTable  borderless style=\"font-size: 18px; text-align: left;\">\n        <tbody>\n        <tr v-for=\"(pro, index) in provider.profession\" :key=\"index\">\n          <td>\n            {{pro}}\n          </td>\n          <td>\n\n\n\n          </td>\n        </tr>\n        </tbody>\n      </MDBTable>\n    </div>\n\n    <MDBBtn block color=\"primary\" size=\"lg\" @click=\"addProfessionPressed\">Lisää ammatti</MDBBtn>\n\n    <MDBInput\n        v-if=\"isAddProfession\"\n        style=\"margin-bottom: 20px;\"\n        size=\"lg\"\n        v-model=\"additionalProfession\"\n        label=\"Uusi ammattia\"\n    >\n    </MDBInput>\n\n<!--    provider {{provider}}-->\n    <MDBBtn v-if=\"additionalProfession.length > 2\" outline=\"success\" block size=\"lg\" @click=\"handleAddAdditionalProfession\">Kinnita uus amet</MDBBtn>\n    <MDBBtn outline=\"danger\" block size=\"lg\" @click=\"cancelEditProfession\">Poistu</MDBBtn>\n  </MDBContainer>\n</template>\n\n<script>\nimport {\n  MDBContainer,\n  MDBBtn,\n  MDBInput,\n  MDBTable,\n  MDBIcon\n}from \"mdb-vue-ui-kit\";\nimport {ref} from \"vue\";\nexport default {\n  name: \"editProfession\",\n  props: {\n    provider: Object\n  },\n  components: {\n    MDBContainer,\n    MDBBtn,\n    MDBInput,\n    MDBTable,\n    MDBIcon\n  },\n  setup () {\n    const profession = ref(null)\n    const isAddProfession = ref(false)\n    const additionalProfession = ref(\"\")\n    return {\n      profession,\n      isAddProfession,\n      additionalProfession\n    }\n  },\n  methods: {\n    addProfessionPressed () {\n      this.isAddProfession = true;\n      //this.$emit(\"add:profession\", this.profession);\n    },\n    // additionalProfession () {\n    //\n    // },\n    handleAddAdditionalProfession () {\n      this.isAddProfession = false;\n      this.$emit(\"add:profession\", this.additionalProfession);\n      this.additionalProfession = \"\";\n    },\n    cancelEditProfession () {\n      this.$emit(\"cancel:editProfession\")\n    },\n    cancelEdit () {\n      console.log(\"Heiii\")\n      this.$emit('cancel:editPrice' , false)\n      this.errorMessage = \"Here is some error!\"\n\n    }\n  }\n\n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./EditProfession.vue?vue&type=template&id=9c34cbd0\"\nimport script from \"./EditProfession.vue?vue&type=script&lang=js\"\nexport * from \"./EditProfession.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ProviderPanel.vue?vue&type=template&id=6ecb41b2\"\nimport script from \"./ProviderPanel.vue?vue&type=script&lang=js\"\nexport * from \"./ProviderPanel.vue?vue&type=script&lang=js\"\n\nimport \"./ProviderPanel.vue?vue&type=style&index=0&id=6ecb41b2&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["ErrorMessage","message","_createVNode","axios","require","baseUrl","getOffers","async","offers","get","data","addFirstOffer","newOffer","post","offer","addAdditionalOffer","id","additionalOffer","removeTimeOffer","providerId","offerId","removedTimeRange","delete","updateOffer","timeOffer","updated","put","class","$props","status","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","msg","provider","header","_component_monthConverter","num","onTime","month","day","year","hours","minutes","_hoisted_3","_hoisted_4","_component_MDBBtnClose","onClick","$options","handleCloseInfo","_hoisted_5","address","_hoisted_6","name","props","String","components","MDBBtnClose","monthConverter","methods","this","$emit","__exports__","render","style","size","role","_hoisted_8","_Fragment","_renderList","$data","confirmedBookings","bc","_createBlock","_component_info","key","closeInfo","_component_MDBContainer","_component_MDBRow","$setup","isProviderCalendar","_component_MDBCol","_component_errorNotification","timeEditErrorMessage","_component_successNotification","timeEditSuccessMessage","isTimeToEdit","editArr","item","i","weekDay","_component_MDBTable","borderless","time","index","times","_component_VueDatePicker","$event","handleTime","range","trigger","_withCtx","_component_MDBIcon","confirmEditedTime","timeId","delTimeRange","_component_MDBBtn","outline","_cache","onInternalModelChange","handleInternal","date","handleDate","inline","locale","selectText","Date","markers","highlight","highlightedDates","isEditPrice","_component_editPrice","cancelEditPrice","saveEditedPrice","isEditProfession","_component_edit_profession","handleAddProfession","handleCancelEditProfession","profession","_hoisted_10","yritys","errorMessage","successMessage","_hoisted_13","_hoisted_14","block","_hoisted_11","_hoisted_12","_ctx","editAddress","pro","editProfessionPro","priceByHour","editPrice","_hoisted_7","_hoisted_9","_component_MDBInput","label","price","wrapperClass","handleEditPrice","cancelEdit","setup","ref","MDBContainer","MDBBtn","MDBInput","length","color","addProfessionPressed","isAddProfession","additionalProfession","handleAddAdditionalProfession","cancelEditProfession","Object","MDBTable","MDBIcon","console","log","userIsProvider","bookings","Array","bookingsConfirmed","info","errorNotification","successNotification","editProfession","MDBRow","MDBCol","VueDatePicker","testi","un","ri","rooms","close","testii","timerange","datee","clearTime","dateTest","contents","isContents","markedDays","isConfirmTime","datetime","userId","providerTimes","oblicationInfoMessage","editTime","timeToEdit","addDays","mounted","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","token","providerData","$router","push","getIt","username","room","socket","auth","connect","room1","emit","xxx","test","joinAllRooms","setTimeout","socketResetTest","disconnect","openChatPanel","evt","preventDefault","sessionID","usernameAlreadySelected","on","userID","roomName","setItem","dateStr","toString","substring","dateInt","parseInt","forEach","m","getDate","content","newPrice","providerSalary","providerService","updateProvider","isEdit","removeExpiredDateTime","yearFrom","monthFrom","dayFrom","hour","hoursFrom","minute","minutesFrom","getTime","newTimeoffer","availableService","updateTimesAndMarkers","setTimeMarkers","initializeTime","timerangeId","filter","eat","onTimePickerOpen","alertFn","x","onClose","timeDate","getFullYear","getMonth","getHours","getMinutes","yearTo","monthTo","dayTo","hoursTo","minutesTo","savedTimeRange","concat","offerForEdit","t","edited","map","setMarkedDay","markedDay","cancelTime","availableDate","saved","timeContent","text","dFrom","type","getProvider","timeoffer","pr","booking"],"sourceRoot":""}