{"version":3,"file":"js/231.75d15716.js","mappings":"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","sources":["webpack://prore-mongo/./src/service/image.js","webpack://prore-mongo/./src/pages/RecipientForm.vue","webpack://prore-mongo/./src/pages/RecipientForm.vue?59c8"],"sourcesContent":["const axios = require('axios')\r\nconst baseUrl = '/api/upload'\r\n\r\nconst getAll = async () => {\r\n    const result = await axios.get(baseUrl)\r\n    return result.data\r\n}\r\n\r\nconst create = async (newImageData) => {\r\n    const result = await axios.post(baseUrl, newImageData, {})\r\n    return result.data\r\n}\r\n\r\nconst updateImage = async (id, newImageData) => {\r\n    const result = await axios.put(`${baseUrl}/${id}`, newImageData)\r\n    return result.data\r\n}\r\n\r\nconst remove = async (id, recipientId) => {\r\n    await axios.delete(`${baseUrl}/${id}/${recipientId}`)\r\n}\r\n\r\nexport default { getAll, create, updateImage, remove }","<template>\r\n\r\n  <div>\r\n    <h2 style=\"margin-top: 200px;\">- Uusi tilaus -</h2>\r\n\r\n    <MDBContainer>\r\n      <form class=\"g-3 needs-validation\" novalidate @submit.prevent=\"checkForm\">\r\n        <MDBInput\r\n            label=\"Anna otsikko\"\r\n            v-model=\"header\"\r\n            id=\"header\"\r\n            size=\"lg\"\r\n            invalidFeedback=\"Ole hyvä ja kirjoita otsikko.\"\r\n            validFeedback=\"Ok!\"\r\n            required\r\n            wrapperClass=\"mb-4\"/>\r\n\r\n        <MDBInput\r\n            label=\"Anna osoitteesi\"\r\n            v-model=\"address\"\r\n            id=\"osoite\"\r\n            size=\"lg\"\r\n            invalidFeedback=\"Ole hyvä ja kirjoita osoite.\"\r\n            validFeedback=\"Ok!\"\r\n            required\r\n            wrapperClass=\"mb-4\"/>\r\n\r\n        <div class=\"ui form\">\r\n          <div class=\"field\">\r\n            <select v-if=\"isNotSelected\"\r\n                    id=\"noSelected\"\r\n                    style=\"border-color: red; color: red; margin-bottom: 20px;\"\r\n                    v-model=\"professional\"\r\n                    @change=\"isNotSelected = false\">\r\n              <option disabled value=\"\" >Valitse ammattilainen</option>\r\n              <option>Putkimies</option>\r\n              <option>Sähkömies</option>\r\n              <option>Siivooja</option>\r\n            </select>\r\n            <select v-else v-model=\"professional\"\r\n                    style=\"margin-bottom: 20px;\">\r\n              <option disabled value=\"\">Valitse ammattilainen</option>\r\n              <option>Putkimies</option>\r\n              <option>Sähkömies</option>\r\n              <option>Siivooja</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <VueDatePicker\r\n            style=\"margin-bottom: 20px;\"\r\n            v-model=\"date\"\r\n            :min-date=\"new Date()\"\r\n            placeholder=\"Missä ajalla haluat ammattilaista?\"\r\n            @internal-model-change=\"handleInternalDate\"\r\n            :state=\"isNoDate ? false : null\"\r\n        >\r\n\r\n        </VueDatePicker>\r\n\r\n\r\n        <!--\r\n    Everything is wrapped in a label, which acts as a clickable wrapper around a form element.\r\n    In this case, the file input.\r\n  -->\r\n\r\n        <MDBContainer style=\"margin-bottom: 20px;\">\r\n          <MDBRow>\r\n            <MDBCol md=\"4\">\r\n              <img v-if=\"showImage\" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>\r\n              <label v-if=\"!isUploaded\" for=\"file-upload\" class=\"custom-file-upload\">\r\n\r\n                <span v-if=\"value\">\r\n                    Muokkaa kuva: {{value.name}}\r\n\r\n                </span>\r\n                <span v-else>Valitse kuva tehtävästä</span>\r\n\r\n              </label>\r\n\r\n              <input id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>\r\n\r\n              <MDBBtn v-if=\"isImageSelected\" outline=\"danger\" size=\"lg\" block @click=\"removeFile\">Poista valitsettu kuva</MDBBtn>\r\n              <MDBBtn v-if=\"isImageSelected\"\r\n                      outline=\"success\"\r\n                      size=\"lg\"\r\n                      block\r\n                      style=\"margin-bottom: 10px;\"\r\n                      @click=\"uploadImage\">Lataa valitsettu kuva</MDBBtn>\r\n\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"8\">\r\n              <MDBTextarea\r\n                  label=\"Tehtävän kuvaus...\"\r\n                  rows=\"4\"\r\n                  v-model=\"explanation\"\r\n                  invalidFeedback=\"Ole hyvä ja kirjoita tehtävän kuvaus.\"\r\n                  validFeedback=\"Ok!\"\r\n                  required\r\n              />\r\n            </MDBCol>\r\n          </MDBRow>\r\n\r\n\r\n        </MDBContainer>\r\n\r\n\r\n\r\n\r\n        <MDBBtn outline=\"success\" size=\"lg\" block @click=\"addRecipient\" style=\"margin-top:20px; margin-bottom: 20px;\" type=\"submit\">Tee tilaus</MDBBtn>\r\n\r\n      </form>\r\n\r\n\r\n      <!--\r\n      <h1>{{result}}</h1>\r\n      <MDBBtn outline=\"success\" size=\"lg\" block @click=\"this.$router.push('/received')\">Asiakkaan paneeli</MDBBtn>\r\n\r\n      <MDBBtn outline=\"success\" size=\"lg\" block @click=\"findRecipients\">findRecipients</MDBBtn>\r\n\r\n\r\n\r\n      <MDBBtn outline=\"danger\" size=\"lg\" block @click=\"remFile\">Remove file</MDBBtn>\r\n      -->\r\n      <MDBBtn outline=\"danger\" size=\"lg\" block @click=\"cancelRecipientForm\" style=\"margin-bottom: 50px;\"> Poistu </MDBBtn>\r\n\r\n\r\n    </MDBContainer>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\n/*global google*/\r\n//const fs = require('fs');\r\n\r\nimport VueDatePicker from '@vuepic/vue-datepicker';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBTextarea\r\n} from \"mdb-vue-ui-kit\";\r\nimport recipientService from '../service/recipients'\r\nimport uploadService from '../service/image'\r\n\r\n//import ImageSelect from '../components/ImageSelect.vue'\r\nimport { format } from 'date-fns'\r\nimport {ref} from \"vue\";\r\n\r\n\r\n\r\n//import mapService from '../service/map'\r\n\r\n\r\nexport default {\r\n  name: \"recipient-form\",\r\n  components: {\r\n    MDBBtn,\r\n    MDBContainer,\r\n    MDBInput,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBTextarea,\r\n    //ImageSelect,\r\n    VueDatePicker\r\n  },\r\n  data () {\r\n\r\n    return {\r\n      recipientId: null,\r\n      header: \"\",\r\n      address: null,\r\n      lat: null,\r\n      lng: null,\r\n      isNoDate: false,\r\n      professional: \"\",\r\n      addFile: null,\r\n      dateTest: null,\r\n      calendarTooltips: [],\r\n      value: null,\r\n      aaa: \"\",\r\n      file: null,\r\n      f: null\r\n    }\r\n  },\r\n\r\n  setup () {\r\n    const date = ref(null)\r\n    const explanation = ref(\"\")\r\n    const isImageSelected = ref(false)\r\n    const imgId = ref(null)\r\n    const showImage = ref(null)\r\n    const isShowImage = ref(false)\r\n    const isUploaded = ref(false)\r\n    const isNotSelected = ref(false)\r\n    //const file = ref(null)\r\n\r\n\r\n    return {\r\n      date,\r\n      explanation,\r\n\r\n      isImageSelected,\r\n      imgId,\r\n      showImage,\r\n      isShowImage,\r\n      isUploaded,\r\n      isNotSelected\r\n\r\n\r\n    }\r\n  },\r\n  computed: {\r\n    currentRouteName() {\r\n      return this.$route.name;\r\n    }\r\n  },\r\n\r\n  async mounted () {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      this.recipientId = user.id\r\n      //console.log(\"User token: \" + this.loggedUser.token)\r\n      console.log(\"User id in recipient: \" + user.id)\r\n    }\r\n\r\n    //console.log(\"Google key test: \" + await mapService.getLocation())\r\n\r\n    const center = { lat: 50.064192, lng: -130.605469 };\r\n    // Create a bounding box with sides ~10km away from the center point\r\n    const defaultBounds = {\r\n      north: center.lat + 0.1,\r\n      south: center.lat - 0.1,\r\n      east: center.lng + 0.1,\r\n      west: center.lng - 0.1,\r\n    };\r\n    const input = document.getElementById(\"osoite\");\r\n    const options = {\r\n      bounds: defaultBounds,\r\n      componentRestrictions: { country: \"fi\" },\r\n      fields: [\"address_components\", \"geometry\", \"icon\", \"name\", \"formatted_address\"],\r\n      strictBounds: false,\r\n      //types: [\"establishment\"],\r\n    };\r\n    const autocomplete = new google.maps.places.Autocomplete(input, options);\r\n\r\n    autocomplete.addListener(\"place_changed\", () => {\r\n      let place = autocomplete.getPlace()\r\n      this.lat = place.geometry.location.lat()\r\n      this.lng = place.geometry.location.lng()\r\n\r\n      this.address = place.formatted_address\r\n      console.log(place)\r\n    })\r\n  },\r\n\r\n  methods: {\r\n    cancelRecipientForm () {\r\n      if (this.currentRouteName === 'r-form') {\r\n        this.$router.push('/received')\r\n        //console.log(\"Name is r-form\")\r\n      } else {\r\n        this.$router.push('/')\r\n      }\r\n\r\n      // this.$router.push('/')\r\n    },\r\n    async findRecipients () {\r\n      const recipients = await recipientService.getOwnBookings(this.recipientId)\r\n      console.log(\"Recipients \" + recipients.length)\r\n\r\n    },\r\n    async remFile () {\r\n\r\n      await uploadService.remove('644cff805261bf7d9943c5da',  '644cff875261bf7d9943c5dd');\r\n    },\r\n    handleFileChange(e) {\r\n      //this.$emit('input', e.target.client[0])\r\n\r\n      try {\r\n\r\n        const files = e.target.files[0]\r\n        console.log('event target client ', e.target.files[0])\r\n        if (files) {\r\n          this.showImage = URL.createObjectURL(files)\r\n          this.file = e.target.files[0];\r\n        }\r\n\r\n      } catch (err) {\r\n        console.log('Error:', err)\r\n      }\r\n\r\n      this.value = e.target.files[0]\r\n      if (e.target.files[0]) {\r\n        this.isImageSelected = true;\r\n      } else {\r\n        this.isImageSelected = false;\r\n      }\r\n    },\r\n    async uploadImage () {\r\n      const data = new FormData();\r\n      data.append('file', this.file, this.file.name)\r\n      const img = await uploadService.create(data);\r\n\r\n      if (img) {\r\n        this.imgId = img.imgCreated._id;\r\n        this.file = null;\r\n        //this.showImage = null;\r\n        //this.value = null;\r\n        this.isImageSelected = false;\r\n        this.isUploaded = true;\r\n      }\r\n\r\n\r\n\r\n\r\n    },\r\n    removeFile () {\r\n      this.value = null;\r\n      this.isImageSelected = false;\r\n      this.showImage = null;\r\n    },\r\n    formatDate (date = Date) {\r\n      //let date = datee;\r\n      if (!date) {\r\n        return null\r\n      }\r\n      return format(date, 'dd.MM.yyyy, HH:mm');\r\n    },\r\n\r\n    backToDashboard () {\r\n\r\n    },\r\n    getDate () {\r\n      // date Thu Apr 20 2023 10:27:00 GMT+0300\r\n      console.log(\"selected date: \" + this.date.getDate())\r\n    },\r\n    handleInternalDate () {\r\n      console.log(\"Handled\")\r\n      this.isNoDate = false;\r\n    },\r\n    // New client to the database\r\n    async addRecipient () {\r\n      let recipient;\r\n      if (this.professional === \"\") {\r\n        this.isNotSelected = true;\r\n      }\r\n      if (!this.date) {\r\n        this.isNoDate = true;\r\n      }\r\n      if (this.date) {\r\n        recipient = {\r\n          created: this.date,\r\n          header: this.header,\r\n          address: this.address,\r\n          latitude: this.lat,\r\n          longitude: this.lng,\r\n          professional: this.professional,\r\n          year: this.date.getFullYear(),\r\n          month: this.date.getMonth(),\r\n          day: this.date.getDate(),\r\n          hours: this.date.getHours(),\r\n          minutes: this.date.getMinutes(),\r\n          description: this.explanation,\r\n          imageId: this.imgId\r\n        }\r\n      }\r\n\r\n\r\n      if (this.header && this.address && this.professional && this.date.getMonth() && this.explanation) {\r\n        const booking = await recipientService.addRecipient(this.recipientId, recipient)\r\n        this.$emit('booking:update', booking)\r\n        console.log(\"Booking--- \" + booking);\r\n        this.$router.push('/received')\r\n      }\r\n\r\n      //const recipientAdded = await recipientService.addRecipient(this.recipientId, recipient)\r\n\r\n    },\r\n    checkForm (event=Event) {\r\n      event.target.classList.add(\"was-validated\");\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style >\r\n\r\n.action-row {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  padding: 20px;\r\n  width: 100%;\r\n}\r\n\r\n\r\n\r\ninput[type=\"file\"] {\r\n  display: none;\r\n}\r\n\r\n.custom-file-upload {\r\n  width: 100%;\r\n\r\n  color: white;\r\n  background-color: #87958e;\r\n  border: 1px solid #ccc;\r\n  display: inline-block;\r\n  padding: 10px 12px;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n\r\n</style>","import { render } from \"./RecipientForm.vue?vue&type=template&id=913d3a1e\"\nimport script from \"./RecipientForm.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientForm.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientForm.vue?vue&type=style&index=0&id=913d3a1e&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["axios","require","baseUrl","getAll","async","result","get","data","create","post","newImageData","updateImage","id","put","remove","recipientId","delete","_createElementVNode","style","class","disabled","value","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","for","_createElementBlock","_hoisted_1","_createVNode","_component_MDBContainer","novalidate","onSubmit","_cache","_withModifiers","args","$options","checkForm","_component_MDBInput","label","$data","header","$event","size","invalidFeedback","validFeedback","required","wrapperClass","address","_hoisted_2","_hoisted_3","$setup","isNotSelected","professional","onChange","_component_VueDatePicker","date","Date","placeholder","onInternalModelChange","handleInternalDate","state","isNoDate","_component_MDBRow","_component_MDBCol","md","showImage","src","alt","isUploaded","_hoisted_15","_hoisted_16","_toDisplayString","name","_hoisted_17","type","handleFileChange","isImageSelected","_createBlock","_component_MDBBtn","outline","block","onClick","removeFile","uploadImage","_component_MDBTextarea","rows","explanation","addRecipient","cancelRecipientForm","components","MDBBtn","MDBContainer","MDBInput","MDBRow","MDBCol","MDBTextarea","VueDatePicker","lat","lng","addFile","dateTest","calendarTooltips","aaa","file","f","setup","ref","imgId","isShowImage","computed","currentRouteName","this","$route","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","console","log","center","defaultBounds","north","south","east","west","input","document","getElementById","options","bounds","componentRestrictions","country","fields","strictBounds","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","geometry","location","formatted_address","methods","$router","push","recipients","recipientService","getOwnBookings","length","uploadService","e","files","target","URL","createObjectURL","err","FormData","append","img","imgCreated","_id","formatDate","format","backToDashboard","getDate","recipient","created","latitude","longitude","year","getFullYear","month","getMonth","day","hours","getHours","minutes","getMinutes","description","imageId","booking","$emit","event","Event","classList","add","__exports__","render"],"sourceRoot":""}