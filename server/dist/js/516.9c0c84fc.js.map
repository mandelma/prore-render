{"version":3,"file":"js/516.9c0c84fc.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/notifications/errorMessage.js","webpack://prore-mongo/./src/components/notifications/successMessage.js","webpack://prore-mongo/./src/service/calendarOffers.js","webpack://prore-mongo/./src/pages/ProviderPanel.vue","webpack://prore-mongo/./src/components/EditPrice.vue","webpack://prore-mongo/./src/components/EditPrice.vue?37bc","webpack://prore-mongo/./src/pages/ProviderPanel.vue?7004"],"sourcesContent":["const ErrorMessage = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"error\">\r\n            {message}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","const SuccessMessage = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"success\">\r\n            {message}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SuccessMessage","const axios = require('axios');\r\nconst baseUrl = '/api/offers';\r\n\r\nconst getOffers = async () => {\r\n    const offers = await axios.get(baseUrl);\r\n    return offers.data;\r\n}\r\n\r\nconst addFirstOffer = async (offer) => {\r\n    const newOffer = await axios.post(`${baseUrl}`, offer);\r\n    return newOffer.data;\r\n}\r\n\r\nconst addAdditionalOffer = async (id, offer) => {\r\n    const additionalOffer = await axios.post(`${baseUrl}/${id}`, offer);\r\n    return additionalOffer.data;\r\n}\r\n\r\nconst removeTimeOffer = async (providerId, offerId) => {\r\n    const removedTimeRange = await axios.delete(`${baseUrl}/${providerId}/timeoffer/${offerId}`);\r\n    return removedTimeRange.data;\r\n}\r\n\r\nconst updateOffer = async (id, timeOffer) => {\r\n    const updated = await axios.put(`${baseUrl}/${id}`, timeOffer)\r\n    return updated.data\r\n}\r\n\r\nexport default { getOffers, addFirstOffer, addAdditionalOffer, removeTimeOffer, updateOffer };","<template>\r\n  <div>\r\n    <h1 style=\"margin-top: 50px; margin-bottom: 50px\">TMI:n hallintapaneeli...</h1>\r\n    <loading v-model:active=\"visible\" :can-cancel=\"true\"></loading>\r\n    <MDBContainer>\r\n      <MDBRow >\r\n        <MDBCol v-if=\"isProviderCalendar\">\r\n          <MDBContainer>\r\n            <!--          {{times}}-->\r\n            <errorNotification\r\n                :message = timeEditErrorMessage\r\n            />\r\n            <successNotification\r\n                :message = timeEditSuccessMessage\r\n            />\r\n            <div v-if=\"isTimeToEdit\">\r\n              <div  v-for=\"(item, i) in editArr\" :key=\"i\" style=\"border: solid orange; padding-bottom: 20px; padding-top: 20px;margin-bottom: 10px;\">\r\n                <div style=\"font-size: 16px;\">{{item.weekDay}} - {{item.day}}</div>\r\n\r\n                <MDBTable borderless style=\"font-size: 18px; text-align: left;\" >\r\n                  <tbody >\r\n                  <tr v-for=\"(time, index) in item.time\" :key=\"index\">\r\n\r\n                    <td>\r\n                      {{times[time.index][0].hours >= 10 ? times[time.index][0].hours : \"0\" + times[time.index][0].hours}} :\r\n                      {{times[time.index][0].minutes >= 10 ? times[time.index][0].minutes : \"0\" + times[time.index][0].minutes}} -\r\n                      {{times[time.index][1].hours >= 10 ? times[time.index][1].hours : \"0\" + times[time.index][1].hours}} :\r\n                      {{times[time.index][1].minutes >= 10 ? times[time.index][1].minutes : \"0\" + times[time.index][1].minutes}}\r\n                    </td>\r\n                    <td>\r\n                      <VueDatePicker v-model=\"times[time.index]\"  time-picker range @update:model-value=\"handleTime\">\r\n                        <template #trigger>\r\n                          <MDBIcon class=\"clickable-text\">\r\n                            <i class=\"fas fa-edit\" size=\"lg\" style=\"cursor: pointer\"></i>\r\n                          </MDBIcon>\r\n                        </template>\r\n                      </VueDatePicker>\r\n\r\n                    </td>\r\n                    <td>\r\n                      <MDBIcon>\r\n                        <i class=\"far fa-save\"  size=\"lg\" @click=\"confirmEditedTime(time.timeId)\" style=\"cursor: pointer\"></i>\r\n                      </MDBIcon>\r\n                    </td>\r\n                    <td>\r\n                      <MDBBtnClose @click=\"delTimeRange(time.timeId)\"/>\r\n<!--                      <MDBIcon @click=\"delTimeRange(time.timeId)\" style=\"cursor: pointer\">-->\r\n<!--                        <i class=\"far fa-calendar-times\" size=\"6x\"></i>-->\r\n<!--                      </MDBIcon>-->\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n\r\n                    </td>\r\n                  </tr>\r\n                  </tbody>\r\n                </MDBTable>\r\n                <MDBBtn outline=\"warning\" size=\"lg\" @click=\"isTimeToEdit = false\" style=\"cursor: pointer\">Poistu</MDBBtn>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <VueDatePicker\r\n                style=\"margin-bottom: 50px; justify-content: center;\"\r\n                @internal-model-change=\"handleInternal\"\r\n                range auto-range=\"0\"\r\n                v-model=\"date\"\r\n                @update:model-value=\"handleDate\"\r\n                inline\r\n                locale=\"fi\" selectText=\"Valitse\"\r\n                :min-date=\"new Date()\"\r\n                :markers=\"markers\"\r\n                teleport-center\r\n                :month-change-on-scroll=\"false\"\r\n            >\r\n\r\n            </VueDatePicker>\r\n\r\n          </MDBContainer>\r\n\r\n        </MDBCol>\r\n        <MDBCol v-if=\"isEditPrice\">\r\n          <editPrice\r\n            @cancel:editPrice = cancelEditPrice\r\n            @save:editedPrice = saveEditedPrice\r\n          />\r\n        </MDBCol>\r\n        <MDBCol v-else>\r\n          <h2>{{provider.yritys}}:</h2>\r\n          <errorNotification\r\n              :message = errorMessage\r\n          />\r\n          <successNotification\r\n            :message = successMessage\r\n          />\r\n          <MDBTable borderless style=\"font-size: 18px; text-align: left;\">\r\n            <tbody>\r\n            <tr v-if=\"!isProviderCalendar\">\r\n              <td>\r\n                Tarjoan palvelua 24/7\r\n              </td>\r\n              <td>\r\n                <MDBBtn outline=\"info\" block size=\"lg\" @click=\"isProviderCalendar = true\">Vaihda kalenteriin</MDBBtn>\r\n              </td>\r\n            </tr>\r\n            <tr v-else>\r\n              <td>\r\n                Päätän, koska tarjoan palvelua\r\n              </td>\r\n              <td>\r\n                <MDBBtn outline=\"info\" block size=\"lg\" @click=\"isProviderCalendar = false\">Vaihda 24/7</MDBBtn>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                {{provider.address}}\r\n              </td>\r\n              <td>\r\n                <MDBBtn outline=\"info\" block size=\"lg\" @click=\"editAddress\">Muokkaa osoitetta</MDBBtn>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td v-for=\"(pro, i) in provider.profession\" :key=\"i\">\r\n                {{pro}}\r\n              </td>\r\n              <td>\r\n                <MDBBtn outline=\"info\" block size=\"lg\" @click=\"editProfession\">Muokkaa ammattia</MDBBtn>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                {{provider.priceByHour}}&nbsp;Euroa\r\n              </td>\r\n              <td>\r\n                <MDBBtn outline=\"info\" block size=\"lg\" @click=\"editPrice\">Muokkaa tuntihinta</MDBBtn>\r\n              </td>\r\n            </tr>\r\n            <!--\r\n            <tr>\r\n              <td colspan=\"2\">\r\n                <MDBBtn outline=\"info\" block size=\"lg\" @click=\"removeExpiredDateTime\">Remove expired dates</MDBBtn>\r\n              </td>\r\n            </tr>\r\n            -->\r\n            </tbody>\r\n          </MDBTable>\r\n\r\n        </MDBCol>\r\n      </MDBRow>\r\n\r\n    </MDBContainer>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// :min-date=\"new Date()\"\r\nimport VueDatePicker from '@vuepic/vue-datepicker';\r\nimport providerService from '../service/providers'\r\nimport editPrice from '../components/EditPrice'\r\nimport errorNotification from '../components/notifications/errorMessage'\r\nimport successNotification from '../components/notifications/successMessage'\r\n// inline auto-apply\r\nimport {\r\n  MDBContainer,\r\n  MDBIcon,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBTable,\r\n  MDBBtn,\r\n  MDBBtnClose\r\n}from \"mdb-vue-ui-kit\";\r\nimport {ref} from \"vue\";\r\n\r\nimport addDays from \"date-fns/addDays\";\r\nimport availableService from '../service/calendarOffers';\r\nexport default {\r\n  name: \"Provider-panel\",\r\n  props: {\r\n    userIsProvider: Object\r\n  },\r\n  components: {\r\n    errorNotification,\r\n    successNotification,\r\n    editPrice,\r\n    MDBContainer,\r\n    MDBIcon,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBTable,\r\n    MDBBtn,\r\n    MDBBtnClose,\r\n    VueDatePicker\r\n  },\r\n  data () {\r\n    return {\r\n      testi: {}\r\n    }\r\n  },\r\n  setup () {\r\n    const isProviderCalendar = ref(true)\r\n    const testii = ref(null)\r\n    const weekDay = ref(\"\")\r\n    const timerange = ref(null)\r\n    const datee = ref(null)\r\n    const isEditPrice = ref(false)\r\n    const clearTime = ref(null)\r\n    const dateTest = ref(null)\r\n    const date = ref(null)\r\n    const markers = ref([])\r\n    const contents = ref([])\r\n    const isContents = ref(false)\r\n    const markedDays = ref([])\r\n    const time = ref({})\r\n    const isConfirmTime = ref(false)\r\n    const times = ref([])\r\n    const datetime = ref({})\r\n    const userId = ref(\"\")\r\n    const provider = ref({})\r\n    const providerTimes = ref([])\r\n    const errorMessage = ref(null)\r\n    const successMessage = ref(null)\r\n    const timeEditSuccessMessage = ref(null)\r\n    const timeEditErrorMessage = ref(null)\r\n    const editTime = ref({})\r\n    const isTimeToEdit = ref(false)\r\n    const editArr = ref([])\r\n    const timeToEdit = ref(null)\r\n    return {\r\n      isProviderCalendar,\r\n      testii,\r\n      weekDay,\r\n      timerange,\r\n      datee,\r\n      isEditPrice,\r\n      clearTime,\r\n      dateTest,\r\n      date,\r\n      markers,\r\n      contents,\r\n      isContents,\r\n      markedDays,\r\n      time,\r\n      isConfirmTime,\r\n      times,\r\n      datetime,\r\n      userId,\r\n      provider,\r\n      providerTimes,\r\n      errorMessage,\r\n      timeEditSuccessMessage,\r\n      timeEditErrorMessage,\r\n      successMessage,\r\n      editTime,\r\n      isTimeToEdit,\r\n      editArr,\r\n      timeToEdit\r\n\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      this.userId = user.id\r\n      //console.log(\"User token: \" + this.loggedUser.token)\r\n      //console.log(\"User id in provider panel: \" + user.id)\r\n      // this.datee = (\r\n      //     [\r\n      //       {\r\n      //         day: 20,\r\n      //         hours: 10,\r\n      //         minutes: 15\r\n      //       },\r\n      //       {\r\n      //         day: 20,\r\n      //         hours: 11,\r\n      //         minutes: 20\r\n      //       }\r\n      //     ]\r\n      //\r\n      // )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    this.providerData();\r\n\r\n\r\n  },\r\n  methods: {\r\n    handleInternal (date) {\r\n\r\n      this.editArr = [];\r\n      this.editTime = {}\r\n      //let editTimeArr = []\r\n      this.isTimeToEdit = false;\r\n      if (date) {\r\n\r\n        let dateStr = date.toString().substring(8, 10)\r\n        let dateInt = parseInt(dateStr);\r\n\r\n        this.weekDay = date.toString().substring(0, 3)\r\n\r\n\r\n        let time = {}\r\n        //let times = [];\r\n        this.markers.forEach(m => {\r\n          if (m.date.getDate() === dateInt) {\r\n            this.isTimeToEdit = true\r\n            time = {\r\n              day: dateInt,\r\n              weekDay: this.weekDay,\r\n              time: m.content\r\n            }\r\n\r\n          }\r\n\r\n        })\r\n\r\n\r\n        this.editArr.push(time)\r\n\r\n      }\r\n\r\n\r\n    },\r\n    editPrice () {\r\n      this.isEditPrice = true;\r\n    },\r\n    async saveEditedPrice (newPrice) {\r\n      //console.log(\"New price is: \" + newPrice);\r\n      const providerSalary = {\r\n        priceByHour: newPrice\r\n      }\r\n      const updated = await providerService.updateProvider(this.provider.id, providerSalary)\r\n      if (updated) {\r\n\r\n\r\n\r\n        this.provider.priceByHour = newPrice;\r\n        console.log(\"Price: \" + this.provider.priceByHour)\r\n        this.isEditPrice = false;\r\n        this.successMessage = \"Tuntihinta on muokattu!\"\r\n        setTimeout(() => {\r\n          this.successMessage = null\r\n        }, 2000)\r\n      }\r\n\r\n\r\n    },\r\n    cancelEditPrice (isEdit) {\r\n      this.isEditPrice = isEdit;\r\n    },\r\n    removeExpiredDateTime () {\r\n      this.providerTimes.forEach(timerange => {\r\n        let year = timerange.yearFrom;\r\n        let month = timerange.monthFrom;\r\n        let day = timerange.dayFrom;\r\n        let hour = timerange.hoursFrom;\r\n        let minute = timerange.minutesFrom;\r\n        if (new Date(year, month, day, hour, minute).getTime() < new Date().getTime()) {\r\n          this.delTimeRange(timerange.id);\r\n        }\r\n      })\r\n\r\n    },\r\n    async editTimeTest () {\r\n      const newTimeoffer = {hoursFrom: 1};\r\n      await availableService.updateOffer('6431407f53469b1f48eeb2f0', newTimeoffer)\r\n      //console.log(\"Is time updated? \" + this.provider.timeoffer.map(p => p.hoursFrom));\r\n      //console.log(\"Updated: \" + updateTime.hoursFrom)\r\n    },\r\n    updateTimesAndMarkers () {\r\n\r\n      this.providerTimes.forEach(times => {\r\n        console.log(\"Provider times: \" + times.hoursFrom);\r\n        this.setTimeMarkers(times)\r\n      })\r\n\r\n      this.providerTimes.forEach(offer => {\r\n        this.initializeTime(offer);\r\n      })\r\n    },\r\n    async delTimeRange (timerangeId) {\r\n      await availableService.removeTimeOffer(this.provider.id, timerangeId);\r\n\r\n      //console.log(\"Aga id argumendina? \" + timerangeId)\r\n      this.providerTimes = this.providerTimes.filter(time => time.id !== timerangeId);\r\n      //this.editArr.time = this.editArr.filter(eat => eat.time.timeId !== timerangeId)\r\n      this.times = [];\r\n      this.markers = [];\r\n\r\n      this.updateTimesAndMarkers();\r\n\r\n      if (this.editArr.length > 1) {\r\n\r\n        this.updateTimesAndMarkers();\r\n\r\n        this.editArr[0].time = this.editArr[0].time.filter(eat => eat.timeId !== timerangeId)\r\n\r\n      } else {\r\n        this.editArr = [];\r\n        this.updateTimesAndMarkers();\r\n\r\n      }\r\n\r\n    },\r\n\r\n    onTimePickerOpen () {\r\n      console.log(\"Timepicker opened\")\r\n    },\r\n    alertFn (x) {\r\n      console.log(\"Opened \" + x)\r\n    },\r\n\r\n    onClose () {\r\n\r\n      console.log(\"On close...\")\r\n    },\r\n    async handleDate () {\r\n      console.log(\"Date handled!\")\r\n      const timeDate = {\r\n        yearFrom: this.date[0].getFullYear(),\r\n        monthFrom: this.date[0].getMonth(),\r\n        dayFrom: this.date[0].getDate(),\r\n        hoursFrom: this.date[0].getHours(),\r\n        minutesFrom: this.date[0].getMinutes(),\r\n        yearTo: this.date[1].getFullYear(),\r\n        monthTo: this.date[1].getMonth(),\r\n        dayTo: this.date[1].getDate(),\r\n        hoursTo: this.date[1].getHours(),\r\n        minutesTo: this.date[1].getMinutes()\r\n      }\r\n\r\n\r\n      const savedTimeRange = await availableService.addAdditionalOffer(this.provider.id, timeDate);\r\n\r\n      this.providerTimes = this.providerTimes.concat(savedTimeRange);\r\n\r\n\r\n      this.times = [];\r\n      this.markers = [];\r\n      this.editArr = [];\r\n\r\n\r\n      //this.updateTimesAndMarkers();\r\n\r\n      this.providerTimes.forEach(offer => {\r\n        this.initializeTime(offer);\r\n      })\r\n\r\n      this.providerTimes.forEach(times => {\r\n        this.setTimeMarkers(times)\r\n      })\r\n\r\n      // ------------------------------------\r\n\r\n\r\n      //-------------------------------------\r\n\r\n\r\n\r\n\r\n      let time = {}\r\n\r\n      this.markers.forEach(m => {\r\n        if (m.date.getDate() === savedTimeRange.dayFrom) {\r\n          this.isTimeToEdit = true;\r\n          time = {\r\n            day: savedTimeRange.dayFrom,\r\n            weekDay: this.weekDay,\r\n            time: m.content\r\n          }\r\n\r\n        }\r\n\r\n      })\r\n      this.editArr.push(time);\r\n\r\n      //this.editArr[0].day = savedTimeRange.dayFrom\r\n\r\n\r\n\r\n\r\n      //this.providerData ();\r\n    },\r\n    async confirmEditedTime (id) {\r\n      console.log(\"Confirmed??? \" + id + \" hours edited: \" + this.t)\r\n      let offerForEdit;\r\n      const time = this.timeToEdit\r\n      if (time) {\r\n        //this.markers = [];\r\n\r\n        offerForEdit = {\r\n          hoursFrom: time[0].hours,\r\n          minutesFrom: time[0].minutes,\r\n          hoursTo: time[1].hours,\r\n          minutesTo: time[1].minutes\r\n        }\r\n\r\n        const edited = await availableService.updateOffer(id, offerForEdit)\r\n        console.log(\"Offer edited: \" + edited)\r\n        this.timeEditSuccessMessage = \"Aika muokattu onnistuneesti!\"\r\n        //this.providerTimes = this.providerTimes.filter(time => time.id !== id ? time : edited);\r\n\r\n\r\n        this.providerTimes = this.providerTimes.map(time => time.id !== id ? time : edited);\r\n\r\n        //this.providerTimes = this.providerTimes.concat(edited)\r\n\r\n        this.testii = edited;\r\n\r\n\r\n\r\n        //console.log(\"Times after edit:: \")\r\n        setTimeout(() => {\r\n          this.timeEditSuccessMessage = null\r\n        }, 2000)\r\n        this.isTimeToEdit = false;\r\n      } else {\r\n        this.timeEditErrorMessage = \"Ensin on vaihdettava kellonaika!\"\r\n        setTimeout(() => {\r\n          this.timeEditErrorMessage = null\r\n        }, 2000)\r\n      }\r\n      //this.updateTimesAndMarkers();\r\n\r\n      //console.log(\"Time need to confirmation: \" + time[0].hours + \" : \" + time[0].minutes)\r\n      this.timeToEdit = null;\r\n\r\n    },\r\n    handleTime (date) {\r\n\r\n      //this.isConfimTime = true;\r\n      this.timeToEdit = date;\r\n\r\n      //console.log(\"Time is handled \" + date[0].hours )\r\n    },\r\n\r\n    setMarkedDay (markedDay) {\r\n      const day = markedDay - new Date().getDate()\r\n      //this.markedDays = this.markedDays.concat(markedDay)\r\n      this.markedDays.push(markedDay)\r\n      console.log(\"Day to set_ \" + day);\r\n    },\r\n    cancelTime () {\r\n      console.log(\"Time cancelled!\")\r\n\r\n    },\r\n    async addAvailableDate () {\r\n      const availableDate = {\r\n        yearFrom: this.date[0].getFullYear(),\r\n        monthFrom: this.date[0].getMonth(),\r\n        dayFrom: this.date[0].getDate(),\r\n        hoursFrom: this.date[0].getHours(),\r\n        minutesFrom: this.date[0].getMinutes(),\r\n        yearTo: this.date[1].getFullYear(),\r\n        monthTo: this.date[1].getMonth(),\r\n        dayTo: this.date[1].getDate(),\r\n        hoursTo: this.date[1].getHours(),\r\n        minutesTo: this.date[1].getMinutes()\r\n      }\r\n      const saved = await availableService.addAdditionalOffer(this.provider.id, availableDate);\r\n      console.log(\"Saved? \" + saved);\r\n    },\r\n    initializeMarkers (day) {\r\n      if (this.contents.length > 0) {\r\n        this.markers.push(\r\n            {\r\n              date: addDays(new Date(), day),\r\n              type: 'line',\r\n              color: 'orange',\r\n              tooltip: this.contents\r\n            }\r\n        )\r\n      }\r\n\r\n    },\r\n    setTimeMarkers (offer) {\r\n      let markedDay = null;\r\n      this.contents = [];\r\n      // markedDay = offer.dayFrom - new Date().getDate()\r\n      // DODO need to add year funcionality\r\n      if (offer.monthFrom === new Date().getMonth()) {\r\n        markedDay = addDays(new Date(), offer.dayFrom - new Date().getDate());\r\n      } else {\r\n        markedDay = addDays(\r\n            new Date(offer.yearFrom, offer.monthFrom, 0), offer.dayFrom);\r\n      }\r\n\r\n      console.log(\"Test markers: \" + new Date(offer.yearFrom, offer.monthFrom, offer.dayFrom))\r\n\r\n\r\n      //let timeIds = [];\r\n      //let time = this.times;\r\n      //let timeContent = time[0].hours + \" : \" + time[0].minutes + \" - \" + time[1].hours + \" : \" + time[1].minutes;\r\n      this.times.forEach((time, index) => {\r\n\r\n        if (time[0].day === offer.dayFrom) {\r\n\r\n          //timeIds = timeIds.concat(offer.id)\r\n          //this.contents.push({text: \"Muokka\", index: index, hours: time.hours, minutes: time, color: 'orange'})\r\n          let timeContent = time[0].hours + \" : \" + time[0].minutes + \" - \" + time[1].hours + \" : \" + time[1].minutes;\r\n          this.contents.push({text: timeContent, index: index, timeId: this.providerTimes[index].id, color: 'orange'})\r\n\r\n          this.markers = this.markers.concat({\r\n            dFrom: offer.dayFrom,\r\n            date: markedDay,\r\n            type: 'line',\r\n            color: 'orange',\r\n            content: this.contents\r\n          })\r\n\r\n        }\r\n\r\n      })\r\n    },\r\n    async providerData () {\r\n      //console.log(\"User id in provider panel: \" + this.userId)\r\n      const provider = await providerService.getProvider(this.userId);\r\n      //const provider = this.userIsProvider;\r\n      //if (provider) {\r\n\r\n        this.provider = provider;\r\n\r\n        this.providerTimes = provider.timeoffer;\r\n\r\n\r\n\r\n        this.times = []\r\n\r\n        this.providerTimes.forEach(offer => {\r\n          this.initializeTime(offer);\r\n        })\r\n\r\n        this.removeExpiredDateTime();\r\n\r\n        this.providerTimes.forEach(offer => {\r\n          this.setTimeMarkers(offer);\r\n        })\r\n      //}\r\n\r\n\r\n    },\r\n\r\n    initializeTime (offer) {\r\n      let time = []\r\n      time.push(\r\n          {\r\n            day: offer.dayFrom,\r\n            hours: offer.hoursFrom,\r\n            minutes: offer.minutesFrom\r\n          },\r\n          {\r\n            day: offer.dayTo,\r\n            hours: offer.hoursTo,\r\n            minutes: offer.minutesTo\r\n          }\r\n\r\n      )\r\n      this.times.push(time)\r\n\r\n    },\r\n\r\n    test (index) {\r\n      console.log(\"What ever: \" + index)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.center {\r\n  margin: auto;\r\n  width: 25%;\r\n\r\n  padding: 7px;\r\n}\r\n.error {\r\n  color: white;\r\n  background: #f5839c;\r\n  font-size: 20px;\r\n  border: solid #f75959;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n.success {\r\n  color: white;\r\n  background: lightgreen;\r\n  font-size: 20px;\r\n  border: solid #0e920e;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.action-row {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n\r\n\r\n</style>","<template>\r\n  <MDBContainer>\r\n    <h1>Editing price</h1>\r\n\r\n    <MDBInput label=\"Tuntihinta\" v-model=\"price\" wrapperClass=\"mb-4\"/>\r\n\r\n    <MDBBtn outline=\"success\" block size=\"lg\" @click=\"handleEditPrice\">Kinnita</MDBBtn>\r\n    <MDBBtn outline=\"danger\" block size=\"lg\" @click=\"cancelEdit\">Poistu</MDBBtn>\r\n  </MDBContainer>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBInput\r\n}from \"mdb-vue-ui-kit\";\r\nimport {ref} from \"vue\";\r\nexport default {\r\n  name: \"edit-price\",\r\n  setup () {\r\n    const price = ref(null)\r\n    return {\r\n      price\r\n    }\r\n  },\r\n  components: {\r\n    MDBContainer,\r\n    MDBBtn,\r\n    MDBInput\r\n  },\r\n  data () {\r\n    return {\r\n      errorMessage: null\r\n    }\r\n  },\r\n  methods: {\r\n    handleEditPrice () {\r\n      this.$emit('save:editedPrice', this.price);\r\n    },\r\n    cancelEdit () {\r\n      this.$emit('cancel:editPrice' , false)\r\n      this.errorMessage = \"Here is some error!\"\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./EditPrice.vue?vue&type=template&id=0be60056\"\nimport script from \"./EditPrice.vue?vue&type=script&lang=js\"\nexport * from \"./EditPrice.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\majaa\\\\WebstormProjects\\\\prore-mongo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ProviderPanel.vue?vue&type=template&id=a3ff0dd0\"\nimport script from \"./ProviderPanel.vue?vue&type=script&lang=js\"\nexport * from \"./ProviderPanel.vue?vue&type=script&lang=js\"\n\nimport \"./ProviderPanel.vue?vue&type=style&index=0&id=a3ff0dd0&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\majaa\\\\WebstormProjects\\\\prore-mongo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["ErrorMessage","message","_createVNode","SuccessMessage","axios","require","baseUrl","getOffers","async","offers","get","data","addFirstOffer","newOffer","post","offer","addAdditionalOffer","id","additionalOffer","removeTimeOffer","providerId","offerId","removedTimeRange","delete","updateOffer","timeOffer","updated","put","_createElementVNode","style","class","size","_createElementBlock","_hoisted_1","_component_loading","active","_ctx","visible","$event","_component_MDBContainer","_component_MDBRow","$setup","isProviderCalendar","_createBlock","_component_MDBCol","key","_component_errorNotification","timeEditErrorMessage","_component_successNotification","timeEditSuccessMessage","isTimeToEdit","_hoisted_2","_Fragment","_renderList","editArr","item","i","_hoisted_3","_toDisplayString","weekDay","day","_component_MDBTable","borderless","time","index","times","hours","minutes","_component_VueDatePicker","$options","handleTime","range","trigger","_withCtx","_component_MDBIcon","_hoisted_4","onClick","confirmEditedTime","timeId","_component_MDBBtnClose","delTimeRange","_hoisted_6","_component_MDBBtn","outline","_cache","onInternalModelChange","handleInternal","date","handleDate","inline","locale","selectText","Date","markers","isEditPrice","_component_editPrice","cancelEditPrice","saveEditedPrice","provider","yritys","errorMessage","successMessage","_hoisted_9","_hoisted_10","block","_hoisted_7","_hoisted_8","address","editAddress","profession","pro","editProfession","priceByHour","editPrice","_component_MDBInput","label","price","wrapperClass","handleEditPrice","cancelEdit","name","setup","ref","components","MDBContainer","MDBBtn","MDBInput","methods","this","$emit","__exports__","props","userIsProvider","Object","errorNotification","successNotification","MDBIcon","MDBRow","MDBCol","MDBTable","MDBBtnClose","VueDatePicker","testi","testii","timerange","datee","clearTime","dateTest","contents","isContents","markedDays","isConfirmTime","datetime","userId","providerTimes","editTime","timeToEdit","mounted","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","providerData","dateStr","toString","substring","dateInt","parseInt","forEach","m","getDate","content","push","newPrice","providerSalary","providerService","console","log","setTimeout","isEdit","removeExpiredDateTime","year","yearFrom","month","monthFrom","dayFrom","hour","hoursFrom","minute","minutesFrom","getTime","newTimeoffer","availableService","updateTimesAndMarkers","setTimeMarkers","initializeTime","timerangeId","filter","length","eat","onTimePickerOpen","alertFn","x","onClose","timeDate","getFullYear","getMonth","getHours","getMinutes","yearTo","monthTo","dayTo","hoursTo","minutesTo","savedTimeRange","concat","offerForEdit","t","edited","map","setMarkedDay","markedDay","cancelTime","availableDate","saved","initializeMarkers","addDays","type","color","tooltip","timeContent","text","dFrom","timeoffer","test","render"],"sourceRoot":""}