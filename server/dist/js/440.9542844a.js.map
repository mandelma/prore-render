{"version":3,"file":"js/440.9542844a.js","mappings":"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","sources":["webpack://prore-mongo/./src/pages/ProviderPublic.vue","webpack://prore-mongo/./src/pages/ProviderPublic.vue?dc7a"],"sourcesContent":["<template>\n  <div>\n\n    <MDBContainer\n        style=\"position: relative; z-index: 1;\n        opacity: 0.8;\n        margin-top: 60px;\"\n    >\n\n      <div id=\"address_input\" style=\"background-color:white;\">\n        <MDBInput\n            label=\"Anna osoitteesi\"\n            v-model=\"address\"\n            id=\"autocomplite\"\n            size=\"lg\"\n            wrapperClass=\"mb-4\"/>\n      </div>\n\n\n\n\n      <div style=\"background-color: #575656;\" class=\"ui large segment form\">\n\n        <div style=\" margin-bottom: 20px;\" >\n          <Dropdown  @change=\"changedProfessional\"   v-model=\"prof\" :options=\"prodata\"   filter optionLabel=\"label\" optionGroupLabel=\"label\"  optionGroupChildren=\"items\" placeholder=\"Valitse ammattilainen\" class=\"w-full md:w-100rem\">\n\n            <template value=\"slotProps\" >\n              <div v-if=\"slotProps.value\" >\n                <!--              <img :alt=\"slotProps.value.label\" src=\"https://primefaces.org/cdn/primevue/images/flag/flag_placeholder.png\" :class=\"`mr-2 flag flag-${slotProps.value.code.toLowerCase()}`\" style=\"width: 18px\" />-->\n                <div >{{ slotProps.value.label }}</div>\n              </div>\n              <span v-else>\n              {{ slotProps.placeholder }}\n            </span>\n            </template>\n            <template  #optiongroup=\"slotProps\"  >\n              <div style=\"\" class=\"flex align-items-center\">\n                <!--              <img :alt=\"slotProps.option.label\" src=\"https://primefaces.org/cdn/primevue/images/flag/flag_placeholder.png\" :class=\"`mr-2 flag flag-${slotProps.option.code.toLowerCase()}`\" style=\"width: 18px\" />-->\n                <div >{{ slotProps.option.label }}</div>\n              </div>\n            </template>\n          </Dropdown>\n        </div>\n\n<!--        <div class=\"field\">-->\n\n<!--          <select id=\"listOfProfessions\" v-model=\"prof\">-->\n<!--            <option value=\"\">Valitse ammattisi</option>-->\n<!--            <template v-for=\"option in prodata\">-->\n\n<!--              &lt;!&ndash; if the `group` property is truthy &ndash;&gt;-->\n<!--              <optgroup v-if=\"option.group\" :label=\"option.group\" :key=\"option.group\">-->\n<!--                <option v-for=\"opt in option.options\" :value=\"opt.label\" :key=\"opt.label\">-->\n<!--                  {{ opt.label }}-->\n<!--                </option>-->\n<!--              </optgroup>-->\n<!--              &lt;!&ndash; otherwise &ndash;&gt;-->\n<!--              <option v-else :value=\"option\" :key=\"option.value\">-->\n<!--                {{ option.label }}-->\n<!--              </option>-->\n<!--            </template>-->\n<!--          </select>-->\n<!--        </div>-->\n\n        <div :class=\"{hideDistSelectPanel: !isDistSelection}\">\n          <select id=\"distanceOfClient\" v-model=\"distBtw\">\n            <option disabled value=\"1\">1 kilometriä ympärilläsi</option>\n            <option value=\"2\">2 km ympärilläsi</option>\n            <option value=\"3\">3 km ympärilläsi</option>\n            <option value=\"4\">4 km ympärilläsi</option>\n            <option value=\"5\">5 km ympärilläsi</option>\n            <option value=\"6\">6 km ympärilläsi</option>\n            <option value=\"7\">7 km ympärilläsi</option>\n            <option value=\"8\">8 km ympärilläsi</option>\n            <option value=\"9\">9 km ympärilläsi</option>\n            <option value=\"10\">10 km ympärilläsi</option>\n            <option value=\"20\">20 km ympärilläsi</option>\n            <option value=\"30\">30 km ympärilläsi</option>\n            <option value=\"40\">40 km ympärilläsi</option>\n            <option value=\"50\">50 km ympärilläsi</option>\n            <option value=\"60\">60 km ympärilläsi</option>\n            <option value=\"70\">70 km ympärilläsi</option>\n            <option value=\"80\">80 km ympärilläsi</option>\n            <option value=\"90\">90 km ympärilläsi</option>\n            <option value=\"100\">100 km ympärilläsi</option>\n            <option value=\"200\">200 km ympärilläsi</option>\n            <option value=\"300\">300 km ympärilläsi</option>\n          </select>\n        </div>\n\n\n        <h3\n            :class=\"{activeClients: !isActiveClients}\"\n        >\n          {{countOfSelectedClients + \" \" + client}}  tarvitsee palveluasi\n        </h3>\n        <h3\n            v-if=\"prof\"\n            :class=\"{noClients: isActiveClients}\"\n        >\n          Ei asiakkaita vielä!\n        </h3>\n\n      </div>\n\n\n\n      <MDBBtn color=\"dark\"\n              size=\"lg\"\n              block\n              @click=\"provide\"\n              style=\"position: relative; z-index:1; opacity: 1.2;\"\n      >\n        Tarjoa omaa palvelua\n      </MDBBtn>\n\n\n      <MDBBtn color=\"danger\"\n              size=\"lg\"\n              block\n              @click=\"$router.go(-1)\"\n              style=\"position: relative; z-index:1; opacity: 1.0;\"\n      >\n        Poistu\n      </MDBBtn>\n\n\n    </MDBContainer>\n<!--    <h3 style=\"margin-top: 50px;\">Kartta ladataan...</h3>-->\n<!--    <div class=\"spinner-border\" role=\"status\">-->\n<!--      <span class=\"visually-hidden\">Loading...</span>-->\n<!--    </div>-->\n\n    <section id=\"map\"></section>\n\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\n/*global google*/\nimport axios from 'axios'\nimport recipientService from '../service/recipients'\nimport providerService from '../service/providers'\nimport {\n  MDBContainer,\n  MDBInput,\n  MDBBtn\n} from \"mdb-vue-ui-kit\";\nimport proData from '@/components/profession/proList'\nimport Dropdown from 'primevue/dropdown';\nimport '@/css/pro.css'\nimport gMap from '../components/location'\nexport default {\n  name: \"provider-public\",\n  props: {\n    userIsProvider: Object,\n    isProviderLoggedIn: Boolean\n  },\n  components: {\n    Dropdown,\n    MDBContainer,\n    MDBInput,\n    MDBBtn\n  },\n  data () {\n    return {\n      prof: null,\n      userId: null,\n      providerId: null,\n      address: null,\n      myLat: null,\n      mylng: null,\n      countOfSelectedClients: 0,\n      isActiveClients: false,\n      client: \"\",\n      isDistSelection: false,\n      distBtw: 1,\n      currentProfessional: \"\",\n      prodata: proData\n    }\n  },\n  mounted () {\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      this.userId = user.id\n      //console.log(\"User token: \" + this.loggedUser.token)\n    }\n    this.resizeMap();\n    //console.log(\"Is provider in \" + this.isProviderLoggedIn)\n\n    //console.log(\"User id in providers \" + this.userId)\n\n\n\n    //this.setProviderId()\n\n    const myMarker = new google.maps.Marker({\n      icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'\n    })\n\n    this.userCurrentLocation();\n\n    // const selectProfession = document.getElementById(\"listOfProfessions\")\n    //\n    // selectProfession.addEventListener(\"change\", (event) => {\n    //   //alert(\"Profession selected: \" + event.target.value)\n    //   this.isDistSelection = true;\n    //   this.currentProfessional = event.target.value;\n    //   this.showClientLocationOnTheMap(event.target.value, this.distBtw)\n    // })\n\n    const selectDistanceBetween = document.getElementById(\"distanceOfClient\");\n\n    selectDistanceBetween.addEventListener(\"change\", (event) => {\n      this.distBtw = parseFloat(event.target.value);\n      //alert(\"Profession selected: \" + event.target.value)\n      console.log(\"Current distance in beginning \" + this.distBtw)\n      this.showClientLocationOnTheMap(this.currentProfessional, this.distBtw);\n      //this.showClient\n    })\n\n    const input = document.getElementById(\"autocomplite\");\n\n    const center = { lat: 50.064192, lng: -130.605469 };\n    const defaultBounds = {\n      north: center.lat + 0.1,\n      south: center.lat - 0.1,\n      east: center.lng + 0.1,\n      west: center.lng - 0.1,\n    };\n    const options = {\n      bounds: defaultBounds,\n      componentRestrictions: { country: \"fi\" },\n      fields: [\"address_components\", \"geometry\", \"icon\", \"name\", \"formatted_address\"],\n      strictBounds: false,\n      //types: [\"establishment\"],\n    };\n    const autocomplete = new google.maps.places.Autocomplete(input, options);\n\n    autocomplete.addListener(\"place_changed\", () => {\n      let place = autocomplete.getPlace()\n      this.myLat = place.geometry.location.lat();\n      this.myLng = place.geometry.location.lng();\n\n      this.getAddressFrom(place.geometry.location.lat(), place.geometry.location.lng())\n      this.address = place.formatted_address\n      console.log(place)\n    });\n\n\n\n\n    // let map = new google.maps.Map(document.getElementById(\"map\"), {\n    //   zoom: 13,\n    //   center: new google.maps.LatLng(this.myLat, this.myLng),\n    //   mapTypeId: google.maps.MapTypeId.ROADMAP,\n    //   accuracy: 50,\n    //\n    // });\n\n  },\n  methods: {\n    changedProfessional () {\n      console.log(\"Changed \" + this.prof.label);\n      this.showClientLocationOnTheMap(this.prof.label, this.distBtw);\n      this.currentProfessional = this.prof.label;\n      this.isDistSelection = true;\n    },\n    resizeMap() {\n      var myMap = document.getElementById('map');\n      myMap.style.height = \"100%\";\n      myMap.style.width = \"100%\";\n    },\n    provide (){\n      this.$router.push('/provider-form')\n      // if (!this.isProviderLoggedIn) {\n      //   this.$router.push('/provider-form')\n      // } else {\n      //   this.$router.push('/provider-panel')\n      // }\n\n      // if (this.userId === this.providerId) {\n      //   this.$router.push('/provider-form')\n      // } else {\n      //   this.$router.push('/provider-panel')\n      // }\n    },\n    userCurrentLocation () {\n      // const watchId = navigator.geolocation.watchPosition(position => {\n      //   const { latitude, longitude } = position.coords;\n      //   // Show a map centered at latitude / longitude.\n      //   console.log(\"Position lat: \" + position.coords.latitude)\n      //   console.log(\"Position lng: \" + position.coords.longitude)\n      //   this.showUserLocationOnTheMap(position.coords.latitude, position.coords.longitude)\n      // });\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const { latitude, longitude } = position.coords;\n          // Show a map centered at latitude / longitude.\n          this.myLat = latitude\n          this.myLng = longitude\n\n          this.showUserLocationOnTheMap (latitude, longitude)\n        });\n      }\n\n    },\n\n    pinSymbol(color) {\n      return {\n        path: 'M 0,0 C -2,-20 -10,-22 -10,-30 A 10,10 0 1,1 10,-30 C 10,-22 2,-20 0,0 z',\n        fillColor: color,\n        fillOpacity: 1,\n        strokeColor: '#000',\n        strokeWeight: 2,\n        scale: 1\n      };\n    },\n\n    showUserLocationOnTheMap (latitude, longitude) {\n      let map = new google.maps.Map(document.getElementById(\"map\"), {\n        zoom: 13,\n        center: new google.maps.LatLng(latitude, longitude),\n        // zoomControl: true,\n        // scaleControl: true,\n        // fullscreenControl: true,\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\n        accuracy: 50,\n\n      });\n      // new google.maps.Marker({\n      //   icon: 'http://maps.google.com/mapfiles/ms/icons/white-dot.png',\n      //   position: new google.maps.LatLng(latitude, longitude),\n      //   accuracy: 50,\n      //   map: map\n      // })\n\n      // Oma asukoha marker\n\n      // new google.maps.Marker({\n      //   position: new google.maps.LatLng(latitude, longitude),\n      //   accuracy: 50,\n      //   map: map,\n      //   icon: this.pinSymbol('yellow'),\n      //   label: { color: '#00aaff', fontWeight: 'bold', fontSize: '14px', text: 'Olen tällä' }\n      // })\n\n\n    },\n\n    getAddressFrom (lat, long) {\n      axios.get('https://maps.googleapis.com/maps/api/geocode/json?latlng=' + lat +\n          \",\" + long\n          + \"&key=\" + 'AIzaSyBDA2EBoGezJx51wQtxoW3Ecq5Ql8CCAiE')\n          .then(response => {\n            if (response.data.error_message) {\n              this.error = response.data.error_message;\n\n              console.log(response.data.error_message)\n            } else {\n              const map = new google.maps.Map(document.getElementById(\"map\"), {\n                zoom: 13,\n                center: new google.maps.LatLng(lat, long),\n                mapTypeId: google.maps.MapTypeId.ROADMAP\n              });\n\n              // new google.maps.Marker({\n              //   position: new google.maps.LatLng(lat, long),\n              //   accuracy: 50,\n              //   map: map,\n              //   icon: this.pinSymbol('yellow'),\n              //   label: { color: '#00aaff', fontWeight: 'bold', fontSize: '14px', text: 'Olen tällä' }\n              // })\n\n              //this.address = response.data.results[0].formatted_address\n              console.log(response.data.results.results[0].formatted_address)\n            }\n\n          })\n          .catch(error => {\n            this.error = error.message\n            console.log(error.message)\n          })\n    },\n\n    distanceBtw (originLat, originLng, destLat, destLng) {\n      var origin = new google.maps.LatLng(originLat, originLng);\n      var destination = new google.maps.LatLng(destLat, destLng);\n      return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n    },\n\n    otherUserLocations (recipients, profession, dist) {\n      let map = new google.maps.Map(document.getElementById(\"map\"), {\n        zoom: 9,\n        center: new google.maps.LatLng(this.myLat, this.myLng),\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n      });\n      console.log(\"Users count: \" + recipients.length)\n      console.log(\"Current distance \" + dist)\n      // new google.maps.Marker({\n      //   position: new google.maps.LatLng(this.myLat, this.myLng),\n      //   accuracy: 50,\n      //   map: map,\n      //   icon: this.pinSymbol('yellow'),\n      //   label: { color: '#00aaff', fontWeight: 'bold', fontSize: '14px', text: 'Olen tällä' }\n      // })\n\n      let count = 0;\n      if (recipients.length > 0) {\n        for (let pos = 0; pos < recipients.length; pos++) {\n\n          //console.log(\"Client latitude: \" + recipient[pos].latitude)\n          //console.log(\"Client longitude: \" + recipient[pos].longitude)\n\n          recipients[pos].professional.forEach(prof => {\n            if (prof === profession) {\n              //this.countOfSelectedClient++;\n              console.log(\"Distance btw \" + this.distanceBtw(this.myLat, this.myLng, recipients[pos].latitude, recipients[pos].longitude));\n              this.isActiveClients = true;\n\n              if (this.distanceBtw(this.myLat, this.myLng, recipients[pos].latitude, recipients[pos].longitude) <= dist) {\n                count ++;\n                new google.maps.Marker({\n                  position: new google.maps.LatLng(recipients[pos].latitude, recipients[pos].longitude),\n                  map: map\n                })\n              }\n\n            }\n          })\n\n        }\n        if (count > 0) {\n          this.isActiveClients = true;\n        } else {\n          this.isActiveClients = false;\n        }\n        this.countOfSelectedClients = count;\n        this.identifyClientText();\n        //console.log(\"Count \" + this.countOfSelectedClients)\n\n      }\n\n    },\n\n    // renderClients (event) {\n    //   console.log(\"Event value \" + event.target.value)\n    //   //this.countOfSelectedClients = 0;\n    //\n    //   if (event.target.value) {\n    //     // @click=\"renderClients($event)\"\n    //     this.showClientLocationOnTheMap(event.target.value)\n    //\n    //   }\n    //   this.prof = event.target.value\n    //\n    //   event.target.value = \"\"\n    //\n    // },\n\n\n    async showClientLocationOnTheMap (profession, dist) {\n\n\n      const recipients = await recipientService.getRecipients()\n      if (recipients !== null) {\n        this.otherUserLocations(recipients, profession, dist);\n      }\n      // visibility: hidden;\n\n    },\n    identifyClientText () {\n      console.log(\"Klientide arv: \" + this.countOfSelectedClients)\n      if (this.countOfSelectedClients > 1) {\n        this.client = \"asiakasta\"\n      } else {\n        this.client = \"asiakas\"\n      }\n    }\n\n  }\n}\n</script>\n\n<style>\n.ui.button,\n.dot.circle {\n  background-color: #ff5a5f;\n  color: white;\n}\n\n.pac-icon {\n  display: none;\n}\n.pac-item {\n  padding: 10px;\n  font-size: 16px;\n  cursor: pointer;\n}\n.pac-item:hover {\n  background-color: #ececec;\n}\n.pac-item-query {\n  font-size: 16px;\n}\n.spinner-border {\n  margin-top: 100px;\n}\n/*#map {background: transparent url(/src/assets/Loading_icon.gif) no-repeat center center;}*/\n\n#map {\n  background: url(/src/assets/map.gif)  no-repeat center center;\n  position: absolute;\n  top: 50px;\n  right: 0;\n  bottom: 0;\n  left: 0;\n }\n\n@media only screen and (max-width: 1000px) {\n  #address_input {\n    display: none !important;\n  }\n}\n\n.activeClients {\n  display: none !important;\n}\n.noClients {\n  display: none !important;\n}\n.hideDistSelectPanel {\n  display: none !important;\n}\n\n</style>","import { render } from \"./ProviderPublic.vue?vue&type=template&id=787148e3\"\nimport script from \"./ProviderPublic.vue?vue&type=script&lang=js\"\nexport * from \"./ProviderPublic.vue?vue&type=script&lang=js\"\n\nimport \"./ProviderPublic.vue?vue&type=style&index=0&id=787148e3&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["id","style","class","value","_createElementVNode","disabled","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_createElementBlock","_createVNode","_component_MDBContainer","_hoisted_1","_component_MDBInput","label","$data","address","$event","size","wrapperClass","_hoisted_2","_hoisted_3","_component_Dropdown","onChange","$options","changedProfessional","prof","options","prodata","filter","optionLabel","optionGroupLabel","optionGroupChildren","placeholder","optiongroup","_withCtx","slotProps","_hoisted_7","_toDisplayString","option","_hoisted_4","_ctx","_hoisted_5","_hoisted_6","_normalizeClass","hideDistSelectPanel","isDistSelection","distBtw","activeClients","isActiveClients","countOfSelectedClients","client","noClients","_component_MDBBtn","color","block","onClick","provide","_cache","$router","go","_hoisted_30","name","props","userIsProvider","Object","isProviderLoggedIn","Boolean","components","Dropdown","MDBContainer","MDBInput","MDBBtn","data","userId","providerId","myLat","mylng","currentProfessional","proData","mounted","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","this","resizeMap","google","maps","Marker","icon","userCurrentLocation","selectDistanceBetween","document","getElementById","addEventListener","event","parseFloat","target","console","log","showClientLocationOnTheMap","input","center","lat","lng","defaultBounds","north","south","east","west","bounds","componentRestrictions","country","fields","strictBounds","autocomplete","places","Autocomplete","addListener","place","getPlace","geometry","location","myLng","getAddressFrom","formatted_address","methods","myMap","height","width","push","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","showUserLocationOnTheMap","pinSymbol","path","fillColor","fillOpacity","strokeColor","strokeWeight","scale","Map","zoom","LatLng","mapTypeId","MapTypeId","ROADMAP","accuracy","long","axios","get","then","response","error_message","error","results","catch","message","distanceBtw","originLat","originLng","destLat","destLng","origin","destination","spherical","computeDistanceBetween","toFixed","otherUserLocations","recipients","profession","dist","map","length","count","pos","professional","forEach","identifyClientText","async","recipientService","getRecipients","__exports__","render"],"sourceRoot":""}