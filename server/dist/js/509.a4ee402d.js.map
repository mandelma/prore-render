{"version":3,"file":"js/509.a4ee402d.js","mappings":"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","sources":["webpack://prore-mongo/./src/service/pwAuth.js","webpack://prore-mongo/./src/components/notifications/errorMessage.js","webpack://prore-mongo/./src/components/Reset.vue","webpack://prore-mongo/./src/components/Reset.vue?7327"],"sourcesContent":["const axios = require('axios');\r\nconst baseUrl = '/api/reset_pw'\r\n\r\nconst forgot = async (email) => {\r\n    const result = await axios.post(`${baseUrl}/forgot_auth`, email);\r\n    return result.data;\r\n}\r\n\r\nconst reset = async (token) => {\r\n    const result = await axios.get(`${baseUrl}/reset_auth/${token}`);\r\n    return result.data;\r\n}\r\n\r\n// Reset password\r\nconst resetAuth = async (auth_data) => {\r\n    const pw = await axios.post(`${baseUrl}/reset_auth`, auth_data);\r\n    return pw.data;\r\n}\r\n\r\nexport default { forgot, reset, resetAuth };","const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n            <img className={'errorImg'} alt={'error'} src={require('@/assets/error.png')}/>\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage","<template>\r\n  <MDBContainer>\r\n    <MDBBtn v-if=\"!isToken \" block outline=\"warning\" @click=\"handleOpenForm\">Aloita salasanan vaihtamista</MDBBtn>\r\n    <form v-else style=\"margin-top: 100px;\" @submit.prevent=\"handleSubmitReset\">\r\n\r\n      <MDBInput\r\n          type=\"password\"\r\n          size=\"lg\"\r\n          label=\"Uusi salasana\"\r\n          white\r\n          v-model=\"newPw\"\r\n          wrapperClass=\"mb-4\"\r\n      />\r\n\r\n      <MDBInput\r\n          type=\"password\"\r\n          size=\"lg\"\r\n          label=\"Toista salasana\"\r\n          white\r\n          v-model=\"confirmNewPw\"\r\n          wrapperClass=\"mb-4\"\r\n      />\r\n\r\n<!--      <button type=\"submit\" class=\"btn btn-primary btn-block\">Varmista uusi salasana</button>-->\r\n      <MDBBtn block type=\"submit\" outline=\"success\">Varmista uusi salasana</MDBBtn>\r\n<!--      <h3> Reset password</h3>-->\r\n<!--      <div class=\"form-group\">-->\r\n<!--        <label>Uusi salasana</label>-->\r\n<!--        <input type=\"password\" class=\"form-control\" placeholder=\"Uusi salasana\" v-model=\"newPw\"/>-->\r\n\r\n<!--      </div>-->\r\n<!--      <div class=\"form-group\">-->\r\n<!--        <label>Toista salasana</label>-->\r\n<!--        <input type=\"password\" class=\"form-control\" placeholder=\"Toista salasana\" v-model=\"confirmNewPw\"/>-->\r\n\r\n<!--        <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>-->\r\n<!--      </div>-->\r\n    </form>\r\n    <success-message\r\n        :message = successInfo\r\n    />\r\n\r\n    <error-message\r\n        :message = errorInfo\r\n    />\r\n<!--    <p style=\"color: white;\">Token {{token}}</p>-->\r\n  </MDBContainer>\r\n\r\n</template>\r\n\r\n<script>\r\nimport authService from '../service/pwAuth'\r\nimport successMessage from '../components/notifications/successMessage'\r\nimport errorMessage from '../components/notifications/errorMessage'\r\nimport {\r\n  MDBContainer,\r\n    MDBInput,\r\n    MDBBtn\r\n} from 'mdb-vue-ui-kit'\r\nexport default {\r\n  name: \"Reset\",\r\n  components: {\r\n    successMessage,\r\n    errorMessage,\r\n    MDBContainer,\r\n    MDBInput,\r\n    MDBBtn\r\n  },\r\n  data () {\r\n    return {\r\n      newPw: \"\",\r\n      confirmNewPw: \"\",\r\n      isToken: false,\r\n      token: this.$route.params.token,\r\n      successInfo: null,\r\n      errorInfo: null\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    async handleOpenForm () {\r\n      const result = await authService.reset(this.token)\r\n      if (result === \"valid\") {\r\n        console.log(\"Token \" + result)\r\n        this.isToken = true;\r\n      } else {\r\n        console.log(\"Token \" + result )\r\n        this.errorInfo = result;\r\n        setTimeout(() => {\r\n          this.errorInfo = null\r\n          this.$router.push('/forgot_auth')\r\n        }, 3000)\r\n\r\n      }\r\n\r\n    },\r\n    async handleSubmitReset () {\r\n      if (this.newPw !== this.confirmNewPw) {\r\n        this.errorInfo = \"Salasana on oltava sama!\"\r\n        setTimeout(() => {\r\n          this.errorInfo = null\r\n        }, 3000)\r\n      } else {\r\n        const auth = await authService.resetAuth({\r\n          token: this.token,\r\n          password: this.newPw\r\n        })\r\n        console.log(\"Auth--- \" + auth);\r\n        if (auth) {\r\n          this.successInfo = \"Salasanan luonti onnistui!\"\r\n          setTimeout(() => {\r\n            this.successInfo = null\r\n            this.$router.push('/login')\r\n          }, 3000)\r\n\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.error {\r\n  color: white;\r\n  background: #f5839c;\r\n  font-size: 20px;\r\n  border: solid #f75959;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n</style>","import { render } from \"./Reset.vue?vue&type=template&id=946dca7c&scoped=true\"\nimport script from \"./Reset.vue?vue&type=script&lang=js\"\nexport * from \"./Reset.vue?vue&type=script&lang=js\"\n\nimport \"./Reset.vue?vue&type=style&index=0&id=946dca7c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-946dca7c\"]])\n\nexport default __exports__"],"names":["axios","require","baseUrl","forgot","async","result","post","email","data","reset","get","token","resetAuth","pw","auth_data","ErrorMessage","message","_createVNode","_createBlock","_component_MDBContainer","default","_withCtx","$data","isToken","_createElementBlock","key","style","onSubmit","_cache","_withModifiers","args","$options","handleSubmitReset","_component_MDBInput","type","size","label","white","modelValue","newPw","$event","wrapperClass","confirmNewPw","_component_MDBBtn","block","outline","_createTextVNode","_","onClick","handleOpenForm","_component_success_message","successInfo","_component_error_message","errorInfo","name","components","successMessage","errorMessage","MDBContainer","MDBInput","MDBBtn","this","$route","params","methods","authService","console","log","setTimeout","$router","push","auth","password","__exports__","render"],"sourceRoot":""}