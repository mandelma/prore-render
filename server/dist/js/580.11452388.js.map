{"version":3,"file":"js/580.11452388.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/profession/proList.js","webpack://prore-mongo/./src/service/image.js","webpack://prore-mongo/./src/pages/RecipientForm.vue","webpack://prore-mongo/./src/pages/RecipientForm.vue?59c8"],"sourcesContent":["// const list = [\r\n//     \"Siivooja\",\r\n//     \"Hitsaaja\",\r\n//     \"Bussikuski\"\r\n// ]\r\n\r\nconst construction = [\r\n    {\"label\": \"Hitsaaja\", \"value\": \"1\"},\r\n    {\"label\": \"Putkimies\", \"value\": \"2\"},\r\n    {\"label\": \"Sähkömies\", \"value\": \"3\"}\r\n]\r\nconst realEstate = [\r\n    {\"label\": \"Siivooja\", \"value\": \"4\"}\r\n]\r\n\r\n// const options = [\r\n//     {\"group\":\"Fruits\",\"options\":[{\"label\":\"Apple\",\"value\":\"f-1\"},{\"label\":\"Banana\",\"value\":\"f-2\"},{\"label\":\"Orange\",\"value\":\"f-3\"}]},\r\n//     {\"label\":\"Chocolate\",\"value\":\"m-1\"},\r\n//     {\"label\":\"Cake\",\"value\":\"m-2\"},\r\n//     {\"group\": \"Construction\", \"options\": construction},\r\n//     {\"group\":\"Vegetables\",\"options\":[{\"label\":\"Cabbage\",\"value\":\"v-1\"},{\"label\":\"Tomato\",\"value\":\"v-2\"}]},\r\n//     {\"label\":\"Puddin\",\"value\":\"m-3\"}\r\n// ]\r\n\r\nconst options = [\r\n    {\"group\": \"Rakennus\", \"options\": construction},\r\n    {\"group\": \"Kiinteistöala\", \"options\": realEstate}\r\n]\r\n\r\n\r\n\r\nexport default options;","const axios = require('axios')\nconst baseUrl = '/api/upload'\n\nconst getAll = async () => {\n    const result = await axios.get(baseUrl)\n    return result.data\n}\n\nconst create = async (newImageData) => {\n    const result = await axios.post(baseUrl, newImageData, {})\n    return result.data\n}\n\n// Create image for avatar\nconst createProfileImage =  async (id, imageData) => {\n    const image = await axios.post(`${baseUrl}/${id}/avatar`, imageData);\n    return image.data;\n}\n\n// Update user avatar\nconst newAvatar = async (id, avatar) => {\n    const avt = await axios.post(`${baseUrl}/${id}/update_avatar`, avatar);\n    return avt.data;\n}\n\nconst updateImage = async (id, newImageData) => {\n    const result = await axios.put(`${baseUrl}/${id}`, newImageData)\n    return result.data\n}\n\nconst remove = async (id, recipientId) => {\n    await axios.delete(`${baseUrl}/${id}/${recipientId}`)\n}\n\nexport default { getAll, create, createProfileImage, newAvatar, updateImage, remove }","<template>\n\n  <div>\n    <h2 style=\"margin-top: 200px;\">- Uusi tilaus -</h2>\n\n    <MDBContainer>\n      <form class=\"g-3 needs-validation\" novalidate @submit.prevent=\"checkForm\">\n        <MDBInput\n            label=\"Anna otsikko\"\n            v-model=\"header\"\n            id=\"header\"\n            size=\"lg\"\n            invalidFeedback=\"Ole hyvä ja kirjoita otsikko.\"\n            validFeedback=\"Ok!\"\n            required\n            wrapperClass=\"mb-4\"/>\n\n        <p v-if=\"recipientBookings.length > 0\" style=\"text-align: left;\">Osoite: {{ recipientBookings[0].address }}</p>\n\n        <MDBInput\n            label=\"Anna toinen osoitteesi\"\n            v-model=\"address\"\n            id=\"osoite\"\n            size=\"lg\"\n            invalidFeedback=\"Ole hyvä ja kirjoita osoite.\"\n            validFeedback=\"Ok!\"\n            required\n            wrapperClass=\"mb-4\"/>\n\n        <div class=\"ui form\">\n          <div class=\"field\">\n<!--            <select v-if=\"isNotSelected\"-->\n<!--                    id=\"noSelected\"-->\n<!--                    style=\"border-color: red; color: red; margin-bottom: 20px;\"-->\n<!--                    v-model=\"professional\"-->\n<!--                    @change=\"isNotSelected = false\">-->\n<!--              <option disabled value=\"\" >Valitse ammattilainen</option>-->\n<!--              <option>Putkimies</option>-->\n<!--              <option>Sähkömies</option>-->\n<!--              <option>Siivooja</option>-->\n<!--            </select>-->\n<!--            <select v-else v-model=\"professional\"-->\n<!--                    style=\"margin-bottom: 20px;\">-->\n<!--              <option disabled value=\"\">Valitse ammattilainen</option>-->\n<!--              <option>Putkimies</option>-->\n<!--              <option>Sähkömies</option>-->\n<!--              <option>Siivooja</option>-->\n<!--            </select>-->\n\n            <select\n                v-if=\"isNotSelected\"\n                id=\"noSelected\"\n                style=\"border-color: red; color: red; margin-bottom: 20px;\"\n                v-model=\"professional\"\n                @change=\"isNotSelected = false\"\n            >\n              <option value=\"\">Valitse ammattilainen</option>\n              <template v-for=\"option in prodata\">\n\n                <!-- if the `group` property is truthy -->\n                <optgroup v-if=\"option.group\" :label=\"option.group\" :key=\"option.group\">\n                  <option v-for=\"opt in option.options\" :value=\"opt.label\" :key=\"opt.label\">\n                    {{ opt.label }}\n                  </option>\n                </optgroup>\n                <!-- otherwise -->\n                <option v-else :value=\"option\" :key=\"option.value\">\n                  {{ option.label }}\n                </option>\n              </template>\n            </select>\n\n            <select\n                v-else\n                v-model=\"professional\"\n                style=\"margin-bottom: 20px;\"\n            >\n              <option value=\"\">Valitse ammattilainen</option>\n              <template v-for=\"option in prodata\">\n\n                <!-- if the `group` property is truthy -->\n                <optgroup v-if=\"option.group\" :label=\"option.group\" :key=\"option.group\">\n                  <option v-for=\"opt in option.options\" :value=\"opt.label\" :key=\"opt.label\">\n                    {{ opt.label }}\n                  </option>\n                </optgroup>\n                <!-- otherwise -->\n                <option v-else :value=\"option\" :key=\"option.value\">\n                  {{ option.label }}\n                </option>\n              </template>\n            </select>\n\n          </div>\n        </div>\n\n\n        <VueDatePicker\n            style=\"margin-bottom: 20px;\"\n            v-model=\"date\"\n            :min-date=\"new Date()\"\n            placeholder=\"Missä ajalla haluat ammattilaista?\"\n            @internal-model-change=\"handleInternalDate\"\n            :state=\"isNoDate ? false : null\"\n        >\n\n        </VueDatePicker>\n\n\n        <!--\n    Everything is wrapped in a label, which acts as a clickable wrapper around a form element.\n    In this case, the file input.\n  -->\n\n        <MDBContainer style=\"margin-bottom: 20px;\">\n          <MDBRow>\n            <MDBCol md=\"4\">\n              <img v-if=\"showImage\" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>\n              <label v-if=\"!isUploaded\" for=\"file-upload\" class=\"custom-file-upload\">\n\n                <span v-if=\"value\">\n                    Muokkaa kuva: {{value.name}}\n\n                </span>\n                <span v-else>Valitse kuva tehtävästä</span>\n\n              </label>\n\n              <input id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>\n\n              <MDBBtn v-if=\"isImageSelected\" outline=\"danger\" size=\"lg\" block @click=\"removeFile\">Poista valitsettu kuva</MDBBtn>\n              <MDBBtn v-if=\"isImageSelected\"\n                      outline=\"success\"\n                      size=\"lg\"\n                      block\n                      style=\"margin-bottom: 10px;\"\n                      @click=\"uploadImage\">Lataa valitsettu kuva</MDBBtn>\n\n            </MDBCol>\n\n            <MDBCol md=\"8\">\n              <MDBTextarea\n                  label=\"Tehtävän kuvaus...\"\n                  rows=\"4\"\n                  v-model=\"explanation\"\n                  invalidFeedback=\"Ole hyvä ja kirjoita tehtävän kuvaus.\"\n                  validFeedback=\"Ok!\"\n                  required\n              />\n            </MDBCol>\n          </MDBRow>\n\n\n        </MDBContainer>\n\n\n\n\n        <MDBBtn outline=\"success\" size=\"lg\" block @click=\"addRecipient\" style=\"margin-top:20px; margin-bottom: 20px;\" type=\"submit\">Tee tilaus</MDBBtn>\n\n      </form>\n\n\n      <!--\n      <h1>{{result}}</h1>\n      <MDBBtn outline=\"success\" size=\"lg\" block @click=\"this.$router.push('/received')\">Asiakkaan paneeli</MDBBtn>\n\n      <MDBBtn outline=\"success\" size=\"lg\" block @click=\"findRecipients\">findRecipients</MDBBtn>\n\n\n\n      <MDBBtn outline=\"danger\" size=\"lg\" block @click=\"remFile\">Remove file</MDBBtn>\n      -->\n      <MDBBtn outline=\"danger\" size=\"lg\" block @click=\"cancelRecipientForm\" style=\"margin-bottom: 50px;\"> Poistu </MDBBtn>\n\n\n    </MDBContainer>\n\n  </div>\n\n</template>\n\n<script>\n/* eslint-disable */\n/*global google*/\n//const fs = require('fs');\n\nimport VueDatePicker from '@vuepic/vue-datepicker';\nimport {\n  MDBBtn,\n  MDBContainer,\n  MDBInput,\n  MDBRow,\n  MDBCol,\n  MDBTextarea\n} from \"mdb-vue-ui-kit\";\nimport recipientService from '../service/recipients'\nimport uploadService from '../service/image'\nimport proData from '@/components/profession/proList'\n\n//import ImageSelect from '../components/ImageSelect.vue'\nimport { format } from 'date-fns'\nimport {ref} from \"vue\";\n\n\n\n//import mapService from '../service/map'\n\n\nexport default {\n  name: \"recipient-form\",\n  props: {\n    recipientBookings: Array\n  },\n  components: {\n    MDBBtn,\n    MDBContainer,\n    MDBInput,\n    MDBRow,\n    MDBCol,\n    MDBTextarea,\n    //ImageSelect,\n    VueDatePicker\n  },\n  data () {\n\n    return {\n      recipientId: null,\n      header: \"\",\n      address: null,\n      lat: null,\n      lng: null,\n      isNoDate: false,\n      professional: \"\",\n      addFile: null,\n      dateTest: null,\n      calendarTooltips: [],\n      value: null,\n      aaa: \"\",\n      file: null,\n      f: null,\n      prodata: proData\n    }\n  },\n\n  setup () {\n    const date = ref(null)\n    const explanation = ref(\"\")\n    const isImageSelected = ref(false)\n    const imgId = ref(null)\n    const showImage = ref(null)\n    const isShowImage = ref(false)\n    const isUploaded = ref(false)\n    const isNotSelected = ref(false)\n    //const file = ref(null)\n\n\n    return {\n      date,\n      explanation,\n\n      isImageSelected,\n      imgId,\n      showImage,\n      isShowImage,\n      isUploaded,\n      isNotSelected\n\n\n    }\n  },\n  computed: {\n    currentRouteName() {\n      return this.$route.name;\n    }\n  },\n\n  async mounted () {\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      this.recipientId = user.id\n      //console.log(\"User token: \" + this.loggedUser.token)\n      console.log(\"User id in recipient: \" + user.id)\n    }\n\n    //console.log(\"Google key test: \" + await mapService.getLocation())\n\n    const center = { lat: 50.064192, lng: -130.605469 };\n    // Create a bounding box with sides ~10km away from the center point\n    const defaultBounds = {\n      north: center.lat + 0.1,\n      south: center.lat - 0.1,\n      east: center.lng + 0.1,\n      west: center.lng - 0.1,\n    };\n    const input = document.getElementById(\"osoite\");\n    const options = {\n      bounds: defaultBounds,\n      componentRestrictions: { country: \"fi\" },\n      fields: [\"address_components\", \"geometry\", \"icon\", \"name\", \"formatted_address\"],\n      strictBounds: false,\n      //types: [\"establishment\"],\n    };\n    const autocomplete = new google.maps.places.Autocomplete(input, options);\n\n    autocomplete.addListener(\"place_changed\", () => {\n      let place = autocomplete.getPlace()\n      this.lat = place.geometry.location.lat()\n      this.lng = place.geometry.location.lng()\n\n      this.address = place.formatted_address\n      console.log(place)\n    })\n  },\n\n  methods: {\n    cancelRecipientForm () {\n      if (this.currentRouteName === 'r-form') {\n        this.$router.push('/received')\n        //console.log(\"Name is r-form\")\n      } else {\n        this.$router.push('/')\n      }\n\n      // this.$router.push('/')\n    },\n    async findRecipients () {\n      const recipients = await recipientService.getOwnBookings(this.recipientId)\n      console.log(\"Recipients \" + recipients.length)\n\n    },\n    async remFile () {\n\n      await uploadService.remove('644cff805261bf7d9943c5da',  '644cff875261bf7d9943c5dd');\n    },\n    handleFileChange(e) {\n      //this.$emit('input', e.target.client[0])\n\n      try {\n\n        const files = e.target.files[0]\n        console.log('event target client ', e.target.files[0])\n        if (files) {\n          this.showImage = URL.createObjectURL(files)\n          this.file = e.target.files[0];\n        }\n\n      } catch (err) {\n        console.log('Error:', err)\n      }\n\n      this.value = e.target.files[0]\n      if (e.target.files[0]) {\n        this.isImageSelected = true;\n      } else {\n        this.isImageSelected = false;\n      }\n    },\n    async uploadImage () {\n      const data = new FormData();\n      data.append('file', this.file, this.file.name)\n      const img = await uploadService.create(data);\n\n      if (img) {\n        this.imgId = img.imgCreated._id;\n        this.file = null;\n        //this.showImage = null;\n        //this.value = null;\n        this.isImageSelected = false;\n        this.isUploaded = true;\n      }\n\n\n\n\n    },\n    removeFile () {\n      this.value = null;\n      this.isImageSelected = false;\n      this.showImage = null;\n    },\n    formatDate (date = Date) {\n      //let date = datee;\n      if (!date) {\n        return null\n      }\n      return format(date, 'dd.MM.yyyy, HH:mm');\n    },\n\n    backToDashboard () {\n\n    },\n    getDate () {\n      // date Thu Apr 20 2023 10:27:00 GMT+0300\n      console.log(\"selected date: \" + this.date.getDate())\n    },\n    handleInternalDate () {\n      console.log(\"Handled\")\n      this.isNoDate = false;\n    },\n\n    // New client to the database\n    async addRecipient () {\n      let recipient;\n      if (this.address === null) {\n        this.address = this.recipientBookings[0].address;\n        this.lat = this.recipientBookings[0].latitude;\n        this.lng = this.recipientBookings[0].longitude;\n      }\n      if (this.professional === \"\") {\n        this.isNotSelected = true;\n      }\n      if (!this.date) {\n        this.isNoDate = true;\n      }\n      if (this.date) {\n        recipient = {\n          created: this.date,\n          header: this.header,\n          address: this.address,\n          latitude: this.lat,\n          longitude: this.lng,\n          professional: this.professional,\n          year: this.date.getFullYear(),\n          month: this.date.getMonth(),\n          day: this.date.getDate(),\n          hours: this.date.getHours(),\n          minutes: this.date.getMinutes(),\n          description: this.explanation,\n          imageId: this.imgId\n        }\n      }\n\n\n      if (this.header && this.address && this.professional && this.date && this.explanation) {\n        const booking = await recipientService.addRecipient(this.recipientId, recipient)\n        this.$emit('booking:update', booking)\n        console.log(\"Booking--- \" + booking);\n        this.$router.push('/received')\n      } else {\n        console.log(\"Something went wrong\")\n        console.log(\"Aadress \" + this.address)\n        console.log(\"header \" + this.header)\n        console.log(\"Explanation \" + this.explanation)\n        console.log(\"Profession \" + this.professional)\n        console.log(\"Date \" + this.date)\n      }\n\n      //const recipientAdded = await recipientService.addRecipient(this.recipientId, recipient)\n\n    },\n    checkForm (event=Event) {\n      event.target.classList.add(\"was-validated\");\n    }\n  }\n}\n</script>\n\n<style >\n\n.action-row {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 20px;\n  width: 100%;\n}\n\n\n\ninput[type=\"file\"] {\n  display: none;\n}\n\n.custom-file-upload {\n  width: 100%;\n\n  color: white;\n  background-color: #87958e;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 10px 12px;\n  margin-bottom: 10px;\n  cursor: pointer;\n}\n\n\n\n</style>","import { render } from \"./RecipientForm.vue?vue&type=template&id=15f06060\"\nimport script from \"./RecipientForm.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientForm.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientForm.vue?vue&type=style&index=0&id=15f06060&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["construction","realEstate","options","axios","require","baseUrl","getAll","async","result","get","data","create","post","newImageData","createProfileImage","id","imageData","image","newAvatar","avatar","avt","updateImage","put","remove","recipientId","delete","_createElementVNode","style","class","value","for","_createElementBlock","_hoisted_1","_createVNode","_component_MDBContainer","novalidate","onSubmit","_cache","_withModifiers","args","$options","checkForm","_component_MDBInput","label","$data","header","$event","size","invalidFeedback","validFeedback","required","wrapperClass","$props","recipientBookings","length","_hoisted_2","_toDisplayString","address","_hoisted_3","_hoisted_4","$setup","isNotSelected","professional","onChange","_hoisted_5","_Fragment","_renderList","prodata","option","group","key","opt","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_11","_hoisted_12","_component_VueDatePicker","date","Date","placeholder","onInternalModelChange","handleInternalDate","state","isNoDate","_component_MDBRow","_component_MDBCol","md","showImage","src","alt","isUploaded","_hoisted_14","_hoisted_15","name","_hoisted_16","type","handleFileChange","isImageSelected","_createBlock","_component_MDBBtn","outline","block","onClick","removeFile","uploadImage","_component_MDBTextarea","rows","explanation","addRecipient","cancelRecipientForm","props","Array","components","MDBBtn","MDBContainer","MDBInput","MDBRow","MDBCol","MDBTextarea","VueDatePicker","lat","lng","addFile","dateTest","calendarTooltips","aaa","file","f","proData","setup","ref","imgId","isShowImage","computed","currentRouteName","this","$route","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","console","log","center","defaultBounds","north","south","east","west","input","document","getElementById","bounds","componentRestrictions","country","fields","strictBounds","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","geometry","location","formatted_address","methods","$router","push","recipients","recipientService","getOwnBookings","uploadService","e","files","target","URL","createObjectURL","err","FormData","append","img","imgCreated","_id","formatDate","format","backToDashboard","getDate","recipient","latitude","longitude","created","year","getFullYear","month","getMonth","day","hours","getHours","minutes","getMinutes","description","imageId","booking","$emit","event","Event","classList","add","__exports__","render"],"sourceRoot":""}