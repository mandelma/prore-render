{"version":3,"file":"js/760.4737ae71.js","mappings":"uIAAA,MAAMA,EAAeA,EAAGC,aACJ,OAAZA,EACO,MAGXC,EAAAA,EAAAA,IAAA,2BAGSD,GAAOC,EAAAA,EAAAA,IAAA,iBACQ,WAAU,IAAO,QAAO,IAAOC,EAAQ,OAAqB,QAOxF,K,qGCyFaC,MAAM,e,gOAxGjBC,EAAAA,EAAAA,IA4HM,2BA3HJC,EAAAA,EAAAA,IAA6E,MAAzEC,MAAA,6CAA6C,2BAAuB,KACxEL,EAAAA,EAAAA,IAwHeM,EAAA,CAxHDD,MAAA,uBAAyB,CAH3CE,SAAAC,EAAAA,EAAAA,KAKM,IAEE,EAFFR,EAAAA,EAAAA,IAEES,EAAA,CADGV,QAAUW,EAAAC,sBAAoB,qBAEnCX,EAAAA,EAAAA,IAEES,EAAA,CADGV,QAAUW,EAAAE,kBAAgB,qBAE/BZ,EAAAA,EAAAA,IAEES,EAAA,CADGV,QAAUW,EAAAG,2BAAyB,qBAExCb,EAAAA,EAAAA,IAEEc,EAAA,CADCf,QAAUW,EAAAK,8BAA4B,qBAEzCX,EAAAA,EAAAA,IAyGO,QAzGCY,SAAMC,EAAA,KAAAA,EAAA,IAjBpBC,EAAAA,EAAAA,KAAA,IAAAC,IAiB8BC,EAAAC,UAAAD,EAAAC,YAAAF,IAAQ,cAAEG,aAAa,O,EAI7CtB,EAAAA,EAAAA,IAQEuB,EAAA,CAPEC,KAAK,OACLC,KAAK,KACLC,MAAM,UACNC,MAAA,GACAC,GAAG,oBA1BfC,WA2BqBC,EAAAC,kBA3BrB,sBAAAd,EAAA,KAAAA,EAAA,GAAAe,GA2BqBF,EAAAC,kBAAiBC,GAC1BC,aAAa,Q,wBAIjBjC,EAAAA,EAAAA,IAQEuB,EAAA,CAPEC,KAAK,OACLC,KAAK,KACLC,MAAM,WACNC,MAAA,GACAC,GAAG,mBArCfC,WAsCqBC,EAAAI,iBAtCrB,sBAAAjB,EAAA,KAAAA,EAAA,GAAAe,GAsCqBF,EAAAI,iBAAgBF,GACzBC,aAAa,Q,wBAIjBjC,EAAAA,EAAAA,IAQEuB,EAAA,CAPEC,KAAK,OACLC,KAAK,KACLC,MAAM,iBACNC,MAAA,GACAC,GAAG,mBAhDfC,WAiDqBC,EAAAK,iBAjDrB,sBAAAlB,EAAA,KAAAA,EAAA,GAAAe,GAiDqBF,EAAAK,iBAAgBH,GACzBC,aAAa,Q,wBAGjBjC,EAAAA,EAAAA,IAQEuB,EAAA,CAPEC,KAAK,OACLC,KAAK,KACLC,MAAM,QACNC,MAAA,GACAC,GAAG,gBA1DfC,WA2DqBC,EAAAM,cA3DrB,sBAAAnB,EAAA,KAAAA,EAAA,GAAAe,GA2DqBF,EAAAM,cAAaJ,GACtBC,aAAa,Q,wBAMjBjC,EAAAA,EAAAA,IAQEuB,EAAA,CAPEC,KAAK,WACLC,KAAK,KACLC,MAAM,WACNC,MAAA,GACAC,GAAG,mBAvEfC,WAwEqBC,EAAAO,iBAxErB,sBAAApB,EAAA,KAAAA,EAAA,GAAAe,GAwEqBF,EAAAO,iBAAgBL,GACzBC,aAAa,Q,wBAIjBjC,EAAAA,EAAAA,IAQEuB,EAAA,CAPEC,KAAK,WACLC,KAAK,KACLC,MAAM,kBACNC,MAAA,GACAC,GAAG,yBAlFfC,WAmFqBC,EAAAQ,uBAnFrB,sBAAArB,EAAA,KAAAA,EAAA,GAAAe,GAmFqBF,EAAAQ,uBAAsBN,GAC/BC,aAAa,Q,wBAIjBjC,EAAAA,EAAAA,IAOEuC,EAAA,CANEb,MAAM,eACNC,MAAA,GACAF,KAAK,KACLG,GAAG,yBA5FfC,WA6FqBC,EAAAU,uBA7FrB,sBAAAvB,EAAA,KAAAA,EAAA,GAAAe,GA6FqBF,EAAAU,uBAAsBR,GAC/BC,aAAa,sC,wBAQjBjC,EAAAA,EAAAA,IAAyFyC,EAAA,CAAjFC,QAAQ,UAAUjB,KAAK,KAAKD,KAAK,SAAUmB,MAAA,GAAMzC,MAAM,Q,CAtGvEK,SAAAC,EAAAA,EAAAA,KAsG8E,IAAUS,EAAA,KAAAA,EAAA,KAtGxF2B,EAAAA,EAAAA,IAsG8E,kBAtG9EC,EAAA,KAyGQzC,EAAAA,EAAAA,IAgBM,MAhBN0C,EAgBM,gBAfJ1C,EAAAA,EAAAA,IAAoC,SAAjC,iCAA6B,KAChCJ,EAAAA,EAAAA,IAESyC,EAAA,CAFDM,MAAM,YAAYC,SAAA,GAAS9C,MAAM,Q,CA3GnDK,SAAAC,EAAAA,EAAAA,KA4GY,IAA6C,EAA7CR,EAAAA,EAAAA,IAA6CiD,EAAA,CAApCC,UAAU,MAAMC,KAAK,e,aA5G1CP,EAAAA,EAAAA,IA4GyD,UA5GzDC,EAAA,KA+GU7C,EAAAA,EAAAA,IAESyC,EAAA,CAFDM,MAAM,YAAYC,SAAA,GAAS9C,MAAM,OAAQkD,QAAOC,EAAAC,kB,CA/GlE/C,SAAAC,EAAAA,EAAAA,KAgHY,IAAyC,EAAzCR,EAAAA,EAAAA,IAAyCiD,EAAA,CAAhCC,UAAU,MAAMC,KAAK,cAhH1CN,EAAA,G,gBAmHU7C,EAAAA,EAAAA,IAESyC,EAAA,CAFDM,MAAM,YAAYC,SAAA,GAAS9C,MAAM,Q,CAnHnDK,SAAAC,EAAAA,EAAAA,KAoHY,IAA0C,EAA1CR,EAAAA,EAAAA,IAA0CiD,EAAA,CAAjCC,UAAU,MAAMC,KAAK,eApH1CN,EAAA,KAsHU7C,EAAAA,EAAAA,IAA0DyC,EAAA,CAAlDM,MAAM,UAAWK,QAAOC,EAAAE,S,CAtH1ChD,SAAAC,EAAAA,EAAAA,KAsHmD,IAAQS,EAAA,MAAAA,EAAA,MAtH3D2B,EAAAA,EAAAA,IAsHmD,gBAtHnDC,EAAA,G,yBAAAA,EAAA,K,iCCAc5C,EAAQ,MAetB,I,oBDsIA,GACEuD,KAAM,eACNC,WAAY,CACVC,cAAa,IACbC,aAAY,KACZC,SAAQ,KACRC,YAAW,KACXC,OAAM,KACNC,QAAOA,EAAAA,IAQTC,IAAAA,GACE,MAAO,CACLrD,qBAAsB,KACtBE,0BAA2B,KAC3BE,6BAA8B,KAC9BH,iBAAkB,KAGtB,EAIAqD,KAAAA,GACE,MAAMlC,GAAoBmC,EAAAA,EAAAA,IAAI,IACxBhC,GAAmBgC,EAAAA,EAAAA,IAAI,IACvB/B,GAAmB+B,EAAAA,EAAAA,IAAI,IACvB9B,GAAgB8B,EAAAA,EAAAA,IAAI,IACpB7B,GAAmB6B,EAAAA,EAAAA,IAAI,IACvB5B,GAAyB4B,EAAAA,EAAAA,IAAI,IAC7B1B,GAAyB0B,EAAAA,EAAAA,KAAI,GAEnC,MAAO,CACLhC,mBACAH,oBACAI,mBACAC,gBACAC,mBACAC,yBACAE,yBAEJ,EACA2B,SAAU,CACRC,YAAAA,GACE,MAAO,wBAAwBC,KAAKC,KAAKlC,cAC3C,GAWFmC,QAAS,CACPC,eAAAA,GAwCF,EAEEC,aAAAA,GACM,gDAAgDJ,KAAKC,KAAKI,OAC5DJ,KAAKK,IAAI,SAAW,qCAEpBL,KAAKK,IAAI,SAAW,EAExB,EAEA,cAAMtD,GACJ,MAAMuD,EAAU,CACdC,UAAWP,KAAKvC,kBAChB+C,SAAUR,KAAKpC,iBACf6C,SAAUT,KAAKnC,iBACfuC,MAAOJ,KAAKlC,cACZ4C,SAAUV,KAAKjC,kBAEjB,GAA+B,KAA3BiC,KAAKvC,mBACwB,KAA1BuC,KAAKpC,kBACqB,KAA1BoC,KAAKnC,kBACqB,KAA1BmC,KAAKjC,kBACkB,KAAvBiC,KAAKlC,cAGV,GAAIkC,KAAKnC,iBAAiB8C,OAAS,EACjCX,KAAK3D,qBAAuB,6CAC5BuE,YAAW,KACTZ,KAAK3D,qBAAuB,IAAI,GAC/B,UACE,GAAK,wBAAwB0D,KAAKC,KAAKlC,eAKvC,GAAIkC,KAAKjC,mBAAqBiC,KAAKhC,uBACxCgC,KAAKvD,6BAA+B,2BACpCmE,YAAW,KACTZ,KAAKvD,6BAA+B,IAAI,GACvC,SAEA,CACHoE,QAAQC,IAAI,gBACZ,MAAMC,QAAqBC,EAAAA,EAAYC,QAAQX,GAC/C,GAA2B,sBAAvBS,EAAaG,MACflB,KAAK1D,iBAAmB,uDACxBsE,YAAW,KACTZ,KAAK1D,iBAAmB,IAAI,GAC3B,UACE,GAA2B,mBAAvByE,EAAaG,MACtBlB,KAAKzD,0BAA4B,4CACjCqE,YAAW,KACTZ,KAAKzD,0BAA4B,IAAI,GACpC,SAEA,CACHsE,QAAQC,IAAI,eACZ,MAAMK,QAAqBC,EAAAA,EAAaC,MAAM,CAACZ,SAAUT,KAAKnC,iBAAkB6C,SAAUV,KAAKjC,mBACpE,gBAAvBoD,EAAaD,OACfL,QAAQC,IAAI,oBACZd,KAAKsB,MAAM,gBAAiBH,IAE5BN,QAAQC,IAAI,qBAAuBK,EAAaD,MAEpD,CAEF,MAnCElB,KAAKzD,0BAA4B,qCACjCqE,YAAW,KACTZ,KAAKzD,0BAA4B,IAAI,GACpC,UAkCLyD,KAAK3D,qBAAuB,gCAC5BuE,YAAW,KACTZ,KAAK3D,qBAAuB,IAAI,GAC/B,IAOP,I,UElUJ,MAAMkF,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O,0FCTAC,IAAA,G,GAAAA,IAAA,G,6LACE5F,EAAAA,EAAAA,IA6BM,aA5BJH,EAAAA,EAAAA,IA0BeM,EAAA,CA1BDD,MAAA,uBAAyB,CAF3CE,SAAAC,EAAAA,EAAAA,KAGM,IAWU,EAXVR,EAAAA,EAAAA,IAWUgG,EAAA,CAdhBnE,WAGwBC,EAAAmE,eAHxB,sBAAAhF,EAAA,KAAAA,EAAA,GAAAe,GAGwBF,EAAAmE,eAAcjE,I,CAHtCzB,SAAAC,EAAAA,EAAAA,KAIQ,IAOY,EAPZR,EAAAA,EAAAA,IAOYkG,EAAA,CAPDC,MAAA,GAAMC,QAAA,GAAQC,YAAY,Q,CAJ7C9F,SAAAC,EAAAA,EAAAA,KAKU,IAEC,EAFDR,EAAAA,EAAAA,IAECsG,EAAA,CAFWjG,MAAA,4CAAiD+C,QAAOhC,EAAAmF,cAAeC,MAAM,QAAQC,KAAK,S,CALhHlG,SAAAC,EAAAA,EAAAA,KAMW,IAAQS,EAAA,KAAAA,EAAA,KANnB2B,EAAAA,EAAAA,IAMW,gBANXC,EAAA,G,gBAQU7C,EAAAA,EAAAA,IAECsG,EAAA,CAFWjG,MAAA,4CAAiD+C,QAAOhC,EAAAsF,iBAAkBF,MAAM,QAAQC,KAAK,S,CARnHlG,SAAAC,EAAAA,EAAAA,KASW,IAAYS,EAAA,KAAAA,EAAA,KATvB2B,EAAAA,EAAAA,IASW,oBATXC,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,G,kBAgBiBnC,EAAAiG,aAAU,WAArBxG,EAAAA,EAAAA,IAIM,MApBZ2C,EAAA,EAiBQ9C,EAAAA,EAAAA,IAEE4G,EAAA,CADC,kBAAgBxF,EAAAyF,gBAAc,4CAInC1G,EAAAA,EAAAA,IAIM,MA1BZ2G,EAAA,EAuBQ9G,EAAAA,EAAAA,IAEE+G,EAAA,CADG,eAAa3F,EAAA4F,aAAW,+BAxBrCnE,EAAA,K,gCCoDW3C,MAAM,e,mNAnDfC,EAAAA,EAAAA,IAuDM,aAtDJH,EAAAA,EAAAA,IAEEiH,EAAA,CADGlH,QAAU+B,EAAAoF,mBAAiB,qBAEhC9G,EAAAA,EAAAA,IAkDO,QAlDAY,SAAMC,EAAA,KAAAA,EAAA,IALjBC,EAAAA,EAAAA,KAAA,IAAAC,IAK2BC,EAAA+F,eAAA/F,EAAA+F,iBAAAhG,IAAa,cAAEG,aAAa,O,EACjDtB,EAAAA,EAAAA,IAQEuB,EAAA,CAPEC,KAAK,OACLC,KAAK,KACLC,MAAM,iBACNC,MAAA,GACAC,GAAG,gBAXbC,WAYmBC,EAAAsF,cAZnB,sBAAAnG,EAAA,KAAAA,EAAA,GAAAe,GAYmBF,EAAAsF,cAAapF,GACtBC,aAAa,Q,wBAIjBjC,EAAAA,EAAAA,IASEuB,EAAA,CAPEC,KAAK,WACLC,KAAK,KACLC,MAAM,WACNC,MAAA,GACAC,GAAG,gBAvBbC,WAwBmBC,EAAAuF,cAxBnB,sBAAApG,EAAA,KAAAA,EAAA,GAAAe,GAwBmBF,EAAAuF,cAAarF,GACtBC,aAAa,Q,wBAIjBjC,EAAAA,EAAAA,IAiBSsH,EAAA,CAjBDpH,MAAM,QAAM,CA7B1BK,SAAAC,EAAAA,EAAAA,KA8BQ,IASS,EATTR,EAAAA,EAAAA,IASSuH,EAAA,CATDrH,MAAM,iCAA+B,CA9BrDK,SAAAC,EAAAA,EAAAA,KAgCU,IAME,EANFR,EAAAA,EAAAA,IAMEuC,EAAA,CALEb,MAAM,eACNC,MAAA,GACAC,GAAG,aAnCjBC,WAoCuBC,EAAA0F,WApCvB,sBAAAvG,EAAA,KAAAA,EAAA,GAAAe,GAoCuBF,EAAA0F,WAAUxF,GACnBC,aAAa,gB,0BArC3BY,EAAA,KAyCQ7C,EAAAA,EAAAA,IAISuH,EAAA,MA7CjBhH,SAAAC,EAAAA,EAAAA,KA2CU,IAA4D,EAA5DR,EAAAA,EAAAA,IAA4DyH,EAAA,CAA/CC,GAAG,gBAAc,CA3CxCnH,SAAAC,EAAAA,EAAAA,KA2CyC,IAAeS,EAAA,KAAAA,EAAA,KA3CxD2B,EAAAA,EAAAA,IA2CyC,uBA3CzCC,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAiDM7C,EAAAA,EAAAA,IAA4FyC,EAAA,CAApFd,MAAA,GAAMoB,MAAM,UAAUtB,KAAK,KAAKD,KAAK,SAASmB,MAAA,GAAMzC,MAAM,Q,CAjDxEK,SAAAC,EAAAA,EAAAA,KAiD+E,IAAUS,EAAA,KAAAA,EAAA,KAjDzF2B,EAAAA,EAAAA,IAiD+E,kBAjD/EC,EAAA,KAoDMzC,EAAAA,EAAAA,IAEM,MAFN0C,EAEM,EADJ1C,EAAAA,EAAAA,IAAoH,uBArD5HwC,EAAAA,EAAAA,IAqDW,gBAAUxC,EAAAA,EAAAA,IAAmG,QAA7FwB,GAAG,MAAOwB,QAAKnC,EAAA,KAAAA,EAAA,GAAAe,GAAA,KAAO2F,QAAQC,KAAK,cAAcvH,MAAA,oBAAyB,qBAAY,K,4CAsBjH,GACEmD,KAAM,aACNC,WAAY,CACVoE,WAAU,IACVjE,SAAQ,KACRC,YAAW,KACXC,OAAM,KACNgE,OAAM,KACNC,OAAM,KACNhE,QAAOA,EAAAA,IAETE,KAAAA,GAEE,MAAMmD,GAAgBlD,EAAAA,EAAAA,IAAI,IACpBmD,GAAgBnD,EAAAA,EAAAA,IAAI,IACpBsD,GAAatD,EAAAA,EAAAA,KAAI,GACjBgD,GAAoBhD,EAAAA,EAAAA,IAAI,MAE9B,MAAO,CAELkD,gBACAC,gBACAG,aACAN,oBAEJ,EACA3C,QAAS,CAEP,mBAAM4C,GACJ,IAAIa,EACJ,MAAMC,EAAY,CAChBlD,SAAUT,KAAK8C,cACfpC,SAAUV,KAAK+C,eAIU,KAAvB/C,KAAK8C,eAA+C,KAAvB9C,KAAK+C,eACpCW,QAAatC,EAAAA,EAAaC,MAAMsC,GACb,gBAAfD,EAAKxC,OACPL,QAAQC,IAAI,kBACZd,KAAKsB,MAAM,aAAcoC,KAEzB7C,QAAQC,IAAI,qBACZd,KAAKuD,WAAa,qCAClBvD,KAAK4C,kBAAoB,qCACzBhC,YAAW,KACTZ,KAAK4C,kBAAoB,IAAI,GAC5B,QAGL/B,QAAQC,IAAI,wBACZd,KAAK4C,kBAAoB,+BACzBhC,YAAW,KACTZ,KAAK4C,kBAAoB,IAAG,GAC3B,MAIL5C,KAAK4D,kBACP,EAEAA,gBAAAA,GACE5D,KAAK8C,cAAgB,GACrB9C,KAAK+C,cAAgB,GACrB/C,KAAKkD,YAAa,CACpB,I,UCrIJ,MAAM3B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,UFqCA,GACErC,KAAM,iBACNC,WAAY,CACV0E,MAAK,EACLC,SAAQ,aACRzE,aAAY,KACZ0E,QAAO,KACPC,UAAS,KAITC,WAAUA,EAAAA,IAGZtE,KAAAA,GACE,MAAMgC,GAAiB/B,EAAAA,EAAAA,IAAI,SACrBsE,GAAgBtE,EAAAA,EAAAA,IAAI,IACpBuE,GAAgBvE,EAAAA,EAAAA,IAAI,IACpBwE,GAAkBxE,EAAAA,EAAAA,KAAI,GACtByE,GAAoBzE,EAAAA,EAAAA,IAAI,IACxB0E,GAAwB1E,EAAAA,EAAAA,IAAI,IAC5B2E,GAAqB3E,EAAAA,EAAAA,IAAI,IACzB4E,GAAwB5E,EAAAA,EAAAA,IAAI,IAC5B6E,GAA8B7E,EAAAA,EAAAA,IAAI,IAClC8E,GAA0B9E,EAAAA,EAAAA,KAAI,GAEpC,MAAO,CACL+B,iBACAuC,gBACAC,gBACAC,kBACAC,oBACAC,wBACAC,qBACAC,wBACAC,8BACAC,0BAEJ,EACAhF,IAAAA,GACE,MAAO,CACLiF,SAAS,EACTtC,YAAY,EAEhB,EACAuC,OAAAA,GACE5E,KAAK2E,SAAU,CACjB,EACA1E,QAAS,CACPgC,aAAAA,GACEjC,KAAKqC,YAAa,EAClBrC,KAAK6E,SAAU,CACjB,EACAzC,gBAAAA,GACEpC,KAAK2E,SAAU,EACf3E,KAAKqC,YAAa,CACpB,EACAE,cAAAA,CAAgB7C,GACdmB,QAAQC,IAAI,eACZd,KAAKsB,MAAM,gBAAiB5B,EAC9B,EACAgD,WAAAA,CAAaoC,GACX9E,KAAKsB,MAAM,aAAcwD,EAE3B,IGvGJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAStD,KAEpE,O","sources":["webpack://prore-mongo/./src/components/notifications/errorMessage.js","webpack://prore-mongo/./src/components/RegisterForm.vue","webpack://prore-mongo/./src/service/googleAuth.js","webpack://prore-mongo/./src/components/RegisterForm.vue?33ca","webpack://prore-mongo/./src/pages/LoginRegister.vue","webpack://prore-mongo/./src/components/LoginForm.vue","webpack://prore-mongo/./src/components/LoginForm.vue?dcb9","webpack://prore-mongo/./src/pages/LoginRegister.vue?ad87"],"sourcesContent":["const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n            <img className={'errorImg'} alt={'error'} src={require('@/assets/error.png')}/>\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage","<template>\n  <div>\n    <h2 style=\"margin-top: 50px; text-align: center\">- Rekisteröintilomake -</h2>\n    <MDBContainer style=\"margin-top: 50px;\">\n\n      <registerError\n          :message = registerErrorMessage\n      />\n      <registerError\n          :message = usernameExisting\n      />\n      <registerError\n          :message = registerEmailErrorMessage\n      />\n      <register-error\n        :message = registerPwRepeatErrorMessage\n      />\n      <form  @submit.prevent=\"userData\" autocomplete=\"off\">\n        <!-- 2 column grid layout with text inputs for the first and last names -->\n        <!-- First name input -->\n\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Etunimi\"\n            white\n            id=\"registerFirstName\"\n            v-model=\"registerFirstName\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Last name input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Sukunimi\"\n            white\n            id=\"registerLastName\"\n            v-model=\"registerLastName\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Username input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"käyttäjätunnus\"\n            white\n            id=\"registerUsername\"\n            v-model=\"registerUsername\"\n            wrapperClass=\"mb-4\"\n        />\n        <!-- Email input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Email\"\n            white\n            id=\"registerEmail\"\n            v-model=\"registerEmail\"\n            wrapperClass=\"mb-4\"\n        />\n<!--        <div>-->\n<!--          Email is {{isValidEmail ? 'valid' : 'invalid'}}-->\n<!--        </div>-->\n        <!-- Password input -->\n        <MDBInput\n            type=\"password\"\n            size=\"lg\"\n            label=\"Salasana\"\n            white\n            id=\"registerPassword\"\n            v-model=\"registerPassword\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Repeat Password input -->\n        <MDBInput\n            type=\"password\"\n            size=\"lg\"\n            label=\"Toista salasana\"\n            white\n            id=\"registerPasswordRepeat\"\n            v-model=\"registerPasswordRepeat\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Checkbox -->\n        <MDBCheckbox\n            label=\"Muista minut\"\n            white\n            size=\"lg\"\n            id=\"registerSubscribeCheck\"\n            v-model=\"registerSubscribeCheck\"\n            wrapperClass=\"d-flex justify-content-center mb-4\"\n        />\n\n<!--        <input required=\"required\" v-model=\"registerEmail\" :error-messages=\"emailErrors\"-->\n<!--               @input=\"$v.registerEmail.$touch()\" @blur=\"$v.registerEmail.$touch()\" label=\"Email\"-->\n<!--               />-->\n\n        <!-- Submit button -->\n        <MDBBtn outline=\"primary\" size=\"lg\" type=\"submit\"  block class=\"mb-4\"> Luo tili </MDBBtn>\n\n        <!-- Register buttons -->\n        <div class=\"text-center\">\n          <p>Tai registeröidy käyttämällä:</p>\n          <MDBBtn color=\"secondary\" floating class=\"mx-1\">\n            <MDBIcon iconStyle=\"fab\" icon=\"facebook-f\" />>\n          </MDBBtn>\n\n          <MDBBtn color=\"secondary\" floating class=\"mx-1\" @click=\"handleGoogleAuth\">\n            <MDBIcon iconStyle=\"fab\" icon=\"google\" />\n          </MDBBtn>\n\n          <MDBBtn color=\"secondary\" floating class=\"mx-1\">\n            <MDBIcon iconStyle=\"fab\" icon=\"twitter\" />\n          </MDBBtn>\n          <MDBBtn color=\"primary\" @click=\"getUser\">Get user</MDBBtn>\n\n\n        </div>\n      </form>\n    </MDBContainer>\n\n  </div>\n\n</template>\n\n<script >\n/* eslint-disable */\n// import { validationMixin } from 'vuelidate'\n// import { required, email} from 'vuelidate/lib/validators'\nimport {\n  MDBContainer,\n  MDBInput,\n  MDBCheckbox,\n  MDBBtn,\n  MDBIcon\n} from \"mdb-vue-ui-kit\";\nimport { ref } from \"vue\";\nimport userService from \"@/service/users\";\nimport googleService from '@/service/googleAuth'\nimport loginService from \"@/service/login\";\nimport registerError from '../components/notifications/errorMessage'\nimport '@/css/style.css';\nimport '@/css/notification.css'\n\n\nexport default {\n  name: \"app-register\",\n  components: {\n    registerError,\n    MDBContainer,\n    MDBInput,\n    MDBCheckbox,\n    MDBBtn,\n    MDBIcon\n  },\n  // mixins: [validationMixin],\n  // validations: {\n  //\n  //   email: { required, email },\n  //\n  // },\n  data () {\n    return {\n      registerErrorMessage: null,\n      registerEmailErrorMessage: null,\n      registerPwRepeatErrorMessage: null,\n      usernameExisting: null,\n\n    }\n  },\n\n  //  'YOUR_APP_CLIENT_ID.apps.googleusercontent.com'\n\n  setup() {\n    const registerFirstName = ref(\"\");\n    const registerLastName = ref(\"\");\n    const registerUsername = ref(\"\");\n    const registerEmail = ref(\"\");\n    const registerPassword = ref(\"\");\n    const registerPasswordRepeat = ref(\"\");\n    const registerSubscribeCheck = ref(true);\n\n    return {\n      registerLastName,\n      registerFirstName,\n      registerUsername,\n      registerEmail,\n      registerPassword,\n      registerPasswordRepeat,\n      registerSubscribeCheck\n    };\n  },\n  computed: {\n    isValidEmail() {\n      return /^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.registerEmail);\n    }\n  },\n  // computed: {\n  //   emailErrors () {\n  //     const errors = []\n  //     if (!this.$v.email.$dirty) return errors\n  //     !this.$v.email.email && errors.push('Must be valid e-mail')\n  //     !this.$v.email.required && errors.push('E-mail is required')\n  //     return errors\n  //   },\n  // },\n  methods: {\n    emailValidation () {\n  //     Vue.createApp({\n  //       data: () => ({ email: '', password: '', errors: null }),\n  //       methods: {\n  //         async submitForm() {\n  //           const errors = {};\n  //           if (!this.email) {\n  //             errors.email = 'Email is required';\n  //           } else if (!/^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.email)) {\n  //             errors.email = 'Invalid email';\n  //           }\n  //\n  //           if (Object.keys(errors).length > 0) {\n  //             this.errors = errors;\n  //             return;\n  //           } else {\n  //             this.errors = null;\n  //           }\n  //\n  //           // Handle submitting form\n  //         }\n  //       },\n  //       template: `\n  // <div>\n  //   <form @submit.prevent=\"submitForm\">\n  //     <div>\n  //       <input v-model=\"email\" placeholder=\"email\" />\n  //       <div v-if=\"errors && errors.email\">\n  //         {{errors.email}}\n  //       </div>\n  //     </div>\n  //     <div>\n  //       <input type=\"password\" v-model=\"password\" />\n  //     </div>\n  //     <div>\n  //       <button type=\"submit\">Register</button>\n  //     </div>\n  //   </form>\n  // </div>\n  // `\n  //     }).mount('#example2');\n    },\n    validateEmail() {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.email)) {\n        this.msg['email'] = 'Please enter a valid email address';\n      } else {\n        this.msg['email'] = '';\n      }\n    },\n    // New user data to send forward\n    async userData () {\n      const newUser = {\n        firstName: this.registerFirstName,\n        lastName: this.registerLastName,\n        username: this.registerUsername,\n        email: this.registerEmail,\n        password: this.registerPassword\n      }\n      if (this.registerFirstName !== \"\"\n          && this.registerLastName !== \"\"\n          && this.registerUsername !== \"\"\n          && this.registerPassword !== \"\"\n          && this.registerEmail !== \"\"\n      ) {\n\n        if (this.registerUsername.length < 4) {\n          this.registerErrorMessage = \"Username must be longer than 4 characters!\"\n          setTimeout(() => {\n            this.registerErrorMessage = null;\n          }, 2000);\n        } else if (!/^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.registerEmail)) {\n          this.registerEmailErrorMessage = \"Anna kelvollinen sähköpostiosoite!\";\n          setTimeout(() => {\n            this.registerEmailErrorMessage = null;\n          }, 2000);\n        } else if (this.registerPassword !== this.registerPasswordRepeat) {\n          this.registerPwRepeatErrorMessage = \"Salasana on oltava sama!\";\n          setTimeout(() => {\n            this.registerPwRepeatErrorMessage = null;\n          }, 2000);\n        }\n        else {\n          console.log(\"Uus kasutaja\")\n          const userExisting = await userService.addUser(newUser);\n          if (userExisting.error === \"username existing\") {\n            this.usernameExisting = \"Käyttäjätunnus on jo olemassa! Vaihda käyttäjätunnus\";\n            setTimeout(() => {\n              this.usernameExisting = null;\n            }, 2000);\n          } else if (userExisting.error === \"email existing\") {\n            this.registerEmailErrorMessage = \"Antamasi sähköpostiosoite on jo olemassa!\";\n            setTimeout(() => {\n              this.registerEmailErrorMessage = null;\n            }, 2000);\n          }\n          else {\n            console.log(\"Aga siin!!!\")\n            const loggedInUser = await loginService.login({username: this.registerUsername, password: this.registerPassword});\n            if (loggedInUser.error !== \"login error\") {\n              console.log(\"Aga siin veel!!!\")\n              this.$emit('register:data', loggedInUser)\n            } else {\n              console.log(\"Error with login! \" + loggedInUser.error)\n            }\n          }\n\n        }\n      } else {\n        this.registerErrorMessage = \"Kaikki kentät on täytettävä!!\"\n        setTimeout(() => {\n          this.registerErrorMessage = null;\n        }, 2000);\n      }\n      //await userService.addUser(newUser);\n\n      //const loggedInUser = await loginService.login({username: this.registerUsername, password: this.registerPassword});\n\n      //this.$emit('register:data', newUser)\n    }\n  }\n}\n</script>\n\n<style>\n.g-signin-button {\n  /* This is where you control how the button looks. Be creative! */\n  display: inline-block;\n  padding: 4px 8px;\n  border-radius: 3px;\n  background-color: #3c82f7;\n  color: #fff;\n  box-shadow: 0 3px 0 #0f69ff;\n}\n#app {\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n.error {\n  color: white;\n  background: #f5839c;\n  font-size: 20px;\n  border: solid #f75959;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n.errorImg {\n  width: 50px;\n  margin-left: 20px;\n}\n</style>","const axios = require('axios')\r\n//import axios from 'axios'\r\nconst baseUrl = \"/auth/google\"\r\n// http://localhost:3001s\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data\r\n}\r\n\r\nconst getUser = async () => {\r\n    const res = await axios.get('/api/current_user');\r\n    return res.data;\r\n}\r\n\r\nexport default { getAll, getUser }","import { render } from \"./RegisterForm.vue?vue&type=template&id=2a4757e6\"\nimport script from \"./RegisterForm.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterForm.vue?vue&type=script&lang=js\"\n\nimport \"./RegisterForm.vue?vue&type=style&index=0&id=2a4757e6&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <MDBContainer style=\"margin-top: 50px;\">\n      <MDBTabs v-model=\"form7ActiveTab\">\n        <MDBTabNav pills justify tabsClasses=\"mb-3\">\n          <MDBTabItem style=\"background-color: #37546a; color: #ddd;\" @click=\"pressLoginTab\" tabId=\"ex3-1\" href=\"ex3-1\"\n          >Kirjaudu</MDBTabItem\n          >\n          <MDBTabItem style=\"background-color: #223340; color: #ddd;\" @click=\"pressRegisterTab\" tabId=\"ex3-2\" href=\"ex3-2\"\n          >Registeröidy</MDBTabItem\n          >\n        </MDBTabNav>\n\n\n      </MDBTabs>\n\n      <div v-if=\"isRegister\">\n        <Register\n          @register:data = handleRegister\n        />\n      </div>\n\n      <div v-else>\n        <Login\n            @login:data = userControl\n        />\n      </div>\n\n    </MDBContainer>\n\n  </div>\n\n</template>\n\n<script>\nimport Login from '../components/LoginForm.vue'\nimport Register from '../components/RegisterForm'\nimport {\n  MDBContainer,\n  MDBTabs,\n  MDBTabNav,\n  MDBTabItem,\n\n} from \"mdb-vue-ui-kit\";\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"login-register\",\n  components: {\n    Login,\n    Register,\n    MDBContainer,\n    MDBTabs,\n    MDBTabNav,\n\n\n\n    MDBTabItem,\n\n  },\n  setup() {\n    const form7ActiveTab = ref(\"ex3-1\");\n    const form2Username = ref(\"\");\n    const form2Password = ref(\"\");\n    const form7LoginCheck = ref(true);\n    const form7RegisterName = ref(\"\");\n    const form7RegisterUsername = ref(\"\");\n    const form7RegisterEmail = ref(\"\");\n    const form7RegisterPassword = ref(\"\");\n    const form7RegisterPasswordRepeat = ref(\"\");\n    const form7RegisterTermsCheck = ref(true);\n\n    return {\n      form7ActiveTab,\n      form2Username,\n      form2Password,\n      form7LoginCheck,\n      form7RegisterName,\n      form7RegisterUsername,\n      form7RegisterEmail,\n      form7RegisterPassword,\n      form7RegisterPasswordRepeat,\n      form7RegisterTermsCheck\n    };\n  },\n  data () {\n    return {\n      isLogin: true,\n      isRegister: false\n    }\n  },\n  mounted () {\n    this.isLogin = true\n  },\n  methods: {\n    pressLoginTab () {\n      this.isRegister = false\n      this.islogin = true\n    },\n    pressRegisterTab () {\n      this.isLogin = false\n      this.isRegister = true\n    },\n    handleRegister (data) {\n      console.log(\"xxxxx-xxxxx\")\n      this.$emit('register:data', data)\n    },\n    userControl (userCredentials) {\n      this.$emit('login:data', userCredentials)\n\n    }\n  }\n}\n</script>\n\n<style >\n#app {\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  /*color: #2c3e50;*/\n}\n\n</style>","<template>\n  <div>\n    <loginError\n        :message = loginErrorMessage\n    />\n    <form @submit.prevent=\"userLoginData\" autocomplete=\"off\">\n      <MDBInput\n          type=\"text\"\n          size=\"lg\"\n          label=\"Käyttäjätunnus\"\n          white\n          id=\"loginUsername\"\n          v-model=\"loginUsername\"\n          wrapperClass=\"mb-4\"\n      />\n\n      <!-- Password input -->\n      <MDBInput\n\n          type=\"password\"\n          size=\"lg\"\n          label=\"Salasana\"\n          white\n          id=\"loginPassword\"\n          v-model=\"loginPassword\"\n          wrapperClass=\"mb-4\"\n      />\n\n      <!-- 2 column grid layout for inline styling -->\n      <MDBRow class=\"mb-4\">\n        <MDBCol class=\"d-flex justify-content-center\">\n          <!-- Checkbox -->\n          <MDBCheckbox\n              label=\"Muista minut\"\n              white\n              id=\"loginCheck\"\n              v-model=\"loginCheck\"\n              wrapperClass=\"mb-3 mb-md-0\"\n          />\n        </MDBCol>\n\n        <MDBCol>\n          <!-- Simple link -->\n          <router-link to=\"/forgot_auth\">Forgot password</router-link>\n<!--          <a href=\"/recipients\">Unohtuiko salasana?</a>-->\n        </MDBCol>\n      </MDBRow>\n\n      <!-- Submit button -->\n      <MDBBtn white color=\"primary\" size=\"lg\" type=\"submit\" block class=\"mb-4\"> Kirjaudu </MDBBtn>\n\n      <!-- Register buttons -->\n      <div class=\"text-center\">\n        <p>Ei jäsen? <span id=\"reg\" @click=\"this.$router.push('/register')\" style=\"cursor: pointer;\">rekisteröidy</span></p>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\n// @click=\"userLoginData\"\nimport {\n  MDBInput,\n  MDBCheckbox,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBIcon\n} from \"mdb-vue-ui-kit\";\nimport { ref } from \"vue\";\nimport loginService from \"@/service/login\";\nimport loginError from '../components/notifications/errorMessage'\nimport '@/css/style.css';\nimport '@/css/notification.css'\nexport default {\n  name: \"login-form\",\n  components: {\n    loginError,\n    MDBInput,\n    MDBCheckbox,\n    MDBBtn,\n    MDBRow,\n    MDBCol,\n    MDBIcon\n  },\n  setup() {\n\n    const loginUsername = ref(\"\");\n    const loginPassword = ref(\"\");\n    const loginCheck = ref(true);\n    const loginErrorMessage = ref(null);\n\n    return {\n\n      loginUsername,\n      loginPassword,\n      loginCheck,\n      loginErrorMessage\n    };\n  },\n  methods: {\n    // Data from login fields forward\n    async userLoginData () {\n      let user;\n      const userLogin = {\n        username: this.loginUsername,\n        password: this.loginPassword\n      }\n\n\n      if (this.loginUsername !== \"\" && this.loginPassword !== \"\") {\n        user = await loginService.login(userLogin)\n        if (user.error !== \"login error\") {\n          console.log(\"User logged in\")\n          this.$emit('login:data', user)\n        } else {\n          console.log(\"No user logged in\")\n          this.loginError = \"Väärä Käyttäjätunnus tai salasana!\"\n          this.loginErrorMessage = \"Väärä Käyttäjätunnus tai salasana!\";\n          setTimeout(() => {\n            this.loginErrorMessage = null;\n          }, 2000);\n        }\n      } else {\n        console.log(\"Mingi väli on tühi!!\")\n        this.loginErrorMessage = \"kaikki kentät on täytettävä!\"\n        setTimeout(() => {\n          this.loginErrorMessage = null\n        }, 2000);\n      }\n\n      //this.$emit('login:data', userLogin)\n      this.emptyLoginFields()\n    },\n    // empty login form fields after login\n    emptyLoginFields () {\n      this.loginUsername = \"\"\n      this.loginPassword = \"\"\n      this.loginCheck = false\n    }\n  }\n}\n</script>\n\n<style >\n#reg {\n  padding: 10px;\n  color: deepskyblue;\n}\n/*.mdb.input {*/\n/*  background-color: grey;*/\n/*}*/\n\n/*.mdb.input-control {*/\n/*  color: red;*/\n/*}*/\n\n\n\n\n/*input:-webkit-autofill { -webkit-box-shadow: 0 0 0 1000px green inset !important; } input:-webkit-autofill:focus { -webkit-box-shadow: 0 0 0 1000px blue inset !important; }*/\n\n/*.mdb.input-control:focus {*/\n/*  color: red;*/\n/*}*/\n</style>","import { render } from \"./LoginForm.vue?vue&type=template&id=39a6f1d6\"\nimport script from \"./LoginForm.vue?vue&type=script&lang=js\"\nexport * from \"./LoginForm.vue?vue&type=script&lang=js\"\n\nimport \"./LoginForm.vue?vue&type=style&index=0&id=39a6f1d6&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./LoginRegister.vue?vue&type=template&id=0e9a91c9\"\nimport script from \"./LoginRegister.vue?vue&type=script&lang=js\"\nexport * from \"./LoginRegister.vue?vue&type=script&lang=js\"\n\nimport \"./LoginRegister.vue?vue&type=style&index=0&id=0e9a91c9&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["ErrorMessage","message","_createVNode","require","class","_createElementBlock","_createElementVNode","style","_component_MDBContainer","default","_withCtx","_component_registerError","$data","registerErrorMessage","usernameExisting","registerEmailErrorMessage","_component_register_error","registerPwRepeatErrorMessage","onSubmit","_cache","_withModifiers","args","$options","userData","autocomplete","_component_MDBInput","type","size","label","white","id","modelValue","$setup","registerFirstName","$event","wrapperClass","registerLastName","registerUsername","registerEmail","registerPassword","registerPasswordRepeat","_component_MDBCheckbox","registerSubscribeCheck","_component_MDBBtn","outline","block","_createTextVNode","_","_hoisted_1","color","floating","_component_MDBIcon","iconStyle","icon","onClick","_ctx","handleGoogleAuth","getUser","name","components","registerError","MDBContainer","MDBInput","MDBCheckbox","MDBBtn","MDBIcon","data","setup","ref","computed","isValidEmail","test","this","methods","emailValidation","validateEmail","email","msg","newUser","firstName","lastName","username","password","length","setTimeout","console","log","userExisting","userService","addUser","error","loggedInUser","loginService","login","$emit","__exports__","render","key","_component_MDBTabs","form7ActiveTab","_component_MDBTabNav","pills","justify","tabsClasses","_component_MDBTabItem","pressLoginTab","tabId","href","pressRegisterTab","isRegister","_component_Register","handleRegister","_hoisted_2","_component_Login","userControl","_component_loginError","loginErrorMessage","userLoginData","loginUsername","loginPassword","_component_MDBRow","_component_MDBCol","loginCheck","_component_router_link","to","$router","push","loginError","MDBRow","MDBCol","user","userLogin","emptyLoginFields","Login","Register","MDBTabs","MDBTabNav","MDBTabItem","form2Username","form2Password","form7LoginCheck","form7RegisterName","form7RegisterUsername","form7RegisterEmail","form7RegisterPassword","form7RegisterPasswordRepeat","form7RegisterTermsCheck","isLogin","mounted","islogin","userCredentials"],"sourceRoot":""}