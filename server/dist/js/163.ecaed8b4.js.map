{"version":3,"file":"js/163.ecaed8b4.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/controllers/datetime.js","webpack://prore-mongo/./src/pages/RecipientPublic.vue","webpack://prore-mongo/./src/pages/RecipientPublic.vue?a5fc"],"sourcesContent":["\nconst compare = (rec, prov) => {\n    const receiverDate = new Date(rec.y, rec.m, rec.d, rec.hour, rec.min);\n    const providerDate = new Date(prov.y, prov.m, prov.d, prov.hour, prov.min)\n    return providerDate >= receiverDate;\n}\n\nconst providerMatchingForClient = (re, pFrom, pTo) => {\n    //const rDate = new Date(re.y, re.m, re.d, re.hour, re.min);\n    const pFromDate = new Date(pFrom.y, pFrom.m, pFrom.d, pFrom.hour, pFrom.min);\n    const pToDate = new Date(pTo.y, pTo.m, pTo.d, pTo.hour, pTo.min);\n    return re >= pFromDate && re < pToDate;\n}\nexport default { compare, providerMatchingForClient }","<template>\r\n  <div>\r\n\r\n\r\n\r\n    <MDBContainer\r\n\r\n        style=\"position: relative; z-index: 1;\r\n        /*width: 80%;*/\r\n        margin-top: 80px;\r\n        opacity: 0.8;\r\n        \"\r\n    >\r\n\r\n\r\n\r\n<!--      <MDBBtn color=\"danger\" @click=\"puhasta\">Puhasta kaardi andmed</MDBBtn>-->\r\n      <div >\r\n        <div :class=\"{hideMainPanel: !isMainPanel}\" class=\"client-map-panel\">\r\n          <div style=\"display: flex; justify-content: right;\">\r\n            <MDBIcon size=\"lg\" style=\"padding: 10px;\" @click=\"closeMainPanel\">\r\n              <i class=\"fas fa-expand-arrows-alt\"></i>\r\n            </MDBIcon>\r\n            <div>\r\n              <MDBBtnClose\r\n                  white\r\n                  style=\" padding: 10px;\"\r\n                  size=\"lg\"\r\n                  @click=\"$router.go(-1)\"\r\n              />\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n\r\n          <div id=\"address-panel\">\r\n            <MDBInput\r\n                white\r\n                label=\"Anna toinen osoitteesi kun ei täsmää\"\r\n                v-model=\"address\"\r\n                id=\"autocomplite\"\r\n                size=\"lg\"\r\n                wrapperClass=\"mb-4\"\r\n            />\r\n          </div>\r\n\r\n          <div style=\" margin-bottom: 20px;\" >\r\n            <Dropdown  @change=\"changedProfession\"   v-model=\"prof\" :options=\"prodata\"   filter optionLabel=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\" placeholder=\"Valitse ammattilainen\" class=\"w-full md:w-100rem\">\r\n\r\n              <template value=\"slotProps\" >\r\n                <div v-if=\"slotProps.value\" >\r\n                  <!--              <img :alt=\"slotProps.value.label\" src=\"https://primefaces.org/cdn/primevue/images/flag/flag_placeholder.png\" :class=\"`mr-2 flag flag-${slotProps.value.code.toLowerCase()}`\" style=\"width: 18px\" />-->\r\n                  <div >{{ slotProps.value.label }}</div>\r\n                </div>\r\n                <span v-else>\r\n              {{ slotProps.placeholder }}\r\n            </span>\r\n              </template>\r\n              <template  #optiongroup=\"slotProps\"  >\r\n                <div style=\"\" class=\"flex align-items-center\">\r\n                  <!--              <img :alt=\"slotProps.option.label\" src=\"https://primefaces.org/cdn/primevue/images/flag/flag_placeholder.png\" :class=\"`mr-2 flag flag-${slotProps.option.code.toLowerCase()}`\" style=\"width: 18px\" />-->\r\n                  <div >{{ slotProps.option.label }}</div>\r\n                </div>\r\n              </template>\r\n            </Dropdown>\r\n          </div>\r\n\r\n          <div  :class=\"{hideDistSelectPanel: !isDistSelection}\">\r\n            <p style=\"text-align: left;\">Valitse kiinnostavaa ajankohta tai heti!</p>\r\n            <div class=\"distSelectPanel\">\r\n\r\n\r\n              <VueDatePicker\r\n                  style=\"margin-bottom: 20px; width: 70%; padding: 7px;\"\r\n                  v-model=\"bookingDate\"\r\n                  dark\r\n                  :min-date=\"new Date()\"\r\n                  teleport-center\r\n                  @internal-model-change=\"handleInternalDate\"\r\n                  @update:model-value=\"handleDate\"\r\n                  :state=\"isNoDate ? false : null\"\r\n              >\r\n\r\n              </VueDatePicker>\r\n              <div style=\"margin-top: 15px;\">\r\n                <MDBCheckbox\r\n\r\n                    white\r\n                    label=\"Heti!\"\r\n                    name=\"selection\"\r\n                    v-model=\"isSelectNow\"\r\n                    value=\"true\"\r\n                    @click=\"removeDateIfExist\"\r\n                    wrapperClass=\"mb-4\"\r\n                />\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n          <div  :class=\"{hideDistSelectPanel: !isDistSelection}\" style=\" margin-bottom: 13px;\">\r\n            <select style=\"padding: 12px; width: 100%; margin-bottom: 25px; background-color: dimgrey; color: white;\" id=\"distance\" v-model=\"distBtw\" @click=\"filterByDistance\">\r\n              <option disabled value=\"0\">Valitse etäisyys</option>\r\n              <option value=\"1\">1 km ympärilläsi</option>\r\n              <option value=\"2\">2 km ympärilläsi</option>\r\n              <option value=\"3\">3 km ympärilläsi</option>\r\n              <option value=\"4\">4 km ympärilläsi</option>\r\n              <option value=\"5\">5 km ympärilläsi</option>\r\n              <option value=\"6\">6 km ympärilläsi</option>\r\n              <option value=\"7\">7 km ympärilläsi</option>\r\n              <option value=\"8\">8 km ympärilläsi</option>\r\n              <option value=\"9\">9 km ympärilläsi</option>\r\n              <option value=\"10\">10 km ympärilläsi</option>\r\n              <option value=\"20\">20 km ympärilläsi</option>\r\n              <option value=\"30\">30 km ympärilläsi</option>\r\n              <option value=\"40\">40 km ympärilläsi</option>\r\n              <option value=\"50\">50 km ympärilläsi</option>\r\n              <option value=\"60\">60 km ympärilläsi</option>\r\n              <option value=\"70\">70 km ympärilläsi</option>\r\n              <option value=\"80\">80 km ympärilläsi</option>\r\n              <option value=\"90\">90 km ympärilläsi</option>\r\n              <option value=\"100\">100 km ympärilläsi</option>\r\n              <option value=\"200\">200 km ympärilläsi</option>\r\n              <option value=\"300\">300 km ympärilläsi</option>\r\n            </select>\r\n            <MDBBtn\r\n                v-if=\"bookingDate || isSelectNow\"\r\n                color=\"success\"\r\n                @click=\"findSuitablePro\"\r\n            >\r\n              Etsi ammatilainen\r\n            </MDBBtn>\r\n\r\n          </div>\r\n\r\n          <p\r\n              v-if=\"prof && isPressedFindBtn\"\r\n              :class=\"{noClients: isActiveProffs}\"\r\n              style=\"color: palevioletred;\"\r\n          >\r\n            Ei ammattilaisia vielä!\r\n          </p>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <div v-if=\"isMapChat\" style=\"background-color: white; margin: auto; padding: 10px; width: 350px;  border: solid darkgrey\">\r\n        <p style=\"float: right; color: limegreen;\" @click=\"closeMapChat\">Valmis</p>\r\n        <chat-panel\r\n\r\n            :chatusers = chatusers\r\n            :messages =messages\r\n            :selecteduser = selecteduser\r\n            @select:user = selectUser\r\n            @noSelected = noSelectUser\r\n            @on:message = onMessage\r\n        />\r\n      </div>\r\n\r\n      <div class=\"map-info-table\" v-else-if=\"isTargetSelected && !isMapChat\" style=\"background-color: white; color: darkslategrey; padding: 10px; width: 90%; margin: auto;  border: solid darkgrey\">\r\n        <div style=\"display: flex; justify-content: right;\">\r\n          <p style=\" font-size: 15px; padding: 10px; color: green;\" @click=\"outFromMarkerPanel\">Valmis</p>\r\n        </div>\r\n\r\n        <table style=\"font-size: 14px; width: 100%; text-align: left;\">\r\n          <tbody>\r\n          <tr>\r\n            <td>\r\n              Yritys:\r\n            </td>\r\n            <td>\r\n              {{ this.target.yritys }}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              Y - tunnus:\r\n            </td>\r\n            <td>\r\n              {{this.target.ytunnus}}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              Työalue:\r\n            </td>\r\n            <td>\r\n              {{this.target.range ? this.target.range + \" km\" : \"Palvelun tarjous vain paikalla!\"}}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              Palvelun hinta:\r\n            </td>\r\n            <td>\r\n              {{this.target.priceByHour ? this.target.priceByHour + \" Euroa / tunti\": \"Urakkahinta sovittaessa!\"}}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              Saatu palaute:\r\n            </td>\r\n            <td>\r\n              <MDBIcon  style=\"padding: 10px; cursor: pointer;\" class=\"far fa-smile\" size=\"lg\"\r\n                        @click=\"negative\"></MDBIcon>\r\n\r\n\r\n              <MDBBadge color=\"success\" class=\"translate-middle p-1\"\r\n                        pill\r\n                        notification>\r\n                <p>{{this.target.rating.positive}}</p>\r\n              </MDBBadge>\r\n\r\n\r\n              <MDBIcon  style=\"padding: 10px; cursor: pointer;\" class=\"far fa-frown\" size=\"lg\"\r\n                        @click=\"negative\"></MDBIcon>\r\n\r\n\r\n\r\n              <MDBBadge color=\"danger\" class=\"translate-middle p-1\"\r\n                        pill\r\n                        notification>\r\n                <p>{{this.target.rating.negative}}</p>\r\n              </MDBBadge>\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"this.target.pro_link\">\r\n            <td>\r\n              Kotisivu\r\n            </td>\r\n            <td>\r\n              <a :href=\"'//' + this.target.pro_link\" target=\"_blank\">\r\n                Palveluntarjoajan kotisivu\r\n              </a>\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"target.user.id !== userId\">\r\n<!--            v-if=\"isCreatingChatPanel\"-->\r\n            <td colspan=\"2\">\r\n              <MDBBtn  block color=\"secondary\" size=\"lg\" @click=\"createChatPanel\">Chattailemaan</MDBBtn>\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"target.user.id !== userId && !isOrder\">\r\n            <td colspan=\"2\">\r\n              <MDBBtn  block color=\"success\" size=\"lg\" @click=\"createBooking\">Tee tilaus</MDBBtn>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n      </div>\r\n\r\n      <div v-if=\"isOrder\" class=\"order\">\r\n<!--        <p style=\"color: green; display: flex; justify-content: right; padding: 20px;\" @click=\"isOrder = false\">Valmis</p>-->\r\n        <div style=\"display: flex; justify-content: right; padding: 20px;\">\r\n          <MDBBtnClose\r\n            white\r\n            size=\"lg\"\r\n            @click=\"isOrder = false\"\r\n          />\r\n        </div>\r\n\r\n        <form @submit.prevent=\"confirmOrder\">\r\n          <p style=\"color: #00a6ff; text-align: left;\">Address: {{address}}</p>\r\n\r\n          <MDBInput\r\n              white\r\n              label=\"Anna otsiko\"\r\n              v-model=\"orderHeader\"\r\n              wrapperClass=\"mb-4\"\r\n          />\r\n\r\n          <p style=\"text-align: left;\">Missä ajalla haluaisit ammattilaista?</p>\r\n\r\n          <div style=\"color: #fff;\">\r\n            <VueDatePicker\r\n                style=\"margin-bottom: 20px;\"\r\n                v-model=\"orderDate\"\r\n                dark\r\n                :min-date=\"new Date()\"\r\n                teleport-center\r\n                @internal-model-change=\"handleInternalDate\"\r\n                :state=\"isNoDate ? false : null\"\r\n            >\r\n\r\n            </VueDatePicker>\r\n            <MDBTextarea\r\n                maxlength=\"70\"\r\n                label=\"Tehtävän kuvaus...\"\r\n                white\r\n                rows=\"2\"\r\n\r\n                v-model=\"orderDescription\"\r\n                invalidFeedback=\"Ole hyvä ja kirjoita tehtävän kuvaus.\"\r\n                validFeedback=\"Ok!\"\r\n                wrapperClass=\"mb-4\"\r\n            />\r\n            <span class=\"message-counter\">{{ orderDescription.length }} / 70</span>\r\n          </div>\r\n          <MDBBtn block type=\"submit\" color=\"success\">Tilaa</MDBBtn>\r\n        </form>\r\n\r\n      </div>\r\n\r\n\r\n\r\n<!--      <p style=\"color: red;\">selecteduser {{selecteduser}}</p>-->\r\n\r\n      <div v-if=\"!isTargetSelected\">\r\n        <div v-if=!isMainPanel >\r\n          <img :src=\"require(`@/assets/left_back.png`)\" alt=\"back\" style=\"float: right; padding: 10px;\" @click=\"returnToMainPanel\"/>\r\n\r\n<!--          <MDBIcon size=\"2x\" style=\"float: right; padding: 10px;\" @click=\"returnToMainPanel\">-->\r\n<!--            <i class=\"fas fa-expand-arrows-alt\"></i>-->\r\n<!--          </MDBIcon>-->\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n<!--      style=\"background-color:white; width: 40%; float: right;\"-->\r\n      <div v-if=\"!isMainPanel && countOfSelectedProfessional > 0 && !isTargetSelected\" style=\"background-color:white; width: 300px; margin: auto;\">\r\n        <div v-if=\"bookingDate\">\r\n          <p  style=\"color: blue; font-size: 14px; text-align: left; padding: 15px\">\r\n            Valittu aika: {{bookingDate.getDate() + \" / \" + (bookingDate.getMonth() + 1) + \" klo \" +  bookingDate.getHours() + \":\" + (bookingDate.getMinutes().length < 2 ? \"0\" + bookingDate.getMinutes() : bookingDate.getMinutes())}}\r\n          </p>\r\n          <p style=\"color: darkgreen; font-size: 17px; font-weight: bold; text-align: left; padding-left: 15px;\">Vihreä merkki - saatavilla </p>\r\n          <p style=\"color: darkorange; font-size: 17px ; font-weight: bold; text-align: left; padding-left: 15px;\">Oranssi merkki - sovitaessa </p>\r\n        </div>\r\n\r\n        <p style=\"color: #9fa6b2; font-size: 14px; text-align: left; padding: 15px; \">\r\n          Napsauta merkkiä nähdäksesi palveluntarjoajan!\r\n        </p>\r\n\r\n<!--        <p style=\"color: blue;\">-->\r\n<!--          {{ countOfSelectedProfessional + \" \" + professional }} tarjoaa palvelua-->\r\n<!--        </p>-->\r\n\r\n      </div>\r\n\r\n\r\n\r\n<!--      <MDBBtn color=\"dark\"-->\r\n<!--              v-if=\"isMainPanel\"-->\r\n<!--              size=\"lg\"-->\r\n<!--              block-->\r\n<!--              @click=\"receive\"-->\r\n<!--              style=\"position: relative; z-index:1; opacity: 1.2;\"-->\r\n<!--      >-->\r\n<!--        Tee uusi tilaus-->\r\n<!--      </MDBBtn>-->\r\n\r\n\r\n<!--      <MDBBtn color=\"danger\"-->\r\n<!--              v-if=\"isMainPanel\"-->\r\n<!--              size=\"lg\"-->\r\n<!--              block-->\r\n<!--              @click=\"$router.go(-1)\"-->\r\n<!--              style=\"position: relative; z-index:1; opacity: 1.0;\"-->\r\n<!--      >-->\r\n<!--        Poistu-->\r\n<!--      </MDBBtn>-->\r\n\r\n    </MDBContainer>\r\n<!--    <h3 style=\"margin-top: 50px;\">Kartta ladataan...</h3>-->\r\n<!--    <div class=\"spinner-border\" role=\"status\">-->\r\n<!--      <span class=\"visually-hidden\">Loading...</span>-->\r\n<!--    </div>-->\r\n<!--    <section id=\"map\"></section>-->\r\n\r\n<!--    <div id=\"map\" ref=\"mapRef\">-->\r\n\r\n<!--    </div>-->\r\n\r\n    <div id=\"map\"></div>\r\n\r\n\r\n\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\n/*global google*/\r\nimport axios from 'axios'\r\nimport recipientService from '../service/recipients'\r\nimport providerService from '../service/providers'\r\nimport dt from '../components/controllers/datetime'\r\nimport {\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBBtnClose,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBIcon,\r\n  MDBBadge,\r\n  MDBTextarea,\r\n  MDBCheckbox\r\n} from \"mdb-vue-ui-kit\";\r\nimport distance from '../components/controllers/distance'\r\nimport gMap from '../components/location'\r\nimport proData from '@/components/profession/proList'\r\nimport chatPanel from '@/pages/LiveChat'\r\nimport VueDatePicker from '@vuepic/vue-datepicker';\r\nimport Dropdown from 'primevue/dropdown';\r\nimport '@/css/pro.css'\r\n//import {Client} from \"@googlemaps/google-maps-services-js\";\r\nimport  { onMounted, ref } from \"vue\";\r\nimport socket from \"@/socket\";\r\nexport default {\r\n  name: \"recipient-public\",\r\n  props: {\r\n    userIsProvider: Object,\r\n    selecteduser: null,\r\n    chatusers: Array,\r\n    messages: Array,\r\n    isProviderLoggedIn: Boolean\r\n  },\r\n  components: {\r\n    chatPanel,\r\n    MDBContainer,\r\n    MDBInput,\r\n    MDBBtn,\r\n    MDBBtnClose,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBIcon,\r\n    MDBBadge,\r\n    MDBTextarea,\r\n    MDBCheckbox,\r\n    Dropdown,\r\n    VueDatePicker\r\n  },\r\n  data () {\r\n\r\n    return {\r\n      obj: null,\r\n      stateActive: false,\r\n      datetime: dt,\r\n      isOrder: false,\r\n      target: {}, // Selected provider from map\r\n      isTargetSelected: false,\r\n      isMainPanel: true,\r\n      isCreatingChatPanel: false,\r\n      prof: null,\r\n      username: null,\r\n      userId: null,\r\n      providerId: null,\r\n      address: null,\r\n      myLat: null,\r\n      mylng: null,\r\n      countOfSelectedProfessional: 0,\r\n      isActiveProffs: false,\r\n      isDistSelection: false,\r\n      professional: \"Automaalari\",\r\n      currentProfession: \"\",\r\n      distBtw: 0,\r\n      prodata: proData,\r\n      room: null,\r\n      isChatPanel: true,\r\n      isMapChat: false,\r\n      providers: [],\r\n\r\n      selectedProPosition: null,\r\n      bookingDate: null,\r\n      isSelectNow: false,\r\n      isPressedFindBtn: false,\r\n      orderDate: null,\r\n      orderHeader: \"\",\r\n      orderDescription: \"\"\r\n    }\r\n  },\r\n\r\n\r\n  // setup () {\r\n  //   const mapRef = ref(null)\r\n  //   const initMap = () => {\r\n  //     if (!window.google) {\r\n  //       console.error(\"Google api not loaded yet!\")\r\n  //       return;\r\n  //     }\r\n  //     // Set default coordinates (San Francisco)\r\n  //     const latLng = {lat: 37.7749, lng: -122.4194};\r\n  //\r\n  //     // Initialize map\r\n  //     const map = new window.google.maps.Map(mapRef.value, {\r\n  //       center: latLng,\r\n  //       zoom: 12\r\n  //     });\r\n  //\r\n  //     // Add a marker\r\n  //     new window.google.maps.Marker({\r\n  //       position: latLng,\r\n  //       map,\r\n  //       title: \"My location\"\r\n  //     });\r\n  //     console.log(\"Google maps initialized!\")\r\n  //   };\r\n  //\r\n  //   const loadGoogleMaps = () => {\r\n  //     if (!window.google) {\r\n  //       const script = document.createElement(\"script\");\r\n  //       script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.VUE_APP_MAP_KEY}&libraries=places,geometry`;\r\n  //       script.async = true;\r\n  //       script.defer = true;\r\n  //       script.onload = initMap;\r\n  //       document.head.appendChild(script);\r\n  //     } else {\r\n  //       initMap()\r\n  //     }\r\n  //   };\r\n  //\r\n  //   onMounted (() => {\r\n  //     loadGoogleMaps();\r\n  //   })\r\n  //\r\n  //   return {\r\n  //     mapRef\r\n  //   }\r\n  // },\r\n\r\n  mounted () {\r\n\r\n\r\n\r\n    // onMounted(() => {\r\n    //   const script = document.createElement(\"script\");\r\n    //   script.src = `https://maps.googleapis.com/maps/api/js?key=<%= process.env.VUE_APP_MAP_KEY %>&libraries=places,geometry`;\r\n    //   script.async = true;\r\n    //   script.defer = true;\r\n    //   script.onload = () => {\r\n    //     console.log(\"Google maps api loaded!\");\r\n    //\r\n    //   }\r\n    //   document.head.appendChild(script);\r\n    //\r\n    // })\r\n\r\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      this.username = user.username;\r\n      this.userId = user.id\r\n      //console.log(\"User token: \" + this.loggedUser.token)\r\n    }\r\n\r\n  // @media screen and (max-width: 480px) {\r\n  //     select{\r\n  //       /* Add your mobile only CSS here */\r\n  //     }\r\n  //   }\r\n  //\r\n  //   select {\r\n  //     /* Add your non-mobile CSS here */\r\n  //   }\r\n  //\r\n\r\n\r\n    this.resizeMap();\r\n\r\n    //console.log(\"Is provider in \" + this.isProviderLoggedIn)\r\n\r\n    //console.log(\"User id in providers \" + this.userId)\r\n    //const client = new Client({});\r\n\r\n    // const myMarker = new google.maps.Marker({\r\n    //   icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'\r\n    // })\r\n\r\n\r\n\r\n\r\n\r\n    this.userCurrentLocation();\r\n\r\n\r\n\r\n\r\n\r\n    //const mapSearch = window.localStorage.getItem('mapSearchData')\r\n    // if (mapSearch) {\r\n    //   const data = JSON.parse(mapSearch)\r\n    //   console.log(\"Data+++ \" + data.profession);\r\n    //   this.currentProfession = data.profession;\r\n    //   this.distBtw = data.distance;\r\n    //   this.showClientLocationOnTheMap(this.currentProfession, this.distBtw);\r\n    // }\r\n\r\n    // const mapSearchPro = window.localStorage.getItem('mapSearchProData');\r\n    // if (mapSearchPro) {\r\n    //   const currentPro = JSON.parse(mapSearchPro);\r\n    //   console.log(\"Pro pos in map ---- \" + currentPro);\r\n    //   // console.log(\"User id --------- \" + currentPro.user.id)\r\n    //   this.isMainPanel = false;\r\n    //   this.openMarker(currentPro);\r\n    //\r\n    // }\r\n\r\n    //this.setProviderId()\r\n\r\n\r\n\r\n\r\n\r\n    // const selectProfession = document.getElementById(\"listOfProfessionals\")\r\n    //\r\n    // selectProfession.addEventListener(\"change\", (event) => {\r\n    //   this.isDistSelection = true;\r\n    //\r\n    //   console.log(\"Selected \" + event.target.value);\r\n    //\r\n    //   this.currentProfession = event.target.value;\r\n    //   this.showClientLocationOnTheMap(event.target.value, this.distBtw);\r\n    // })\r\n\r\n    // this.currentProfession = \"Automaalari\";\r\n    // this.distBtw = 20;\r\n    //\r\n    // this.showClientLocationOnTheMap(this.currentProfession, this.distBtw);\r\n\r\n    const selectDistance = document.getElementById\r\n    (\"distance\");\r\n\r\n    selectDistance.addEventListener(\"change\", (event) => {\r\n      this.distBtw = parseFloat(event.target.value);\r\n      this.stateActive = true;\r\n      const data = {\r\n        profession: this.currentProfession,\r\n        distance: parseFloat(event.target.value)\r\n      }\r\n\r\n      //window.localStorage.setItem('mapSearchData', JSON.stringify(data));\r\n\r\n      //console.log(\"+++++++++++ \" + this.countOfSelectedProfessional > 0)\r\n\r\n      //this.showClientLocationOnTheMap(this.currentProfession, this.distBtw);\r\n\r\n    })\r\n\r\n\r\n\r\n    const input = document.getElementById(\"autocomplite\");\r\n\r\n    const center = { lat: 50.064192, lng: -130.605469 };\r\n    const defaultBounds = {\r\n      north: center.lat + 0.1,\r\n      south: center.lat - 0.1,\r\n      east: center.lng + 0.1,\r\n      west: center.lng - 0.1,\r\n    };\r\n    const options = {\r\n      bounds: defaultBounds,\r\n      componentRestrictions: { country: \"fi\" },\r\n      fields: [\"address_components\", \"geometry\", \"icon\", \"name\", \"formatted_address\"],\r\n      strictBounds: false,\r\n      //types: [\"establishment\"],\r\n    };\r\n    const autocomplete = new google.maps.places.Autocomplete(input, options)\r\n    //const autocomplete = client.places.Autocomplete(input, options);\r\n\r\n    autocomplete.addListener(\"place_changed\", () => {\r\n      let place = autocomplete.getPlace()\r\n      this.myLat = place.geometry.location.lat();\r\n      this.myLng = place.geometry.location.lng();\r\n\r\n      this.getAddressFrom(place.geometry.location.lat(), place.geometry.location.lng())\r\n      this.address = place.formatted_address;\r\n      console.log(\"Address xxxx \" + place.formatted_address)\r\n      console.log(\"place-----------\" + this.myLat)\r\n    });\r\n\r\n  },\r\n  methods: {\r\n    puhasta () {\r\n      console.log(\"Puhastatud\")\r\n      //window.localStorage.removeItem('mapSearchProData');\r\n    },\r\n    removeDateIfExist () {\r\n      console.log(\"Clicked, functioning\");\r\n      if (this.bookingDate && !this.isSelectNow) {\r\n        this.bookingDate = new Date();\r\n      }\r\n    },\r\n    async handleDate (date) {\r\n      console.log(\"Date handled!\" + date);\r\n      if (date) {\r\n        this.isSelectNow = false;\r\n      }\r\n      if (this.stateActive) {\r\n        const providers = await providerService.getProviders()\r\n        if (providers !== null) {\r\n          //this.otherUserLocations(providers, this.currentProfession, this.distBtw);\r\n        }\r\n      }\r\n    },\r\n    // handleInternalDate () {\r\n    //   console.log(\"InternalDate!!!\")\r\n    // },\r\n    /*isNoDate () {\r\n      console.log(\"No date\")\r\n    },*/\r\n    changedProfession () {\r\n      console.log(\"Changed \" + this.prof.label);\r\n      this.showClientLocationOnTheMap(this.prof.label, this.distBtw);\r\n      this.currentProfession = this.prof.label;\r\n      this.isDistSelection = true;\r\n    },\r\n    selectUser(user) {\r\n      this.$emit('select:user', user);\r\n      //if (!user.self)\r\n      //this.selectedUser = user;\r\n    },\r\n\r\n    noSelectUser () {\r\n      this.$emit(\"noSelected\");\r\n    },\r\n    onMessage(content, blob, date) {\r\n\r\n      this.$emit(\"on:message\", content, blob, date);\r\n\r\n    },\r\n    resizeMap() {\r\n      var myMap = document.getElementById('map');\r\n      myMap.style.height = \"100%\";\r\n      myMap.style.width = \"100%\";\r\n    },\r\n    receive (){\r\n      this.$router.push('/rf')\r\n      //this.$router.push('recipient-form');\r\n\r\n    },\r\n    userCurrentLocation () {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          const { latitude, longitude } = position.coords;\r\n          // Show a map centered at latitude / longitude.\r\n          this.myLat = latitude\r\n          this.myLng = longitude\r\n          console.log(\"myLat \" + latitude)\r\n          this.showUserLocationOnTheMap (latitude, longitude)\r\n        });\r\n      }\r\n\r\n    },\r\n\r\n    pinSymbol(color) {\r\n      const priceTag = document.createElement(\"div\");\r\n\r\n      priceTag.className = \"price-tag\";\r\n      priceTag.textContent = \"$2.5M\";\r\n      return {\r\n        path: 'M 0,0 C -2,-20 -10,-22 -10,-30 A 10,10 0 1,1 10,-30 C 10,-22 2,-20 0,0 z',\r\n        fillColor: color,\r\n        fillOpacity: 1,\r\n        strokeColor: '#000',\r\n        strokeWeight: 2,\r\n        scale: 1,\r\n        labelOrigin: {\r\n          x: 60,\r\n          y: -25\r\n        }\r\n      };\r\n    },\r\n    // Kasutaja sihtkoht, otsitakse automaatselt\r\n    showUserLocationOnTheMap (latitude, longitude) {\r\n      //const client = new Client({});\r\n      try {\r\n        new google.maps.Map(document.getElementById(\"map\"), {\r\n          zoom: 13,\r\n          center: new google.maps.LatLng(latitude, longitude),\r\n          mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n          accuracy: 50,\r\n\r\n        });\r\n      } catch(err) {\r\n        console.log(\"Error to load map: \" + err.message);\r\n      }\r\n\r\n\r\n      // new google.maps.Marker({\r\n      //   position: new google.maps.LatLng(latitude, longitude),\r\n      //   accuracy: 50,\r\n      //   map: map,\r\n      //   icon: this.pinSymbol('yellow'),\r\n      //   label: { color: '#00aaff', fontWeight: 'bold', fontSize: '14px', text: 'Olen tällä' }\r\n      // })\r\n      this.getAddressFrom (latitude, longitude)\r\n    },\r\n    // Siis kui sisestada käsitsi aadress\r\n    getAddressFrom (lat, long) {\r\n      //const client = new Client({});\r\n      axios.get('https://maps.googleapis.com/maps/api/geocode/json?latlng=' + lat +\r\n          \",\" + long\r\n          + \"&key=\" + process.env.VUE_APP_MAP_KEY)\r\n          .then(response => {\r\n            if (response.data.error_message) {\r\n              this.error = response.data.error_message;\r\n\r\n              console.log(response.data.error_message)\r\n            } else {\r\n              const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n                zoom: 13,\r\n                center: new google.maps.LatLng(lat, long),\r\n                mapTypeId: google.maps.MapTypeId.ROADMAP\r\n              });\r\n\r\n              // AIzaSyBDA2EBoGezJx51wQtxoW3Ecq5Ql8CCAiE\r\n\r\n              this.address = response.data.results[1].formatted_address\r\n            }\r\n\r\n          })\r\n          .catch(error => {\r\n            this.error = error.message\r\n            console.log(error.message)\r\n          })\r\n    },\r\n\r\n    distanceBtw (originLat, originLng, destLat, destLng) {\r\n      var origin = new google.maps.LatLng(originLat, originLng);\r\n      var destination = new google.maps.LatLng(destLat, destLng);\r\n      return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\r\n    },\r\n\r\n    findSuitablePro () {\r\n      this.isPressedFindBtn = true;\r\n      this.showClientLocationOnTheMap(this.currentProfession, this.distBtw);\r\n    },\r\n\r\n    datetimeFitting (to) {\r\n      let date;\r\n\r\n      if (this.bookingDate) {\r\n        let year = this.bookingDate.getFullYear();\r\n        let month = this.bookingDate.getMonth();\r\n        let day = this.bookingDate.getDate();\r\n        let hour = this.bookingDate.getHours();\r\n        let minute = this.bookingDate.getMinutes();\r\n\r\n        console.log(\"Booking date 2 \" + new Date(year, month, day, hour, minute));\r\n        date = new Date(year, month, day, hour, minute);\r\n      }\r\n\r\n      return this.datetime.providerMatchingForClient(\r\n          date,\r\n          {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\r\n          {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\r\n      )\r\n    },\r\n\r\n    async otherUserLocations (providers, profession, dist) {\r\n      //const client = new Client({});\r\n      let prev_infowindow = false;\r\n\r\n      let map = new google.maps.Map(document.getElementById(\"map\"), {\r\n        zoom: 9,\r\n        center: new google.maps.LatLng(this.myLat, this.myLng),\r\n        mapTypeId: google.maps.MapTypeId.ROADMAP\r\n      });\r\n      console.log(\"Users count: \" + providers.length)\r\n      console.log(\"Current distance \" + dist)\r\n      let date;\r\n      if (this.bookingDate) {\r\n        let year = this.bookingDate.getFullYear();\r\n        let month = this.bookingDate.getMonth();\r\n        let day = this.bookingDate.getDate();\r\n        let hour = this.bookingDate.getHours();\r\n        let minute = this.bookingDate.getMinutes();\r\n\r\n        console.log(\"Booking date 2 \" + new Date(year, month, day, hour, minute));\r\n        date = new Date(year, month, day, hour, minute);\r\n      }\r\n\r\n       // new google.maps.Marker({\r\n       //   position: new google.maps.LatLng(this.myLat, this.myLng),\r\n       //   accuracy: 50,\r\n       //   map: map,\r\n       //   icon: this.pinSymbol('yellow'),\r\n       //   label: { color: '#00aaff', fontWeight: 'bold', fontSize: '14px', text: 'Olen tällä' }\r\n       // })\r\n      let count = 0;\r\n\r\n      if (providers.length > 0) {\r\n        this.target = {};\r\n\r\n        for (let pos = 0; pos < providers.length; pos++) {\r\n          console.log(\"------------ \" + providers[pos].yritys);\r\n          //console.log(\"Client latitude: \" + recipient[pos].latitude)\r\n          //console.log(\"Client longitude: \" + recipient[pos].longitude)\r\n          let myLatLong = [this.myLat, this.myLng];\r\n\r\n          providers[pos].profession.forEach(prof => {\r\n            if (prof === profession) {\r\n\r\n\r\n\r\n              //his.providers.push(providers[pos])\r\n              console.log(\"Pro \" + prof.yritys)\r\n              let providerLatLng = [providers[pos].latitude, providers[pos].longitude];\r\n              console.log(\"Distance btw \" + this.distanceBtw(this.myLat, this.myLng, providers[pos].latitude, providers[pos].longitude));\r\n\r\n              //distance.theDist()\r\n\r\n              //this.countOfSelectedClient++;\r\n              this.isActiveProffs = true;\r\n\r\n              if (this.distanceBtw(this.myLat, this.myLng, providers[pos].latitude, providers[pos].longitude) <= dist) {\r\n                count ++;\r\n\r\n                let marker;\r\n\r\n                if (providers[pos].timeoffer.length > 0) {\r\n                  providers[pos].timeoffer.map(time => {\r\n                    console.log(\"Year: \" + time.yearFrom)\r\n                    console.log(\"Fitting datetime: \" +\r\n                        this.datetime.providerMatchingForClient(\r\n                            date,\r\n                            {y: time.yearFrom, m: time.monthFrom, d: time.dayFrom, hour: time.hoursFrom, min: time.minutesFrom},\r\n                            {y: time.yearTo, m: time.monthTo, d: time.dayTo, hour: time.hoursTo, min: time.minutesTo}\r\n                        )\r\n\r\n                    )\r\n\r\n                    if (this.datetime.providerMatchingForClient(\r\n                        date,\r\n                        {y: time.yearFrom, m: time.monthFrom, d: time.dayFrom, hour: time.hoursFrom, min: time.minutesFrom},\r\n                        {y: time.yearTo, m: time.monthTo, d: time.dayTo, hour: time.hoursTo, min: time.minutesTo}\r\n                    )) {\r\n\r\n                      marker = new google.maps.Marker({\r\n                        position: new google.maps.LatLng(providers[pos].latitude, providers[pos].longitude),\r\n                        accuracy: 50,\r\n                        map: map,\r\n                        title: providers[pos].yritys,\r\n                        icon: this.pinSymbol('green'),\r\n                        label: { color: '#79f759',  fontWeight: 'bold', fontSize: '14px', text: \"Saatavilla!\"}\r\n                      })\r\n                    } else {\r\n\r\n                      marker = new google.maps.Marker({\r\n                        position: new google.maps.LatLng(providers[pos].latitude, providers[pos].longitude),\r\n                        accuracy: 50,\r\n                        map: map,\r\n                        title: providers[pos].yritys,\r\n                        icon: this.pinSymbol('orange'),\r\n                        label: { color: '#f79859',  fontWeight: 'bold', fontSize: '14px', text: \"Sovitaessa!\"}\r\n                      })\r\n\r\n                    }\r\n                  })\r\n                } else {\r\n                  marker = new google.maps.Marker({\r\n                    position: new google.maps.LatLng(providers[pos].latitude, providers[pos].longitude),\r\n                    accuracy: 50,\r\n                    map: map,\r\n                    title: providers[pos].yritys,\r\n                    icon: this.pinSymbol('orange'),\r\n                    label: { color: '#f79859',  fontWeight: 'bold', fontSize: '14px', text: \"Sovitaessa!\"}\r\n                  })\r\n                }\r\n                window.myGlobalFunction = this.openMarker;\r\n\r\n                const content = \"class='map-info-window'\"\r\n\r\n                const infowindow = new google.maps.InfoWindow({\r\n                  //content: \"Hei hei!\"\r\n                  //content:'<p id=\"map-info-window\">Hello World!</p>'\r\n                  //content: \"TMI: \" + providers[pos].yritys\r\n                });\r\n\r\n                google.maps.event.addListener(marker, 'click', function() {\r\n                  //infowindow.setContent(content);\r\n\r\n\r\n                  console.log(\"POOOOS \" + pos)\r\n                  let p = pos\r\n\r\n                  if( prev_infowindow ) {\r\n                    prev_infowindow.close();\r\n                  }\r\n\r\n                  prev_infowindow = infowindow;\r\n\r\n\r\n                  infowindow.open(map,marker);\r\n\r\n                  //infowindow.setContent(\"<div  class='map-info-window'>\" + '<p style=\"color: green; \">'+providers[pos].yritys+'</p>' + '<p style=\"color: red; \" onclick=\"myGlobalFunction('+ p +' )\">Tiedot</p>' + \"</div>\")\r\n                  infowindow.setContent(\"<div  \" +\r\n                      \"class='map-info-window'>\" +\r\n                      '<p style=\"color: green; \">'+\r\n                      providers[pos].yritys+'</p>' +\r\n                      '<p style=\"color: red; \" ' +\r\n                      'onclick=\"myGlobalFunction('+ p +' )\"' +\r\n                      '>Tiedot' +\r\n                      '</p>' +\r\n                      \"</div>\")\r\n                });\r\n\r\n                console.log(\"Prev infowondow \" + prev_infowindow)\r\n\r\n              }\r\n\r\n            }\r\n          })\r\n\r\n        }\r\n\r\n\r\n        if (count > 0) {\r\n          this.isActiveProffs = true;\r\n          this.isMainPanel = false;\r\n\r\n        } else {\r\n          this.isActiveProffs = false;\r\n        }\r\n        this.countOfSelectedProfessional = count;\r\n        console.log(\"countxx \" + count)\r\n        this.identifyProfText();\r\n        //console.log(\"Count \" + this.countOfSelectedClients)\r\n\r\n      }\r\n\r\n    },\r\n\r\n    handleInitChat (isActive, bookingId, counter, isCounter) {\r\n      if (this.target.user.username !== this.username) {\r\n        const room = this.target.yritys + this.username;\r\n        //console.log(\"Username in map: \" + this.target.user.username);\r\n        //console.log(\"Room in map \" + this.room);\r\n\r\n        const createChatRoom = {\r\n          status: \"map\",\r\n          useCounter: isCounter,\r\n          isActive: isActive,\r\n          bookingID: bookingId,\r\n          same_room_counter: counter,\r\n          isOnline: true,\r\n          room: this.room,\r\n          pro: this.target.yritys,\r\n          username: this.username,\r\n          bookerUsername: this.username,\r\n          bookerID: this.userId,\r\n          providerUsername: this.target.user.username,\r\n          providerID: this.target.user.id\r\n        }\r\n        const chatCredentials = {\r\n          useCounter: isCounter,\r\n          isActive: isActive,\r\n          bookingID: bookingId,\r\n          same_room_counter: counter,\r\n          room: this.room,\r\n          proID: this.target.user.id,\r\n          pro: this.target.yritys,\r\n          // userID: this.target.user.id,\r\n          // username: this.target.user.username\r\n          userID: this.userId,\r\n          username:this.username\r\n        }\r\n        //this.$emit(\"chatCredentials\", chatCredentials);\r\n\r\n        this.$emit(\"initializeChat\", {\r\n          initChatRoom: createChatRoom,\r\n          chatData: chatCredentials\r\n        });\r\n\r\n      }\r\n    },\r\n\r\n    createChatPanel () {\r\n      // if (this.target.user.username !== this.username) {\r\n      //   const room = this.target.yritys + this.username;\r\n      //   console.log(\"Username in map: \" + this.target.user.username);\r\n      //   console.log(\"Room in map \" + this.room);\r\n      //   // Room users in server will be created\r\n      //   socket.emit(\"create room users\", {\r\n      //     room: this.room,\r\n      //     pro: this.target.yritys,\r\n      //     status: \"map\",\r\n      //     username: this.username,\r\n      //     providerUsername: this.target.user.username,\r\n      //     providerID: this.target.user.id\r\n      //   })\r\n      //   const chatCredentials = {\r\n      //     room: this.room,\r\n      //     userID: this.target.user.id,\r\n      //     username: this.target.user.username\r\n      //   }\r\n      //   this.$emit(\"chatCredentials\", chatCredentials);\r\n      // }\r\n      this.handleInitChat(false, \"0\", 0, true);\r\n      this.isMapChat = true\r\n    },\r\n\r\n    async openMarker (p) {\r\n      console.log(\"Booking date \" + new Date(this.bookingDate));\r\n      const d = this.bookingDate;\r\n\r\n\r\n      //this.noSelectUser();\r\n      //console.log(\"Profession \" + this.currentProfession);\r\n      console.log(\"Pro profession \" )\r\n      const pro = [this.currentProfession]\r\n      // if (this.target.user.username !== this.username) {\r\n      //   this.room = this.target.yritys + this.username;\r\n      // }\r\n\r\n\r\n      const providersMatchingProSearch = await providerService.getProvidersMatchingByProfession({result: pro});\r\n\r\n      let dataForward = [];\r\n\r\n      providersMatchingProSearch.forEach(pms => {\r\n\r\n        console.log(\"Results: \" + pms.user.id);\r\n        let distance = parseInt(this.distanceBtw(this.myLat, this.myLng, pms.latitude, pms.longitude)).toFixed(0)\r\n        console.log(\"Distance to display \" + distance);\r\n        dataForward = dataForward.concat({\r\n          id: pms.user.id,\r\n          dist: distance,\r\n          pro: this.currentProfession\r\n        })\r\n      })\r\n\r\n      socket.emit(\"map search report\", dataForward);\r\n\r\n      const providers = await providerService.getProviders()\r\n      if (providers) {\r\n        //console.log(\"watcher position \" + this.myLat + \" / \" + this.myLng);\r\n        if (providers[p].user.username !== this.username) {\r\n          this.isCreatingChatPanel = true\r\n        }\r\n\r\n        console.log(\"Room in client map: \" + this.room);\r\n\r\n        this.target = providers[p];\r\n        //window.localStorage.setItem('mapSearchProData', JSON.stringify(p));\r\n        if (this.username) {\r\n          this.room = this.target.yritys + this.username;\r\n        } else {\r\n          this.room = \"nipitiri\";\r\n        }\r\n        this.isTargetSelected = true;\r\n        //console.log(\"Pooooos ---- \" + p);\r\n        //this.otherUserLocations(providers, this.currentProfession, this.distBtw)\r\n      }\r\n\r\n    },\r\n    createBooking () {\r\n      console.log(\"Here you can make an order! \" + this.address)\r\n      this.isOrder = true;\r\n    },\r\n\r\n\r\n    async confirmOrder () {\r\n      //console.log(\"Order, target id \" + this.target.id);\r\n      let recipient;\r\n      if (this.orderDate) {\r\n        let year = this.orderDate.getFullYear();\r\n        let month = this.orderDate.getMonth();\r\n        let day = this.orderDate.getDate();\r\n        let hour = this.orderDate.getHours();\r\n        let minute = this.orderDate.getMinutes();\r\n        const dateForMs = new Date(year, month, day, hour, minute).getTime();\r\n\r\n        recipient = {\r\n          created: this.orderDate,\r\n          created_ms: dateForMs,\r\n          header: this.orderHeader,\r\n          address: this.address,\r\n          latitude: this.myLat,\r\n          longitude: this.myLng,\r\n          professional: this.currentProfession,\r\n          isIncludeOffers: false,\r\n          year: this.orderDate.getFullYear(),\r\n          month: this.orderDate.getMonth(),\r\n          day: this.orderDate.getDate(),\r\n          hours: this.orderDate.getHours(),\r\n          minutes: this.orderDate.getMinutes(),\r\n          description: this.orderDescription,\r\n          status: \"notSeen\",\r\n          ordered: this.target.id\r\n        }\r\n\r\n\r\n      }\r\n      console.log(\"Address: \" + this.address);\r\n      const booking = await recipientService.addRecipient(this.userId, recipient)\r\n\r\n\r\n\r\n      //const room = this.target.yritys + this.username;\r\n      const proBooking = await recipientService.getBookingById(booking.id);\r\n      await recipientService.addProviderData(booking.id, this.target.id);\r\n      const bookingToProvider = await providerService.addProviderBooking(this.target.id, booking.id);\r\n      if (bookingToProvider === \"Recipient is added!\") {\r\n        console.log(\"Iiiiisss \" + (this.target.yritys + this.username))\r\n        const room = this.target.yritys + this.username;\r\n        const chatUserDataNavbar = {\r\n          status: \"\",\r\n          userID: this.target.user.id,\r\n          name: this.target.user.username,\r\n          room: room\r\n        };\r\n\r\n\r\n        //this.handleInitChat(false, booking.id, true);\r\n\r\n\r\n        // const chatCredentials = {\r\n        //   room: this.room,\r\n        //   pro: this.target.yritys,\r\n        //   userID: this.target.user.id,\r\n        //   username: this.target.user.username\r\n        // }\r\n        // this.$emit(\"chatCredentials\", chatCredentials);\r\n\r\n        //this.$emit('client:confirmed_provider', this.target.id, booking, chatUserDataNavbar);\r\n      }\r\n\r\n\r\n\r\n      const id = this.target.user.id;\r\n      this.$emit('booking_map:update', booking)\r\n      socket.emit(\"accept provider\", {\r\n        id,\r\n        booking: proBooking,\r\n      })\r\n      this.$router.push('/received')\r\n    },\r\n\r\n    async outFromMarkerPanel () {\r\n      this.isTargetSelected = false\r\n      //this.isMainPanel = true;\r\n      this.noSelectUser();\r\n      //window.localStorage.removeItem('mapSearchProData');\r\n      const providers = await providerService.getProviders()\r\n      if (providers !== null) {\r\n        this.otherUserLocations(providers, this.currentProfession, this.distBtw);\r\n      }\r\n    },\r\n\r\n    closeMapChat () {\r\n      this.isMapChat = false\r\n    },\r\n\r\n    async returnToMainPanel () {\r\n      this.isMainPanel = true;\r\n      this.bookingDate = null;\r\n      this.isSelectNow = false;\r\n      this.distBtw = 0;\r\n      await this.showClientLocationOnTheMap(this.currentProfession, this.distBtw);\r\n      this.isPressedFindBtn = false;\r\n\r\n      //window.localStorage.removeItem('mapSearchData')\r\n      this.noSelectUser();\r\n\r\n      // const providers = await providerService.getProviders()\r\n      // if (providers !== null) {\r\n      //   this.otherUserLocations(providers, \"\", \"\");\r\n      // }\r\n      //this.currentProfession = \"\"\r\n      // this.prof = \"\";\r\n      // this.distBtw = 0\r\n    },\r\n\r\n    closeMainPanel () {\r\n      this.isMainPanel = false;\r\n      this.noSelectUser();\r\n      console.log(\"Close main panel\")\r\n    },\r\n\r\n    // renderClients (event) {\r\n    //   console.log(\"Event value \" + event.target.value)\r\n    //   //this.countOfSelectedClients = 0;\r\n    //\r\n    //   if (event.target.value) {\r\n    //     // @click=\"renderClients($event)\"\r\n    //     this.showClientLocationOnTheMap(event.target.value)\r\n    //\r\n    //   }\r\n    //   this.prof = event.target.value\r\n    //\r\n    //   event.target.value = \"\"\r\n    //\r\n    // },\r\n\r\n\r\n    async showClientLocationOnTheMap (profession, dist) {\r\n\r\n      console.log(\"Current distance herexx  \" + dist)\r\n      const providers = await providerService.getProviders()\r\n      if (providers !== null) {\r\n        if (!window.google) {\r\n          this.otherUserLocations(providers, profession, dist);\r\n        } else {\r\n          this.otherUserLocations(providers, profession, dist);\r\n        }\r\n\r\n      }\r\n\r\n    },\r\n    identifyProfText () {\r\n      if (this.countOfSelectedProfessional > 1) {\r\n        this.professional = \"ammattilaista\"\r\n      } else {\r\n        this.professional = \"ammattilainen\"\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.ui.button,\r\n.dot.circle {\r\n  background-color: #ff5a5f;\r\n  color: white;\r\n}\r\n\r\n.distSelectPanel {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n\r\n\r\n.pac-icon {\r\n  display: none;\r\n}\r\n.pac-item {\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n.pac-item:hover {\r\n  background-color: #ececec;\r\n}\r\n.pac-item-query {\r\n  font-size: 16px;\r\n}\r\n.spinner-border {\r\n\r\n}\r\n\r\n.client-map-panel {\r\n  background-color: #2b2a2a;\r\n  padding: 10px;\r\n  margin: auto;\r\n  width: 30%;\r\n  float: right;\r\n}\r\n\r\n\r\n#map {\r\n  background:  url(/src/assets/map.gif)  no-repeat center center;\r\n\r\n}\r\n\r\n#map {\r\n   position: absolute;\r\n\r\n  /*height: 500px; !* The height is 400 pixels *!*/\r\n  /*width: 100%; !* The width is the width of the web page *!*/\r\n\r\n   top: 120px;\r\n   right: 0;\r\n   bottom: 20px;\r\n   left: 0;\r\n }\r\n\r\n.map-info-window {\r\n  /*width: 200px;*/\r\n\r\n}\r\n\r\n#address-panel {\r\n  margin-top: 10px;\r\n}\r\n\r\n@media only screen and (max-width: 1000px) {\r\n  #address-panel {\r\n    display: none !important;\r\n  }\r\n  .client-map-panel {\r\n    background-color: #2b2a2a;\r\n    padding: 10px;\r\n    margin: auto;\r\n    width: 80%;\r\n    float: none;\r\n  }\r\n}\r\n\r\n.activeClients {\r\n  display: none !important;\r\n}\r\n.noClients {\r\n  display: none !important;\r\n}\r\n.hideDistSelectPanel {\r\n  display: none !important;\r\n}\r\n.hideMainPanel {\r\n  display: none !important;\r\n}\r\nh3 {\r\n  padding: 10px;\r\n  color: #0095ff;\r\n}\r\n.minmax-icon {\r\n  padding: 12px;\r\n}\r\n\r\n.map-info-table  td {\r\n  border: 1px solid blue;\r\n  padding: 5px;\r\n}\r\n\r\n.order{\r\n  color:yellow;\r\n\r\n  /*background-color:rgba(255, 0, 0, 0.5);*/\r\n  /*background-color:#221a16;*/\r\n  background-color: #434240;\r\n  /*opacity: 0.2  ;*/\r\n  /*height:300px;*/\r\n  width:90%;\r\n  margin: auto;\r\n  padding: 14px;\r\n  /*display:flex;*/\r\n  /*align-items:center;*/\r\n  /*justify-content:center;*/\r\n\r\n\r\n  /*top: 50vh; left: 50vw; transform: translate(-50%, -50%);*/\r\n  /*top: 50vh; left: 50vw; transform: translate(-50%, -50%);*/\r\n  position:relative;\r\n  /*bottom:5px;*/\r\n  /*right:5px;*/\r\n}\r\n\r\n</style>","import { render } from \"./RecipientPublic.vue?vue&type=template&id=3d5cd7b2\"\nimport script from \"./RecipientPublic.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPublic.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPublic.vue?vue&type=style&index=0&id=3d5cd7b2&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["compare","rec","prov","receiverDate","Date","y","m","d","hour","min","providerDate","providerMatchingForClient","re","pFrom","pTo","pFromDate","pToDate","style","id","value","key","class","colspan","_createElementBlock","_createVNode","_component_MDBContainer","default","_withCtx","_createElementVNode","_normalizeClass","hideMainPanel","$data","isMainPanel","_hoisted_1","_component_MDBIcon","size","onClick","$options","closeMainPanel","_cache","_","_component_MDBBtnClose","white","$event","_ctx","$router","go","_hoisted_2","_component_MDBInput","label","modelValue","address","wrapperClass","_hoisted_3","_component_Dropdown","onChange","changedProfession","prof","options","prodata","filter","optionLabel","optionGroupLabel","optionGroupChildren","placeholder","optiongroup","slotProps","_hoisted_7","_toDisplayString","option","_hoisted_4","_hoisted_5","_hoisted_6","hideDistSelectPanel","isDistSelection","_hoisted_8","_component_VueDatePicker","bookingDate","handleDate","dark","onInternalModelChange","handleInternalDate","state","isNoDate","_hoisted_9","_component_MDBCheckbox","name","isSelectNow","removeDateIfExist","distBtw","args","filterByDistance","disabled","_createBlock","_component_MDBBtn","color","findSuitablePro","_createTextVNode","_createCommentVNode","isPressedFindBtn","noClients","isActiveProffs","isMapChat","_hoisted_10","closeMapChat","_component_chat_panel","chatusers","$props","messages","selecteduser","selectUser","onNoSelected","noSelectUser","onMessage","isTargetSelected","_hoisted_11","_hoisted_12","outFromMarkerPanel","_hoisted_13","target","yritys","ytunnus","range","this","priceByHour","negative","_component_MDBBadge","pill","notification","rating","positive","pro_link","_hoisted_14","href","_hoisted_15","user","userId","_hoisted_16","_hoisted_17","block","createChatPanel","isOrder","_hoisted_18","_hoisted_19","createBooking","_hoisted_20","_hoisted_21","onSubmit","_withModifiers","confirmOrder","_hoisted_22","orderHeader","_hoisted_23","orderDate","_component_MDBTextarea","maxlength","rows","orderDescription","invalidFeedback","validFeedback","_hoisted_24","length","type","_hoisted_25","_hoisted_26","src","require","alt","returnToMainPanel","_hoisted_27","countOfSelectedProfessional","_hoisted_28","_hoisted_29","_hoisted_30","getDate","getMonth","getHours","getMinutes","props","userIsProvider","Object","Array","isProviderLoggedIn","Boolean","components","chatPanel","MDBContainer","MDBInput","MDBBtn","MDBBtnClose","MDBRow","MDBCol","MDBIcon","MDBBadge","MDBTextarea","MDBCheckbox","Dropdown","VueDatePicker","data","obj","stateActive","datetime","dt","isCreatingChatPanel","username","providerId","myLat","mylng","professional","currentProfession","proData","room","isChatPanel","providers","selectedProPosition","mounted","loggedUserJSON","window","localStorage","getItem","JSON","parse","resizeMap","userCurrentLocation","selectDistance","document","getElementById","addEventListener","event","parseFloat","input","center","lat","lng","defaultBounds","north","south","east","west","bounds","componentRestrictions","country","fields","strictBounds","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","geometry","location","myLng","getAddressFrom","formatted_address","console","log","methods","puhasta","date","providerService","getProviders","showClientLocationOnTheMap","$emit","content","blob","myMap","height","width","receive","push","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","showUserLocationOnTheMap","pinSymbol","priceTag","createElement","className","textContent","path","fillColor","fillOpacity","strokeColor","strokeWeight","scale","labelOrigin","x","Map","zoom","LatLng","mapTypeId","MapTypeId","ROADMAP","accuracy","err","message","long","axios","get","then","response","error_message","error","results","catch","distanceBtw","originLat","originLng","destLat","destLng","origin","destination","spherical","computeDistanceBetween","toFixed","datetimeFitting","to","year","getFullYear","month","day","minute","yearFrom","monthFrom","dayFrom","hoursFrom","minutesFrom","yearTo","monthTo","dayTo","hoursTo","minutesTo","otherUserLocations","profession","dist","prev_infowindow","map","count","pos","forEach","marker","timeoffer","time","Marker","title","icon","fontWeight","fontSize","text","myGlobalFunction","openMarker","infowindow","InfoWindow","p","close","open","setContent","identifyProfText","handleInitChat","isActive","bookingId","counter","isCounter","createChatRoom","status","useCounter","bookingID","same_room_counter","isOnline","pro","bookerUsername","bookerID","providerUsername","providerID","chatCredentials","proID","userID","initChatRoom","chatData","providersMatchingProSearch","getProvidersMatchingByProfession","result","dataForward","pms","distance","parseInt","concat","socket","emit","recipient","dateForMs","getTime","created","created_ms","header","isIncludeOffers","hours","minutes","description","ordered","booking","recipientService","addRecipient","proBooking","getBookingById","addProviderData","bookingToProvider","addProviderBooking","__exports__","render"],"sourceRoot":""}