{"version":3,"file":"js/233.554f1668.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/controllers/datetime.js","webpack://prore-mongo/./src/components/controllers/distance.js","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue?7f3a"],"sourcesContent":["\nconst compare = (rec, prov) => {\n    const receiverDate = new Date(rec.y, rec.m, rec.d, rec.hour, rec.min);\n    const providerDate = new Date(prov.y, prov.m, prov.d, prov.hour, prov.min)\n    return providerDate >= receiverDate;\n}\n\nconst providerMatchingForClient = (re, pFrom, pTo) => {\n    //const rDate = new Date(re.y, re.m, re.d, re.hour, re.min);\n    const pFromDate = new Date(pFrom.y, pFrom.m, pFrom.d, pFrom.hour, pFrom.min);\n    const pToDate = new Date(pTo.y, pTo.m, pTo.d, pTo.hour, pTo.min);\n    return re >= pFromDate && re < pToDate;\n}\nexport default { compare, providerMatchingForClient }","/*global google*/\nlet res = \"\";\nconst distance = () => {\n    //let text = \"\";\n    //let value = 0;\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\n    var service = new google.maps.DistanceMatrixService();\n    service.getDistanceMatrix(\n        {\n            origins: [origin],\n            destinations: [destination],\n            travelMode: 'DRIVING',\n            unitSystem: google.maps.UnitSystem.METRIC,\n            durationInTraffic: true,\n            avoidHighways: false,\n            avoidTolls: false\n        }, response_data);\n    //return response_data;\n}\n\nconst response_data = (responseDis, status) => {\n    //let result = \"\";\n    if (status !== google.maps.DistanceMatrixStatus.OK || status !== \"OK\"){\n        console.log('Error:', status);\n        // OR\n        alert(status);\n    }else{\n        //alert(responseDis.rows[0].elements[0].distance.text);\n        console.log(\"Distance \" + responseDis.rows[0].elements[0].distance.text)\n\n        res = responseDis.rows[0].elements[0].distance.text;\n        return \"aaaaaaaaaaaaa\"\n        //result = responseDis.rows[0].elements[0].distance.text;\n    }\n    //return  \"Hallo\"        //result.toString();\n}\n\nconst test = () => {\n    console.log(\"Is it working??\" + res)\n\n    return  <div>Hiiii</div>;\n}\n\nconst theDist = () => {\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\n    return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n}\n\n// function calcDistance() {\n//     // var origin = new google.maps.LatLng(60.233093,24.7531362);\n//     // var destination = new google.maps.LatLng(60.2767265,24.8575089);\n//     // return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n//\n//     var directionsService = new google.maps.DirectionsService();\n//\n//     var request = {\n//         origin      : 'Melbourne VIC', // a city, full address, landmark etc\n//         destination : 'Sydney NSW',\n//         travelMode  : google.maps.DirectionsTravelMode.DRIVING\n//     };\n//\n//     directionsService.route(request, function(response, status) {\n//         if ( status === google.maps.DirectionsStatus.OK ) {\n//             alert( response.routes[0].legs[0].distance.value ) ; // the distance in metres\n//         }\n//         else {\n//             // oops, there's no route between these two locations\n//             // every time this happens, a kitten dies\n//             // so please, ensure your address is formatted properly\n//         }\n//     });\n// }\n\nexport default { distance, test, theDist }","<template>\n\n\n  <MDBContainer v-if=\"isProviderSelected\">\n    <recipientFinal\n        @cansel:final = handleCanselFinal\n        @provider:ordered = orderSuccess\n        :test = test\n        :provider = selectedProvider\n        :proSlides = proSlides\n        :room = room\n        :available = availability\n        :booking = booking\n\n        :chatusers = chatusers\n\n        :chatCredentials = chatCredentials\n\n        :selecteduser = selecteduser\n        :messages = messages\n        @message = onMessage\n        @select = selectUser\n        @noSelect = noSelectUser\n        @finalinfo = finalinfo\n\n    />\n\n  </MDBContainer>\n  <MDBContainer v-else>\n    <MDBBtnClose\n        white\n        style=\"float:right; cursor: pointer;\"\n        @click=\"canselResult\"\n    />\n<!--    <MDBIcon-->\n<!--        style=\"float:right; cursor: pointer;\"-->\n<!--        @click=\"canselResult\"-->\n<!--        size=\"3x\"-->\n<!--    >-->\n<!--      <i class=\"fas fa-undo\"></i>-->\n<!--    </MDBIcon>-->\n\n    <h2>Tarvin tässä osaaja - {{line}}</h2>\n\n\n    <successMessage\n        :message = orderMessage\n    />\n    <MDBRow style=\"margin-top: 50px;\">\n      <MDBCol>\n\n        <MDBTable border=\"primary\" style=\"font-size: 18px; text-align: left;\">\n          <tbody>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              {{booking.description}}\n\n\n            </td>\n            <td v-else>\n              <MDBRow>\n                <MDBCol >\n                  <MDBTextarea\n                      label=\"Muokkaa tehtävän kuvausta...\"\n                      white\n                      rows=\"4\" v-model=\"description\"\n                      style=\"font-size: 14px; padding: 20px;\"\n                  />\n                </MDBCol>\n                <MDBCol col=\"1\">\n                  <MDBBtnClose\n                      white\n                      @click=\"isEditDescription = false\"\n                      style=\"float: right; cursor: pointer\"\n\n                  />\n                </MDBCol>\n              </MDBRow>\n\n\n\n\n            </td>\n          </tr>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"pressedEditDescription\">Muokkaa tehtävän kuvausta</MDBBtn>\n            </td>\n            <td v-else>\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"saveEditedDescription\">Tallenna tehtävän kuvaus</MDBBtn>\n            </td>\n          </tr>\n          <tr>\n            <td v-if=\"!isEditDate\">\n              <h3>{{bookingDateToDisplay}}</h3>\n              <MDBBtn block size=\"lg\" outline=\"info\" @click=\"editDate\">Muokkaa päivämäärä</MDBBtn>\n            </td>\n            <td v-else>\n              <MDBRow>\n                <MDBCol col=\"8\">\n                  <h3>{{bookingDateToDisplay}}</h3>\n\n                  <VueDatePicker\n                      style=\"margin-bottom: 20px;\"\n                      dark\n                      v-model=\"bookingDate\"\n                      :min-date=\"new Date()\"\n                      placeholder=\"Valitse sopivaa päivä milloin haluaisit ammattilaista!\"\n                      @internal-model-change=\"handleInternalDate\"\n                      :state=\"isNoDate ? false : null\"\n                  >\n\n                  </VueDatePicker>\n                </MDBCol>\n                <MDBCol col=\"4\">\n                  <MDBBtnClose\n                      white\n                      @click=\"isEditDate = false\"\n                      style=\"float: right; cursor: pointer\"\n\n                  />\n                </MDBCol>\n              </MDBRow>\n\n            </td>\n\n          </tr>\n\n          </tbody>\n        </MDBTable>\n\n\n        <div v-for=\"(im, i) in images\" :key=\"i\">\n          <img\n              class=\"loading\"\n              style=\"width: 100%;\"\n              :src=\"im.blob ? im.blob : require(`/server/uploads/${im.name}`)\"\n              :alt=\"im.name\"\n          />\n\n          <MDBBtn v-if=\"!isEditPanel\" block outline=\"success\" @click=\"pressEditPanel(i)\">Muokkaa kuva</MDBBtn>\n          <div class=\"edit-panel\" v-if=\"isEditPanel && imageIndex === i\">\n\n            <MDBRow>\n              <MDBCol>\n                <MDBBtnClose\n                    v-if=\"!value\"\n                    white\n                    class=\"close-btn\"\n                    style=\"float: right;\"\n                    @click=\"closeEditPanel\"\n                />\n                <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\n                <label  for=\"file-upload\" class=\"custom-file-upload\">\n                  <span v-if=\"value\">\n                  Muokka tehtävän kuvausta: {{value.name}}\n\n                   </span>\n                  <span v-else>Valitse uusi kuva tehtävästä</span>\n                </label>\n                <MDBBtn v-if=\"isEditImage\" block color=\"success\" @click=\"uploadEditedImage(i)\">Upload edited image</MDBBtn>\n                <MDBBtn class=\"btn\" block size=\"lg\" color=\"danger\" @click=\"removeImg(i)\">Poista kuva</MDBBtn>\n              </MDBCol>\n              <MDBCol v-if=\"value\">\n                <MDBBtnClose\n                    white\n                    class=\"close-btn\"\n                    style=\"float: right;\"\n                    @click=\"closeEditPanel\"\n                />\n                <img\n                    style=\"width:100px; padding-top: 20px;\"\n                    :src=\"this.showImage\"\n                    alt=\"addEdit\"\n                />\n              </MDBCol>\n            </MDBRow>\n\n          </div>\n\n\n\n\n        </div>\n\n        <MDBBtn v-if=\"!isPressedAddlmage\" block color=\"info\" @click=\"pressedAddImage\">Lisää uusi kuva tehtävästä</MDBBtn>\n        <div class=\"add-panel\" v-if=\"isPressedAddlmage && isAddImagePanel\">\n\n\n          <MDBRow>\n\n            <MDBCol>\n              <MDBBtnClose\n                  v-if=\"!value\"\n                  white\n                  class=\"close-btn\"\n                  @click=\"closeAddPanel\"\n              />\n              <input   id=\"file-upload-x\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\n              <label  for=\"file-upload-x\" class=\"custom-file-upload\">\n                  <span v-if=\"value\">\n                  Muokka tehtävän kuvausta: {{value.name}}\n+\n                   </span>\n                <span v-else>Valitse lisää kuva tehtävästä</span>\n              </label>\n              <MDBBtn v-if=\"isAddImage\" block outline=\"primary\" @click=\"addAdditionalImage\">Tallenna kuva</MDBBtn>\n            </MDBCol>\n            <MDBCol v-if=\"value\">\n              <MDBBtnClose\n                  class=\"close-btn\"\n                  white\n                  @click=\"closeAddPanel\"\n              />\n              <img\n                  style=\"width:100px\"\n                  :src=\"this.showImage\"\n                  alt=\"addShow\"\n              />\n            </MDBCol>\n          </MDBRow>\n\n        </div>\n\n\n      </MDBCol>\n      <MDBCol v-if=\"isOrdered\">\n\n      </MDBCol>\n      <MDBCol lg=\"6\" v-else>\n        <div v-if=\"providers.length > 0\">\n          <div class=\"ui large form\">\n            <div class=\"field\">\n              <select style=\"padding: 20px; background-color: #3c3535; color: lightgrey; font-size: 18px;\" id=\"listOfProviders\" v-model=\"filterResult\" @click=\"addFilter\">\n                <option value=\"\">Suodatin...</option>\n                <option value=\"distance\">Etäisyyden mukaan</option>\n                <option value=\"rating\">positiivisen palauteen mukaan</option>\n                <!--                <option>Rating</option>-->\n                <!--                <option>Else more</option>-->\n              </select>\n            </div>\n\n          </div>\n          <br>\n\n          <MDBTable  style=\"font-size: 18px; text-align: center; position: relative;\">\n            <tbody>\n            <tr v-for=\"provider in providers\" :key=\"provider.id\">\n\n\n              <td v-if=\"provider.timeoffer.map(to =>\n\n                datetime.providerMatchingForClient(\n                    bookingTime,\n                    {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\n                    {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\n                )\n              ).includes(true)\">\n                <MDBBtn class=\"provider-selection\"\n                        outline=\"info\"\n                        size=\"lg\"\n                        @click=\"getProviderInfo(provider,'green')\"\n                >\n\n                  {{provider.yritys}}<br>\n\n                  <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span>\n                </MDBBtn>\n                <MDBBadge\n\n                    color=\"success\"\n                    class=\"translate-middle p-1\"\n                    pill\n                    notification\n                ><h4 style=\"padding: 12px;\">\n                  Saatavilla &nbsp;\n                  <img\n                      style=\"width: 50px;\"\n                      :src=\"require(`@/assets/ok.png`)\"\n                      alt=\"ok\"\n                  />\n                </h4>\n                </MDBBadge>\n\n\n\n\n\n              </td>\n              <td v-else>\n\n                <MDBBtn\n                    class=\"provider-selection\"\n                    size=\"lg\"\n                    @click=\"getProviderInfo(provider, 'orange')\"\n                >\n\n                  {{provider.yritys}} <br>\n                  <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span><br>\n                  <span style=\"font-size: 17px;\">{{provider.priceByHour}} Eur</span>\n                </MDBBtn>\n\n\n\n                <MDBBadge\n                    color=\"info\"\n                    class=\"translate-middle p-1\"\n                    pill\n                    notification\n                ><h4 style=\"padding: 12px;\">Sovittaessa</h4></MDBBadge>\n\n              </td>\n\n            </tr>\n            <tr>\n            </tr>\n            </tbody>\n          </MDBTable>\n\n\n\n          <!--          Booking {{booking}}-->\n\n        </div>\n        <div v-else>\n          <h2 style=\"width: 100%;\">Yrityksiä hetkellä ei löytyy</h2>\n        </div>\n\n\n\n      </MDBCol>\n      <MDBBtn block outline=\"danger\" size=\"lg\" @click=\"removeBooking\">Poista tilaus</MDBBtn>\n    </MDBRow>\n\n  </MDBContainer>\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  MDBBtn, MDBContainer, MDBTable, MDBRow,\n  MDBBtnClose,\n  MDBCol, MDBTextarea,\n  MDBIcon,\n  MDBBadge,\n}from \"mdb-vue-ui-kit\";\nimport dt from '../components/controllers/datetime'\nimport recipientFinal from '../pages/RecipientPanelFinal'\nimport successMessage from '../components/notifications/successMessage'\nimport dist from '../components/controllers/distance'\nimport providerService from '../service/providers'\nimport imageService from '../service/image'\nimport VueDatePicker from '@vuepic/vue-datepicker';\n//import socket from \"@/socket\";\nimport {ref} from 'vue'\nimport recipientService from \"@/service/recipients\";\nimport socket from \"@/socket\";\nimport uploadService from \"@/service/image\";\n//import socket from \"@/socket\";\n\n\nexport default {\n  name: \"recipient-panel-result\",\n  props: {\n    test: Boolean,\n    chatusers: Array,\n\n    selecteduser: null,\n    messages: Array,\n    loggedInUser: Object,\n    booking: null,\n    images: Array,\n    bookingTime: null,\n    providers: Array,\n    confirmedBookings: Array,\n    line: String\n  },\n  data () {\n    return {\n      //image: [],\n      chatUser: null,\n      count: 0,\n      datetime: dt,\n      distance: dist,\n      selectedProvider: null,\n      proSlides: [],\n      isProviderSelected: false,\n      availability: \"\",\n      orderMessage: null,\n      isOrdered: false,\n      isEditDescription: false,\n      description: this.booking.description,\n\n      isEditDate: false,\n      bookingDate: null,\n      bookingDateToDisplay: this.booking.date,\n      //isAddImage: false,\n      isAddFirstImage: false,\n      isPressedAddlmage: false,\n      isAddImage: false,\n      isAddImagePanel: false,\n      isEditImage: false,\n\n\n      isUploadImage: false,\n      isUploaded: false,\n      isImageCreated: false,\n      isAddNewImage: false,\n      isEditPanel: false,\n\n      value: null,\n      imageIndex: 0,\n      file: null,\n      isImageSelected: false,\n      isAdditionalImageSelected: false,\n      showImage: null,\n      tempImages: [],\n      imagesx: [],\n      imagesxxx: [],\n      room: \"\",\n      roomUserCount: 0,\n      filterResult: \"\",\n    }\n  },\n\n  components: {\n    successMessage,\n    VueDatePicker,\n    dist,\n    recipientFinal,\n    MDBBtn,\n    MDBBtnClose,\n    MDBContainer,\n    MDBTable,\n    MDBRow,\n    MDBCol,\n    MDBTextarea,\n    MDBIcon,\n    MDBBadge\n  },\n\n  methods: {\n\n    editDate () {\n      this.isEditDate = true;\n    },\n    async handleInternalDate () {\n\n      if (this.bookingDate) {\n        this.bookingDateToDisplay = (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear();\n        console.log(\"eeeeee \" + (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear());\n        await recipientService.newDate(this.booking.id, {\n          year: this.bookingDate.getFullYear(),\n          month: this.bookingDate.getMonth(),\n          day: this.bookingDate.getDate(),\n          hours: this.bookingDate.getHours(),\n          minutes: this.bookingDate.getMinutes()\n        })\n\n        const updatedDate = {\n          year: this.bookingDate.getFullYear(),\n          month: this.bookingDate.getMonth(),\n          day: this.bookingDate.getDate(),\n          hours: this.bookingDate.getHours(),\n          minutes: this.bookingDate.getMinutes()\n        }\n\n        this.$emit(\"updateBookingDate\", updatedDate);\n      }\n      console.log(\"Date is handled\")\n     // console.log(\"Selected date: \" + this.date)\n    },\n    handleFileChange(e, i) {\n      //this.$emit('input', e.target.client[0])\n      console.log(\"i in file change \" + i)\n      this.imageIndex = i;\n      try {\n\n        const files = e.target.files[0]\n        console.log('event target client ', e.target.files[0])\n\n        if (files) {\n          const tempImage = URL.createObjectURL(files)\n          this.tempImages.push(tempImage);\n          this.showImage = URL.createObjectURL(files)\n          this.file = e.target.files[0]\n\n          this.isAddImage = true;\n          this.isEditImage = true;\n        }\n\n      } catch (err) {\n        console.log('Error:', err)\n      }\n\n      this.value = e.target.files[0]\n      // if (e.target.files[0]) {\n      //   this.isImageSelected = true;\n      // } else {\n      //   this.isImageSelected = false;\n      // }\n    },\n    pressedAddImage () {\n      this.isAddImage = false\n      this.isEditImage = false;\n      this.isEditPanel = false;\n      this.isPressedAddlmage = true;\n      this.isAddImagePanel = true;\n    },\n    async addImage () {\n\n\n    },\n    pressEditPanel (index) {\n      //this.isImageSelected = false;\n      this.isEditImage = false;\n      this.value = null;\n      this.imageIndex = index;\n      //this.isEditImage = true;\n\n      this.isEditPanel = true;\n      this.isAddImagePanel = false\n      //this.isImageCreated = false;\n      //this.isUploaded = false;\n\n      //this.showImage = null;\n      //this.value = null;\n    },\n    closeEditPanel () {\n      //this.imageIndex = index;\n      //this.isEditImage = true;\n      this.isAddImagePanel = false\n      this.isEditPanel = false\n      this.isEditImage = false;\n      this.value = null;\n    },\n    closeAddPanel () {\n      this.isAddImagePanel = false\n      this.isPressedAddlmage = false;\n      this.value = null;\n    },\n    async uploadEditedImage (index, img) {\n\n      console.log(\"Edited image index is: \" + index);\n\n      this.isEditPanel = false;\n      this.isEditImage = false;\n\n      // this.images.push({\n      //   blob: this.showImage\n      // })\n\n\n\n\n\n      const data = new FormData();\n      data.append('file', this.file, this.file.name)\n\n      //this.$emit(\"editImage\", index, image.imgCreated._id,  this.showImage);\n      console.log(\"Image id \" + this.images[index]._id)\n\n      //this.images[this.imageIndex] = {_id: image._id, blob: this.showImage}\n\n\n\n      const image = await imageService.updateImage(this.images[index]._id, data);\n\n      if (image) {\n        this.images[this.imageIndex] = {_id: this.images[index]._id, blob: this.showImage}\n\n        this.images.forEach(img => {\n          console.log(\"Image name \" + img._id)\n        })\n\n\n        //this.$emit(\"editImage\", index, image.imgCreated._id,  this.showImage);\n        console.log(\"New image id is \" + image._id)\n        this.imgId = image._id;\n        this.file = null;\n\n        //this.$emit(\"editImage\", image, img)\n\n\n\n        this.isEditPanel = false;\n\n      }\n\n      //this.imageIndex = null;\n\n    },\n    async addAdditionalImage () {\n      this.value = null;\n      this.isAddImagePanel = false;\n      this.isAddImage = false;\n      this.isPressedAddlmage = false;\n      const data = new FormData();\n\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking.id, img.imgCreated._id)\n      if (img) {\n        const image = {\n          _id: img.imgCreated._id,\n          blob: this.showImage\n        }\n        this.$emit(\"addImage\", image, this.booking.id);\n      }\n\n\n      // this.images.push({\n      //   _id: img.imgCreated._id,\n      //   blob: this.showImage\n      // })\n\n\n    },\n    async removeImg (id) {\n      //this.value = null;\n      if (!this.images[id].blob) {\n        console.log(\"removed image is blob\")\n\n      }\n\n      console.log(\"removable image id is \" + this.images[id]._id)\n\n      await recipientService.removeImage(this.booking.id, this.images[id]._id);\n      await imageService.remove(this.images[id]._id, this.booking.id);\n\n      this.$emit(\"removeImage\", id);\n\n      this.isEditPanel = false;\n\n\n      //this.imageIndex = null\n      //this.isEditDescription = false;\n\n      //this.isImageSelected = false;\n      //this.showImage = null;\n    },\n    getDistance () {\n      //console.log(\"Distance +++++??? \" + dist.distance())\n      console.log(\"sss \" + dist.test())\n    },\n    selectUser (user) {\n      this.$emit('select', user);\n    },\n    noSelectUser () {\n      this.$emit(\"noSelect\");\n    },\n    onMessage (content, date) {\n      this.$emit(\"message\", content, date);\n    },\n    finalinfo (data) {\n      console.log(\"Final info in result pressed \");\n      this.$emit(\"finalinfo\", data)\n\n    },\n\n\n    async pressAddFirstImage () {\n      this.isAddFirstImage = true;\n      this.imageIndex = 0;\n    },\n\n    pressAdditionalImage (index) {\n      //this.imageIndex = this.booking[0].image.length - 1;\n      this.isAddImage = true;\n      this.imageIndex = this.images.length;\n      //this.imageIndex = \"new\";\n      //this.isAddNewImage = true;\n\n      console.log(\"Images index = \" + this.imageIndex);\n      this.isAddImage = true;\n    },\n\n\n\n    async uploadFirstImage (index) {\n      const data = new FormData();\n      this.isUploadImage = true;\n      this.imageIndex = 0;\n      //this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking.id, img.imgCreated._id);\n\n      if (img) {\n        this.file = null;\n\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name\n        }\n\n        this.$emit(\"addImage\", image);\n\n        this.imageIndex = 0;\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n\n      }\n\n\n\n    },\n    async uploadAdditionalImage () {\n      this.isAdditionalImageSelected = false;\n      this.isAddImage = false;\n      this.value = null;\n      //this.isEditImage = false;\n      //this.imageIndex = null;\n      //this.imageIndex = this.booking[0].image.length - 1;\n      console.log(\"Image index index \" + this.imageIndex)\n      const data = new FormData();\n\n      this.isUploadImage = true;\n      //this.imageIndex = 0;\n      this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking.id, img.imgCreated._id);\n\n      if (img) {\n        //this.imgId = img.imgCreated._id;\n        this.file = null;\n        //this.showImage = null;\n        //this.value = null;\n\n        //console.log(\"xxx \" + img.imgCreated._id)\n        //console.log(\"Image itself \" + img.imgCreated.image)\n        //await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name\n        }\n\n        //this.imagesxxx.push(image);\n\n        this.$emit(\"addImage\", image);\n\n        //this.images.push(image);\n\n        // const booking = await recipientService.getBookingById(this.booking[0].id);\n        //\n        // setTimeout( async () => {\n        //   booking[0].image.forEach(im=> {\n        //     this.images.push(im)\n        //   })\n        //   //this.images = this.images.concat(booking[0].image)\n        // }, 500)\n\n\n        /*const booking = await recipientService.getBookingById(this.booking[0].id);\n\n        this.imagesxxx = booking[0].image\n*/\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n\n\n        //this.imageIndex = null;\n      }\n\n\n\n    },\n\n    chatCredentials (data) {\n      this.$emit(\"chatCredentials\", data);\n    },\n\n    pressedEditDescription () {\n      this.isEditDescription = true\n      console.log(\"Descripton: \" + this.description);\n    },\n    saveEditedDescription () {\n      this.isEditDescription = false;\n      const description = {\n        description: this.description\n      }\n      this.$emit(\"editDescription\", this.description);\n      recipientService.editDescription(this.booking.id, description)\n      //this.description = \"\";\n    },\n    cancelEditDescription () {\n      console.log(\"Is here something happening??\")\n    },\n    providerGetBooking (id, booking) {\n      //const id = this.provider.user.id;\n      console.log(\"Sended to user id... \" + id)\n      socket.emit(\"accept provider\", {\n        id,\n        booking: booking\n      })\n    },\n    async orderSuccess (prov) {\n      //console.log(\"Ordered!!!\")\n\n      this.isProviderSelected = false;\n\n      //this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n      console.log(\"Provider id \" + prov.id)\n      console.log(\"Recpient id: \" + this.booking.id);\n\n      const providerID = {\n        providerID: this.selectedProvider.id\n      };\n\n\n      //await recipientService.addProviderID(this.booking[0].id, providerID);\n\n      await recipientService.addProviderData(this.booking.id, this.selectedProvider.id);\n\n      //socket.emit(\"send booking notification\", this.booking[0], this.selectedProvider.id);\n\n      //const providerName =\n      //const status = \"notSeen\";\n      const createBookingStatus = await recipientService.updateRecipient(this.booking.id, {status: \"notSeen\"});\n      console.log(\"Is status updated: \" + createBookingStatus.status);\n\n\n      const recipientId = this.booking.id;\n\n      //--------------- About need delete selected and confirmed provider ------------\n\n      //const booking = await providerServise.updateProvider(provId, {booking: [this.booking.id]})\n      // To ordered\n      const booking = await providerService.addProviderBooking(prov.id, recipientId);\n      if (booking === \"Recipient is added!\") {\n        const chatUserDataNavbar = {\n          status: \"\",\n          userID: prov.user.id,\n          name: prov.user.username,\n          room: this.room\n        };\n        this.$emit('client:confirmed_provider', prov.id, this.booking, chatUserDataNavbar);\n        //this.$emit('set:order:to:send', prov.id, this.booking, chatUserDataNavbar)\n\n        this.roomToDb(prov.id, {userID: this.booking.user.id, client: this.booking.user.username, room: this.room});\n        //this.providerGetBooking(prov.user.id, booking);\n        const id = prov.user.id;\n\n        socket.emit(\"accept provider\", {\n          id,\n          booking: this.booking,\n        })\n\n        this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n\n        console.log(\"Booking made - id: \" + booking.id);\n\n        this.isOrdered = true;\n\n        setTimeout(() => {\n          this.orderMessage = null;\n        }, 3000)\n\n      } else {\n        this.orderMessage = \"Olet lähetänyt jo tilauksen!\"\n        setTimeout(() => {\n          this.orderMessage = null;\n        }, 3000)\n        //console.log(\"Yritys on jo tilattu!\")\n      }\n\n\n\n    },\n    getProviderInfo (provider, marker) {\n      this.proSlides = [];\n      this.selectedProvider = provider;\n      provider.reference.forEach(slide => {\n        this.proSlides = [\n            ...this.proSlides,\n          {\n            id: slide.id,\n            size: '1400-933',\n            src: require(`/server/uploads/pro/${slide.name}`),\n            thumb: require(`/server/uploads/pro/${slide.name}`),\n            subHtml: `<div class=\"lightGallery-captions\">\n                <h2>Terve</h2>\n\n            </div>\"`\n          }\n        ]\n      })\n      this.availability = marker;\n      this.isProviderSelected = true;\n\n      //console.log(\"Booking username \" + this.booking[0].user.username)\n      //console.log(\"Recipient room: \" + (provider.yritys + this.booking[0].user.username))\n      // if (this.booking.user.username !== undefined) {\n      //\n      // }\n      this.room = provider.yritys + this.chatUser.username\n\n\n      // socket.emit(\"room users count\")\n      // socket.on('get room users count', (data) => {\n      //   console.log(\"Can we get users data from backend in recipient final??? \" + data.users.length)\n      //   this.roomUserCount = data.users.length;\n      // })\n      let room = \"\";\n      let username = \"\";\n      //const room = provider.yritys + this.booking.user.username;\n      console.log(\"Username ( from chatusers ) in recipientResult: \" + username);\n      console.log(\"Usermname ( from booking ) in recipientResult: \" + this.booking.user.username);\n      if (this.chatUser) {\n        username = this.chatUser.username;\n        room = provider.yritys + username;\n      }\n\n\n      console.log(\"Room in tecipientResult \" + room);\n\n      console.log(\"Provider username---- \" + provider.user.username);\n\n      const chatCredentials = {\n        room: room,\n        userID: provider.user.id,\n        username: provider.user.username,\n      }\n\n\n\n      const providerDatax = {\n        userID: provider.user.id,\n        username: provider.user.username,\n        room: room\n      }\n\n      this.$emit(\"provider\", providerDatax);\n\n      const providerData = \"Allu\"\n\n      const id = provider.user.id;\n      const name = provider.user.username;\n\n      // data to create new room\n\n\n      //socket.emit(\"online\", (room));\n\n      // socket.emit(\"create new room user\", {\n      //   room: room,\n      //   username: username\n      // })\n\n\n\n      socket.emit(\"create room users\", {\n        room: room,\n        status: \"booking panel\",\n        username: username,\n        providerUsername: provider.user.username,\n        providerID: provider.user.id\n      })\n\n      this.$emit(\"chatCredentials\", chatCredentials)\n\n      //socket.emit(\"update room\", room, id, name)\n      // let rooms = [\"Oopersama\", \"tvsama\"]\n      // socket.emit(\"join all room\", rooms);\n      // iolrhjwefiogäqhj\n    },\n    async roomToDb (id, room) {\n      await providerService.addRoom(id, room)\n    },\n    addFilter () {\n      const filterListedProviders = document.getElementById(\"listOfProviders\")\n\n      filterListedProviders.addEventListener(\"change\", (event) => {\n        console.log(\"Filtered provider: \" + event.target.value);\n        this.$emit(\"filter_provider\", event.target.value);\n        // if (event.target.value === \"distance\") {\n        //   this.$emit(\"filter_provider\", event.target.value);\n        // } else if (event.target.value === \"feedback\") {\n        //\n        //   this.$emit(\"filter_feedback\")\n        // }\n\n\n\n      })\n    },\n    handleCanselFinal (result) {\n      this.isProviderSelected = result;\n    },\n    canselResult () {\n      this.$emit('cansel:result', false)\n    },\n    async removeBooking () {\n      // booking[0].id\n      //this.$emit(\"removeBooking\", this.booking.id);\n      console.log(\"In start booking id \" + this.booking.id)\n      if (confirm(\"Oletko varmaa, että haluat poistaa tilauksen!?\") === true) {\n        console.log(\"You pressed OK!\")\n\n\n        this.$emit(\"removeBooking\", this.booking.id);\n\n      } else {\n        console.log(\"You canceled!\")\n      }\n      //await recipientService.removeBooking(this.booking[0].id);\n\n      this.images.forEach(img => {\n        console.log(\"Images ## \" + img._id);\n        imageService.cleanAllRecipientImages(img._id)\n      })\n\n      // const removable = this.recipientBookings.find(res => res.id === id);\n      // if (removable.image !== null) {\n      //   removable.image.forEach( (rem) => {\n      //     console.log(\"### \" + rem._id)\n      //     imageService.cleanAllRecipientImages(rem._id)\n      //   })\n      // }\n\n\n\n    },\n  },\n\n  async mounted() {\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      this.chatUser = user;\n\n      /*const booking = await recipientService.getBookingById(this.booking[0].id);\n      this.imagesxxx = booking[0].image*/\n      /*booking[0].image.forEach(bi => {\n        this.tempImages.push(bi.name)\n      })*/\n\n\n\n\n\n      //this.joinServer(username, userID);\n    }\n\n\n  }\n}\n</script>\n\n\n<style scoped>\n.edit-panel {\n  border: solid grey;\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.add-panel {\n  border: solid grey;\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.add-additional-panel {\n  border: solid blue;\n}\n.btn {\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.close-btn {\n  float: right;\n  padding: 20px;\n}\nimg.loading {\n  width: 100%;\n  height: 400px;\n  background: transparent url(https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif) no-repeat scroll center center;\n}\n.success {\n  color: white;\n  background: #7bc47b;\n  font-size: 20px;\n  border: solid #0e920e;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\ninput[type=\"file\"] {\n  display: none;\n}\n.custom-file-upload {\n  width: 100%;\n\n  color: white;\n  font-size: 18px;\n  background-color: #87958e;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 20px 12px;\n  margin-bottom: 0;\n  cursor: pointer;\n}\n.imageSection {\n  margin-bottom: 20px;\n}\n.provider-selection {\n  width: 300px;\n  padding: 20px;\n  background-color: grey;\n  border: solid #4c4949;\n  color: #f0eeee;\n  font-size: 150%;\n}\n\nselect option {\n  border: solid red;\n}\n\n</style>","import { render } from \"./RecipientPanelResult.vue?vue&type=template&id=5acfebfa&scoped=true\"\nimport script from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanelResult.vue?vue&type=style&index=0&id=5acfebfa&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5acfebfa\"]])\n\nexport default __exports__"],"names":["compare","rec","prov","receiverDate","Date","y","m","d","hour","min","providerDate","providerMatchingForClient","re","pFrom","pTo","pFromDate","pToDate","res","distance","origin","google","maps","LatLng","destination","service","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","unitSystem","UnitSystem","METRIC","durationInTraffic","avoidHighways","avoidTolls","response_data","responseDis","status","DistanceMatrixStatus","OK","console","log","rows","elements","text","alert","test","_createVNode","_createTextVNode","theDist","geometry","spherical","computeDistanceBetween","toFixed","class","for","_createElementVNode","value","_hoisted_22","_hoisted_23","_hoisted_24","style","_hoisted_40","$data","isProviderSelected","_createBlock","_component_MDBContainer","key","_component_recipientFinal","$options","handleCanselFinal","orderSuccess","$props","provider","selectedProvider","proSlides","room","available","availability","booking","chatusers","chatCredentials","selecteduser","messages","onMessage","onSelect","selectUser","onNoSelect","noSelectUser","onFinalinfo","finalinfo","_component_MDBBtnClose","white","onClick","canselResult","_toDisplayString","line","_component_successMessage","message","orderMessage","_component_MDBRow","_component_MDBCol","_component_MDBTable","border","isEditDescription","_createElementBlock","_hoisted_2","_component_MDBTextarea","label","description","$event","col","_cache","_hoisted_1","_hoisted_4","_component_MDBBtn","outline","block","size","saveEditedDescription","_hoisted_3","pressedEditDescription","isEditDate","_hoisted_6","bookingDateToDisplay","_component_VueDatePicker","dark","bookingDate","placeholder","onInternalModelChange","handleInternalDate","state","_ctx","isNoDate","_hoisted_5","editDate","_Fragment","_renderList","images","im","i","src","blob","require","name","alt","isEditPanel","pressEditPanel","imageIndex","_hoisted_8","closeEditPanel","id","type","onChange","handleFileChange","_hoisted_10","_hoisted_11","_hoisted_12","isEditImage","color","uploadEditedImage","removeImg","showImage","isPressedAddlmage","pressedAddImage","isAddImagePanel","_hoisted_14","closeAddPanel","_hoisted_15","_hoisted_16","_hoisted_17","isAddImage","addAdditionalImage","isOrdered","lg","providers","length","_hoisted_19","_hoisted_20","_hoisted_21","filterResult","args","addFilter","_hoisted_26","timeoffer","map","to","datetime","bookingTime","yearFrom","monthFrom","dayFrom","hoursFrom","minutesFrom","yearTo","monthTo","dayTo","hoursTo","minutesTo","includes","_hoisted_27","getProviderInfo","yritys","_hoisted_28","_hoisted_29","_component_MDBBadge","pill","notification","_hoisted_30","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","priceByHour","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_41","removeBooking","props","Boolean","Array","loggedInUser","Object","confirmedBookings","String","data","chatUser","count","dt","dist","this","date","isAddFirstImage","isUploadImage","isUploaded","isImageCreated","isAddNewImage","file","isImageSelected","isAdditionalImageSelected","tempImages","imagesx","imagesxxx","roomUserCount","components","successMessage","VueDatePicker","recipientFinal","MDBBtn","MDBBtnClose","MDBContainer","MDBTable","MDBRow","MDBCol","MDBTextarea","MDBIcon","MDBBadge","methods","async","getMonth","getDate","getFullYear","recipientService","newDate","year","month","day","hours","getHours","minutes","getMinutes","updatedDate","$emit","e","files","target","tempImage","URL","createObjectURL","push","err","index","img","FormData","append","_id","image","imageService","updateImage","forEach","imgId","create","addImage","imgCreated","removeImage","remove","getDistance","user","content","pressAdditionalImage","editDescription","cancelEditDescription","providerGetBooking","socket","emit","addProviderData","createBookingStatus","updateRecipient","recipientId","providerService","addProviderBooking","chatUserDataNavbar","userID","username","roomToDb","client","setTimeout","marker","reference","slide","thumb","subHtml","providerDatax","providerUsername","providerID","addRoom","filterListedProviders","document","getElementById","addEventListener","event","result","confirm","cleanAllRecipientImages","loggedUserJSON","window","localStorage","getItem","JSON","parse","__exports__","render"],"sourceRoot":""}