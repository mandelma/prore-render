{"version":3,"file":"js/537.42a5fcba.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/RegisterForm.vue","webpack://prore-mongo/./src/service/googleAuth.js","webpack://prore-mongo/./src/components/RegisterForm.vue?33ca","webpack://prore-mongo/./src/components/notifications/errorMessage.js","webpack://prore-mongo/./src/pages/LoginRegister.vue","webpack://prore-mongo/./src/components/LoginForm.vue","webpack://prore-mongo/./src/components/LoginForm.vue?dcb9","webpack://prore-mongo/./src/pages/LoginRegister.vue?ad87"],"sourcesContent":["<template>\n  <div>\n<!--    <h2 style=\"margin-top: 50px; text-align: center\">- Rekister√∂intilomake -</h2>-->\n    <MDBContainer style=\"margin-top: 50px;\">\n\n      <registerError\n          :message = registerErrorMessage\n      />\n      <registerError\n          :message = usernameExisting\n      />\n      <registerError\n          :message = registerEmailErrorMessage\n      />\n      <register-error\n        :message = registerPwRepeatErrorMessage\n      />\n      <form class=\"register\" @submit.prevent=\"userData\" autocomplete=\"off\">\n        <!-- 2 column grid layout with text inputs for the first and last names -->\n        <!-- First name input -->\n\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Etunimi\"\n            white\n            id=\"registerFirstName\"\n            v-model=\"registerFirstName\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Last name input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Sukunimi\"\n            white\n            id=\"registerLastName\"\n            v-model=\"registerLastName\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Username input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"k√§ytt√§j√§tunnus\"\n            white\n            id=\"registerUsername\"\n            v-model=\"registerUsername\"\n            wrapperClass=\"mb-4\"\n        />\n        <!-- Email input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Email\"\n            white\n            id=\"registerEmail\"\n            v-model=\"registerEmail\"\n            wrapperClass=\"mb-4\"\n        />\n<!--        <div>-->\n<!--          Email is {{isValidEmail ? 'valid' : 'invalid'}}-->\n<!--        </div>-->\n        <!-- Password input -->\n        <i class=\"far fa-eye\"></i>\n        <i class=\"far fa-eye-slash\"></i>\n\n        <MDBInput\n\n            :type=\"showPassword ? 'text' : 'password'\"\n            size=\"lg\"\n            label=\"Salasana\"\n            white\n            id=\"registerPassword\"\n            v-model=\"registerPassword\"\n            @input=\"validatePassword\"\n            wrapperClass=\"mb-4\"\n        >\n\n        </MDBInput>\n        <button type=\"button\" @click=\"togglePassword\">Toggle password</button>\n<!--        <MDBInput-->\n<!--            type=\"password\"-->\n<!--            size=\"lg\"-->\n<!--            label=\"Salasana\"-->\n<!--            white-->\n<!--            id=\"registerPassword\"-->\n<!--            v-model=\"registerPassword\"-->\n<!--            @input=\"validatePassword\"-->\n<!--            wrapperClass=\"mb-4\"-->\n<!--        />-->\n\n        <p v-if=\"pwValidateError\" style=\"color: palevioletred\" >{{pwValidateError}}</p>\n\n        <!-- Repeat Password input -->\n        <MDBInput\n            type=\"password\"\n            size=\"lg\"\n            label=\"Toista salasana\"\n            white\n            id=\"registerPasswordRepeat\"\n            v-model=\"registerPasswordRepeat\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Checkbox -->\n        <MDBCheckbox\n            label=\"Muista minut\"\n            white\n            size=\"lg\"\n            id=\"registerSubscribeCheck\"\n            v-model=\"registerSubscribeCheck\"\n            wrapperClass=\"d-flex justify-content-center mb-4\"\n        />\n\n<!--        <input required=\"required\" v-model=\"registerEmail\" :error-messages=\"emailErrors\"-->\n<!--               @input=\"$v.registerEmail.$touch()\" @blur=\"$v.registerEmail.$touch()\" label=\"Email\"-->\n<!--               />-->\n\n        <!-- Submit button -->\n        <MDBBtn outline=\"primary\" size=\"lg\" type=\"submit\"  block class=\"mb-4\" :disabled=\"!!pwValidateError\"> Luo tili </MDBBtn>\n\n        <!-- Register buttons -->\n<!--        <div class=\"text-center\">-->\n<!--          <p>Tai register√∂idy k√§ytt√§m√§ll√§:</p>-->\n<!--          <MDBBtn color=\"secondary\" floating class=\"mx-1\">-->\n<!--            <MDBIcon iconStyle=\"fab\" icon=\"facebook-f\" />>-->\n<!--          </MDBBtn>-->\n\n<!--          <MDBBtn color=\"secondary\" floating class=\"mx-1\" @click=\"handleGoogleAuth\">-->\n<!--            <MDBIcon iconStyle=\"fab\" icon=\"google\" />-->\n<!--          </MDBBtn>-->\n\n<!--          <MDBBtn color=\"secondary\" floating class=\"mx-1\">-->\n<!--            <MDBIcon iconStyle=\"fab\" icon=\"twitter\" />-->\n<!--          </MDBBtn>-->\n\n<!--        </div>-->\n      </form>\n    </MDBContainer>\n\n  </div>\n\n</template>\n\n<script >\n/* eslint-disable */\n// import { validationMixin } from 'vuelidate'\n// import { required, email} from 'vuelidate/lib/validators'\nimport {\n  MDBContainer,\n  MDBInput,\n  MDBCheckbox,\n  MDBBtn,\n  MDBIcon\n} from \"mdb-vue-ui-kit\";\nimport { ref, watch } from \"vue\";\nimport userService from \"@/service/users\";\nimport googleService from '@/service/googleAuth'\nimport loginService from \"@/service/login\";\nimport registerError from '../components/notifications/errorMessage'\nimport '@/css/style.css';\nimport '@/css/notification.css'\n\n\nexport default {\n  name: \"app-register\",\n  components: {\n    registerError,\n    MDBContainer,\n    MDBInput,\n    MDBCheckbox,\n    MDBBtn,\n    MDBIcon\n  },\n  // mixins: [validationMixin],\n  // validations: {\n  //\n  //   email: { required, email },\n  //\n  // },\n  data () {\n    return {\n      registerErrorMessage: null,\n      registerEmailErrorMessage: null,\n      registerPwRepeatErrorMessage: null,\n      usernameExisting: null,\n    }\n  },\n\n  //  'YOUR_APP_CLIENT_ID.apps.googleusercontent.com'\n\n  setup() {\n    const registerFirstName = ref(\"\");\n    const registerLastName = ref(\"\");\n    const registerUsername = ref(\"\");\n    const registerEmail = ref(\"\");\n    const registerPassword = ref(\"\");\n    const registerPasswordRepeat = ref(\"\");\n    const registerSubscribeCheck = ref(true);\n    const showPassword = ref(false)\n    const pwValidateError = ref(\"\")\n    const togglePassword = () => {\n      console.log(\"Password is toggled\")\n      showPassword.value = !showPassword.value\n    }\n    const validatePassword = () => {\n      const regex =\n          /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_\\-+=\\[\\]{};':\"\\\\|,.<>/?]).{8,}$/;\n      if (!regex.test(registerPassword.value)) {\n        pwValidateError.value = \"Salasanan on oltava v√§hint√§√§n 8 merkki√§ pitk√§ ja sen on sis√§llett√§v√§ iso kirjain, numero ja erikoismerkki.\";\n      } else {\n        pwValidateError.value = \"\";\n      }\n    }\n\n    watch(registerPassword, (newValue) => {\n      validatePassword(newValue)\n    })\n\n    return {\n      registerLastName,\n      registerFirstName,\n      registerUsername,\n      registerEmail,\n      registerPassword,\n      registerPasswordRepeat,\n      registerSubscribeCheck,\n      pwValidateError,\n      showPassword,\n      togglePassword,\n      validatePassword\n    };\n  },\n  computed: {\n    isValidEmail() {\n      return /^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.registerEmail);\n    }\n  },\n  // computed: {\n  //   emailErrors () {\n  //     const errors = []\n  //     if (!this.$v.email.$dirty) return errors\n  //     !this.$v.email.email && errors.push('Must be valid e-mail')\n  //     !this.$v.email.required && errors.push('E-mail is required')\n  //     return errors\n  //   },\n  // },\n  methods: {\n    // validatePassword () {\n    //\n    // },\n    emailValidation () {\n  //     Vue.createApp({\n  //       data: () => ({ email: '', password: '', errors: null }),\n  //       methods: {\n  //         async submitForm() {\n  //           const errors = {};\n  //           if (!this.email) {\n  //             errors.email = 'Email is required';\n  //           } else if (!/^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.email)) {\n  //             errors.email = 'Invalid email';\n  //           }\n  //\n  //           if (Object.keys(errors).length > 0) {\n  //             this.errors = errors;\n  //             return;\n  //           } else {\n  //             this.errors = null;\n  //           }\n  //\n  //           // Handle submitting form\n  //         }\n  //       },\n  //       template: `\n  // <div>\n  //   <form @submit.prevent=\"submitForm\">\n  //     <div>\n  //       <input v-model=\"email\" placeholder=\"email\" />\n  //       <div v-if=\"errors && errors.email\">\n  //         {{errors.email}}\n  //       </div>\n  //     </div>\n  //     <div>\n  //       <input type=\"password\" v-model=\"password\" />\n  //     </div>\n  //     <div>\n  //       <button type=\"submit\">Register</button>\n  //     </div>\n  //   </form>\n  // </div>\n  // `\n  //     }).mount('#example2');\n    },\n    validateEmail() {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.email)) {\n        this.msg['email'] = 'Please enter a valid email address';\n      } else {\n        this.msg['email'] = '';\n      }\n    },\n    // New user data to send forward\n    async userData () {\n      const newUser = {\n        firstName: this.registerFirstName,\n        lastName: this.registerLastName,\n        username: this.registerUsername,\n        email: this.registerEmail,\n        password: this.registerPassword\n      }\n      if (this.registerFirstName !== \"\"\n          && this.registerLastName !== \"\"\n          && this.registerUsername !== \"\"\n          && this.registerPassword !== \"\"\n          && this.registerEmail !== \"\"\n      ) {\n\n        if (this.registerUsername.length < 4) {\n          this.registerErrorMessage = \"Username must be longer than 4 characters!\"\n          setTimeout(() => {\n            this.registerErrorMessage = null;\n          }, 2000);\n        } else if (!/^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.registerEmail)) {\n          this.registerEmailErrorMessage = \"Anna kelvollinen s√§hk√∂postiosoite!\";\n          setTimeout(() => {\n            this.registerEmailErrorMessage = null;\n          }, 2000);\n        } else if (this.registerPassword !== this.registerPasswordRepeat) {\n          this.registerPwRepeatErrorMessage = \"Salasana on oltava sama!\";\n          setTimeout(() => {\n            this.registerPwRepeatErrorMessage = null;\n          }, 2000);\n        }\n        else {\n          console.log(\"Uus kasutaja\")\n          const userExisting = await userService.addUser(newUser);\n          if (userExisting.error === \"username existing\") {\n            this.usernameExisting = \"K√§ytt√§j√§tunnus on jo olemassa! Vaihda k√§ytt√§j√§tunnus\";\n            setTimeout(() => {\n              this.usernameExisting = null;\n            }, 2000);\n          } else if (userExisting.error === \"email existing\") {\n            this.registerEmailErrorMessage = \"Antamasi s√§hk√∂postiosoite on jo olemassa!\";\n            setTimeout(() => {\n              this.registerEmailErrorMessage = null;\n            }, 2000);\n          }\n          else {\n            const loggedInUser = await loginService.login({username: this.registerUsername, password: this.registerPassword});\n            if (loggedInUser.error !== \"login error\") {\n              this.$emit('register:data', loggedInUser)\n            } else {\n              console.log(\"Error with login! \" + loggedInUser.error)\n            }\n          }\n\n        }\n      } else {\n        this.registerErrorMessage = \"Kaikki kent√§t ovat t√§ytett√§v√§!!\"\n        setTimeout(() => {\n          this.registerErrorMessage = null;\n        }, 2000);\n      }\n      //await userService.addUser(newUser);\n\n      //const loggedInUser = await loginService.login({username: this.registerUsername, password: this.registerPassword});\n\n      //this.$emit('register:data', newUser)\n    }\n  }\n}\n</script>\n\n<style>\n.g-signin-button {\n  /* This is where you control how the button looks. Be creative! */\n  display: inline-block;\n  padding: 4px 8px;\n  border-radius: 3px;\n  background-color: #3c82f7;\n  color: #fff;\n  box-shadow: 0 3px 0 #0f69ff;\n}\n/*#app {*/\n/*  font-family: Roboto, Helvetica, Arial, sans-serif;*/\n\n/*  -webkit-font-smoothing: antialiased;*/\n/*  -moz-osx-font-smoothing: grayscale;*/\n/*  text-align: center;*/\n/*  !*color: #2c3e50;*!*/\n/*  color: red;*/\n/*}*/\n/*.error {*/\n/*  color: white;*/\n/*  background: #f5839c;*/\n/*  font-size: 20px;*/\n/*  border: solid #f75959;*/\n/*  border-radius: 5px;*/\n/*  padding: 10px;*/\n/*  margin-bottom: 10px;*/\n/*}*/\n/*.errorImg {*/\n/*  width: 50px;*/\n/*  margin-left: 20px;*/\n/*}*/\n</style>","const axios = require('axios')\r\n//import axios from 'axios'\r\nconst baseUrl = \"/auth/google\"\r\n// http://localhost:3001s\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data\r\n}\r\n\r\nconst getUser = async () => {\r\n    const res = await axios.get('/api/current_user');\r\n    return res.data;\r\n}\r\n\r\nexport default { getAll, getUser }","import { render } from \"./RegisterForm.vue?vue&type=template&id=a295f184\"\nimport script from \"./RegisterForm.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterForm.vue?vue&type=script&lang=js\"\n\nimport \"./RegisterForm.vue?vue&type=style&index=0&id=a295f184&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n            <img className={'errorImg'} alt={'error'} src={require('@/assets/error.png')}/>\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage","<template>\n  <div>\n    <MDBContainer style=\"margin-top: 50px;\">\n      <MDBTabs v-model=\"form7ActiveTab\">\n        <MDBTabNav pills justify tabsClasses=\"mb-3\" style=\"margin: auto;\">\n          <MDBTabItem style=\"background-color: #37546a; color: #ddd;\" @click=\"pressLoginTab\" tabId=\"ex3-1\" href=\"ex3-1\"\n          >Kirjaudu</MDBTabItem\n          >\n          <MDBTabItem style=\"background-color: #223340; color: #ddd;\" @click=\"pressRegisterTab\" tabId=\"ex3-2\" href=\"ex3-2\"\n          >Register√∂idy</MDBTabItem\n          >\n        </MDBTabNav>\n\n\n      </MDBTabs>\n\n      <div v-if=\"isRegister\">\n        <Register\n          @register:data = handleRegister\n        />\n      </div>\n\n      <div v-else>\n        <Login\n            @login:data = userControl\n        />\n      </div>\n\n    </MDBContainer>\n\n  </div>\n\n</template>\n\n<script>\nimport Login from '../components/LoginForm.vue'\nimport Register from '../components/RegisterForm'\nimport {\n  MDBContainer,\n  MDBTabs,\n  MDBTabNav,\n  MDBTabItem,\n\n} from \"mdb-vue-ui-kit\";\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"login-register\",\n  components: {\n    Login,\n    Register,\n    MDBContainer,\n    MDBTabs,\n    MDBTabNav,\n\n\n\n    MDBTabItem,\n\n  },\n  setup() {\n    const form7ActiveTab = ref(\"ex3-1\");\n    const form2Username = ref(\"\");\n    const form2Password = ref(\"\");\n    const form7LoginCheck = ref(true);\n    const form7RegisterName = ref(\"\");\n    const form7RegisterUsername = ref(\"\");\n    const form7RegisterEmail = ref(\"\");\n    const form7RegisterPassword = ref(\"\");\n    const form7RegisterPasswordRepeat = ref(\"\");\n    const form7RegisterTermsCheck = ref(true);\n\n    return {\n      form7ActiveTab,\n      form2Username,\n      form2Password,\n      form7LoginCheck,\n      form7RegisterName,\n      form7RegisterUsername,\n      form7RegisterEmail,\n      form7RegisterPassword,\n      form7RegisterPasswordRepeat,\n      form7RegisterTermsCheck\n    };\n  },\n  data () {\n    return {\n      isLogin: true,\n      isRegister: false\n    }\n  },\n  mounted () {\n    this.isLogin = true\n  },\n  methods: {\n    pressLoginTab () {\n      this.isRegister = false\n      this.islogin = true\n    },\n    pressRegisterTab () {\n      this.isLogin = false\n      this.isRegister = true\n    },\n    handleRegister (data) {\n      console.log(\"xxxxx-xxxxx\")\n      this.$emit('register:data', data)\n    },\n    userControl (userCredentials) {\n      this.$emit('login:data', userCredentials)\n\n    }\n  }\n}\n</script>\n\n<style >\n#app {\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  /*color: #2c3e50;*/\n}\n\n</style>","<template>\n  <div>\n    <loginError\n        :message = loginErrorMessage\n    />\n    <form class=\"login\" @submit.prevent=\"userLoginData\" autocomplete=\"off\">\n      <MDBInput\n          type=\"text\"\n          size=\"lg\"\n          label=\"K√§ytt√§j√§tunnus\"\n          white\n          id=\"loginUsername\"\n          v-model=\"loginUsername\"\n          wrapperClass=\"mb-4\"\n      />\n\n      <!-- Password input -->\n      <MDBInput\n\n          type=\"password\"\n          size=\"lg\"\n          label=\"Salasana\"\n          white\n          id=\"loginPassword\"\n          v-model=\"loginPassword\"\n          wrapperClass=\"mb-4\"\n      />\n\n      <!-- 2 column grid layout for inline styling -->\n      <MDBRow class=\"mb-4\">\n        <MDBCol class=\"d-flex justify-content-center\">\n          <!-- Checkbox -->\n          <MDBCheckbox\n              label=\"Muista minut\"\n              white\n              id=\"loginCheck\"\n              v-model=\"loginCheck\"\n              wrapperClass=\"mb-3 mb-md-0\"\n          />\n        </MDBCol>\n\n        <MDBCol>\n          <!-- Simple link -->\n          <router-link to=\"/forgot_auth\">Forgot password</router-link>\n<!--          <a href=\"/recipients\">Unohtuiko salasana?</a>-->\n        </MDBCol>\n      </MDBRow>\n\n      <!-- Submit button -->\n      <MDBBtn white color=\"primary\" size=\"lg\" type=\"submit\" block class=\"mb-4\"> Kirjaudu </MDBBtn>\n\n      <!-- Register buttons -->\n      <div class=\"text-center\">\n        <p>Ei j√§sen? <span id=\"reg\" @click=\"this.$router.push('/register')\" style=\"cursor: pointer;\">rekister√∂idy</span></p>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\n// @click=\"userLoginData\"\nimport {\n  MDBInput,\n  MDBCheckbox,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBIcon\n} from \"mdb-vue-ui-kit\";\nimport { ref } from \"vue\";\nimport loginService from \"@/service/login\";\nimport loginError from '../components/notifications/errorMessage'\nimport '@/css/style.css';\nimport '@/css/notification.css'\nexport default {\n  name: \"login-form\",\n  components: {\n    loginError,\n    MDBInput,\n    MDBCheckbox,\n    MDBBtn,\n    MDBRow,\n    MDBCol,\n    MDBIcon\n  },\n  setup() {\n\n    const loginUsername = ref(\"\");\n    const loginPassword = ref(\"\");\n    const loginCheck = ref(true);\n    const loginErrorMessage = ref(null);\n\n    return {\n\n      loginUsername,\n      loginPassword,\n      loginCheck,\n      loginErrorMessage\n    };\n  },\n  methods: {\n    // Data from login fields forward\n    async userLoginData () {\n      let user;\n      const userLogin = {\n        username: this.loginUsername,\n        password: this.loginPassword\n      }\n\n\n      if (this.loginUsername !== \"\" && this.loginPassword !== \"\") {\n        user = await loginService.login(userLogin)\n        if (user.error !== \"login error\") {\n          console.log(\"User logged in\")\n          this.$emit('login:data', user)\n        } else {\n          console.log(\"No user logged in\")\n          this.loginError = \"V√§√§r√§ K√§ytt√§j√§tunnus tai salasana!\"\n          this.loginErrorMessage = \"V√§√§r√§ K√§ytt√§j√§tunnus tai salasana!\";\n          setTimeout(() => {\n            this.loginErrorMessage = null;\n          }, 2000);\n        }\n      } else {\n        this.loginErrorMessage = \"kaikki kent√§t on t√§ytett√§v√§!\"\n        setTimeout(() => {\n          this.loginErrorMessage = null\n        }, 2000);\n      }\n\n      //this.$emit('login:data', userLogin)\n      this.emptyLoginFields()\n    },\n    // empty login form fields after login\n    emptyLoginFields () {\n      this.loginUsername = \"\"\n      this.loginPassword = \"\"\n      this.loginCheck = false\n    }\n  }\n}\n</script>\n\n<style >\n#reg {\n  padding: 10px;\n  color: deepskyblue;\n}\n/*.mdb.input {*/\n/*  background-color: grey;*/\n/*}*/\n\n/*.mdb.input-control {*/\n/*  color: red;*/\n/*}*/\n\n\n\n\n/*input:-webkit-autofill { -webkit-box-shadow: 0 0 0 1000px green inset !important; } input:-webkit-autofill:focus { -webkit-box-shadow: 0 0 0 1000px blue inset !important; }*/\n\n/*.mdb.input-control:focus {*/\n/*  color: red;*/\n/*}*/\n</style>","import { render } from \"./LoginForm.vue?vue&type=template&id=52c8c945\"\nimport script from \"./LoginForm.vue?vue&type=script&lang=js\"\nexport * from \"./LoginForm.vue?vue&type=script&lang=js\"\n\nimport \"./LoginForm.vue?vue&type=style&index=0&id=52c8c945&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./LoginRegister.vue?vue&type=template&id=1ba22529\"\nimport script from \"./LoginRegister.vue?vue&type=script&lang=js\"\nexport * from \"./LoginRegister.vue?vue&type=script&lang=js\"\n\nimport \"./LoginRegister.vue?vue&type=style&index=0&id=1ba22529&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["key","style","_createElementBlock","_createVNode","_component_MDBContainer","default","_withCtx","_component_registerError","message","$data","registerErrorMessage","usernameExisting","registerEmailErrorMessage","_component_register_error","registerPwRepeatErrorMessage","_createElementVNode","class","onSubmit","_cache","_withModifiers","args","$options","userData","autocomplete","_component_MDBInput","type","size","label","white","id","modelValue","$setup","registerFirstName","$event","wrapperClass","registerLastName","registerUsername","registerEmail","showPassword","registerPassword","onInput","validatePassword","onClick","togglePassword","pwValidateError","_hoisted_1","_toDisplayString","_createCommentVNode","registerPasswordRepeat","_component_MDBCheckbox","registerSubscribeCheck","_component_MDBBtn","outline","block","disabled","_createTextVNode","_","require","name","components","registerError","MDBContainer","MDBInput","MDBCheckbox","MDBBtn","MDBIcon","data","setup","ref","console","log","value","regex","test","watch","newValue","computed","isValidEmail","this","methods","emailValidation","validateEmail","email","msg","newUser","firstName","lastName","username","password","length","setTimeout","userExisting","userService","addUser","error","loggedInUser","loginService","login","$emit","__exports__","render","ErrorMessage","_component_MDBTabs","form7ActiveTab","_component_MDBTabNav","pills","justify","tabsClasses","_component_MDBTabItem","pressLoginTab","tabId","href","pressRegisterTab","isRegister","_component_Register","handleRegister","_hoisted_2","_component_Login","userControl","_component_loginError","loginErrorMessage","userLoginData","loginUsername","loginPassword","_component_MDBRow","_component_MDBCol","loginCheck","_component_router_link","to","color","$router","push","loginError","MDBRow","MDBCol","user","userLogin","emptyLoginFields","Login","Register","MDBTabs","MDBTabNav","MDBTabItem","form2Username","form2Password","form7LoginCheck","form7RegisterName","form7RegisterUsername","form7RegisterEmail","form7RegisterPassword","form7RegisterPasswordRepeat","form7RegisterTermsCheck","isLogin","mounted","islogin","userCredentials"],"sourceRoot":""}