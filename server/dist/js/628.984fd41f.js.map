{"version":3,"file":"js/628.984fd41f.js","mappings":"oMAESA,MAAQ,gB,aAePA,MAAM,Q,oIAhBQ,kBAAXC,EAAAC,SAAM,WAAjBC,EAAAA,EAAAA,IAaM,MAAAC,EAAA,EAZJC,EAAAA,EAAAA,GAUM,MAVNC,EAUM,UAVsB,QACxBD,EAAAA,EAAAA,GAAgC,UAAAE,EAAAA,EAAAA,IAA3BN,EAAAO,IAAIC,QAAQ,GAAGC,QAAM,YAAM,SAClCH,EAAAA,EAAAA,IAAEN,EAAAO,IAAIG,QAAQ,MACd,IAAAC,EAAAA,EAAAA,IAA8CC,EAAE,CAA/BC,IAAMb,EAAAO,IAAIO,OAAO,GAAGC,O,yBAAS,MAAET,EAAAA,EAAAA,IAAEN,EAAAO,IAAIO,OAAO,GAAGE,KAAK,MAAEV,EAAAA,EAAAA,IAAEN,EAAAO,IAAIO,OAAO,GAAGG,MAAM,WAE7FX,EAAAA,EAAAA,IAAEN,EAAAO,IAAIO,OAAO,GAAGI,OAAO,OAAGZ,EAAAA,EAAAA,IAAEN,EAAAO,IAAIO,OAAO,GAAGK,SAAS,IACnD,IAAAR,EAAAA,EAAAA,IAESS,EAAA,CAFDC,MAAA,GAAMC,QAAQ,OAAQC,QAAKC,EAAA,KAAAA,EAAA,GAAAC,GAAEC,EAAAC,4BAA4B3B,EAAAO,O,mBAAM,IAEvE,UAFuE,8D,wBAQ3EL,EAAAA,EAAAA,IA4BM,MAAA0B,EAAA,EA3BJxB,EAAAA,EAAAA,GAkBI,MAlBJyB,EAkBI,EAjBFlB,EAAAA,EAAAA,IAGEmB,EAAA,CAFE/B,MAAM,wBACLwB,QAAKC,EAAA,KAAAA,EAAA,GAAAC,GAAEC,EAAAK,0BAA0B/B,EAAAO,QAEhB,iBAAXP,EAAAC,SAAM,WAAjBC,EAAAA,EAAAA,IAKM,MAAA8B,EAAA,EAJJ5B,EAAAA,EAAAA,GAA8B,YAA1BA,EAAAA,EAAAA,GAAqB,UAAAE,EAAAA,EAAAA,IAAhBN,EAAAO,IAAIG,QAAM,cAAW,KAACJ,EAAAA,EAAAA,IAAEN,EAAAO,IAAI0B,SAAS,IAC9C,IAAAtB,EAAAA,EAAAA,IAA8CC,EAAE,CAA/BC,IAAMb,EAAAO,IAAIO,OAAO,GAAGC,O,yBAAS,MAAET,EAAAA,EAAAA,IAAEN,EAAAO,IAAIO,OAAO,GAAGE,KAAK,MAAEV,EAAAA,EAAAA,IAAEN,EAAAO,IAAIO,OAAO,GAAGG,MAAM,WAE7FX,EAAAA,EAAAA,IAAEN,EAAAO,IAAIO,OAAO,GAAGI,OAAO,OAAGZ,EAAAA,EAAAA,IAAEN,EAAAO,IAAIO,OAAO,GAAGK,SAAO,MAExB,cAAXnB,EAAAC,SAAM,WAAtBC,EAAAA,EAAAA,IAMM,MAAAgC,EAAA,EALJ9B,EAAAA,EAAAA,GAAuB,UAAAE,EAAAA,EAAAA,IAAlBN,EAAAO,IAAI4B,UAAQ,YAAM,OACvB7B,EAAAA,EAAAA,IAAEN,EAAAO,IAAIG,QAAQ,IACd,IAAAC,EAAAA,EAAAA,IAA8CC,EAAE,CAA/BC,IAAMb,EAAAO,IAAIO,OAAO,GAAGC,O,yBAAS,MAAET,EAAAA,EAAAA,IAAEN,EAAAO,IAAIO,OAAO,GAAGE,KAAK,MAAEV,EAAAA,EAAAA,IAAEN,EAAAO,IAAIO,OAAO,GAAGG,MAAM,WAE7FX,EAAAA,EAAAA,IAAEN,EAAAO,IAAIO,OAAO,GAAGI,OAAO,OAAGZ,EAAAA,EAAAA,IAAEN,EAAAO,IAAIO,OAAO,GAAGK,SAAO,0B,yBAoBzD,GACEiB,KAAM,OACNC,MAAO,CACLpC,OAAQqC,OACR/B,IAAKgC,QAEPC,WAAY,CACVC,YAAW,KACXC,OAAM,KACNC,eAAcA,EAAAA,GAEhBC,QAAS,CACPb,0BAA2Bc,GACzBC,KAAKC,MAAM,sBAAuBF,EACpC,EACAlB,4BAA6BkB,GAC3BC,KAAKC,MAAM,+BAAgCF,EAC7C,I,QC/DJ,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O,qLC2C8BlD,MAAM,iBAAiBmD,KAAK,U,UAChD9C,EAAAA,EAAAA,GAA+C,QAAzCL,MAAM,mBAAkB,cAAU,K,GAAxC8B,G,mBAOyDsB,GAAG,c,GAC7CpD,MAAM,e,UAEXK,EAAAA,EAAAA,GAEM,OAFDL,MAAM,aAAY,4BAEvB,K,GACKA,MAAM,gB,SA4BwDoD,GAAG,wB,GACnEpD,MAAM,e,UAEXK,EAAAA,EAAAA,GAEM,OAFDL,MAAM,uBAAsB,mDAEjC,K,GACKA,MAAM,0B,oOAnG3BG,EAAAA,EAAAA,IA4KM,aAhKJS,EAAAA,EAAAA,IA6JeyC,EAAA,CA7JDC,MAAA,uBAAwB,C,kBAEpC,IAkCM,CAlCKC,EAAAC,YAAS,WAApBrD,EAAAA,EAAAA,IAkCM,MAAAC,EAAA,EAjCJQ,EAAAA,EAAAA,IAgCE6C,EAAA,CA/BGC,KAAOzD,EAAAyD,KACPZ,QAAUS,EAAAT,QACVa,OAASJ,EAAAI,OACTC,YAAcL,EAAAM,kBAEdC,UAAYP,EAAAQ,0BACZC,kBAAoBT,EAAAS,kBACpBC,KAAOV,EAAAU,KACPC,oBAAoBvC,EAAAwC,wBACpB,sBAAoBxC,EAAAyC,kBACpB,8BAA4BzC,EAAA0C,wBAC5B,mBAAiB1C,EAAA2C,oBACjB,kBAAgB3C,EAAA4C,mBAEhBC,kBAAkB7C,EAAA8C,sBAElBC,WAAW/C,EAAAgD,eACXC,YAAYjD,EAAAkD,gBACZC,cAAcnD,EAAAoD,kBAEdC,YAAYrD,EAAAsD,UACZC,UAAYjF,EAAAiF,UACZC,aAAelF,EAAAkF,aACfC,SAAWnF,EAAAmF,SACXC,SAAS1D,EAAA2D,WACTC,WAAW5D,EAAA6D,aACXC,UAAU9D,EAAA8D,UACVC,kBAAkB/D,EAAAgE,gBAClBC,kBAAkBjE,EAAAkE,qBAElBC,YAAYnE,EAAAoE,W,qaAGnB5F,EAAAA,EAAAA,IAqHM,MAAAG,EAAA,CAnHOiD,EAAAyC,YAAS,WAApB7F,EAAAA,EAAAA,IAEM,MAFN0B,EAEMI,MAAA,WACN9B,EAAAA,EAAAA,IA8GM,MAAAgC,EAAA,EA5GJvB,EAAAA,EAAAA,IA0BSqF,EAAA,M,kBAxBP,IAoBS,EApBTrF,EAAAA,EAAAA,IAoBSsF,EAAA,CApBDC,GAAG,KAAG,C,kBACZ,IAkBQ,CAlBKlG,EAAAmG,4BAA4BC,OAAS,IAAH,WAA/ClG,EAAAA,EAAAA,IAkBQ,QAlBRmG,EAkBQ,EAjBNjG,EAAAA,EAAAA,GAgBU,UAhBVkG,EAgBU,EAfRlG,EAAAA,EAAAA,GAcM,YAbJmG,GAGAnG,EAAAA,EAAAA,GASM,MATNoG,EASM,gBAPJtG,EAAAA,EAAAA,IAKEuG,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAJiB1G,EAAAmG,6BAARQ,K,WADXC,EAAAA,EAAAA,IAKEC,EAAA,CAJ+CC,IAAKH,EAAKxD,GACvDlD,OAAS,gBACRM,IAAMoG,EACN,iCAA+BjF,EAAAqF,mC,6FAQ9CpG,EAAAA,EAAAA,IAESsF,EAAA,CAFD5C,MAAA,8BAAmC6C,GAAG,K,mBAC5C,IAA+E,EAA/E9F,EAAAA,EAAAA,GAA+E,UAA3E,0BAAsBE,EAAAA,EAAAA,IAAEN,EAAAgH,kBAAkBZ,QAAQ,uBAAoB,M,8BAW9ElG,EAAAA,EAAAA,IAoESuG,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IApE0B1G,EAAAgH,mBAAiB,CAApCnE,EAASoE,M,WAAzBL,EAAAA,EAAAA,IAoESZ,EAAA,CApE8Cc,IAAKG,EAAOlH,MAAM,Y,mBAEvE,IA8CQ,CA9CKC,EAAAkH,0BAA0BC,MAAKC,GAAOA,EAAIjE,KAAON,EAAQM,OAAE,WAAxEjD,EAAAA,EAAAA,IA8CQ,QA9CRmH,EA8CQ,EA7CNjH,EAAAA,EAAAA,GA4CU,UA5CVkH,EA4CU,EA3CRlH,EAAAA,EAAAA,GA0CM,YAzCJmH,GAGAnH,EAAAA,EAAAA,GAqCM,MArCNoH,EAqCM,EApCJ7G,EAAAA,EAAAA,IAaSqF,EAAA,M,kBAZP,IAES,EAFTrF,EAAAA,EAAAA,IAESsF,EAAA,M,kBADP,IAAgB,mBAAdpD,EAAQ4E,MAAI,M,YAEhB9G,EAAAA,EAAAA,IAESsF,EAAA,M,kBADP,IAAkB,mBAAhBpD,EAAQnC,QAAM,M,YAElBC,EAAAA,EAAAA,IAKSsF,EAAA,M,kBAJP,IAAuH,CAAxG3C,EAAAoE,Q,iBAAM,WAArBd,EAAAA,EAAAA,IAAuHxF,EAAA,C,MAAhGE,QAAQ,YAAYD,MAAA,GAAMsG,KAAK,KAAMpG,QAAKE,GAAEC,EAAAkG,kBAAkB/E,EAASoE,I,mBAAQ,IAAQ,UAAR,e,wBACxF3D,EAAAoE,SAAM,WAApBd,EAAAA,EAAAA,IAAwGxF,EAAA,C,MAAlFE,QAAQ,SAASD,MAAA,GAAMsG,KAAK,KAAMpG,QAAOG,EAAAmG,0B,mBAA0B,IAAM,UAAN,a,kEAK7FlH,EAAAA,EAAAA,IAoBSqF,EAAA,M,kBAnBP,IAES,EAFTrF,EAAAA,EAAAA,IAESsF,IACTtF,EAAAA,EAAAA,IAWSsF,EAAA,CAXD5C,MAAA,yBAA2B,C,kBACjC,IASE,CARQC,EAAAwE,gBAAkBb,GAAS3D,EAAAoE,SAAM,WAD3Cd,EAAAA,EAAAA,IASEmB,EAAA,C,MAPG9C,UAAYjF,EAAAiF,UACZE,SAAUnF,EAAAmF,SACVD,aAAelF,EAAAkF,aACf,gBAAcxD,EAAA2D,WACd2C,aAAatG,EAAA6D,aACb,eAAa7D,EAAA8D,W,8HAIpB7E,EAAAA,EAAAA,IAESsF,M,iCAUnB/F,EAAAA,EAAAA,IAaQ,QAAA+H,EAAA,EAZNtH,EAAAA,EAAAA,IAUSqF,EAAA,M,kBATP,IAES,EAFTrF,EAAAA,EAAAA,IAESsF,EAAA,M,kBADP,IAAgB,mBAAdpD,EAAQ4E,MAAI,M,YAEhB9G,EAAAA,EAAAA,IAESsF,EAAA,M,kBADP,IAAkB,mBAAhBpD,EAAQnC,QAAM,M,YAElBC,EAAAA,EAAAA,IAESsF,EAAA,M,kBADP,IAA0G,EAA1GtF,EAAAA,EAAAA,IAA0GS,EAAA,CAAlGE,QAAQ,OAAOD,MAAA,GAAMsG,KAAK,KAAMpG,QAAKE,GAAEC,EAAAwG,sBAAsBrF,EAAQM,GAAIN,I,mBAAU,IAAM,UAAN,a,8EAWnGlC,EAAAA,EAAAA,IAAwFS,EAAA,CAAhFE,QAAQ,OAAOD,MAAA,GAAMsG,KAAK,KAAMpG,QAAOG,EAAAyG,Y,mBAAY,IAAoB,UAApB,2B,mCAIzD,0C,wHAuCZ,GACE/F,KAAM,kBACNC,MAAO,CACLoB,KAAM2E,QACNnD,UAAWoD,MAEXnD,aAAc,KACdC,SAAUkD,MACVC,cAAe,KACftB,kBAAmBqB,MAEnBnB,0BAA2BmB,MAC3BlC,4BAA6BkC,OAG/BE,OACE,MAAO,CACLpF,GAAI,GACJ4C,WAAW,EACXrC,OAAQ,GACR8E,OAAQ,KAGRC,SAAU3F,KAAKkE,kBACf7E,SAAU,CAAC,EACXU,QAAS,KACT6E,QAAQ,EACRgB,YAAa,GACbZ,cAAe,KACfa,EAAG,KAEH5E,kBAAmB,GAEnB6E,wBAAyB,GAEzBrF,WAAW,EAEXO,0BAA2B,GAC3B+E,6BAA8B,KAC9B7E,KAAM,GACNJ,kBAAmB,KACnBkF,mBAAoB,GACpBC,cAAe,GAEnB,EACAC,QACE,MAAMC,GAAcC,EAAAA,EAAAA,KAAI,GACxB,MAAO,CACLD,cAEJ,EACAzG,WAAY,CAKV2G,SAAQ,aACRC,YAAW,IACXC,gBAAe,aAEf3G,OAAM,KACN4G,aAAY,KACZC,OAAM,KACNC,OAAMA,EAAAA,IAGRC,gBAcE,MAAMC,EAAiBC,OAAOC,aAAaC,QAAQ,iBACnD,GAAKH,EAEE,CACL,MAAMI,EAAOC,KAAKC,MAAMN,GACxB5G,KAAK0F,OAASsB,EAAK3G,GAEnBL,KAAKX,eAAiB8H,EAAAA,EAAgBC,YAAYJ,EAAK3G,IAEvDL,KAAKqH,yBAEP,MATErH,KAAKsH,QAAQC,KAAK,IAWtB,EACAzH,QAAS,CACPsB,wBAAyBoG,GACvBxH,KAAKc,kBAAoB,IAAI2G,KAAKD,EAAGrJ,KAAMqJ,EAAGvJ,MAAOuJ,EAAGtJ,IAAKsJ,EAAGpJ,MAAOoJ,EAAGnJ,SAC1EqJ,QAAQC,IAAI,uBAAyB3H,KAAKc,kBAE5C,EACAyB,WAAYyE,GACVhH,KAAKC,MAAM,cAAe+G,EAC5B,EACAvE,eACEzC,KAAKC,MAAM,aACb,EACAyC,UAAWkF,EAASjD,GAClB3E,KAAKC,MAAM,aAAc2H,EAASjD,EACpC,EACAI,2BACE/E,KAAKC,MAAM,yBACXD,KAAKyC,eACLzC,KAAK4E,QAAS,CAChB,EACA+B,wBAAyB5G,EAASoE,SACX0D,EAAAA,EAAiBC,eAAe9H,KAAK0F,QAA1D,IAGIqC,EAAO,GAETA,EADEhI,EAAQrC,QAAQ4F,OAAS,EACpBvD,EAAQrC,QAAQ,GAAGC,OAASoC,EAAQiH,KAAKgB,SAEzChI,KAAK4F,YAEd8B,QAAQC,IAAI,YAAcI,GAI1BE,EAAAA,EAAOC,KAAK,cAAeH,GAC3B/H,KAAKgF,cAAgBb,EACrBnE,KAAK4E,QAAS,CAChB,EACA5B,UAAWyC,GACTzF,KAAKC,MAAM,YAAawF,EAC1B,EACAvD,UAAWuD,GACTiC,QAAQC,IAAI,2BAA6BlC,GACzCzF,KAAKC,MAAM,YAAawF,EAC1B,EACA7C,gBAAiB6C,GACfzF,KAAKC,MAAM,kBAAmBwF,EAChC,EACAkB,gCACE,IAAIhB,QAAiBkC,EAAAA,EAAiBC,eAAe9H,KAAK0F,QAM1D1F,KAAKiB,kBAAoB0E,EAASwC,QAAOpI,GAA8B,cAAnBA,EAAQ5C,SAG5D6C,KAAK8F,wBAA0BH,EAASwC,QAAOC,GAAoB,YAAdA,EAAGjL,QAAsC,SAAdiL,EAAGjL,SAO/E6C,KAAKkE,kBAAoB,IACtBlE,KAAKkE,kBAAkB,GAAGlG,OAAOC,QACpC+B,KAAKiD,WAAY,GAQvB,EAEA0D,4BAA6BtG,EAAIN,GAE/B2H,QAAQC,IAAI,mBAAqBtH,GAGjCL,KAAKD,QAAUA,EAEfC,KAAKY,OAASZ,KAAKD,QAAQsI,MAO3BX,QAAQC,IAAI,eAAiB3H,KAAKD,QAAQuI,cAC1C,IAAIC,EAAO,GAGXA,EAAOvI,KAAKD,QAAQuI,aACpBZ,QAAQC,IAAI,uBAAyB3H,KAAKD,QAAQuI,aAAahF,QAO/DtD,KAAKc,kBAAoB,IAAI2G,KAAK1H,EAAQ/B,OAAO,GAAGG,KAAM4B,EAAQ/B,OAAO,GAAGC,MAAO8B,EAAQ/B,OAAO,GAAGE,IAAK6B,EAAQ/B,OAAO,GAAGI,MAAO2B,EAAQ/B,OAAO,GAAGK,SACrJqJ,QAAQC,IAAI,uBAAyB5H,EAAQ/B,OAAO,GAAGE,KAEvDwJ,QAAQC,IAAI,OAAS3H,KAAKc,kBAAkB0H,WAE5CxI,KAAKkB,KAAOqH,EAAK,GAGjBvI,KAAKgB,gCAAkCmG,EAAAA,EAAgBsB,iCACnD,CAACC,OAAQH,IAIbvI,KAAKgB,0BAA4BhB,KAAKgB,0BAA0BmH,QAAOQ,GAAOA,EAAI3B,KAAK3G,KAAOL,KAAK0F,SAYnG,MAAMkD,EAAoBA,CAACC,EAASpD,IAAS,IAAIqD,SAAQ,CAACC,EAASC,KACjEH,EAAQD,kBAAkBnD,GAAM,CAACwD,EAAU9L,KAC3B,OAAXA,EACD4L,EAAQE,GAERD,EAAOC,EACT,GACA,IAIJ,IAAIC,EAAQ,GACRC,EAAM,GAINC,EAAYrJ,EAAQsJ,SACpBC,EAAYvJ,EAAQwJ,UACxBL,EAAQ,CAACE,EAAWE,GACpBtJ,KAAKgB,0BAA0BwI,SAAQb,IACrC,IAAIc,EAAiBd,EAAIU,SAErBK,EAAiBf,EAAIY,UACzBJ,EAAM,CAACM,EAAgBC,GAGvB,MAAMC,EAAchD,MAAOuC,EAAOC,KAChC,MAAMS,EAAS,IAAIC,OAAOC,KAAKC,OAAOb,EAAM,GAAIA,EAAM,IAChDc,EAAQ,IAAIH,OAAOC,KAAKC,OAAOZ,EAAI,GAAIA,EAAI,IAC3CN,EAAU,IAAIgB,OAAOC,KAAKG,sBAC1BvB,QAAeE,EACjBC,EACA,CACEqB,QAAS,CAACN,GACVO,aAAc,CAACH,GACfI,WAAY,YAGlB,MAAO,CACLC,UAAW3B,EAAO4B,KAAK,GAAGC,SAAS,GAAGF,SAASG,MAAQ,KAAMC,QAAQ,GACrEC,SAAUhC,EAAO4B,KAAK,GAAGC,SAAS,GAAGG,SAASC,KAC/C,EAGHhB,EAAYT,EAAOC,GAAKyB,MAAKC,IAE3BlC,EAAI0B,SAAWQ,EAAIR,SACnB1B,EAAI+B,SAAWG,EAAIH,QAAQ,GAC3B,IAKJ1K,KAAKS,WAAY,CACnB,EACAqC,qBAAsB8E,GACpBF,QAAQC,IAAI,yBAA2BC,GACvB,aAAZA,EACF5H,KAAKgB,0BAA0B8J,MAAK,CAACC,EAAGC,IAAMD,EAAEV,SAAWW,EAAEX,WACxC,WAAZzC,GACT5H,KAAKgB,0BAA0B8J,MAAK,CAACC,EAAGC,IAAMD,EAAEE,OAAOC,SAAWF,EAAEC,OAAOC,WAI7ElL,KAAKmL,0BAGP,EACAC,yBACE1D,QAAQC,IAAI,cACd,EACAwD,2BACEzD,QAAQC,IAAI,aAEZ3H,KAAKgB,0BAA0BwI,SAAQb,IACrCjB,QAAQC,IAAI,kBAAoB3H,KAAKc,mBACjC6H,EAAI0C,UACN1C,EAAI0C,UAAU7B,SAAQ8B,IAEhBC,EAAAA,EAAYC,0BACRxL,KAAKc,kBACL,CAAC2K,EAAGH,EAAKI,SAAUC,EAAGL,EAAKM,UAAW/F,EAAGyF,EAAKO,QAASC,KAAMR,EAAKS,UAAWC,IAAKV,EAAKW,aACvF,CAACR,EAAGH,EAAKY,OAAQP,EAAGL,EAAKa,QAAStG,EAAGyF,EAAKc,MAAON,KAAMR,EAAKe,QAASL,IAAKV,EAAKgB,aAGrF5E,QAAQC,IAAI,gBAAkBgB,EAAIhL,QAClCqC,KAAKgG,mBAAmBuB,KAAKoB,KAE7BjB,QAAQC,IAAI,oCAAsCgB,EAAIhL,QACtDqC,KAAKiG,cAAcsB,KAAKoB,GAC1B,IAGFjB,QAAQC,IAAI,uBACd,IAIFD,QAAQC,IAAI,oBAAsB3H,KAAKgG,mBAAmB1C,QAC1DoE,QAAQC,IAAI,wBAA0B3H,KAAKiG,cAAc3C,OAE3D,EACAjC,kBAAmBtB,GACjB2H,QAAQC,IAAI,mBAAqB5H,EAAQM,IAEzCL,KAAKC,MAAM,iBAAkBF,EAAQM,IAErCL,KAAK8F,wBAA0B9F,KAAK8F,wBAAwByG,OAAOvM,KAAKD,QAG1E,EACAsF,aAEErF,KAAKsH,QAAQC,KAAK,MAGpB,EACAjG,wBAAyBkL,EAAQzM,EAAS0M,GAKxCzM,KAAK4F,YAAc6G,EAAe1E,KAClC/H,KAAKgB,0BAA4BhB,KAAKgB,0BAA0BmH,QAAOuE,GAAQA,EAAKrM,KAAOmM,IAC3FxM,KAAKC,MAAM,oBAAqBF,EAAU0M,GAC1C/E,QAAQC,IAAI,sBAAwB8E,EAAenN,MACnDU,KAAKS,WAAY,CACnB,EACAkM,UACE,MAAMhM,EAAO,sBACbX,KAAKsH,QAAQC,KAAK,oBAAqB,CAACqF,OAAQjM,GAElD,EACAkM,cACEnF,QAAQC,IAAI,aAAe9H,EAAAA,EAAe5B,MAAM,GAIlD,EACA6O,iCAEA,EACApL,sBAAuBqL,GACrB/M,KAAKD,QAAQ,GAAGgN,YAAcA,CAChC,EACApG,qBAAsB0B,GACpBX,QAAQC,IAAI,sBAAwBU,EAAM2E,KAC1CtF,QAAQC,IAAI,yBAA2BU,EAAMA,OAC7CX,QAAQC,IAAI,wBAA0BU,EAAM/I,MAE5CU,KAAKY,OAAO2G,KAAKc,EAMnB,EACAvG,gBAAiBqC,EAAO9D,EAAI4M,IAEX,IAAX9I,IACFnE,KAAKY,OAAOuD,GAAS,CAAC6I,IAAK3M,EAAI4M,KAAMA,GAGzC,EAaAtG,wBAAyBuG,GAGvBlN,KAAKY,OAAOuM,OAAOD,EAAS,GAC5BxF,QAAQC,IAAI,2BACd,EACAnG,mBAAoB4L,GAClB1F,QAAQC,IAAI,aAAeyF,GAC3BpN,KAAKS,UAAY2M,CACnB,EACAzG,wCAAyC5G,GACvC2H,QAAQC,IAAI,6BAA+B5H,EAAQM,IAQnDqH,QAAQC,IAAI,wBAA0B5H,EAAQrC,QAAQ,GAAG2C,IACzDqH,QAAQC,IAAI,sCAAwC5H,EAAQrC,QAAQ,GAAGsJ,KAAK3G,IAC5EL,KAAKC,MAAM,gCAAiCF,SAItC8H,EAAAA,EAAiBwF,gBAAgBtN,EAAQM,GAAI,CAAClD,OAAQ,aAC9D,EAGAwJ,0BAA2BtG,GACzBqH,QAAQC,IAAI,uBAAyBtH,GAGrCL,KAAKkE,kBAAoBlE,KAAKkE,kBAAkBiE,QAAOpI,GAAWA,EAAQM,KAAOA,IAEjFL,KAAKS,WAAY,QACXoH,EAAAA,EAAiByF,cAAcjN,EAEvC,I,QC3nBJ,MAAMH,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://prore-mongo/./src/components/Info.vue","webpack://prore-mongo/./src/components/Info.vue?5bb4","webpack://prore-mongo/./src/pages/RecipientPanel.vue","webpack://prore-mongo/./src/pages/RecipientPanel.vue?32f9"],"sourcesContent":["<template>\n  <div v-if=\"status === 'for-recipient'\">\n    <div class = \"waiting-info\">\n      ( <b>{{msg.ordered[0].yritys}}</b> )  -\n      {{msg.header}} -\n      <monthConverter :num=\" msg.onTime[0].month\" />, {{msg.onTime[0].day}}, {{msg.onTime[0].year}}\n      kello\n      {{msg.onTime[0].hours}} : {{msg.onTime[0].minutes}}\n      <MDBBtn block outline=\"dark\" @click=\"removeComplitedBookingPanel(msg)\">\n        (Kustub muidu kui aeg läbi saab) - Eemalda teade kohe\n      </MDBBtn>\n\n    </div>\n\n  </div>\n\n  <div v-else>\n    <div  class=\"info\">\n      <MDBBtnClose\n          class=\"closeConfirmedBooking\"\n          @click=\"removeCompletedBookingPro(msg)\"\n      />\n      <div v-if=\"status === 'for-provider'\">\n        <h2><b>{{msg.header}}</b></h2> {{msg.address}}\n        <monthConverter :num=\" msg.onTime[0].month\" />, {{msg.onTime[0].day}}, {{msg.onTime[0].year}}\n        kello\n        {{msg.onTime[0].hours}} : {{msg.onTime[0].minutes}}\n      </div>\n      <div v-else-if=\"status === 'recipient'\">\n        <b>{{msg.provider}}</b> -\n        {{msg.header}}\n        <monthConverter :num=\" msg.onTime[0].month\" />, {{msg.onTime[0].day}}, {{msg.onTime[0].year}}\n        kello\n        {{msg.onTime[0].hours}} : {{msg.onTime[0].minutes}}\n      </div>\n  </div>\n\n\n\n\n\n\n\n\n  </div>\n</template>\n\n<script>\nimport {\n  MDBBtnClose,\n  MDBBtn\n} from 'mdb-vue-ui-kit'\nimport monthConverter from './controllers/month-converter'\nexport default {\n  name: \"Info\",\n  props: {\n    status: String,\n    msg: Object,\n  },\n  components: {\n    MDBBtnClose,\n    MDBBtn,\n    monthConverter\n  },\n  methods: {\n    removeCompletedBookingPro (booking) {\n      this.$emit('remove:proConfirmed', booking);\n    },\n    removeComplitedBookingPanel (booking) {\n      this.$emit('remove:complitedBookingPanel', booking)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.info {\n  color: white;\n  background: lightblue;\n  font-size: 20px;\n  border: solid #acbbbc;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n\n}\n.waiting-info {\n  width: 100%;\n  color: grey;\n  background: #f5f532;\n  font-size: 20px;\n  border: solid #acbbbc;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n.waiting-info b {\n  color: blue;\n}\n.closeConfirmedBooking {\n  float: right;\n}\n</style>","import { render } from \"./Info.vue?vue&type=template&id=16fa4cf6&scoped=true\"\nimport script from \"./Info.vue?vue&type=script&lang=js\"\nexport * from \"./Info.vue?vue&type=script&lang=js\"\n\nimport \"./Info.vue?vue&type=style&index=0&id=16fa4cf6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-16fa4cf6\"]])\n\nexport default __exports__","<template>\n  <div>\n\n    <!--\n    <div v-if=\"isAvailable\">\n      <RecipientSuccess\n        :provider = provider\n      />\n    </div>\n    -->\n\n<!--    <h1 style=\"margin-top: 200px; margin-bottom: 50px\">Asiakkaan hallintapaneeli...</h1>-->\n\n    <MDBContainer style=\"margin-top: 50px\">\n\n      <div v-if=\"isBooking\">\n        <recipientResult\n            :test = test\n            :booking = booking\n            :images = images\n            :bookingTime = recipientDateTime\n\n            :providers = providerMatchByProfession\n            :confirmedBookings = confirmedBookings\n            :line = line\n            @updateBookingDate = handleUpdateBookingDate\n            @set:order:to:send = handleOrderToSend\n            @remove:confirmed:provider = handleConfirmedProvider\n            @remove:booking = handleRemoveBooking\n            @cansel:result = handleCanselResult\n\n            @editDescription = handleEditDescription\n\n            @addImage = handleAddImage\n            @editImage = handleEditImage\n            @removeImage = handleRemoveImage\n\n            @finalinfo = finalinfo\n            :chatusers = chatusers\n            :selecteduser = selecteduser\n            :messages = messages\n            @select = selectUser\n            @noSelect = noSelectUser\n            @message = onMessage\n            @chatCredentials = chatCredentials\n            @filter_provider = handleFilterProvider\n\n            @otherUser = otherUser\n        />\n      </div>\n      <div v-else>\n\n        <div v-if=\"isSpinner\" class=\"spinner-border\" role=\"status\">\n          <span class=\"visually-hidden\">Loading...</span>\n        </div>\n        <div v-else>\n\n          <MDBRow>\n\n            <MDBCol md=\"8\" >\n              <aside v-if=\"confirmedBookingsByProvider.length > 0\" id=\"info-block\" >\n                <section class=\"file-marker\">\n                  <div>\n                    <div class=\"box-title\">\n                      Vahvistetut varaukset!\n                    </div>\n                    <div class=\"box-contents\">\n\n                      <bookingInfo\n                          v-for=\"item in confirmedBookingsByProvider\" :key=\"item.id\"\n                          status = \"for-recipient\"\n                          :msg = item\n                          @remove:complitedBookingPanel = handleRemoveComplitedBookingPanel\n                      />\n\n                    </div>\n                  </div>\n                </section>\n              </aside>\n            </MDBCol>\n            <MDBCol style=\"padding: 20px 5px 20px 5px\" md=\"4\">\n              <h3>Sinulla on hetkellä - {{recipientBookings.length}} - avointa tilausta:</h3>\n            </MDBCol>\n          </MDBRow>\n\n\n\n\n\n\n\n\n          <MDBRow v-for=\"(booking, index) in recipientBookings\" :key=\"index\" class=\"bookings\">\n\n            <aside v-if=\"confirmedBookingsByClient.some(ccb => ccb.id === booking.id)\" id=\"info-block-confirmed\" >\n              <section class=\"file-marker\">\n                <div>\n                  <div class=\"box-title-confirmed\">\n                    Varaus on vireillä, kun yritys vahvistaa sen.\n                  </div>\n                  <div class=\"box-contents-confirmed\">\n                    <MDBRow>\n                      <MDBCol>\n                        {{booking.date}}\n                      </MDBCol>\n                      <MDBCol>\n                        {{booking.header}}\n                      </MDBCol>\n                      <MDBCol>\n                        <MDBBtn v-if=\"!isChat\" outline=\"secondary\" block size=\"lg\" @click=\"contactToProvider(booking, index)\">Ava chat</MDBBtn>\n                        <MDBBtn v-if=\"isChat\" outline=\"danger\" block size=\"lg\" @click=\"bookingWaitingProBackBtn\">Poistu</MDBBtn>\n\n\n                      </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                      <MDBCol>\n\n                      </MDBCol>\n                      <MDBCol style=\"text-align: center;\">\n                        <live-chat\n                            v-if=\"selectedIndex === index && isChat\"\n                            :chatusers = chatusers\n                            :messages =messages\n                            :selecteduser = selecteduser\n                            @select:user = selectUser\n                            @noSelected = noSelectUser\n                            @on:message = onMessage\n\n                        />\n                      </MDBCol>\n                      <MDBCol>\n\n                      </MDBCol>\n\n                    </MDBRow>\n\n                  </div>\n                </div>\n              </section>\n            </aside>\n\n\n            <aside v-else>\n              <MDBRow>\n                <MDBCol>\n                  {{booking.date}}\n                </MDBCol>\n                <MDBCol>\n                  {{booking.header}}\n                </MDBCol>\n                <MDBCol>\n                  <MDBBtn outline=\"info\" block size=\"lg\" @click=\"handleRecipientResult(booking.id, booking)\">Tiedot</MDBBtn>\n                </MDBCol>\n              </MDBRow>\n\n            </aside>\n\n\n\n          </MDBRow>\n\n\n          <MDBBtn outline=\"info\" block size=\"lg\" @click=\"newBooking\">Teen uuden tilauksen</MDBBtn>\n\n        </div>\n\n      </div>\n      ---------------------------------\n<!--      client confirmed bookings {{confirmedBookingsByClient}}-->\n    </MDBContainer>\n\n\n  </div>\n</template>\n\n<script>\n/*global google*/\n\nimport {\n  //MDBTable,\n  MDBBtn,\n  MDBContainer,\n  MDBRow,\n  MDBCol\n}from \"mdb-vue-ui-kit\";\nimport {ref} from \"vue\";\nimport liveChat from './LiveChat'\nimport providerFit from '../components/controllers/datetime'\n/* eslint-disable */\n//import dist from '../components/controllers/distance'\n//import validateToken from \"@/components/validateToken\";\n//import Fieldset from 'primevue/fieldset';\n\n//import RecipientSuccess from '../components/RecipientSuccess'\nimport recipientResult from '../pages/RecipientPanelResult'\nimport providerService from '../service/providers'\nimport recipientService from '../service/recipients'\nimport bookingInfo from '../components/Info'\n//import RecipientBookingChatPanel from './RecipientBookingChatPanel'\n//import axios from \"axios\";\n//import driving from '../components/controllers/distance'\n\nimport monthConverter from '../components/controllers/month-converter'\nimport socket from \"@/socket\";\n//import axios from \"axios\";\nexport default {\n  name: \"recipient-panel\",\n  props: {\n    test: Boolean,\n    chatusers: Array,\n\n    selecteduser: null,\n    messages: Array,\n    recipientTest: null,\n    recipientBookings: Array, // bookings from app (not active)  ?????????\n\n    confirmedBookingsByClient: Array,\n    confirmedBookingsByProvider: Array,\n\n  },\n  data () {\n    return {\n      id: \"\",\n      isSpinner: false,\n      images: [],\n      userId: null,\n      //bookings: [],\n      //recipientBookings: [],\n      bookings: this.recipientBookings,\n      provider: {},\n      booking: null,\n      isChat: false,\n      currentRoom: \"\",\n      selectedIndex: null,\n      d: null,\n      //confirmedBookings: [],\n      confirmedBookings: [] ,\n      //confirmedBookings: this.recipientBookings.filter(booking => booking.status === \"confirmed\"),\n      clientConfirmedBookings: [],\n      //clientConfirmedBookings: this.recipientBookings.filter(cb => cb.status === \"notSeen\" || cb.status === \"seen\"),\n      isBooking: false,\n      //providerMatchByProfession: null,\n      providerMatchByProfession: [],\n      providerMatchingRequirements: null,\n      line: \"\",\n      recipientDateTime: null,\n      providersAvailable: [],\n      providersBusy: []\n    }\n  },\n  setup () {\n    const isAvailable = ref(false)\n    return {\n      isAvailable\n    }\n  },\n  components: {\n    //RecipientSuccess,\n    //Fieldset,\n    //validateToken,\n    //RecipientBookingChatPanel,\n    liveChat,\n    bookingInfo,\n    recipientResult,\n    //MDBTable,\n    MDBBtn,\n    MDBContainer,\n    MDBRow,\n    MDBCol\n    //MDBBadge\n  },\n  async mounted () {\n\n    /*const validated = await validateToken()\n    if (!validated) {\n      //console.log(\"user is no validated\")\n      this.$router.push('/login');\n    } else {\n      //console.log(\"User is validated\")\n      this.userId = validated.id\n      this.provider = await providerService.getProvider(validated.id);\n\n      this.handleRecipientBookings();\n    }*/\n\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (!loggedUserJSON) {\n      this.$router.push('/')\n    } else {\n      const user = JSON.parse(loggedUserJSON)\n      this.userId = user.id\n\n      this.provider = await providerService.getProvider(user.id);\n\n      this.handleRecipientBookings();\n\n    }\n\n  },\n  methods: {\n    handleUpdateBookingDate (nd) {\n      this.recipientDateTime = new Date(nd.year, nd.month, nd.day, nd.hours, nd.minutes);\n      console.log(\"recipient date time \" + this.recipientDateTime);\n\n    },\n    selectUser (user) {\n      this.$emit('select:user', user);\n    },\n    noSelectUser () {\n      this.$emit(\"noSelected\");\n    },\n    onMessage (content, date) {\n      this.$emit(\"on:message\", content, date);\n    },\n    bookingWaitingProBackBtn () {\n      this.$emit(\"bookingWaitingProBack\");\n      this.noSelectUser();\n      this.isChat = false\n    },\n    async contactToProvider (booking, index) {\n      let bookings = await recipientService.getOwnBookings(this.userId);\n      //this.handleRecipientBookings ();\n      // console.log(\"Contact \" + index);\n      let room = \"\";\n      if (booking.ordered.length > 0) {\n        room = booking.ordered[0].yritys + booking.user.username;\n      } else {\n        room = this.currentRoom;\n      }\n      console.log(\"room xxx \" + room);\n      //this.$router.push('/chat');\n      //const room = booking.ordered[0].yritys + booking.user.username;\n      //console.log(\"Room in recipient panel \" + room)\n      socket.emit(\"update room\", room);\n      this.selectedIndex = index;\n      this.isChat = true;\n    },\n    otherUser (data) {\n      this.$emit(\"otherUser\", data)\n    },\n    finalinfo (data) {\n      console.log(\"Data in recipient panel \" + data)\n      this.$emit(\"finalinfo\", data)\n    },\n    chatCredentials (data) {\n      this.$emit(\"chatCredentials\", data);\n    },\n    async handleRecipientBookings () {\n      let bookings = await recipientService.getOwnBookings(this.userId);\n\n\n\n      //this.confirmedBookings = bookings.filter(booking => booking.status === \"confirmed\");\n\n      this.confirmedBookings = bookings.filter(booking => booking.status === \"confirmed\");\n\n\n      this.clientConfirmedBookings = bookings.filter(cb => cb.status === \"notSeen\" || cb.status === \"seen\");\n\n\n      //this.bookings = bookings.filter(b => b.status !== \"confirmed\" && b.status !== \"completed\");\n\n      //this.recipientBookings = bookings.filter(b => b.status !== \"confirmed\" && b.status !== \"completed\");\n\n      if (this.recipientBookings > 0) {\n        if (!this.recipientBookings[0].onTime.month)\n          this.isSpinner = true;\n      }\n\n\n\n\n      //this.bookings = bookings.filter(booking => booking.status === \"waiting\")\n\n    },\n\n    async handleRecipientResult (id, booking) {\n      //this.isAvailable = true\n      console.log(\"Provider id is: \" + id)\n\n      //this.booking = await recipientService.getBookingById(id);\n      this.booking = booking\n      //this.images = this.booking[0].image;\n      this.images = this.booking.image;\n      /*this.booking[0].image.forEach(img => {\n        console.log(\"x-x-x- \" + img.name)\n        this.images.push(img)\n      })*/\n\n      //console.log(\"Profession: \" + this.booking.map(b => b.professional))\n      console.log(\"Profession: \" + this.booking.professional)\n      let temp = []\n      //const profession = this.booking.map(b => b.professional)\n      //temp = this.booking[0].professional;\n      temp = this.booking.professional;\n      console.log(\"Professional length \" + this.booking.professional.length);\n      // this.booking.map(b => {\n      //\n      //   this.recipientDateTime = new Date(b.onTime[0].year, b.onTime[0].month, b.onTime[0].day, b.onTime[0].hours, b.onTime[0].minutes)\n      //   console.log(\"Recipient datetime: \" + b.onTime[0].day)\n      // })\n\n      this.recipientDateTime = new Date(booking.onTime[0].year, booking.onTime[0].month, booking.onTime[0].day, booking.onTime[0].hours, booking.onTime[0].minutes)\n      console.log(\"Recipient datetime: \" + booking.onTime[0].day)\n\n      console.log(\"xxx \" + this.recipientDateTime.getTime())\n      // TODO siia veel mitmuse vorm elukutse sobivuse kohalt otsingus\n      this.line = temp[0]\n\n\n      this.providerMatchByProfession = await providerService.getProvidersMatchingByProfession(\n          {result: temp}\n      )\n\n      // User's own company do not included\n      this.providerMatchByProfession = this.providerMatchByProfession.filter(pro => pro.user.id !== this.userId);\n\n      //this.providerMatchByProfession.filter(pro => pro.user.id !== this.userId);\n      //console.log(\"Pro user id \" + this.providerMatchByProfession.map(p => p.user ? p.user.id !== this.userId : \"EI ole kasutajat???\"))\n      // Remove matching providers if booking user is this provider\n\n      //this.providerMatchByProfession = this.providerMatchByProfession.filter(pro => pro.user.id !== this.userId)\n\n      //const provDist = \"\";\n\n      //dist.distance();\n\n      const getDistanceMatrix = (service, data) => new Promise((resolve, reject) => {\n        service.getDistanceMatrix(data, (response, status) => {\n          if(status === 'OK') {\n            resolve(response)\n          } else {\n            reject(response);\n          }\n        })\n      });\n\n\n      let start = []\n      let end = [];\n\n\n      //console.log(\"Booking lat on \" + this.booking[0].latitude)\n      let originLat = booking.latitude;\n      let originLng = booking.longitude;\n      start = [originLat, originLng];\n      this.providerMatchByProfession.forEach(pro => {\n        let destinationLat = pro.latitude;\n        //console.log(\"Dest latitude \" + destinationLat )\n        let destinationLng = pro.longitude;\n        end = [destinationLat, destinationLng];\n        //console.log(\"Dest longitude \" + destinationLng )\n\n        const getDistance = async (start, end) => {\n          const origin = new google.maps.LatLng(start[0], start[1]);\n          const final = new google.maps.LatLng(end[0], end[1]);\n          const service = new google.maps.DistanceMatrixService();\n          const result = await getDistanceMatrix(\n              service,\n              {\n                origins: [origin],\n                destinations: [final],\n                travelMode: 'DRIVING'\n              }\n          )\n          return {\n            distance: (result.rows[0].elements[0].distance.value / 1000).toFixed(1),\n            duration: result.rows[0].elements[0].duration.text\n          };\n        };\n\n        getDistance(start, end).then(res => {\n          //console.log(\"DDxxiist \" + res.distance)\n          pro.distance = res.distance;\n          pro.duration = res.duration;\n        });\n      })\n\n      //console.log(\"xxxxxx \" + this.providerMatchByProfession.length)\n\n      this.isBooking = true;\n    },\n    handleFilterProvider (content) {\n      console.log(\"Filtering is working! \" + content)\n      if (content === \"distance\") {\n        this.providerMatchByProfession.sort((a, b) => a.distance - b.distance);\n      } else if (content === \"rating\") {\n        this.providerMatchByProfession.sort((a, b) => a.rating.positive - b.rating.positive);\n        //this.providerMatchByProfession = this.providersAvailable + this.providersBusy;\n      }\n      // -------------- teha vaja siin -------------------\n      this.handleFilterAvailability();\n\n      //console.log(\"Filtering: \" + this.providerMatchByProfession.map(pm => pm.distance))\n    },\n    handleFilterByFeedback () {\n      console.log(\"By feedback\")\n    },\n    handleFilterAvailability () {\n      console.log(\"Heyy here\")\n\n      this.providerMatchByProfession.forEach(pro => {\n        console.log(\"Recipient time \" + this.recipientDateTime)\n        if (pro.timeoffer) {\n          pro.timeoffer.forEach(time => {\n            if (\n                providerFit.providerMatchingForClient(\n                    this.recipientDateTime,\n                    {y: time.yearFrom, m: time.monthFrom, d: time.dayFrom, hour: time.hoursFrom, min: time.minutesFrom},\n                    {y: time.yearTo, m: time.monthTo, d: time.dayTo, hour: time.hoursTo, min: time.minutesTo}\n                )\n            ) {\n              console.log(\"Is available \" + pro.yritys)\n              this.providersAvailable.push(pro)\n            } else {\n              console.log(\"Is not available provider yritys \" + pro.yritys)\n              this.providersBusy.push(pro);\n            }\n          })\n        } else {\n          console.log(\"Not timeoffer setted\")\n        }\n\n      })\n\n      console.log(\"Available length \" + this.providersAvailable.length)\n      console.log(\"Not available length \" + this.providersBusy.length)\n\n    },\n    handleOrderToSend (booking) {\n      console.log(\"Order is sended \" + booking.id)\n\n      this.$emit(\"update:booking\", booking.id);\n\n      this.clientConfirmedBookings = this.clientConfirmedBookings.concat(this.booking);\n      //this.confirmedBookingsByClient = this.confirmedBookingsByClient.concat(this.booking)\n      //this.bookings = this.bookings.filter(booking => booking.id !== id)\n    },\n    newBooking () {\n\n      this.$router.push('/rf')\n\n\n    },\n    handleConfirmedProvider (provId, booking, navbarChatUser) {\n      //location.reload();\n      //this.$router.push('/')\n\n      //window.location.replace(\"/received\");\n      this.currentRoom = navbarChatUser.room;\n      this.providerMatchByProfession = this.providerMatchByProfession.filter(prov => prov.id !== provId);\n      this.$emit(\"setNavbarChatUser\", booking,  navbarChatUser);\n      console.log(\"nb chat user start \" + navbarChatUser.name);\n      this.isBooking = false;\n    },\n    openMap () {\n      const test = \"Tehnika 1-5, Antsla\"\n      this.$router.push('/recipient-public', {params: test});\n\n    },\n    compareTime () {\n      console.log(\"Month is: \" + monthConverter.month(4))\n\n      // console.log(\"Time comparison: \" + (new Date(2023,3, 20, 10, 20).getTime()\n      //     < new Date(2023, 3, 20, 11, 11).getTime()))\n    },\n    removeConfirmationNotification () {\n\n    },\n    handleEditDescription (description) {\n      this.booking[0].description = description;\n    },\n    async handleAddImage (image) {\n      console.log(\"Image id in upload \" + image._id)\n      console.log(\"Image image in upload \" + image.image)\n      console.log(\"Image name in upload \" + image.name)\n\n      this.images.push(image);\n\n\n      //this.images.push(image);\n      // this.$router.go()\n      // this.isBooking = true;\n    },\n    handleEditImage (index, id, blob) {\n\n      if (index !== -1) {\n        this.images[index] = {_id: id, blob: blob};\n      }\n\n    },\n    // handleEditImage (previous_image, current_image) {\n    //   if (this.booking) {\n    //     console.log(\"Image enne \" + previous_image.name)\n    //     console.log(\"Image pärast \" + current_image.name)\n    //     //this.booking= this.booking[0].image.filter(f => f.name === img.name);\n    //\n    //     var index = this.images.indexOf(previous_image);\n    //     if (index !== -1) {\n    //       this.images[index] = current_image;\n    //     }\n    //   }\n    // },\n    async handleRemoveImage (imageID) {\n      //await recipientService.removeImage(this.booking[0].id, imageID);\n      //this.images = this.images.filter(img => img._id !== imageID);\n      this.images.splice(imageID, 1);\n      console.log(\"Image removed from array\")\n    },\n    handleCanselResult (back) {\n      console.log(\"Canseled: \" + back)\n      this.isBooking = back;\n    },\n    async handleRemoveComplitedBookingPanel (booking) {\n      console.log(\"Removed complited booking \" + booking.id)\n      //this.confirmedBookings = this.confirmedBookings.filter(cb => cb.id !== booking.id);\n\n      //this.confirmedBookingsByProvider = this.confirmedBookingsByProvider.filter(cb => cb.id !== booking.id);\n      //this.clientConfirmedBookings = this.clientConfirmedBookings.filter(ccb => ccb.id !== booking.id);\n\n\n      //const proID = booking.ordered[0].user.id;\n      console.log(\"Provider data +++ id \" + booking.ordered[0].id);\n      console.log(\"Provider data +++ recipient userID \" + booking.ordered[0].user.id);\n      this.$emit('setNavbarFeedbackNotification', booking)\n\n\n\n      await recipientService.updateRecipient(booking.id, {status: \"completed\"});\n    },\n\n\n    async handleRemoveBooking (id) {\n      console.log(\"Removing booking id \" + id);\n      // this.recipientBookings.filter(booking => booking.id !== id);\n      // this.isBooking = false;\n      this.recipientBookings = this.recipientBookings.filter(booking => booking.id !== id);\n      //await recipientService.removeBooking(id);\n      this.isBooking = false;\n      await recipientService.removeBooking(id);\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.bookings {\n  font-size: 16px;\n  text-align: left;\n  padding: 20px;\n}\n\n\n#info-block section {\n  border: 1px solid #a0dde0;\n  margin-bottom: 20px;\n}\n\n#info-block-confirmed section {\n  border: 2px solid #d5b13c;\n  margin-bottom: 20px;\n}\n\n.file-marker > div {\n  padding: 0 3px;\n  /*height: 130px;*/\n  /*margin-top: -0.8em;*/\n  margin-top: -1em;\n}\n\n.box-title {\n  background: white none repeat scroll 0 0;\n  display: inline-block;\n  /*padding: 0 2px;*/\n  font-size: 16px;\n  padding: 0 10px;\n\n  margin-left: 8em;\n}\n.box-title-confirmed {\n  background: white none repeat scroll 0 0;\n  display: inline-block;\n  color: red;\n  /*padding: 0 2px;*/\n  font-size: 16px;\n  padding: 0 10px;\n\n  margin-left: 8em;\n}\n.box-contents {\n  /*border: solid red;*/\n  padding: 20px;\n  overflow-y: auto;\n}\n.box-contents-confirmed {\n\n  padding: 10px;\n}\n</style>","import { render } from \"./RecipientPanel.vue?vue&type=template&id=32c23580&scoped=true\"\nimport script from \"./RecipientPanel.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanel.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanel.vue?vue&type=style&index=0&id=32c23580&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-32c23580\"]])\n\nexport default __exports__"],"names":["class","$props","status","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","msg","ordered","yritys","header","_createVNode","_component_monthConverter","num","onTime","month","day","year","hours","minutes","_component_MDBBtn","block","outline","onClick","_cache","$event","$options","removeComplitedBookingPanel","_hoisted_3","_hoisted_4","_component_MDBBtnClose","removeCompletedBookingPro","_hoisted_5","address","_hoisted_6","provider","name","props","String","Object","components","MDBBtnClose","MDBBtn","monthConverter","methods","booking","this","$emit","__exports__","render","role","id","_component_MDBContainer","style","$data","isBooking","_component_recipientResult","test","images","bookingTime","recipientDateTime","providers","providerMatchByProfession","confirmedBookings","line","onUpdateBookingDate","handleUpdateBookingDate","handleOrderToSend","handleConfirmedProvider","handleRemoveBooking","handleCanselResult","onEditDescription","handleEditDescription","onAddImage","handleAddImage","onEditImage","handleEditImage","onRemoveImage","handleRemoveImage","onFinalinfo","finalinfo","chatusers","selecteduser","messages","onSelect","selectUser","onNoSelect","noSelectUser","onMessage","onChatCredentials","chatCredentials","onFilter_provider","handleFilterProvider","onOtherUser","otherUser","isSpinner","_component_MDBRow","_component_MDBCol","md","confirmedBookingsByProvider","length","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_Fragment","_renderList","item","_createBlock","_component_bookingInfo","key","handleRemoveComplitedBookingPanel","recipientBookings","index","confirmedBookingsByClient","some","ccb","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","date","isChat","size","contactToProvider","bookingWaitingProBackBtn","selectedIndex","_component_live_chat","onNoSelected","_hoisted_15","handleRecipientResult","newBooking","Boolean","Array","recipientTest","data","userId","bookings","currentRoom","d","clientConfirmedBookings","providerMatchingRequirements","providersAvailable","providersBusy","setup","isAvailable","ref","liveChat","bookingInfo","recipientResult","MDBContainer","MDBRow","MDBCol","async","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","providerService","getProvider","handleRecipientBookings","$router","push","nd","Date","console","log","content","recipientService","getOwnBookings","room","username","socket","emit","filter","cb","image","professional","temp","getTime","getProvidersMatchingByProfession","result","pro","getDistanceMatrix","service","Promise","resolve","reject","response","start","end","originLat","latitude","originLng","longitude","forEach","destinationLat","destinationLng","getDistance","origin","google","maps","LatLng","final","DistanceMatrixService","origins","destinations","travelMode","distance","rows","elements","value","toFixed","duration","text","then","res","sort","a","b","rating","positive","handleFilterAvailability","handleFilterByFeedback","timeoffer","time","providerFit","providerMatchingForClient","y","yearFrom","m","monthFrom","dayFrom","hour","hoursFrom","min","minutesFrom","yearTo","monthTo","dayTo","hoursTo","minutesTo","concat","provId","navbarChatUser","prov","openMap","params","compareTime","removeConfirmationNotification","description","_id","blob","imageID","splice","back","updateRecipient","removeBooking"],"sourceRoot":""}