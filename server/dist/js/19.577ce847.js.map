{"version":3,"file":"js/19.577ce847.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/notifications/errorMessage.js","webpack://prore-mongo/./src/pages/Profile.vue","webpack://prore-mongo/./src/components/EditProfile.vue","webpack://prore-mongo/./src/components/EditProfile.vue?c1b4","webpack://prore-mongo/./src/pages/Profile.vue?5f2d"],"sourcesContent":["const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage","<template>\n\n  <MDBContainer style=\"margin-top: 70px;\">\n    <div v-if=\"!pro && client.length === 0\" class=\"spinner-border\" role=\"status\">\n      <span class=\"visually-hidden\">Loading...</span>\n    </div>\n    <div v-else>\n      <MDBRow>\n        <file-error\n            :message = fileSizeError\n        />\n        <file-error\n            :message = fileTypeError\n        />\n        <MDBCol lg=\"4\">\n\n          <MDBCol lg=\"6\">\n\n            <MDBRow>\n\n              <MDBCol v-if=\"avatar\">\n\n                <img\n\n                    :src=\"showImage ? showImage : require(`/server/uploads/avatar/${avatar}`)\"\n                    alt=\"profile_img_blob\"\n                    style=\"width: 100px; height: 100px; border: 1px solid darkgrey; border-radius: 50px; margin-bottom: 20px;\"\n                />\n              </MDBCol>\n\n              <MDBCol v-else  style=\"border: solid red;\">\n                <div>\n\n                </div>\n\n\n                <MDBIcon  size=\"5x\" style=\"padding: 20px 0; width: 100px;\" >\n                  <i class=\"fas fa-user\"></i>\n                </MDBIcon>\n\n              </MDBCol>\n\n\n              <MDBCol   >\n                <MDBBtnClose\n                    v-if=\"isEditProfileImage || isAddProfileImage\"\n                    style=\"float: right;\"\n                    @click=\"isAddProfileImage = isEditProfileImage = false\"\n                />\n                <h4\n                    class=\"profile_image\"\n                    v-if=\"isPressedEditProfile && !isAddProfileImage && (avatar === 'avatar.png')\"\n                    @click=\"addProfileImage\"\n                >\n                  Lisää profiili kuva\n                </h4>\n                <div v-else-if=\"isPressedEditProfile && !isEditProfileImage && avatar !== 'avatar.png'\">\n                  <h4\n                      class=\"profile_image\"\n\n                      @click=\"editProfileImage\"\n                  >\n                    Muokkaa profiili kuva\n                  </h4>\n                  <form @submit.prevent=\"removeProfileImage\">\n                    <MDBBtn\n\n                        block\n                        color = \"danger\"\n                        type=\"submit\"\n                    >\n                      Poista profiilin kuva\n                    </MDBBtn>\n                  </form>\n\n                </div>\n\n\n                <label v-if=\"isEditProfileImage || isAddProfileImage\" for=\"file-upload\" class=\"custom-file-upload\">\n                    <span v-if=\"value\">\n                    Muokkaa kuva: {{value.name}}\n\n                     </span>\n                  <span v-else>Valitse uusi kuva tehtävästä</span>\n                </label>\n\n                <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>\n\n\n                <div v-if=\"!isPressedEditProfile\">\n                  <div style=\"float: right; padding: 10px; width: 100%;\">\n\n\n                    <div v-if=\"!pro && client.length === 0\" class=\"spinner-border\" role=\"status\">\n                      <span class=\"visually-hidden\">Loading...</span>\n                    </div>\n\n                    <div v-else>\n                      <h3 v-if=\"pro\">TMI {{ pro.yritys }}</h3>\n                      <h3 v-if=\"client\">Sinulla on varauksia ({{client.length}})</h3>\n                    </div>\n\n                  </div>\n                </div>\n\n              </MDBCol>\n            </MDBRow>\n\n          </MDBCol>\n\n        </MDBCol>\n        <MDBCol lg=\"8\">\n          <MDBTable v-if=\"!isPressedEditProfile\" borderless style=\"font-size: 14px; text-align: left;\">\n            <tbody>\n            <tr>\n              <td>\n                Etunimi:\n              </td>\n              <td>\n                {{userData.firstName}}\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Sukunimi:\n              </td>\n              <td>\n                {{loggedInUser.lastName}}\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Käyttäjätunnus:\n              </td>\n              <td>\n                {{loggedInUser.username}}\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Osoite:\n              </td>\n              <td>\n                {{userData.address}}\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Sähköposti\n              </td>\n              <td>\n                <!--              <div style=\"word-wrap: break-word;\">this_is_a_long_email@some_domain.net</div>-->\n                test.test@test.ee\n              </td>\n            </tr>\n            <tr>\n              <td colspan=\"2\">\n                <MDBBtn block size=\"lg\" color=\"success\" @click=\"pressedEditProfile\">Muokkaa tiotosi</MDBBtn>\n              </td>\n            </tr>\n            </tbody>\n          </MDBTable>\n\n          <edit-profile\n              v-else\n              :loggedInUser = loggedInUser\n              :userData=\" userData\"\n              @goBackFromEditProfile = handleCloseEditProfile\n              @profile:data = handleSaveProfile\n              @saveProfileImg = handleSaveProfileImage\n          />\n\n\n        </MDBCol>\n      </MDBRow>\n    </div>\n\n  </MDBContainer>\n  <div>\n    <MDBContainer>\n\n      <MDBBtn outline=\"danger\" block size=\"lg\" @click=\"$router.go(-1)\">Poistu sivulta</MDBBtn>\n    </MDBContainer>\n  </div>\n\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  MDBContainer,\n  MDBTable,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBIcon,\n  MDBBtnClose\n  //MDBInput\n}from \"mdb-vue-ui-kit\";\nimport editProfile from \"../components/EditProfile\";\nimport providerService from \"@/service/providers\";\nimport recipientService from \"@/service/recipients\";\nimport imageService from \"@/service/image\"\nimport userService from \"@/service/users\"\nimport fileError from \"@/components/notifications/errorMessage\"\nimport socket from \"@/socket\"\nexport default {\n  name: \"user-profile\",\n  props: {\n    loggedInUser: Object,\n    provider: Object,\n    recipient: Array\n  },\n  components: {\n    editProfile,\n    fileError,\n    MDBContainer,\n    MDBTable,\n    MDBBtn,\n    MDBRow,\n    MDBCol,\n    MDBIcon,\n    MDBBtnClose\n    //MDBInput\n  },\n  data () {\n    return {\n      userData: {},\n      isPressedEditProfile: false,\n      isAddProfileImage: false,\n      isEditProfileImage: false,\n      isEditData: false,\n      pro: null,\n      client: [],\n      mail: \"\",\n      address:\"\",\n      osoite:null,\n      lat: null,\n      long: null,\n      showImage: null,\n      value: null,\n      file: null,\n      isProfileImageSelected: false,\n      isUploaded: false,\n      user_profile_image: [],\n      avatar: \"avatar.png\",\n      image_id: null,\n      fileSizeError: null,\n      fileTypeError: null\n    }\n  },\n  mounted () {\n    this.getUserData();\n\n  },\n  methods: {\n    // Get user\n    async getUserData () {\n      const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n      if (!loggedUserJSON) {\n        this.$router.push('/');\n      } else {\n        this.user = JSON.parse(loggedUserJSON)\n\n        const pro = await providerService.getProvider(this.user.id)\n        const client = await recipientService.getOwnBookings(this.user.id);\n\n        if (pro) {\n          this.avatar = pro.user.avatar.name\n          this.pro = pro\n          this.userData = {\n            firstName: this.user.firstName,\n            address: pro.address\n          }\n        }\n        if (client.length > 0) {\n          if (client[0].user.avatar)\n            this.avatar = client[0].user.avatar.name;\n          this.client = client\n          //console.log(\"Client avatar: \" + client[0].user.avatar.name)\n\n          this.userData = {\n            firstName: this.user.firstName,\n            address: client[0].address\n          }\n        }\n\n\n      }\n\n\n\n\n      // let address = \"\"\n      // if (this.pro) {\n      //   //this.getPro(this.provider);\n      //   address = this.pro.address;\n      //\n      // } else if (this.client) {\n      //   address = this.client[0].address;\n      // }\n\n\n      // if (this.pro) {\n      //   this.avatar = this.pro.user.avatar.name;\n      // }\n      // if (this.client.length > 0 && this.client[0].user.avatar) {\n      //   this.avatar = this.client[0].user.avatar.name\n      // }\n\n    },\n    async getUserPro () {\n      const provider = await providerService.getProvider(this.user.id)\n      //const client = await recipientService.getOwnBookings(this.user.id);\n\n      if (provider) {\n        console.log(\"User pro username \" + provider.user.username)\n        this.pro = provider\n        this.userData = {\n          firstName: this.loggedInUser.firstName,\n          address: this.pro.address\n        }\n      }\n\n\n    },\n    async getUserRecipient () {\n      const client = await recipientService.getOwnBookings(this.user.id);\n      if (client && client.length > 0) {\n        this.client = client\n        this.userData = {\n          firstName: this.user.firstName,\n          address: client[0].address\n        }\n      }\n    },\n    pressedEditProfile () {\n      this.isPressedEditProfile = true;\n    },\n    handleSaveProfileData () {\n\n    },\n    // getPro (pro) {\n    //   if (pro.yritys) {\n    //     this.pro = pro;\n    //   } else {\n    //     this.pro = null;\n    //   }\n    //   // setTimeout(() => {\n    //   //   if (pro.yritys) {\n    //   //     this.pro = pro;\n    //   //   } else {\n    //   //     this.pro = null;\n    //   //   }\n    //   // }, 2000)\n    // },\n\n    async validateUploadErrors (data, status) {\n      if (this.file.size > 1048576) { // 10 MB\n        this.fileSizeError = \"Kuvan koko on oltava pienempi kun 10 MB!\"\n        setTimeout(() => {\n          this.fileSizeError = null;\n        }, 3000)\n        this.showImage = null;\n        this.isAddProfileImage = false;\n        this.isEditProfileImage = false;\n\n        if (this.file.type !== \"image/jpeg\" || this.file.type !== \"image/png\" || this.image.type !== \"image/jpg\" || this.image.type !== \"image/gif\") {\n          this.fileTypeError = \"Pitäisi käyttää kuvan formaatti (jpeg, jpg, png, gif)!\"\n          setTimeout(() => {\n            this.fileTypeError = null;\n          }, 3000)\n          this.showImage = null;\n          this.isAddProfileImage = false;\n          this.isEditProfileImage = false;\n\n\n        }\n      } else {\n        if (status === \"add\") {\n          this.$emit(\"updateAvatar\", this.showImage); // to app, for navbar avatar adding\n          await imageService.createProfileImage(this.user.id, data);\n\n\n        } else {\n          this.$emit(\"updateAvatar\", this.showImage); // to app, for navbar avatar update\n          await imageService.newAvatar(this.user.id, data);\n\n\n        }\n        this.isPressedEditProfile = false;\n\n      }\n\n    },\n    async handleSaveProfile (newAddress) {\n      console.log(\"Is new address?? \" + newAddress.latitude)\n      // Edit address if address is choosen, otherwice do nothing\n      if (newAddress.latitude !== null) {\n        if (this.pro) { // If client is provider\n          await providerService.editAddress(this.pro.id, newAddress);\n          this.userData.address = newAddress.address;\n        }\n        if (this.client.length > 0) { // If client is recipient\n          for (let booking in this.client) {\n            const bookingID = this.client[booking].id;\n            await recipientService.editBookingAddress(bookingID, newAddress);\n            this.userData.address = newAddress.address;\n          }\n        }\n\n      }\n      const data = new FormData();\n      if (this.value !== null) {\n        if (this.isAddProfileImage) {\n          console.log(\"Saving image\");\n\n\n          data.append('file', this.file, this.file.name)\n\n          await this.validateUploadErrors(data, \"add\");\n          //this.$router.go(-1);\n          //await imageService.createProfileImage(this.loggedInUser.id, data);\n\n\n          // this.isEditProfileImage = false;\n          // this.isAddProfileImage = false;\n\n        } else if (this.isEditProfileImage) {\n          console.log(\"Editing image here\")\n          data.append('file', this.file, this.file.name);\n          await this.validateUploadErrors(data, \"edit\");\n          this.$router.go(-1);\n\n          // this.isPressedEditProfile = false;\n          // this.isAddProfileImage = false;\n          // this.isEditProfileImage = false;\n        }\n\n      }\n      //this.isPressedEditProfile = false;\n\n\n    },\n    saveEditedName () {\n      this.userData.firstName = this.name;\n      this.isEditName = false;\n    },\n    handleCloseEditProfile () {\n      this.isPressedEditProfile = false;\n      this.isAddProfileImage = false;\n      this.isEditProfileImage = false;\n    },\n    handleFileChange(e) {\n      //this.$emit('input', e.target.client[0])\n\n      try {\n\n        const files = e.target.files[0]\n        console.log('event target client ', e.target.files[0])\n        if (files) {\n          //const tempImage = URL.createObjectURL(files)\n          //this.tempImages.push(tempImage);\n          this.showImage = URL.createObjectURL(files)\n          this.avatar = URL.createObjectURL(files)\n          this.file = e.target.files[0];\n\n          console.log(\"Image type: \" +  this.file.type)\n          console.log(\"Image size: \" + typeof this.file.size)\n        }\n\n      } catch (err) {\n        console.log('Error:', err)\n      }\n\n      this.value = e.target.files[0]\n      if (e.target.files[0]) {\n        this.isProfileImageSelected = true;\n      } else {\n        this.isProfileImageSelected = false;\n      }\n    },\n    addProfileImage () {\n      this.isAddProfileImage = true;\n    },\n    editProfileImage () {\n      this.isEditProfileImage = true;\n    },\n    async removeProfileImage () {\n      //this.avatar = null;\n      this.avatar = \"avatar.png\"\n      this.showImage = null;\n      this.$emit(\"removeAvatar\")\n      await userService.removeAvatar(this.user.id);\n      this.isEditProfileImage = false;\n      this.isPressedEditProfile = false;\n      // if (this.avatar) {\n      //   // Removing avatar will take place in User router\n      //   await userService.removeAvatar(this.loggedInUser.id);\n      // }\n\n    },\n    async handleSaveProfileImage () {\n      //this.isUploaded = true;\n      this.isPressedEditProfile = false;\n      this.isAddProfileImage = false;\n      this.isEditProfileImage = false;\n    }\n\n\n  }\n}\n</script>\n\n<style scoped>\n.profile_image {\n  width: 160px;\n  text-align: center;\n  color: blue;\n  margin-top: 50px;\n  cursor:pointer;\n}\nimg.loading {\n  width: 100px;\n  height: 100px;\n  background: transparent url(https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif) no-repeat scroll center center;\n}\ninput[type=\"file\"] {\n  display: none;\n}\n.custom-file-upload {\n  width: 200px;\n\n  color: white;\n  background-color: #87958e;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 10px 12px;\n  margin-bottom: 10px;\n  cursor: pointer;\n}\n.error {\n  color: white;\n  background: #f5839c;\n  font-size: 20px;\n  border: solid #f75959;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n</style>","<template>\n  <MDBBtnClose\n      style=\"float: right; cursor: pointer;\"\n      @click=\"closeEditProfile\"\n  />\n  <MDBContainer>\n    <MDBTable  borderless style=\"font-size: 14px; text-align: left;\">\n      <tbody>\n      <tr>\n        <td>\n          Etunimi:\n        </td>\n        <td>\n          {{loggedInUser.firstName}}\n        </td>\n      </tr>\n      <tr>\n        <td>\n          Sukunimi:\n        </td>\n        <td>\n          {{loggedInUser.lastName}}\n        </td>\n      </tr>\n      <tr>\n        <td>\n          Käyttäjätunnus:\n        </td>\n        <td>\n          {{loggedInUser.username}}\n        </td>\n      </tr>\n      <tr>\n        <td>\n          Osoite\n        </td>\n        <td>\n          <p style=\"color:blue;\">{{userData.address}}</p>\n          <MDBInput id=\"address\" label=\"Anna uusi osoitteesi\" v-model=\"newAddress\" />\n        </td>\n      </tr>\n      <tr>\n        <td>\n          Sähköposti\n        </td>\n        <td>\n          <MDBInput label=\"mail\" v-model=\"mail\" />\n        </td>\n      </tr>\n      <tr>\n        <td colspan=\"2\">\n          <MDBBtn block size=\"lg\" color=\"success\" @click=\"saveProfileData\">Tallenna tiedot</MDBBtn>\n        </td>\n      </tr>\n      </tbody>\n    </MDBTable>\n  </MDBContainer>\n</template>\n\n<script>\n/*global google*/\nimport {\n  MDBContainer,\n  MDBInput,\n  MDBBtn,\n  MDBBtnClose,\n  MDBTable\n} from 'mdb-vue-ui-kit'\nexport default {\n  name: \"EditProfile\",\n  props: {\n    loggedInUser:Object,\n    userData: Object\n  },\n  components: {\n    MDBContainer,\n    MDBInput,\n    MDBBtnClose,\n    MDBBtn,\n    MDBTable\n  },\n  data () {\n    return {\n      lat: null,\n      long: null,\n      address: null,\n      mail: \"\",\n      newAddress: \"\"\n    }\n  },\n  mounted() {\n    const center = { lat: 50.064192, lng: -130.605469 };\n    // Create a bounding box with sides ~10km away from the center point\n    const defaultBounds = {\n      north: center.lat + 0.1,\n      south: center.lat - 0.1,\n      east: center.lng + 0.1,\n      west: center.lng - 0.1,\n    };\n    const input = document.getElementById(\"address\");\n    const options = {\n      bounds: defaultBounds,\n      componentRestrictions: { country: \"fi\" },\n      fields: [\"address_components\", \"geometry\", \"icon\", \"name\", \"formatted_address\"],\n      strictBounds: false,\n      //types: [\"establishment\"],\n    };\n    const autocomplete = new google.maps.places.Autocomplete(input, options);\n\n    autocomplete.addListener(\"place_changed\", () => {\n      let place = autocomplete.getPlace()\n      this.lat = place.geometry.location.lat()\n      this.long = place.geometry.location.lng()\n\n      this.address = place.formatted_address\n      console.log(place)\n    })\n  },\n  methods: {\n    closeEditProfile () {\n      this.$emit(\"goBackFromEditProfile\")\n    },\n    saveProfileData () {\n      const addressData = {\n        latitude: this.lat,\n        longitude: this.long,\n        address: this.address\n      }\n      this.$emit(\"profile:data\", addressData);\n      this.$emit(\"saveProfileImg\");\n    },\n\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./EditProfile.vue?vue&type=template&id=a9133d74\"\nimport script from \"./EditProfile.vue?vue&type=script&lang=js\"\nexport * from \"./EditProfile.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Profile.vue?vue&type=template&id=174fee5b&scoped=true\"\nimport script from \"./Profile.vue?vue&type=script&lang=js\"\nexport * from \"./Profile.vue?vue&type=script&lang=js\"\n\nimport \"./Profile.vue?vue&type=style&index=0&id=174fee5b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-174fee5b\"]])\n\nexport default __exports__"],"names":["ErrorMessage","message","_createVNode","class","role","_createElementVNode","_hoisted_2","for","style","_hoisted_15","colspan","_component_MDBContainer","$data","pro","client","length","_createElementBlock","_hoisted_4","_component_MDBRow","_component_file_error","fileSizeError","fileTypeError","_component_MDBCol","lg","avatar","_createBlock","key","src","showImage","require","alt","_hoisted_6","_component_MDBIcon","size","_hoisted_7","isEditProfileImage","isAddProfileImage","_component_MDBBtnClose","onClick","_cache","$event","isPressedEditProfile","args","$options","addProfileImage","_hoisted_8","editProfileImage","onSubmit","_withModifiers","removeProfileImage","_component_MDBBtn","block","color","type","_hoisted_9","value","_hoisted_10","_toDisplayString","name","_hoisted_11","id","onChange","handleFileChange","_hoisted_12","_hoisted_13","_hoisted_17","_hoisted_18","yritys","_hoisted_19","_hoisted_14","_hoisted_16","_component_edit_profile","loggedInUser","$props","userData","onGoBackFromEditProfile","handleCloseEditProfile","handleSaveProfile","onSaveProfileImg","handleSaveProfileImage","_component_MDBTable","borderless","_hoisted_20","firstName","_hoisted_21","lastName","_hoisted_22","username","_hoisted_23","address","_hoisted_24","_hoisted_25","pressedEditProfile","_hoisted_1","_hoisted_3","outline","_ctx","$router","go","closeEditProfile","_hoisted_5","_component_MDBInput","label","newAddress","mail","saveProfileData","props","Object","components","MDBContainer","MDBInput","MDBBtnClose","MDBBtn","MDBTable","data","lat","long","mounted","center","lng","defaultBounds","north","south","east","west","input","document","getElementById","options","bounds","componentRestrictions","country","fields","strictBounds","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","this","geometry","location","formatted_address","console","log","methods","$emit","addressData","latitude","longitude","__exports__","provider","recipient","Array","editProfile","fileError","MDBRow","MDBCol","MDBIcon","isEditData","osoite","file","isProfileImageSelected","isUploaded","user_profile_image","image_id","getUserData","async","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","providerService","getProvider","recipientService","getOwnBookings","push","handleSaveProfileData","status","setTimeout","image","imageService","createProfileImage","newAvatar","editAddress","booking","bookingID","editBookingAddress","FormData","append","validateUploadErrors","saveEditedName","isEditName","e","files","target","URL","createObjectURL","err","userService","removeAvatar","render"],"sourceRoot":""}