{"version":3,"file":"js/407.8b1afd37.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/RatingStars.vue","webpack://prore-mongo/./src/components/RatingStars.vue?d511","webpack://prore-mongo/./src/pages/RecipientPublic.vue","webpack://prore-mongo/./node_modules/@capacitor/synapse/dist/synapse.mjs","webpack://prore-mongo/../../src/index.ts","webpack://prore-mongo/./src/pages/RecipientPublic.vue?a5fc","webpack://prore-mongo/./src/components/FeedbackList.vue","webpack://prore-mongo/./src/components/FeedbackList.vue?832c","webpack://prore-mongo/./src/components/controllers/datetime.js"],"sourcesContent":["<template>\r\n  <MDBContainer>\r\n    <div >\r\n      <span\r\n          v-for=\"(star, index) in stars\"\r\n          :key=\"index\"\r\n          class=\"starGap\"\r\n          :class=\"['star', { full: star === 'full', half: star === 'half' }]\"\r\n      >\r\n        <span v-if=\"star === 'full'\" class=\"full-star\">★</span>\r\n        <span v-else-if=\"star === 'half'\" class=\"half-star  \">★</span>\r\n        <span v-else class=\"star\">★</span>\r\n\r\n\r\n      </span>\r\n    </div>\r\n  </MDBContainer>\r\n</template>\r\n\r\n<script>\r\nimport { MDBContainer } from 'mdb-vue-ui-kit';\r\nexport default {\r\n  name: \"RatingStars\",\r\n  props: {\r\n    rating: Number\r\n  },\r\n  components: {\r\n    MDBContainer\r\n  },\r\n  data () {\r\n    return {\r\n      // rating: 1.2\r\n    }\r\n  },\r\n  computed: {\r\n    stars() {\r\n      let starsArray = [];\r\n      let fullStars = Math.floor(this.rating);\r\n      let hasHalfStar = this.rating % 1 >= 0.1;\r\n\r\n      for (let i = 0; i < fullStars; i++) {\r\n        starsArray.push(\"full\");\r\n      }\r\n      if (hasHalfStar) {\r\n        starsArray.push(\"half\");\r\n      }\r\n      while (starsArray.length < 5) {\r\n        starsArray.push(\"empty\");\r\n      }\r\n\r\n      return starsArray;\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.full-star {\r\n  font-size: 37px;\r\n  color: yellow;\r\n\r\n}\r\n.half-star {\r\n  font-size: 37px;\r\n  background: linear-gradient(to right, yellow 50%, darkgrey 50%);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  display: inline-block;\r\n}\r\n.star {\r\n  font-size: 37px;\r\n  color: darkgrey;\r\n  display: inline-block;\r\n}\r\n.starGap {\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n}\r\n\r\n@media (max-width: 530px) {\r\n  .full-star {\r\n    font-size: 24px;\r\n    color: yellow;\r\n    display: inline-block;\r\n  }\r\n  .half-star {\r\n    font-size: 24px;\r\n    background: linear-gradient(to right, yellow 50%, darkgrey 50%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    display: inline-block;\r\n  }\r\n  .star {\r\n    font-size: 24px;\r\n    color: darkgrey;\r\n    display: inline-block;\r\n  }\r\n  .starGap {\r\n    display: inline-block;\r\n    margin-right: 7px;\r\n  }\r\n}\r\n@media(max-width: 440px) {\r\n  .starGap {\r\n    display: inline-block;\r\n    margin-right: 3px;\r\n  }\r\n}\r\n@media(max-width: 330px) {\r\n  .full-star {\r\n    font-size: 17px;\r\n    color: yellow;\r\n    display: inline-block;\r\n  }\r\n  .half-star {\r\n    font-size: 17px;\r\n    background: linear-gradient(to right, yellow 50%, darkgrey 50%);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    display: inline-block;\r\n  }\r\n  .star {\r\n    font-size: 17px;\r\n    color: darkgrey;\r\n    display: inline-block;\r\n  }\r\n}\r\n\r\n\r\n\r\n/*.stars {*/\r\n/*  text-align: center;*/\r\n/*  display: flex;*/\r\n/*  gap: 10px;*/\r\n/*}*/\r\n\r\n\r\n.stars {\r\n  font-size: 40px;\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n</style>","import { render } from \"./RatingStars.vue?vue&type=template&id=7c73cb5d&scoped=true\"\nimport script from \"./RatingStars.vue?vue&type=script&lang=js\"\nexport * from \"./RatingStars.vue?vue&type=script&lang=js\"\n\nimport \"./RatingStars.vue?vue&type=style&index=0&id=7c73cb5d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7c73cb5d\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <MDBContainer\r\n        style=\"position: relative; z-index: 1;\r\n        /*width: 80%;*/\r\n        margin-top: 80px;\r\n        opacity: 0.8;\r\n        \"\r\n    >\r\n\r\n<!--      <MDBBtn color=\"danger\" @click=\"puhasta\">Puhasta kaardi andmed</MDBBtn>-->\r\n      <div >\r\n        <div :class=\"{hideMainPanel: !isMainPanel}\" class=\"client-map-panel\">\r\n          <div style=\"display: flex; justify-content: right;\">\r\n            <MDBIcon size=\"lg\" style=\"padding: 10px;\" @click=\"closeMainPanel\">\r\n              <i class=\"fas fa-expand-arrows-alt\"></i>\r\n            </MDBIcon>\r\n            <div>\r\n              <MDBBtnClose\r\n                  white\r\n                  style=\" padding: 10px;\"\r\n                  size=\"lg\"\r\n                  @click=\"$router.go(-1)\"\r\n              />\r\n            </div>\r\n\r\n          </div>\r\n          <p v-if=\"!isNoAddressGiven\" style=\"color: red;\">Anna osoittesi!</p>\r\n\r\n          <div id=\"address-panel\">\r\n\r\n            <MDBInput\r\n                white\r\n                inputGroup\r\n                label=\"Anna toinen osoitteesi kun ei täsmää\"\r\n                v-model=\"address\"\r\n                id=\"autocomplete\"\r\n                size=\"lg\"\r\n                wrapperClass=\"mb-4\"\r\n            >\r\n              <MDBBtnClose v-if=\"address\" white style=\"float: right; margin-right: 7px; margin-top: 5px;\" @click=\"clearOrderAddress\"/>\r\n            </MDBInput>\r\n\r\n          </div>\r\n\r\n          <div style=\" margin-bottom: 20px;\" >\r\n            <Dropdown  @change=\"changedProfession\"   v-model=\"prof\" :options=\"prodata\"   filter optionLabel=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\" placeholder=\"Valitse ammattilainen\" class=\"w-full md:w-100rem\">\r\n\r\n              <template value=\"slotProps\" >\r\n                <div v-if=\"slotProps.value\" >\r\n                  <!--              <img :alt=\"slotProps.value.label\" src=\"https://primefaces.org/cdn/primevue/images/flag/flag_placeholder.png\" :class=\"`mr-2 flag flag-${slotProps.value.code.toLowerCase()}`\" style=\"width: 18px\" />-->\r\n                  <div >{{ slotProps.value.label }}</div>\r\n                </div>\r\n                <span v-else>\r\n              {{ slotProps.placeholder }}\r\n            </span>\r\n              </template>\r\n              <template  #optiongroup=\"slotProps\"  >\r\n                <div style=\"\" class=\"flex align-items-center\">\r\n                  <!--              <img :alt=\"slotProps.option.label\" src=\"https://primefaces.org/cdn/primevue/images/flag/flag_placeholder.png\" :class=\"`mr-2 flag flag-${slotProps.option.code.toLowerCase()}`\" style=\"width: 18px\" />-->\r\n                  <div >{{ slotProps.option.label }}</div>\r\n                </div>\r\n              </template>\r\n            </Dropdown>\r\n          </div>\r\n\r\n          <div  :class=\"{hideDistSelectPanel: !isDistSelection}\">\r\n            <p style=\"text-align: left;\">Valitse kiinnostavaa ajankohta tai heti!</p>\r\n            <div class=\"distSelectPanel\">\r\n\r\n\r\n              <VueDatePicker\r\n                  style=\"margin-bottom: 20px; width: 70%; padding: 7px;\"\r\n                  v-model=\"bookingDate\"\r\n                  dark\r\n                  :min-date=\"new Date()\"\r\n                  teleport-center\r\n                  @internal-model-change=\"handleInternalDate\"\r\n                  @update:model-value=\"handleDate\"\r\n                  :state=\"isNoDate ? false : null\"\r\n              >\r\n\r\n              </VueDatePicker>\r\n              <div style=\"margin-top: 15px;\">\r\n                <MDBCheckbox\r\n\r\n                    white\r\n                    label=\"Heti!\"\r\n                    name=\"selection\"\r\n                    v-model=\"isSelectNotNow\"\r\n                    value=\"true\"\r\n                    @click=\"removeDateIfExist\"\r\n                    wrapperClass=\"mb-4\"\r\n                />\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n          <div  :class=\"{hideDistSelectPanel: !isDistSelection}\" style=\" margin-bottom: 13px;\">\r\n            <select style=\"padding: 12px; width: 100%; margin-bottom: 25px; background-color: dimgrey; color: white;\" id=\"distance\" v-model=\"distBtw\" @click=\"filterByDistance\">\r\n              <option disabled value=\"0\">Valitse etäisyys</option>\r\n              <option value=\"1\">1 km ympärilläsi</option>\r\n              <option value=\"2\">2 km ympärilläsi</option>\r\n              <option value=\"3\">3 km ympärilläsi</option>\r\n              <option value=\"4\">4 km ympärilläsi</option>\r\n              <option value=\"5\">5 km ympärilläsi</option>\r\n              <option value=\"6\">6 km ympärilläsi</option>\r\n              <option value=\"7\">7 km ympärilläsi</option>\r\n              <option value=\"8\">8 km ympärilläsi</option>\r\n              <option value=\"9\">9 km ympärilläsi</option>\r\n              <option value=\"10\">10 km ympärilläsi</option>\r\n              <option value=\"20\">20 km ympärilläsi</option>\r\n              <option value=\"30\">30 km ympärilläsi</option>\r\n              <option value=\"40\">40 km ympärilläsi</option>\r\n              <option value=\"50\">50 km ympärilläsi</option>\r\n              <option value=\"60\">60 km ympärilläsi</option>\r\n              <option value=\"70\">70 km ympärilläsi</option>\r\n              <option value=\"80\">80 km ympärilläsi</option>\r\n              <option value=\"90\">90 km ympärilläsi</option>\r\n              <option value=\"100\">100 km ympärilläsi</option>\r\n              <option value=\"200\">200 km ympärilläsi</option>\r\n              <option value=\"300\">300 km ympärilläsi</option>\r\n            </select>\r\n            <MDBBtn\r\n                v-if=\"bookingDate || isSelectNotNow\"\r\n                color=\"success\"\r\n                @click=\"findSuitablePro\"\r\n            >\r\n              Etsi ammatilainen\r\n            </MDBBtn>\r\n\r\n          </div>\r\n\r\n          <p\r\n              v-if=\"prof && isPressedFindBtn\"\r\n              :class=\"{noClients: isActiveProffs}\"\r\n              style=\"color: palevioletred;\"\r\n          >\r\n            Ei ammattilaisia vielä!\r\n          </p>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div v-if=\"isMapChat\" style=\"background-color: white; margin: auto; padding: 10px; width: 350px;  border: solid darkgrey\">\r\n        <p style=\"float: right; color: limegreen;\" @click=\"closeMapChat\">Valmis</p>\r\n        <chat-panel\r\n\r\n            :chatusers = chatusers\r\n            :messages =messages\r\n            :selecteduser = selecteduser\r\n            @select:user = selectUser\r\n            @noSelected = noSelectUser\r\n            @on:message = onMessage\r\n        />\r\n      </div>\r\n\r\n      <div class=\"map-info-table\" v-else-if=\"isTargetSelected && !isMapChat\" style=\"background-color: white; color: darkslategrey; padding: 10px; width: 90%; margin: auto;  border: solid darkgrey\">\r\n        <div style=\"display: flex; justify-content: right;\">\r\n          <p style=\" font-size: 15px; padding: 10px; color: green;\" @click=\"outFromMarkerPanel\">Valmis</p>\r\n        </div>\r\n\r\n        <MDBRow>\r\n          <MDBCol lg=\"4\">\r\n            <div style=\"background-color: dimgrey; border-radius: 10px; padding: 13px; margin-bottom: 13px;\">\r\n              <div style=\"color: #ddd; font-size: 11px; display: flex; justify-content: right; padding: 7px 0;\">\r\n               {{ target.rating.positive.length > 0 ? target.rating.positive / target.rating.count : 0 }} tähteä &nbsp;\r\n                ( {{ target.rating.count }} antajaa )\r\n              </div>\r\n<!--              proAvatar: this.provider.user.avatar.isImage === true ? this.provider.user.avatar.imageUrl : null,-->\r\n<!--              <img style=\"width: 100px;\" :src=\"require(`@/assets/avatar/avatar.png`)\" alt=\"pro-image\"/>-->\r\n              <img style=\"width: 100px;\"\r\n                   :src=\"target.user.avatar.isImage === true ? target.user.avatar.imageUrl : require(`@/assets/avatar/avatar.png`)\" alt=\"pro-image\"/>\r\n              <rating-stars :rating = \"(target.rating.positive / target.rating.count)\" />\r\n            </div>\r\n\r\n\r\n          </MDBCol>\r\n          <MDBCol>\r\n            <p style=\"margin-bottom: 13px;\">{{target.description}}</p>\r\n          </MDBCol>\r\n        </MDBRow>\r\n\r\n        <MDBTable responsive borderless style=\"font-size: 14px; width: 100%; text-align: left;\">\r\n          <tbody>\r\n          <tr>\r\n            <td>\r\n              Yritys:\r\n            </td>\r\n            <td>\r\n              {{ this.target.yritys }}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              Y - tunnus:\r\n            </td>\r\n            <td>\r\n              {{this.target.ytunnus}}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              Työalue:\r\n            </td>\r\n            <td>\r\n              {{this.target.range ? this.target.range + \" km\" : \"Palvelun tarjous vain paikalla!\"}}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              Palvelun hinta:\r\n            </td>\r\n            <td>\r\n              {{this.target.priceByHour ? this.target.priceByHour + \" Euroa / tunti\": \"Urakkahinta sovittaessa!\"}}\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"this.target.feedback.length > 0\">\r\n            <td :class=\"{hideFeedbackTitle: isShowRatingResults}\">\r\n              Palaute\r\n            </td>\r\n            <td v-if=\"!isShowRatingResults\">\r\n              <MDBBtn block color=\"info\" @click=\"isShowRatingResults = true\">Katso arvostelut &nbsp;( {{ target.feedback.length }} )</MDBBtn>\r\n            </td>\r\n            <td v-else colspan=\"2\">\r\n              <feedback-list\r\n                  style=\"color: #ddd\"\r\n                  :feedback = this.target.feedback\r\n                  @closeFeedbackList = handleCloseMapFeedbackList\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"this.target.pro_link\">\r\n            <td>\r\n              Kotisivu\r\n            </td>\r\n            <td>\r\n              <a :href=\"'//' + this.target.pro_link\" target=\"_blank\">\r\n                Palveluntarjoajan kotisivu\r\n              </a>\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"target.user.id !== userId\">\r\n<!--            v-if=\"isCreatingChatPanel\"-->\r\n            <td colspan=\"2\">\r\n              <MDBBtn  style=\"float: right;\" color=\"warning\" size=\"lg\" @click=\"createChatPanel\">\r\n                &nbsp;&nbsp;&nbsp;<i class=\"far fa-comments\"></i>\r\n              </MDBBtn>\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"target.user.id !== userId && !isOrder\">\r\n            <td colspan=\"2\">\r\n              <MDBBtn  block color=\"success\" size=\"lg\" @click=\"createBooking\">Tee tilaus</MDBBtn>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </MDBTable>\r\n\r\n      </div>\r\n\r\n\r\n<!--      Make order panel-->\r\n\r\n      <div v-if=\"isOrder\" class=\"order\">\r\n<!--        <p style=\"color: green; display: flex; justify-content: right; padding: 20px;\" @click=\"isOrder = false\">Valmis</p>-->\r\n        <div style=\"display: flex; justify-content: right; padding: 20px;\">\r\n          <MDBBtnClose\r\n            white\r\n            size=\"lg\"\r\n            @click=\"isOrder = false\"\r\n          />\r\n        </div>\r\n<!--        @submit.prevent=\"confirmOrder\"-->\r\n        <form >\r\n          <p style=\"color: #00a6ff; text-align: left;\">Address: {{address}}</p>\r\n          order label {{ isNoOrderLabelAdded }}\r\n          <p v-if=\"isNoOrderLabelAdded\" style=\"color: palevioletred; \">Anna otsikko, pakollinen kenttä!</p>\r\n          <MDBInput\r\n              white\r\n              label=\"Anna otsiko\"\r\n              v-model=\"orderHeader\"\r\n              wrapperClass=\"mb-4\"\r\n          />\r\n\r\n\r\n<!--          orderDate-->\r\n          <p style=\"text-align: left;\">Missä ajalla haluaisit ammattilaista?</p>\r\n          <p v-if=\"isNoOrderDateAdded\" style=\"color:palevioletred;\">Anna päivämäärä ja aika, pakollinen kenttä!</p>\r\n          <div style=\"color: #fff;\">\r\n            <VueDatePicker\r\n                style=\"margin-bottom: 20px;\"\r\n                v-model=\"bookingDate\"\r\n                dark\r\n                :min-date=\"new Date()\"\r\n                teleport-center\r\n                @internal-model-change=\"handleInternalDate\"\r\n                :state=\"isNoDate ? false : null\"\r\n            >\r\n\r\n            </VueDatePicker>\r\n            <p v-if=\"isNoOrderDescriptionAdded\" style=\"color: palevioletred;\">Anna kuvaus tehtävästä, pakollinen kenttä!</p>\r\n            <MDBTextarea\r\n                maxlength=\"70\"\r\n                label=\"Tehtävän kuvaus...\"\r\n                white\r\n                rows=\"2\"\r\n\r\n                v-model=\"orderDescription\"\r\n                invalidFeedback=\"Ole hyvä ja kirjoita tehtävän kuvaus.\"\r\n                validFeedback=\"Ok!\"\r\n                wrapperClass=\"mb-4\"\r\n            />\r\n            <span class=\"message-counter\">{{ orderDescription.length }} / 70</span>\r\n          </div>\r\n<!--          <MDBBtn block type=\"submit\" :disabled=\"isOrderBtnDisabled\" color=\"success\">Tilaa</MDBBtn>-->\r\n        </form>\r\n        <MDBBtn block :disabled=\"isOrderBtnClicked\" color=\"success\" @click=\"confirmOrder\">Tilaa</MDBBtn>\r\n\r\n      </div>\r\n\r\n\r\n\r\n<!--      <p style=\"color: red;\">selecteduser {{selecteduser}}</p>-->\r\n\r\n      <div v-if=\"!isTargetSelected\">\r\n        <div v-if=!isMainPanel >\r\n          <img :src=\"require(`@/assets/left_back.png`)\" alt=\"back\" style=\"float: right; padding: 10px;\" @click=\"returnToMainPanel\"/>\r\n\r\n<!--          <MDBIcon size=\"2x\" style=\"float: right; padding: 10px;\" @click=\"returnToMainPanel\">-->\r\n<!--            <i class=\"fas fa-expand-arrows-alt\"></i>-->\r\n<!--          </MDBIcon>-->\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n<!--      style=\"background-color:white; width: 40%; float: right;\"-->\r\n      <div v-if=\"!isMainPanel && countOfSelectedProfessional > 0 && !isTargetSelected\" style=\"background-color:white; width: 300px; margin: auto;\">\r\n        <div v-if=\"bookingDate\">\r\n          <p  style=\"color: blue; font-size: 14px; text-align: left; padding: 15px\">\r\n            Valittu aika: {{bookingDate.getDate() + \" / \" + (bookingDate.getMonth() + 1) + \" klo \" +  bookingDate.getHours() + \":\" + (bookingDate.getMinutes().length < 2 ? \"0\" + bookingDate.getMinutes() : bookingDate.getMinutes())}}\r\n          </p>\r\n          <p style=\"color: darkgreen; font-size: 17px; font-weight: bold; text-align: left; padding-left: 15px;\">Vihreä merkki - saatavilla </p>\r\n          <p style=\"color: darkorange; font-size: 17px ; font-weight: bold; text-align: left; padding-left: 15px;\">Oranssi merkki - sovitaessa </p>\r\n        </div>\r\n\r\n        <p style=\"color: #9fa6b2; font-size: 14px; text-align: left; padding: 15px; \">\r\n          Napsauta merkkiä nähdäksesi palveluntarjoajan!\r\n        </p>\r\n\r\n      </div>\r\n\r\n\r\n    </MDBContainer>\r\n\r\n    <div id=\"map\"></div>\r\n\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\n/*global google*/\r\nimport axios from 'axios'\r\nimport recipientService from '../service/recipients'\r\nimport providerService from '../service/providers'\r\nimport dt from '../components/controllers/datetime'\r\nimport {\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBBtnClose,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBIcon,\r\n  MDBBadge,\r\n  MDBTextarea,\r\n  MDBTable,\r\n  MDBCheckbox\r\n} from \"mdb-vue-ui-kit\";\r\nimport {loadGoogleMaps}  from '@/components/utils/loadGoogleMaps'\r\nimport distance from '../components/controllers/distance'\r\nimport gMap from '../components/location'\r\nimport proData from '@/components/profession/proList'\r\nimport chatPanel from '@/pages/LiveChat'\r\nimport VueDatePicker from '@vuepic/vue-datepicker';\r\nimport feedbackList from \"@/components/FeedbackList\";\r\nimport Dropdown from 'primevue/dropdown';\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { Geolocation } from '@capacitor/geolocation';\r\n\r\nimport '@/css/pro.css'\r\n//import {Client} from \"@googlemaps/google-maps-services-js\";\r\nimport  { onMounted, ref } from \"vue\";\r\nimport socket from \"@/socket\";\r\nimport RatingStars from \"@/components/RatingStars\";\r\nexport default {\r\n  name: \"recipient-public\",\r\n  props: {\r\n    userIsProvider: Object,\r\n    selecteduser: null,\r\n    chatusers: Array,\r\n    messages: Array,\r\n    isProviderLoggedIn: Boolean\r\n  },\r\n  components: {\r\n    RatingStars,\r\n    chatPanel,\r\n    MDBContainer,\r\n    MDBInput,\r\n    MDBBtn,\r\n    MDBBtnClose,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBIcon,\r\n    MDBBadge,\r\n    MDBTextarea,\r\n    MDBTable,\r\n    MDBCheckbox,\r\n    feedbackList,\r\n    Dropdown,\r\n    VueDatePicker\r\n  },\r\n  data () {\r\n\r\n    return {\r\n      isMapReady: false,\r\n      obj: null,\r\n      stateActive: false,\r\n      datetime: dt,\r\n      isOrder: false,\r\n      target: {}, // Selected provider from map\r\n      isTargetSelected: false,\r\n      isMainPanel: true,\r\n      isCreatingChatPanel: false,\r\n      prof: null,\r\n      username: null,\r\n      userId: null,\r\n      providerId: null,\r\n      address: null,\r\n      isNoAddressGiven: true,\r\n      myLat: null,\r\n      mylng: null,\r\n      countOfSelectedProfessional: 0,\r\n      isActiveProffs: false,\r\n      isDistSelection: false,\r\n      professional: \"Automaalari\",\r\n      currentProfession: \"\",\r\n      distBtw: 0,\r\n      prodata: proData,\r\n      room: null,\r\n      isShowRatingResults: false,\r\n      isChatPanel: true,\r\n      isMapChat: false,\r\n      providers: [],\r\n\r\n      selectedProPosition: null,\r\n      bookingDate: null,\r\n      isSelectNotNow: false,\r\n      isPressedFindBtn: false,\r\n      orderDate: null,\r\n      orderHeader: \"\",\r\n      orderDescription: \"\",\r\n      isCompleteOrder: false,\r\n      isOrderBtnClicked: false\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    isNoOrderLabelAdded () {\r\n      return this.orderHeader === \"\" && this.isCompleteOrder;\r\n    },\r\n    isNoOrderDateAdded () {\r\n      return this.bookingDate === null && this.isCompleteOrder;\r\n    },\r\n    isNoOrderDescriptionAdded () {\r\n      return this.orderDescription === \"\" && this.isCompleteOrder;\r\n    }\r\n  },\r\n\r\n  async mounted () {\r\n    //await loadGoogleMaps();\r\n\r\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      this.username = user.username;\r\n      this.userId = user.id\r\n      //console.log(\"User token: \" + this.loggedUser.token)\r\n    }\r\n\r\n    if (Capacitor.isNativePlatform()) {\r\n      this.getCurrentLocation();\r\n    }\r\n\r\n    this.resizeMap();\r\n\r\n    this.userCurrentLocation();\r\n\r\n    const selectDistance = document.getElementById\r\n    (\"distance\");\r\n\r\n    selectDistance.addEventListener(\"change\", (event) => {\r\n      this.distBtw = parseFloat(event.target.value);\r\n      this.stateActive = true;\r\n      const data = {\r\n        profession: this.currentProfession,\r\n        distance: parseFloat(event.target.value)\r\n      }\r\n\r\n      //window.localStorage.setItem('mapSearchData', JSON.stringify(data));\r\n\r\n      //console.log(\"+++++++++++ \" + this.countOfSelectedProfessional > 0)\r\n\r\n      //this.showClientLocationOnTheMap(this.currentProfession, this.distBtw);\r\n\r\n    })\r\n\r\n    //this.setUserPlace (\"address-autocomplete\");\r\n\r\n    const input = document.getElementById(\"autocomplete\");\r\n\r\n    const center = { lat: 50.064192, lng: -130.605469 };\r\n    const defaultBounds = {\r\n      north: center.lat + 0.1,\r\n      south: center.lat - 0.1,\r\n      east: center.lng + 0.1,\r\n      west: center.lng - 0.1,\r\n    };\r\n    const options = {\r\n      bounds: defaultBounds,\r\n      componentRestrictions: { country: \"fi\" },\r\n      fields: [\"address_components\", \"geometry\", \"icon\", \"name\", \"formatted_address\"],\r\n      strictBounds: false,\r\n      //types: [\"establishment\"],\r\n    };\r\n    const autocomplete = new google.maps.places.Autocomplete(input, options)\r\n    //const autocomplete = client.places.Autocomplete(input, options);\r\n\r\n    autocomplete.addListener(\"place_changed\", () => {\r\n      let place = autocomplete.getPlace()\r\n      this.myLat = place.geometry.location.lat();\r\n      this.myLng = place.geometry.location.lng();\r\n\r\n      this.getAddressFrom(place.geometry.location.lat(), place.geometry.location.lng())\r\n      this.address = place.formatted_address;\r\n      console.log(\"Address xxxx \" + place.formatted_address)\r\n      console.log(\"place-----------\" + this.myLat)\r\n    });\r\n\r\n  },\r\n  methods: {\r\n    async getCurrentLocation() {\r\n\r\n      // for iOS: In ios/App/Info.plist, add:\r\n      // <key>NSLocationWhenInUseUsageDescription</key>\r\n      // <string>Your location is used for...</string>\r\n      // <key>NSLocationAlwaysUsageDescription</key>\r\n      // <string>Your location is used for...</string>\r\n      try {\r\n        const mockLocation = {\r\n          coords: {\r\n            latitude: 60.2767265,\r\n            longitude: 24.8575089\r\n          }\r\n          // coords: {\r\n          //   latitude: 60.1699,\r\n          //   longitude: 24.9384\r\n          // }\r\n        };\r\n        console.log('Mocked location:', mockLocation.latitude);\r\n        // Request geolocation permission\r\n        const permission = await Geolocation.requestPermissions();\r\n\r\n        if (permission.location === 'granted') {\r\n          // Get current position\r\n          const position = await Geolocation.getCurrentPosition({\r\n            timeout: 20000, // 20 seconds\r\n            enableHighAccuracy: true\r\n          });\r\n          console.log('Latitude:', position.coords.latitude);\r\n          console.log('Longitude:', position.coords.longitude);\r\n        } else {\r\n          console.log('Location permission denied');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error getting location', error);\r\n      }\r\n    },\r\n    async watchLocation() {\r\n      const wait = await Geolocation.watchPosition({}, (position, error) => {\r\n        if (error) {\r\n          console.error('Error watching location', error);\r\n          return;\r\n        }\r\n        console.log('Latitude:', position.coords.latitude);\r\n        console.log('Longitude:', position.coords.longitude);\r\n      });\r\n\r\n      // To stop watching the location\r\n      // Geolocation.clearWatch({ id: wait });\r\n    },\r\n    loadGoogleMapsScript() {\r\n      return new Promise((resolve) => {\r\n        if (window.google && window.google.maps && google.maps.geometry) {\r\n          resolve();\r\n        } else {\r\n          window.initMap = () => resolve();\r\n          const script = document.createElement(\"script\");\r\n          script.src =\r\n              `https://maps.googleapis.com/maps/api/js?key=${process.env.VUE_APP_MAP_KEY}&libraries=places,geometry&v=beta&callback=initMap`\r\n          script.async = true;\r\n          script.defer = true;\r\n          document.head.appendChild(script);\r\n        }\r\n      });\r\n      },\r\n    setUserPlace (currentId) {\r\n      const input = document.getElementById(currentId);\r\n\r\n\r\n      const center = { lat: 50.064192, lng: -130.605469 };\r\n      const defaultBounds = {\r\n        north: center.lat + 0.1,\r\n        south: center.lat - 0.1,\r\n        east: center.lng + 0.1,\r\n        west: center.lng - 0.1,\r\n      };\r\n      const options = {\r\n        bounds: defaultBounds,\r\n        componentRestrictions: { country: \"fi\" },\r\n        fields: [\"address_components\", \"geometry\", \"icon\", \"name\", \"formatted_address\"],\r\n        strictBounds: false,\r\n        //types: [\"establishment\"],\r\n      };\r\n\r\n      const autocomplete = client.places.Autocomplete(input, options);\r\n\r\n      autocomplete.addListener(\"place_changed\", () => {\r\n        let place = autocomplete.getPlace()\r\n        this.myLat = place.geometry.location.lat();\r\n        this.myLng = place.geometry.location.lng();\r\n        this.isNoAddressGiven = true;\r\n        this.getAddressFrom(place.geometry.location.lat(), place.geometry.location.lng())\r\n        this.address = place.formatted_address;\r\n        // console.log(\"Address xxxx \" + place.formatted_address)\r\n        // console.log(\"place-----------\" + this.myLat)\r\n      });\r\n    },\r\n    clearOrderAddress () {\r\n      this.address = null;\r\n    },\r\n\r\n    handleCloseMapFeedbackList () {\r\n      this.isShowRatingResults = false;\r\n    },\r\n    puhasta () {\r\n      console.log(\"Puhastatud\")\r\n      //window.localStorage.removeItem('mapSearchProData');\r\n    },\r\n    removeDateIfExist () {\r\n      console.log(\"Clicked, functioning\");\r\n      console.log(\"IS now`` \" + this.isSelectNotNow)\r\n      if (this.isSelectNotNow) {\r\n        this.bookingDate = null;\r\n      } else {\r\n        this.bookingDate = new Date();\r\n      }\r\n\r\n      // if (this.bookingDate && !this.isSelectNow) {\r\n      //   this.bookingDate = new Date();\r\n      // }\r\n    },\r\n    async handleDate (date) {\r\n      console.log(\"Date handled!\" + date);\r\n      if (date) {\r\n        this.isSelectNotNow = false;\r\n      }\r\n      if (this.stateActive) {\r\n        const providers = await providerService.getProviders()\r\n        if (providers !== null) {\r\n          //this.otherUserLocations(providers, this.currentProfession, this.distBtw);\r\n        }\r\n      }\r\n    },\r\n    // handleInternalDate () {\r\n    //   console.log(\"InternalDate!!!\")\r\n    // },\r\n    /*isNoDate () {\r\n      console.log(\"No date\")\r\n    },*/\r\n    changedProfession () {\r\n      console.log(\"Changed \" + this.prof.label);\r\n      this.showClientLocationOnTheMap(this.prof.label, this.distBtw);\r\n      this.currentProfession = this.prof.label;\r\n      this.isDistSelection = true;\r\n    },\r\n    selectUser(user) {\r\n      this.$emit('select:user', user);\r\n      //if (!user.self)\r\n      //this.selectedUser = user;\r\n    },\r\n\r\n    noSelectUser () {\r\n      this.$emit(\"noSelected\");\r\n    },\r\n    onMessage(content, blob, date) {\r\n\r\n      this.$emit(\"on:message\", content, blob, date);\r\n\r\n    },\r\n    resizeMap() {\r\n      var myMap = document.getElementById('map');\r\n      myMap.style.height = \"100%\";\r\n      myMap.style.width = \"100%\";\r\n    },\r\n    receive (){\r\n      this.$router.push('/rf')\r\n      //this.$router.push('recipient-form');\r\n\r\n    },\r\n    userCurrentLocation () {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          const { latitude, longitude } = position.coords;\r\n          // Show a map centered at latitude / longitude.\r\n          this.myLat = latitude\r\n          this.myLng = longitude\r\n          console.log(\"myLat \" + latitude)\r\n          this.showUserLocationOnTheMap (latitude, longitude)\r\n        });\r\n      }\r\n\r\n    },\r\n\r\n    pinSymbol(color, stroke_color) {\r\n      const priceTag = document.createElement(\"div\");\r\n\r\n      priceTag.className = \"price-tag\";\r\n      priceTag.textContent = \"$2.5M\";\r\n      return {\r\n        path: 'M 0,0 C -2,-20 -10,-22 -10,-30 A 10,10 0 1,1 10,-30 C 10,-22 2,-20 0,0 z',\r\n        fillColor: color,\r\n        fillOpacity: 1,\r\n        strokeColor: stroke_color,\r\n        strokeWeight: 2,\r\n        scale: 1,\r\n        labelOrigin: {\r\n          x: 60,\r\n          y: -25\r\n        }\r\n      };\r\n    },\r\n    // Kasutaja sihtkoht, otsitakse automaatselt\r\n    showUserLocationOnTheMap (latitude, longitude) {\r\n      //const client = new Client({});\r\n      try {\r\n        new google.maps.Map(document.getElementById(\"map\"), {\r\n          zoom: 13,\r\n          center: new google.maps.LatLng(latitude, longitude),\r\n          mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n          accuracy: 50,\r\n\r\n        });\r\n      } catch(err) {\r\n        console.log(\"Error to load map: \" + err.message);\r\n      }\r\n\r\n\r\n      // new google.maps.Marker({\r\n      //   position: new google.maps.LatLng(latitude, longitude),\r\n      //   accuracy: 50,\r\n      //   map: map,\r\n      //   icon: this.pinSymbol('yellow'),\r\n      //   label: { color: '#00aaff', fontWeight: 'bold', fontSize: '14px', text: 'Olen tällä' }\r\n      // })\r\n      this.getAddressFrom (latitude, longitude)\r\n    },\r\n    // Siis kui sisestada käsitsi aadress\r\n    getAddressFrom (lat, long) {\r\n      //const client = new Client({});\r\n      axios.get('https://maps.googleapis.com/maps/api/geocode/json?latlng=' + lat +\r\n          \",\" + long\r\n          + \"&key=\" + process.env.VUE_APP_MAP_KEY)\r\n          .then(response => {\r\n            if (response.data.error_message) {\r\n              this.error = response.data.error_message;\r\n\r\n              console.log(response.data.error_message)\r\n            } else {\r\n              const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n                zoom: 13,\r\n                center: new google.maps.LatLng(lat, long),\r\n                mapTypeId: google.maps.MapTypeId.ROADMAP\r\n              });\r\n\r\n              // AIzaSyBDA2EBoGezJx51wQtxoW3Ecq5Ql8CCAiE\r\n\r\n              this.address = response.data.results[1].formatted_address\r\n            }\r\n\r\n          })\r\n          .catch(error => {\r\n            this.error = error.message\r\n            console.log(error.message)\r\n          })\r\n    },\r\n\r\n    distanceBtw (originLat, originLng, destLat, destLng) {\r\n      // let distance = null;\r\n      //\r\n      // this.loadGoogleMapsScript().then(() => {\r\n      //\r\n      //   const origin = new google.maps.LatLng(originLat, originLng);\r\n      //   const destination = new google.maps.LatLng(destLat, destLng);\r\n      //\r\n      //   distance = (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 100).toFixed(2) ;\r\n      //   console.log(\"Distance (km):\", (distance / 1000).toFixed(2));\r\n      // });\r\n      // return distance;\r\n      var origin = new google.maps.LatLng(originLat, originLng);\r\n      var destination = new google.maps.LatLng(destLat, destLng);\r\n      return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\r\n    },\r\n\r\n    findSuitablePro () {\r\n      if (this.address) {\r\n        this.isPressedFindBtn = true;\r\n        this.showClientLocationOnTheMap(this.currentProfession, this.distBtw);\r\n      } else {\r\n        console.log(\"No address given!\");\r\n        this.isNoAddressGiven = false;\r\n      }\r\n\r\n    },\r\n\r\n    datetimeFitting (to) {\r\n      let date;\r\n\r\n      if (this.bookingDate) {\r\n        let year = this.bookingDate.getFullYear();\r\n        let month = this.bookingDate.getMonth();\r\n        let day = this.bookingDate.getDate();\r\n        let hour = this.bookingDate.getHours();\r\n        let minute = this.bookingDate.getMinutes();\r\n\r\n        console.log(\"Booking date 2 \" + new Date(year, month, day, hour, minute));\r\n        date = new Date(year, month, day, hour, minute);\r\n      }\r\n\r\n      return this.datetime.providerMatchingForClient(\r\n          date,\r\n          {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\r\n          {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\r\n      )\r\n    },\r\n\r\n    async otherUserLocations (providers, profession, dist) {\r\n      //const client = new Client({});\r\n      let prev_infowindow = false;\r\n\r\n      let map = new google.maps.Map(document.getElementById(\"map\"), {\r\n        zoom: 9,\r\n        center: new google.maps.LatLng(this.myLat, this.myLng),\r\n        mapTypeId: google.maps.MapTypeId.ROADMAP\r\n      });\r\n      console.log(\"Users count: \" + providers.length)\r\n      console.log(\"Current distance \" + dist)\r\n      let date;\r\n      if (this.bookingDate) {\r\n        let year = this.bookingDate.getFullYear();\r\n        let month = this.bookingDate.getMonth();\r\n        let day = this.bookingDate.getDate();\r\n        let hour = this.bookingDate.getHours();\r\n        let minute = this.bookingDate.getMinutes();\r\n\r\n        console.log(\"Booking date 2 \" + new Date(year, month, day, hour, minute));\r\n        date = new Date(year, month, day, hour, minute);\r\n      }\r\n\r\n       // new google.maps.Marker({\r\n       //   position: new google.maps.LatLng(this.myLat, this.myLng),\r\n       //   accuracy: 50,\r\n       //   map: map,\r\n       //   icon: this.pinSymbol('yellow'),\r\n       //   label: { color: '#00aaff', fontWeight: 'bold', fontSize: '14px', text: 'Olen tällä' }\r\n       // })\r\n      let count = 0;\r\n\r\n      if (providers.length > 0) {\r\n        this.target = {};\r\n\r\n        for (let pos = 0; pos < providers.length; pos++) {\r\n          console.log(\"------------ \" + providers[pos].yritys);\r\n          //console.log(\"Client latitude: \" + recipient[pos].latitude)\r\n          //console.log(\"Client longitude: \" + recipient[pos].longitude)\r\n          let myLatLong = [this.myLat, this.myLng];\r\n\r\n          providers[pos].profession.forEach(prof => {\r\n            if (prof === profession) {\r\n\r\n\r\n\r\n              //his.providers.push(providers[pos])\r\n              console.log(\"Pro \" + prof.yritys)\r\n              let providerLatLng = [providers[pos].latitude, providers[pos].longitude];\r\n              console.log(\"Distance btw \" + this.distanceBtw(this.myLat, this.myLng, providers[pos].latitude, providers[pos].longitude));\r\n\r\n              //distance.theDist()\r\n\r\n              //this.countOfSelectedClient++;\r\n              this.isActiveProffs = true;\r\n\r\n              if (this.distanceBtw(this.myLat, this.myLng, providers[pos].latitude, providers[pos].longitude) <= dist) {\r\n                count ++;\r\n\r\n                let marker;\r\n                // if (providers[pos].isAvailable24_7) {\r\n                //   console.log(\"Yes it is availblr\")\r\n                //   marker = new google.maps.Marker({\r\n                //     position: new google.maps.LatLng(providers[pos].latitude, providers[pos].longitude),\r\n                //     accuracy: 50,\r\n                //     map: map,\r\n                //     title: providers[pos].yritys,\r\n                //     icon: this.pinSymbol('green'),\r\n                //     label: { color: '#79f759',  fontWeight: 'bold', fontSize: '14px', text: \"Saatavilla!\"}\r\n                //   })\r\n                // }\r\n\r\n                // text: \"Saatavilla!\"\r\n                if (providers[pos].isAvailable24_7) {\r\n                  marker = new google.maps.Marker({\r\n                    position: new google.maps.LatLng(providers[pos].latitude, providers[pos].longitude),\r\n                    accuracy: 50,\r\n                    map: map,\r\n                    title: providers[pos].yritys,\r\n                    icon: this.pinSymbol('seagreen', 'darkgreen'),\r\n                    label: { color: 'green',  fontWeight: 'bold', fontSize: '14px', }\r\n                  })\r\n                } else {\r\n                  if (providers[pos].timeoffer.length > 0) {\r\n                    providers[pos].timeoffer.map(time => {\r\n                      console.log(\"Year: \" + time.yearFrom)\r\n                      console.log(\"Fitting datetime: \" +\r\n                          this.datetime.providerMatchingForClient(\r\n                              date,\r\n                              {y: time.yearFrom, m: time.monthFrom, d: time.dayFrom, hour: time.hoursFrom, min: time.minutesFrom},\r\n                              {y: time.yearTo, m: time.monthTo, d: time.dayTo, hour: time.hoursTo, min: time.minutesTo}\r\n                          )\r\n\r\n                      )\r\n\r\n\r\n                      if (this.datetime.providerMatchingForClient(\r\n                          date,\r\n                          {y: time.yearFrom, m: time.monthFrom, d: time.dayFrom, hour: time.hoursFrom, min: time.minutesFrom},\r\n                          {y: time.yearTo, m: time.monthTo, d: time.dayTo, hour: time.hoursTo, min: time.minutesTo}\r\n                      ) || providers[pos].isAvailable24_7) {\r\n\r\n                        marker = new google.maps.Marker({\r\n                          position: new google.maps.LatLng(providers[pos].latitude, providers[pos].longitude),\r\n                          accuracy: 50,\r\n                          map: map,\r\n                          title: providers[pos].yritys,\r\n                          icon: this.pinSymbol('seagreen', 'darkgreen'),\r\n                          //label: { color: '#79f759',  fontWeight: 'bold', fontSize: '14px', text: \"Saatavilla!\"}\r\n                        })\r\n                      } else {\r\n\r\n                        marker = new google.maps.Marker({\r\n                          position: new google.maps.LatLng(providers[pos].latitude, providers[pos].longitude),\r\n                          accuracy: 50,\r\n                          map: map,\r\n                          title: providers[pos].yritys,\r\n                          icon: this.pinSymbol('orange', 'darkorange'),\r\n                          //label: { color: '#f79859',  fontWeight: 'bold', fontSize: '14px', text: \"Sovitaessa!\"}\r\n                        })\r\n\r\n                      }\r\n                    })\r\n                  } else {\r\n                    marker = new google.maps.Marker({\r\n                      position: new google.maps.LatLng(providers[pos].latitude, providers[pos].longitude),\r\n                      accuracy: 50,\r\n                      map: map,\r\n                      title: providers[pos].yritys,\r\n                      icon: this.pinSymbol('orange', 'darkorange'),\r\n                      //label: { color: '#f79859',  fontWeight: 'bold', fontSize: '14px', text: \"Sovitaessa!\"}\r\n                    })\r\n                  }\r\n                }\r\n\r\n\r\n\r\n                window.myGlobalFunction = this.openMarker;\r\n\r\n                const content = \"class='map-info-window'\"\r\n\r\n                const infowindow = new google.maps.InfoWindow({\r\n                  //content: \"Hei hei!\"\r\n                  //content:'<p id=\"map-info-window\">Hello World!</p>'\r\n                  //content: \"TMI: \" + providers[pos].yritys\r\n                });\r\n\r\n                google.maps.event.addListener(marker, 'click', function() {\r\n                  //infowindow.setContent(content);\r\n\r\n\r\n                  console.log(\"POOOOS \" + pos)\r\n                  let p = pos\r\n\r\n                  if( prev_infowindow ) {\r\n                    prev_infowindow.close();\r\n                  }\r\n\r\n                  prev_infowindow = infowindow;\r\n\r\n\r\n                  infowindow.open(map,marker);\r\n\r\n                  //infowindow.setContent(\"<div  class='map-info-window'>\" + '<p style=\"color: green; \">'+providers[pos].yritys+'</p>' + '<p style=\"color: red; \" onclick=\"myGlobalFunction('+ p +' )\">Tiedot</p>' + \"</div>\")\r\n                  infowindow.setContent(\"<div  \" +\r\n                      \"class='map-info-window'>\" +\r\n                      '<p style=\"color: green; \">'+\r\n                      providers[pos].yritys+'</p>' +\r\n                      '<p style=\"color: red; \" ' +\r\n                      'onclick=\"myGlobalFunction('+ p +' )\"' +\r\n                      '>Tiedot' +\r\n                      '</p>' +\r\n                      \"</div>\")\r\n                });\r\n\r\n                console.log(\"Prev infowondow \" + prev_infowindow)\r\n\r\n              }\r\n\r\n            }\r\n          })\r\n\r\n        }\r\n\r\n\r\n        if (count > 0) {\r\n          this.isActiveProffs = true;\r\n          this.isMainPanel = false;\r\n\r\n        } else {\r\n          this.isActiveProffs = false;\r\n        }\r\n        this.countOfSelectedProfessional = count;\r\n        console.log(\"countxx \" + count)\r\n        this.identifyProfText();\r\n        //console.log(\"Count \" + this.countOfSelectedClients)\r\n\r\n      }\r\n\r\n    },\r\n\r\n    handleInitChat (isActive, bookingId, counter, isCounter) {\r\n      if (this.target.user.username !== this.username) {\r\n        const room = this.target.yritys + this.username;\r\n        //console.log(\"Username in map: \" + this.target.user.username);\r\n        //console.log(\"Room in map \" + this.room);\r\n\r\n        const createChatRoom = {\r\n          status: \"map\",\r\n          useCounter: isCounter,\r\n          isActive: isActive,\r\n          bookingID: bookingId,\r\n          same_room_counter: counter,\r\n          isOnline: true,\r\n          room: this.room,\r\n          pro: this.target.yritys,\r\n          username: this.username,\r\n          bookerUsername: this.username,\r\n          bookerID: this.userId,\r\n          providerUsername: this.target.user.username,\r\n          providerID: this.target.user.id\r\n        }\r\n        const chatCredentials = {\r\n          useCounter: isCounter,\r\n          isActive: isActive,\r\n          bookingID: bookingId,\r\n          same_room_counter: counter,\r\n          room: this.room,\r\n          proID: this.target.user.id,\r\n          pro: this.target.yritys,\r\n          // userID: this.target.user.id,\r\n          // username: this.target.user.username\r\n          userID: this.userId,\r\n          username:this.username\r\n        }\r\n        //this.$emit(\"chatCredentials\", chatCredentials);\r\n\r\n        this.$emit(\"initializeChat\", {\r\n          initChatRoom: createChatRoom,\r\n          chatData: chatCredentials\r\n        });\r\n\r\n      }\r\n    },\r\n\r\n    createChatPanel () {\r\n      // if (this.target.user.username !== this.username) {\r\n      //   const room = this.target.yritys + this.username;\r\n      //   console.log(\"Username in map: \" + this.target.user.username);\r\n      //   console.log(\"Room in map \" + this.room);\r\n      //   // Room users in server will be created\r\n      //   socket.emit(\"create room users\", {\r\n      //     room: this.room,\r\n      //     pro: this.target.yritys,\r\n      //     status: \"map\",\r\n      //     username: this.username,\r\n      //     providerUsername: this.target.user.username,\r\n      //     providerID: this.target.user.id\r\n      //   })\r\n      //   const chatCredentials = {\r\n      //     room: this.room,\r\n      //     userID: this.target.user.id,\r\n      //     username: this.target.user.username\r\n      //   }\r\n      //   this.$emit(\"chatCredentials\", chatCredentials);\r\n      // }\r\n      this.handleInitChat(false, \"0\", 0, true);\r\n      this.isMapChat = true\r\n    },\r\n\r\n    async openMarker (p) {\r\n      console.log(\"Booking date \" + new Date(this.bookingDate));\r\n      const d = this.bookingDate;\r\n\r\n\r\n      //this.noSelectUser();\r\n      //console.log(\"Profession \" + this.currentProfession);\r\n      console.log(\"Pro profession \" )\r\n      const pro = [this.currentProfession]\r\n      // if (this.target.user.username !== this.username) {\r\n      //   this.room = this.target.yritys + this.username;\r\n      // }\r\n\r\n\r\n      const providersMatchingProSearch = await providerService.getProvidersMatchingByProfession({result: pro});\r\n\r\n      let dataForward = [];\r\n\r\n      providersMatchingProSearch.forEach(pms => {\r\n\r\n        console.log(\"Results: \" + pms.user.id);\r\n        let distance = parseInt(this.distanceBtw(this.myLat, this.myLng, pms.latitude, pms.longitude)).toFixed(0)\r\n        console.log(\"Distance to display \" + distance);\r\n        dataForward = dataForward.concat({\r\n          id: pms.user.id,\r\n          dist: distance,\r\n          pro: this.currentProfession\r\n        })\r\n      })\r\n\r\n      socket.emit(\"map search report\", dataForward);\r\n\r\n      const providers = await providerService.getProviders()\r\n      if (providers) {\r\n        //console.log(\"watcher position \" + this.myLat + \" / \" + this.myLng);\r\n        if (providers[p].user.username !== this.username) {\r\n          this.isCreatingChatPanel = true\r\n        }\r\n\r\n        console.log(\"Room in client map: \" + this.room);\r\n\r\n        this.target = providers[p];\r\n        //window.localStorage.setItem('mapSearchProData', JSON.stringify(p));\r\n        if (this.username) {\r\n          this.room = this.target.yritys + this.username;\r\n        } else {\r\n          this.room = \"nipitiri\";\r\n        }\r\n        this.isTargetSelected = true;\r\n        //console.log(\"Pooooos ---- \" + p);\r\n        //this.otherUserLocations(providers, this.currentProfession, this.distBtw)\r\n      }\r\n\r\n    },\r\n    createBooking () {\r\n      console.log(\"Here you can make an order! \" + this.address)\r\n      if (this.isSelectNotNow) {\r\n        this.bookingDate = null;\r\n      }\r\n      this.isOrder = true;\r\n    },\r\n\r\n\r\n    async confirmOrder () {\r\n      //console.log(\"Order, target id \" + this.target.id);\r\n      if (this.isOrderBtnClicked) return;\r\n\r\n      this.isOrderBtnClicked = true;\r\n      this.isCompleteOrder = true;\r\n      let recipient = null;\r\n\r\n      if (this.orderHeader !== \"\" && this.bookingDate !== null && this.orderDescription !== \"\") {\r\n        if (this.bookingDate) {\r\n          let year = this.bookingDate.getFullYear();\r\n          let month = this.bookingDate.getMonth();\r\n          let day = this.bookingDate.getDate();\r\n          let hour = this.bookingDate.getHours();\r\n          let minute = this.bookingDate.getMinutes();\r\n          const dateForMs = new Date(year, month, day, hour, minute).getTime();\r\n\r\n          recipient = {\r\n            created: this.bookingDate,\r\n            created_ms: dateForMs,\r\n            header: this.orderHeader,\r\n            address: this.address,\r\n            latitude: this.myLat,\r\n            longitude: this.myLng,\r\n            professional: this.currentProfession,\r\n            isIncludeOffers: false,\r\n            year: this.bookingDate.getFullYear(),\r\n            month: this.bookingDate.getMonth(),\r\n            day: this.bookingDate.getDate(),\r\n            hours: this.bookingDate.getHours(),\r\n            minutes: this.bookingDate.getMinutes(),\r\n            description: this.orderDescription,\r\n            status: \"notSeen\",\r\n            ordered: this.target.id\r\n          }\r\n        }\r\n\r\n        console.log(\"Address: \" + this.address);\r\n        const booking = await recipientService.addRecipient(this.userId, recipient)\r\n\r\n\r\n        const proBooking = await recipientService.getBookingById(booking.id);\r\n        await recipientService.addProviderData(booking.id, this.target.id);\r\n        const bookingToProvider = await providerService.addProviderBooking(this.target.id, booking.id);\r\n        if (recipient && bookingToProvider === \"Recipient is added!\") {\r\n          console.log(\"Iiiiisss \" + (this.target.yritys + this.username))\r\n          const room = this.target.yritys + this.username;\r\n          const chatUserDataNavbar = {\r\n            status: \"\",\r\n            userID: this.target.user.id,\r\n            name: this.target.user.username,\r\n            room: room\r\n          };\r\n\r\n          const id = this.target.user.id;\r\n          await this.$emit('booking_map:update', booking)\r\n          await socket.emit(\"accept provider\", {\r\n            id,\r\n            booking: proBooking,\r\n          })\r\n\r\n          recipient = null;\r\n\r\n        } else {\r\n          console.log(\"There is error to load recipient!\")\r\n        }\r\n\r\n        this.$router.push('/received')\r\n      } else {\r\n        console.log(\"Not all requied credentials are setted!\")\r\n      }\r\n\r\n\r\n    },\r\n\r\n    async outFromMarkerPanel () {\r\n      this.isTargetSelected = false\r\n      //this.isMainPanel = true;\r\n      this.noSelectUser();\r\n      //window.localStorage.removeItem('mapSearchProData');\r\n      const providers = await providerService.getProviders()\r\n      if (providers !== null) {\r\n        this.otherUserLocations(providers, this.currentProfession, this.distBtw);\r\n      }\r\n    },\r\n\r\n    closeMapChat () {\r\n      this.isMapChat = false\r\n    },\r\n\r\n    async returnToMainPanel () {\r\n      this.isMainPanel = true;\r\n      this.bookingDate = null;\r\n      this.isSelectNotNow = false;\r\n      this.distBtw = 0;\r\n      await this.showClientLocationOnTheMap(this.currentProfession, this.distBtw);\r\n      this.isPressedFindBtn = false;\r\n\r\n      //window.localStorage.removeItem('mapSearchData')\r\n      this.noSelectUser();\r\n\r\n      // const providers = await providerService.getProviders()\r\n      // if (providers !== null) {\r\n      //   this.otherUserLocations(providers, \"\", \"\");\r\n      // }\r\n      //this.currentProfession = \"\"\r\n      // this.prof = \"\";\r\n      // this.distBtw = 0\r\n    },\r\n\r\n    closeMainPanel () {\r\n      this.isMainPanel = false;\r\n      this.noSelectUser();\r\n      console.log(\"Close main panel\")\r\n    },\r\n\r\n    // renderClients (event) {\r\n    //   console.log(\"Event value \" + event.target.value)\r\n    //   //this.countOfSelectedClients = 0;\r\n    //\r\n    //   if (event.target.value) {\r\n    //     // @click=\"renderClients($event)\"\r\n    //     this.showClientLocationOnTheMap(event.target.value)\r\n    //\r\n    //   }\r\n    //   this.prof = event.target.value\r\n    //\r\n    //   event.target.value = \"\"\r\n    //\r\n    // },\r\n\r\n\r\n    async showClientLocationOnTheMap (profession, dist) {\r\n\r\n      console.log(\"Current distance herexx  \" + dist)\r\n      const providers = await providerService.getProviders()\r\n      if (providers !== null) {\r\n        if (!window.google) {\r\n          this.otherUserLocations(providers, profession, dist);\r\n        } else {\r\n          this.otherUserLocations(providers, profession, dist);\r\n        }\r\n\r\n      }\r\n\r\n    },\r\n    identifyProfText () {\r\n      if (this.countOfSelectedProfessional > 1) {\r\n        this.professional = \"ammattilaista\"\r\n      } else {\r\n        this.professional = \"ammattilainen\"\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.custom-input input {\r\n  color: pink !important;\r\n  border: 2px solid red !important;\r\n}\r\n.ui.button,\r\n.dot.circle {\r\n  background-color: #ff5a5f;\r\n  color: white;\r\n}\r\n\r\n.distSelectPanel {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n\r\n\r\n.pac-icon {\r\n  display: none;\r\n}\r\n.pac-item {\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n.pac-item:hover {\r\n  background-color: #ececec;\r\n}\r\n.pac-item-query {\r\n  font-size: 16px;\r\n}\r\n.spinner-border {\r\n\r\n}\r\n\r\n.client-map-panel {\r\n  background-color: #2b2a2a;\r\n  padding: 10px;\r\n  margin: auto;\r\n  width: 30%;\r\n  float: right;\r\n}\r\n\r\n\r\n#map {\r\n  background:  url(/src/assets/map.gif)  no-repeat center center;\r\n\r\n}\r\n\r\n#map {\r\n   position: absolute;\r\n\r\n  /*height: 500px; !* The height is 400 pixels *!*/\r\n  /*width: 100%; !* The width is the width of the web page *!*/\r\n\r\n   top: 120px;\r\n   right: 0;\r\n   bottom: 20px;\r\n   left: 0;\r\n }\r\n\r\n.map-info-window {\r\n  /*width: 200px;*/\r\n\r\n}\r\n\r\n#address-panel {\r\n  margin-top: 10px;\r\n}\r\n\r\n@media only screen and (max-width: 500px) {\r\n  .hideFeedbackTitle {\r\n    display: none !important;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 1000px) {\r\n  #address-panel {\r\n    display: none !important;\r\n  }\r\n  .client-map-panel {\r\n    background-color: #2b2a2a;\r\n    padding: 10px;\r\n    margin: auto;\r\n    width: 80%;\r\n    float: none;\r\n  }\r\n}\r\n\r\n.activeClients {\r\n  display: none !important;\r\n}\r\n.noClients {\r\n  display: none !important;\r\n}\r\n.hideDistSelectPanel {\r\n  display: none !important;\r\n}\r\n.hideMainPanel {\r\n  display: none !important;\r\n}\r\nh3 {\r\n  padding: 10px;\r\n  color: #0095ff;\r\n}\r\n.minmax-icon {\r\n  padding: 12px;\r\n}\r\n\r\n.map-info-table  td {\r\n  border: 1px solid lightgrey;\r\n  padding: 5px;\r\n}\r\n\r\n.order{\r\n  color:#dddddd;\r\n\r\n  /*background-color:rgba(255, 0, 0, 0.5);*/\r\n  /*background-color:#221a16;*/\r\n  background-color: #434240;\r\n  /*opacity: 0.2  ;*/\r\n  /*height:300px;*/\r\n  width:90%;\r\n  margin: auto;\r\n  padding: 14px;\r\n  /*display:flex;*/\r\n  /*align-items:center;*/\r\n  /*justify-content:center;*/\r\n\r\n\r\n  /*top: 50vh; left: 50vw; transform: translate(-50%, -50%);*/\r\n  /*top: 50vh; left: 50vw; transform: translate(-50%, -50%);*/\r\n  position:relative;\r\n  /*bottom:5px;*/\r\n  /*right:5px;*/\r\n}\r\n\r\n</style>","function s(t) {\n  t.CapacitorUtils.Synapse = new Proxy(\n    {},\n    {\n      get(e, o) {\n        return new Proxy({}, {\n          get(w, r) {\n            return (c, p, n) => {\n              const i = t.Capacitor.Plugins[o];\n              if (i === void 0) {\n                n(new Error(`Capacitor plugin ${o} not found`));\n                return;\n              }\n              if (typeof i[r] != \"function\") {\n                n(new Error(`Method ${r} not found in Capacitor plugin ${o}`));\n                return;\n              }\n              (async () => {\n                try {\n                  const a = await i[r](c);\n                  p(a);\n                } catch (a) {\n                  n(a);\n                }\n              })();\n            };\n          }\n        });\n      }\n    }\n  );\n}\nfunction u(t) {\n  t.CapacitorUtils.Synapse = new Proxy(\n    {},\n    {\n      get(e, o) {\n        return t.cordova.plugins[o];\n      }\n    }\n  );\n}\nfunction y(t = !1) {\n  window.CapacitorUtils = window.CapacitorUtils || {}, window.Capacitor !== void 0 && !t ? s(window) : window.cordova !== void 0 && u(window);\n}\nexport {\n  y as exposeSynapse\n};\n","import { registerPlugin } from '@capacitor/core';\nimport { exposeSynapse } from '@capacitor/synapse';\n\nimport type { GeolocationPlugin } from './definitions';\n\nconst Geolocation = registerPlugin<GeolocationPlugin>('Geolocation', {\n  web: () => import('./web').then((m) => new m.GeolocationWeb()),\n});\n\nexposeSynapse();\n\nexport * from './definitions';\nexport { Geolocation };\n","import { render } from \"./RecipientPublic.vue?vue&type=template&id=1a2415ef\"\nimport script from \"./RecipientPublic.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPublic.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPublic.vue?vue&type=style&index=0&id=1a2415ef&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"pro-panel-feedback\" >\r\n    <p style=\"text-align: right; cursor: pointer; color: orangered;\" @click=\"$emit('closeFeedbackList')\">Poistu</p>\r\n    <div v-if=\"feedback.length > 0\">\r\n      <div style=\"text-align: left;\" v-for=\"fb in feedback\" :key=\"fb.id\">\r\n        <p style=\"margin-bottom: 10px;\">{{fb.neg ? fb.neg : fb.pos}}</p>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <p>Ei arvostelua vielä!</p>\r\n    </div>\r\n\r\n<!--    <p>{{feedback.length > 0 ? feedback.pos  : \"Ei arvostelua vielä!\"}}</p>-->\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"FeedbackList\",\r\n  props: {\r\n    feedback: Array\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./FeedbackList.vue?vue&type=template&id=33943349\"\nimport script from \"./FeedbackList.vue?vue&type=script&lang=js\"\nexport * from \"./FeedbackList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nconst compare = (rec, prov) => {\n    const receiverDate = new Date(rec.y, rec.m, rec.d, rec.hour, rec.min);\n    const providerDate = new Date(prov.y, prov.m, prov.d, prov.hour, prov.min)\n    return providerDate >= receiverDate;\n}\n\nconst providerMatchingForClient = (re, pFrom, pTo) => {\n    //const rDate = new Date(re.y, re.m, re.d, re.hour, re.min);\n    const pFromDate = new Date(pFrom.y, pFrom.m, pFrom.d, pFrom.hour, pFrom.min);\n    const pToDate = new Date(pTo.y, pTo.m, pTo.d, pTo.hour, pTo.min);\n    return re >= pFromDate && re < pToDate;\n}\nexport default { compare, providerMatchingForClient }"],"names":["key","class","_createBlock","_component_MDBContainer","default","_withCtx","_createElementVNode","_createElementBlock","_Fragment","_renderList","$options","stars","star","index","_normalizeClass","full","half","_hoisted_1","_hoisted_2","_hoisted_3","_","name","props","rating","Number","components","MDBContainer","data","computed","starsArray","fullStars","Math","floor","this","hasHalfStar","i","push","length","__exports__","render","style","id","value","colspan","_createVNode","hideMainPanel","$data","isMainPanel","_component_MDBIcon","size","onClick","closeMainPanel","_cache","_component_MDBBtnClose","white","$event","_ctx","$router","go","isNoAddressGiven","_createCommentVNode","_component_MDBInput","inputGroup","label","modelValue","address","wrapperClass","clearOrderAddress","_hoisted_4","_component_Dropdown","onChange","changedProfession","prof","options","prodata","filter","optionLabel","optionGroupLabel","optionGroupChildren","placeholder","optiongroup","slotProps","_hoisted_8","_toDisplayString","option","_hoisted_5","_hoisted_6","_hoisted_7","hideDistSelectPanel","isDistSelection","_hoisted_9","_component_VueDatePicker","bookingDate","handleDate","dark","Date","onInternalModelChange","handleInternalDate","state","isNoDate","_hoisted_10","_component_MDBCheckbox","isSelectNotNow","removeDateIfExist","distBtw","args","filterByDistance","disabled","_component_MDBBtn","color","findSuitablePro","_createTextVNode","isPressedFindBtn","noClients","isActiveProffs","isMapChat","_hoisted_11","closeMapChat","_component_chat_panel","chatusers","$props","messages","selecteduser","selectUser","onNoSelected","noSelectUser","onMessage","isTargetSelected","_hoisted_12","_hoisted_13","outFromMarkerPanel","_component_MDBRow","_component_MDBCol","lg","_hoisted_14","_hoisted_15","target","positive","count","src","user","avatar","isImage","imageUrl","require","alt","_hoisted_16","_component_rating_stars","_hoisted_17","description","_component_MDBTable","responsive","borderless","yritys","ytunnus","range","priceByHour","feedback","_hoisted_18","hideFeedbackTitle","isShowRatingResults","_hoisted_20","_component_feedback_list","onCloseFeedbackList","handleCloseMapFeedbackList","_hoisted_19","block","pro_link","_hoisted_21","href","_hoisted_22","userId","_hoisted_23","_hoisted_24","createChatPanel","isOrder","_hoisted_25","_hoisted_26","createBooking","_hoisted_27","_hoisted_28","_hoisted_29","isNoOrderLabelAdded","_hoisted_30","orderHeader","isNoOrderDateAdded","_hoisted_31","_hoisted_32","isNoOrderDescriptionAdded","_hoisted_33","_component_MDBTextarea","maxlength","rows","orderDescription","invalidFeedback","validFeedback","_hoisted_34","isOrderBtnClicked","confirmOrder","_hoisted_35","_hoisted_36","returnToMainPanel","_hoisted_37","countOfSelectedProfessional","_hoisted_38","_hoisted_39","_hoisted_40","getDate","getMonth","getHours","getMinutes","s","t","CapacitorUtils","Synapse","Proxy","get","e","o","w","r","c","p","n","Capacitor","Plugins","a","Error","u","cordova","plugins","y","window","Geolocation","registerPlugin","web","then","m","GeolocationWeb","exposeSynapse","userIsProvider","Object","Array","isProviderLoggedIn","Boolean","RatingStars","chatPanel","MDBInput","MDBBtn","MDBBtnClose","MDBRow","MDBCol","MDBIcon","MDBBadge","MDBTextarea","MDBTable","MDBCheckbox","feedbackList","Dropdown","VueDatePicker","isMapReady","obj","stateActive","datetime","dt","isCreatingChatPanel","username","providerId","myLat","mylng","professional","currentProfession","proData","room","isChatPanel","providers","selectedProPosition","orderDate","isCompleteOrder","mounted","loggedUserJSON","localStorage","getItem","JSON","parse","isNativePlatform","getCurrentLocation","resizeMap","userCurrentLocation","selectDistance","document","getElementById","addEventListener","event","parseFloat","input","center","lat","lng","defaultBounds","north","south","east","west","bounds","componentRestrictions","country","fields","strictBounds","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","geometry","location","myLng","getAddressFrom","formatted_address","console","log","methods","mockLocation","coords","latitude","longitude","permission","requestPermissions","position","getCurrentPosition","timeout","enableHighAccuracy","error","watchLocation","watchPosition","loadGoogleMapsScript","Promise","resolve","initMap","script","createElement","async","defer","head","appendChild","setUserPlace","currentId","client","puhasta","date","providerService","getProviders","showClientLocationOnTheMap","$emit","content","blob","myMap","height","width","receive","navigator","geolocation","showUserLocationOnTheMap","pinSymbol","stroke_color","priceTag","className","textContent","path","fillColor","fillOpacity","strokeColor","strokeWeight","scale","labelOrigin","x","Map","zoom","LatLng","mapTypeId","MapTypeId","ROADMAP","accuracy","err","message","long","axios","response","error_message","results","catch","distanceBtw","originLat","originLng","destLat","destLng","origin","destination","spherical","computeDistanceBetween","toFixed","datetimeFitting","to","year","getFullYear","month","day","hour","minute","providerMatchingForClient","yearFrom","monthFrom","d","dayFrom","hoursFrom","min","minutesFrom","yearTo","monthTo","dayTo","hoursTo","minutesTo","otherUserLocations","profession","dist","prev_infowindow","map","pos","forEach","marker","isAvailable24_7","Marker","title","icon","fontWeight","fontSize","timeoffer","time","myGlobalFunction","openMarker","infowindow","InfoWindow","close","open","setContent","identifyProfText","handleInitChat","isActive","bookingId","counter","isCounter","createChatRoom","status","useCounter","bookingID","same_room_counter","isOnline","pro","bookerUsername","bookerID","providerUsername","providerID","chatCredentials","proID","userID","initChatRoom","chatData","providersMatchingProSearch","getProvidersMatchingByProfession","result","dataForward","pms","distance","parseInt","concat","socket","emit","recipient","dateForMs","getTime","created","created_ms","header","isIncludeOffers","hours","minutes","ordered","booking","recipientService","addRecipient","proBooking","getBookingById","addProviderData","bookingToProvider","addProviderBooking","fb","neg","compare","rec","prov","receiverDate","providerDate","re","pFrom","pTo","pFromDate","pToDate"],"sourceRoot":""}