{"version":3,"file":"js/648.c2778f99.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/notifications/successMessage.js","webpack://prore-mongo/./src/pages/RecipientPanelFinal.vue","webpack://prore-mongo/./src/components/PositiveFeedback.vue","webpack://prore-mongo/./src/components/PositiveFeedback.vue?22e3","webpack://prore-mongo/./src/components/NegativeFeedback.vue","webpack://prore-mongo/./src/components/NegativeFeedback.vue?a06f","webpack://prore-mongo/./src/pages/RecipientPanelFinal.vue?5797","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue","webpack://prore-mongo/./src/components/controllers/datetime.js","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue?7f3a"],"sourcesContent":["const SuccessMessage = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"success\">\r\n            {message}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SuccessMessage","<template>\r\n  <div>\r\n    <!--\r\n    <MDBContainer style=\"margin-top: 30px;\">\r\n    -->\r\n    users {{chatusers}}\r\n      <h2>- {{ provider.yritys }} -</h2>\r\n\r\n      <MDBTable style=\"font-size: 18px; text-align: center;\">\r\n        <tbody>\r\n        <tr>\r\n\r\n          <td>\r\n            <MDBRow >\r\n              <MDBCol>\r\n\r\n                <MDBIcon style=\"padding: 10px; cursor: pointer;\" i class=\"far fa-thumbs-up\" size=\"2x\"\r\n                @click=\"getPositiveFeedback\"></MDBIcon>\r\n\r\n\r\n                <MDBBadge color=\"success\" class=\"translate-middle p-1\"\r\n                          pill\r\n                          notification>100</MDBBadge>\r\n\r\n                <PositiveFeedback\r\n                    v-if=\"isPositive\"\r\n                    @close:comments = closeComments\r\n                />\r\n\r\n              </MDBCol>\r\n              <MDBCol>\r\n\r\n                <MDBIcon\r\n                    style=\"padding: 10px; cursor: pointer;\" i\r\n                    class=\"far fa-thumbs-down\" size=\"2x\" @click=\"getNegativeFeedback\"></MDBIcon>\r\n\r\n\r\n                <MDBBadge color=\"danger\" class=\"translate-middle p-1\"\r\n                          pill\r\n                          size=\"lg\"\r\n                          notification>2</MDBBadge>\r\n\r\n                <NegativeFeedback\r\n                    v-if=\"isNegative\"\r\n                    @close:comments = closeComments\r\n                />\r\n\r\n              </MDBCol>\r\n            </MDBRow>\r\n\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </MDBTable>\r\n<!--    Chat users on line: {{roomUserCount}}-->\r\n<!--    <MDBBtn-->\r\n<!--        v-if=\"!isPressedOpenChat\"-->\r\n<!--        type=\"submit\"-->\r\n<!--        size=\"lg\"-->\r\n<!--        color=\"success\"-->\r\n<!--        @click=\"openChat\"-->\r\n<!--    >-->\r\n<!--      Ava chat-->\r\n<!--    </MDBBtn>-->\r\n\r\n<!--    !isPressedOpenChat-->\r\n\r\n\r\n\r\n<!--    <MDBBtn-->\r\n<!--        v-if=\"!isPressedOpenChat\"-->\r\n<!--        style=\"margin-bottom: 20px;\"-->\r\n<!--        type=\"submit\"-->\r\n<!--        size=\"lg\"-->\r\n<!--        color=\"success\"-->\r\n<!--        @click=\"openChat\"-->\r\n<!--    >-->\r\n<!--      Vaata rohkem infot-->\r\n<!--    </MDBBtn>-->\r\n\r\n<!--    <MDBBtn-->\r\n<!--        v-if=\"!isPressedContactToUser\"-->\r\n<!--        style=\"margin-bottom: 20px;\"-->\r\n<!--        type=\"submit\"-->\r\n<!--        size=\"lg\"-->\r\n<!--        color=\"success\"-->\r\n<!--        @click=\"contactToUser\"-->\r\n<!--    >-->\r\n<!--      Saada kasutajale sõnum-->\r\n<!--    </MDBBtn>-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--    <MDBBtn-->\r\n<!--        v-if=\"!isPressedContactToUser\"-->\r\n<!--        type=\"submit\"-->\r\n<!--        size=\"lg\"-->\r\n<!--        color=\"success\"-->\r\n<!--        @click=\"contactToUser\"-->\r\n<!--    >-->\r\n<!--      contact to user-->\r\n<!--    </MDBBtn>-->\r\n\r\n<!--    !isPressedContactToUser-->\r\n\r\n<!--    <user-dialog-->\r\n<!--        v-if=\"isChat\"-->\r\n<!--        :key=\"count\"-->\r\n<!--        :chatusers = chatusers-->\r\n<!--    />-->\r\n\r\n    <div v-for=\"user in chatusers\" :key=\"user.userID\">\r\n      <User\r\n          :user = user\r\n          :selected=\"selectedUser === user\"\r\n          @select=\"selectUser(user)\"\r\n      />\r\n    </div>\r\n\r\n\r\n\r\n    <MessagePanel\r\n        v-if=\"selectedUser\"\r\n        :user = selectedUser\r\n        @new:message=\"onMessage\"\r\n    />\r\n\r\n\r\n<!--    <form @submit.prevent=\"sendToApp\">-->\r\n<!--      <MDBBtn color=\"danger\" type=\"submit\">Info to App page</MDBBtn>-->\r\n<!--    </form>-->\r\n\r\n<!--    <form @submit.prevent=\"avajauuenda\">-->\r\n<!--      <MDBBtn-->\r\n\r\n<!--          type=\"submit\"-->\r\n<!--          size=\"lg\"-->\r\n<!--          color=\"success\"-->\r\n\r\n<!--      >-->\r\n<!--        uuenda ja ava-->\r\n<!--      </MDBBtn>-->\r\n<!--    </form>-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--    <liveChat-->\r\n\r\n<!--        style=\"margin-bottom: 20px;\"-->\r\n<!--        :un = booking[0].user.username-->\r\n<!--        :ri = room-->\r\n<!--        :key=\"count\"-->\r\n<!--        :room = room-->\r\n<!--        @test = test-->\r\n<!--    />-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--    <span v-if=\"!isChat\" @click=\"renderComponent\">Click to reload render-component</span>-->\r\n\r\n<!--    <MDBBtn v-if=\"!isChat\" size=\"lg\" color=\"success\" block @click=\"renderComponent\">-->\r\n<!--      Saada töö tegijale sõnum-->\r\n<!--    </MDBBtn>-->\r\n\r\n<!--    <MDBBtn color=\"info\" size=\"lg\" @click=\"makeDiil\">-->\r\n<!--      -&#45;&#45; Suhtle töö pakkujaga -&#45;&#45;-->\r\n<!--    </MDBBtn>-->\r\n    <MDBBtn outline=\"info\" block size=\"lg\" @click=\"handleOrder(provider.id)\">\r\n      Tilaa yritys\r\n    </MDBBtn>\r\n\r\n\r\n\r\n\r\n    <MDBBtn outline=\"secondary\" block size=\"lg\" @click=\"canselRecipientFinal\">\r\n      Poistu\r\n    </MDBBtn>\r\n    <!--\r\n    </MDBContainer>\r\n    -->\r\n<!--    BookingBB {{booking}}-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport {\r\n  MDBBtn,\r\n  //MDBContainer,\r\n  MDBTable,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBIcon, MDBBadge\r\n}from \"mdb-vue-ui-kit\";\r\nimport PositiveFeedback from \"@/components/PositiveFeedback\";\r\nimport NegativeFeedback from \"@/components/NegativeFeedback\"\r\n//import liveChat from '../pages/LiveChat'\r\n//import UserDialog from './LiveChat'\r\nimport socket from \"@/socket\";\r\nimport User from '../components/chatio/User'\r\nimport MessagePanel from '../components/chatio/MessagePanel.vue'\r\n//import DialogPanel from \"@/components/DialogPanel\";\r\n//import UserDialog from \"@/pages/UserDialog\";\r\n//import socket from \"@/socket\";\r\n//import socket from \"@/socket\";\r\n/*{{provider.timeoffer.map(to =>\r\n\r\ndatetime.providerMatchingForClient(\r\n    bookingTime,\r\n    {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\r\n    {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\r\n)\r\n)\r\n}}*/\r\nexport default {\r\n  name: \"recipient-final\",\r\n  props: {\r\n    chatusers: Array,\r\n    provider: Object,\r\n    room: String,\r\n    roomUserCount: Number,\r\n    available: String,\r\n    booking: Array\r\n  },\r\n  components: {\r\n    User,\r\n    MessagePanel,\r\n    //UserDialog,\r\n    //DialogPanel,\r\n    PositiveFeedback,\r\n    NegativeFeedback,\r\n    //liveChat,\r\n    MDBBtn,\r\n    //MDBContainer,\r\n    MDBTable,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBIcon,\r\n    MDBBadge\r\n  },\r\n  data() {\r\n    return {\r\n      selectedUser: null,\r\n      isPositive: false,\r\n      isNegative: false,\r\n\r\n      isChat: false,\r\n      isPressedOpenChat: false,\r\n      isPressedContactToUser: false,\r\n      isConnection: false,\r\n      isTwoUsers: false,\r\n\r\n      //room: \"\",\r\n\r\n      isPressedFinal: false,\r\n\r\n      //isRoom: false,\r\n      count: 0,\r\n      userCount: 0\r\n    }\r\n  },\r\n  mounted () {\r\n\r\n  },\r\n  methods: {\r\n    chatCredentials () {\r\n\r\n    },\r\n    sendToApp () {\r\n      console.log(\"Pressed\")\r\n      this.$emit(\"finalinfo\", \"Tere siit finaalist\")\r\n\r\n    },\r\n\r\n    selectUser(user) {\r\n      this.$emit(\"select\", user)\r\n      this.selectedUser = user;\r\n    },\r\n\r\n    onMessage(content, date) {\r\n\r\n      this.$emit(\"message\", content, date)\r\n\r\n      // if (this.selectedUser) {\r\n      //   console.log(\"Selected user: \" + this.selectedUser.username);\r\n      //   socket.emit(\"private message\", {\r\n      //     content,\r\n      //     date,\r\n      //     to: this.selectedUser.userID,\r\n      //   });\r\n      //   this.selectedUser.messages.push({\r\n      //     content,\r\n      //     date,\r\n      //     fromSelf: true,\r\n      //   });\r\n      // }\r\n    },\r\n\r\n\r\n\r\n\r\n    test (state) {\r\n      console.log(\"From chat: \" + state)\r\n    },\r\n\r\n    openChat () {\r\n      this.isChat = true;\r\n      this.count++;\r\n      // socket.on('get updated room users', (data) => {\r\n      //   console.log(\"Data users length \" + data.users.length)\r\n      //\r\n      //   if (data.users.length > 1) {\r\n      //\r\n      //     this.isTwoUsers = true;\r\n      //\r\n      //   }\r\n      // })\r\n\r\n      //this.isChat = true;\r\n\r\n      console.log(\"this room is \" + this.room)\r\n    },\r\n\r\n    // Uus teema homseks valmis aretada!!!\r\n\r\n    contactToUser() {\r\n\r\n      this.isPressedContactToUser = true;\r\n      socket.emit('updateRoom', this.room);\r\n      socket.on('get updated room users', (data) => {\r\n        console.log(\"New users update \" + data.users.length)\r\n        if (data.users.length > 1) {\r\n          this.isConnection = true;\r\n          //this.isTwoUsers = true;\r\n        } else {\r\n          this.isConnection = false;\r\n        }\r\n\r\n      })\r\n      this.isPressedFinal = true;\r\n      this.isChat = true;\r\n\r\n      socket.disconnect()\r\n      socket.connect()\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // openChat () {\r\n    //\r\n    //\r\n    //\r\n    //   socket.on('get room users', (data) => {\r\n    //     console.log(\"Data users length \" + data.users.length)\r\n    //\r\n    //     if (data.users.length > 1) {\r\n    //\r\n    //       this.isTwoUsers = true;\r\n    //\r\n    //     }\r\n    //   })\r\n    //\r\n    //   //this.isChat = true;\r\n    //\r\n    //   this.isPressedOpenChat = true;\r\n    //\r\n    //   for (let i = 0; i < 2; i++) {\r\n    //     this.count ++;\r\n    //   }\r\n    //   //this.count ++\r\n    //\r\n    //\r\n    // },\r\n    //\r\n    // // Uus teema homseks valmis aretada!!!\r\n    //\r\n    // contactToUser() {\r\n    //\r\n    //   this.isPressedContactToUser = true;\r\n    //   socket.emit('updateRoom', this.room);\r\n    //   socket.on('get updated room users', (data) => {\r\n    //     console.log(\"New users update \" + data.users.length)\r\n    //     if (data.users.length > 1) {\r\n    //       this.isConnection = true;\r\n    //       //this.isTwoUsers = true;\r\n    //     } else {\r\n    //       this.isConnection = false;\r\n    //     }\r\n    //\r\n    //   })\r\n    //   this.isPressedFinal = true;\r\n    //   this.isChat = true;\r\n    //\r\n    //   socket.disconnect()\r\n    //   socket.connect()\r\n    // },\r\n\r\n\r\n    handleOrder (id) {\r\n      this.$emit('provider:ordered', id)\r\n    },\r\n    getPositiveFeedback () {\r\n      this.isPositive = true;\r\n      this.isNegative = false;\r\n\r\n    },\r\n    getNegativeFeedback () {\r\n      this.isNegative = true;\r\n      this.isPositive = false;\r\n      //console.log(\"Feedback\")\r\n    },\r\n    closeComments (result) {\r\n      this.isPositive = this.isNegative = result;\r\n      console.log(\"result \" + result)\r\n    },\r\n    canselRecipientFinal () {\r\n      //this.$router.push(\"/recipient-result\");\r\n      //socket.emit('unsubscribe')\r\n      //window.localStorage.removeItem('sessionID')\r\n      //location.reload();\r\n\r\n      this.isChat = false;\r\n\r\n      this.$emit('cansel:final', false)\r\n\r\n    }\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","<template>\r\n  <div>\r\n    <MDBListGroup light small style=\"text-align: left;\">\r\n      <MDBListGroupItem>22.01.2023 Väga hea töö! Kiidan tegijat</MDBListGroupItem>\r\n      <MDBListGroupItem>05.03.2023 Super, ainult parimad sõnad tehtud töö kohta. Soovitan soojalt!!</MDBListGroupItem>\r\n\r\n    </MDBListGroup>\r\n    <MDBBtn block outline=\"secondary\" size=\"lg\" @click=\"closeFeedback\">Poistu kommenteistä</MDBBtn>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  MDBListGroup,\r\n  MDBListGroupItem,\r\n  MDBBtn\r\n}from \"mdb-vue-ui-kit\";\r\n\r\nexport default {\r\n  name: \"positive-feedback\",\r\n  components: {\r\n    MDBListGroup,\r\n    MDBListGroupItem,\r\n    MDBBtn\r\n  },\r\n  data() {\r\n    return{\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    closeFeedback () {\r\n      this.$emit('close:comments', false);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./PositiveFeedback.vue?vue&type=template&id=603d14b0\"\nimport script from \"./PositiveFeedback.vue?vue&type=script&lang=js\"\nexport * from \"./PositiveFeedback.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <MDBListGroup light small style=\"text-align: left;\">\r\n      <MDBListGroupItem>19.04.2023 Huias täiega ja tegi sitta!</MDBListGroupItem>\r\n      <MDBListGroupItem>05.05.2023 Võttis ainult raha ja jättis töö tegemata. Ainult jõi ja suitsetas kogu aeg!</MDBListGroupItem>\r\n\r\n    </MDBListGroup>\r\n    <MDBBtn block outline=\"secondary\" size=\"lg\" @click=\"closeFeedback\">Poistu kommenteistä</MDBBtn>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  MDBListGroup,\r\n  MDBListGroupItem,\r\n  MDBBtn\r\n}from \"mdb-vue-ui-kit\";\r\n\r\nexport default {\r\n  name: \"negative-feedback\",\r\n  components: {\r\n    MDBListGroup,\r\n    MDBListGroupItem,\r\n    MDBBtn\r\n  },\r\n  data() {\r\n    return{\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    closeFeedback () {\r\n      this.$emit('close:comments', false)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./NegativeFeedback.vue?vue&type=template&id=f3c62874\"\nimport script from \"./NegativeFeedback.vue?vue&type=script&lang=js\"\nexport * from \"./NegativeFeedback.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./RecipientPanelFinal.vue?vue&type=template&id=62fe073e\"\nimport script from \"./RecipientPanelFinal.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelFinal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n\r\n\r\n  <MDBContainer v-if=\"isProviderSelected\">\r\n    <recipientFinal\r\n      @cansel:final = handleCanselFinal\r\n      @provider:ordered = orderSuccess\r\n      :provider = selectedProvider\r\n      :room = room\r\n      :available = availability\r\n      :booking = booking\r\n\r\n      :chatusers = chatusers\r\n      @message = onMessage\r\n      @select = selectUser\r\n      @finalinfo = finalinfo\r\n\r\n    />\r\n  </MDBContainer>\r\n  <MDBContainer v-else>\r\n    <h3>Päivämäärä: {{booking[0].date}}</h3>\r\n\r\n    <h2>Tarvin tässä osaaja - {{line}}</h2>\r\n\r\n    <successMessage\r\n      :message = orderMessage\r\n    />\r\n\r\n    <MDBRow>\r\n      <MDBCol>\r\n        <MDBTable border=\"primary\" style=\"font-size: 18px; text-align: left;\">\r\n          <tbody>\r\n          <tr>\r\n            <td>\r\n              {{booking[0].description}}\r\n\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <MDBBtn outline=\"info\" block size=\"lg\">Muokkaa tehtävän kuvausta</MDBBtn>\r\n            </td>\r\n          </tr>\r\n          <!--\r\n          <tr v-if=\"!booking[0].image\">\r\n            <td>\r\n              <div  class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </td>\r\n\r\n          </tr>\r\n          -->\r\n          <tr v-for=\"booking in booking\" :key=\"booking.id\">\r\n\r\n            <td  v-for=\"image in booking.image\" :key=\"image._id\">\r\n\r\n\r\n\r\n              <img\r\n                  :src=\"require(`@/assets/client/${booking.image.map(im => im.name)}`)\"\r\n                  style=\"width: 100%;\"\r\n                  alt=\"kuva\"\r\n              />\r\n\r\n\r\n            </td>\r\n\r\n          </tr>\r\n          <tr>\r\n            <td v-if=\"booking[0].image\">\r\n              <MDBBtn outline=\"info\" block size=\"lg\">Muokkaa kuva tehtävästä</MDBBtn>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </MDBTable>\r\n\r\n\r\n      </MDBCol>\r\n      <MDBCol v-if=\"isOrdered\">\r\n        <h2>Ordered</h2>\r\n      </MDBCol>\r\n      <MDBCol v-else>\r\n        <div v-if=\"providers.length > 0\">\r\n          <MDBTable border=\"primary\" style=\"font-size: 18px; text-align: center;\">\r\n            <tbody>\r\n            <tr v-for=\"provider in providers\" :key=\"provider.id\">\r\n              <td v-if=\"provider.timeoffer.map(to =>\r\n\r\n                datetime.providerMatchingForClient(\r\n                    bookingTime,\r\n                    {y: 2023, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\r\n                    {y: 2023, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\r\n                )\r\n              ).includes(true)\">\r\n                <MDBBtn style=\"width: 200px; padding: 20px; background-color: grey; border: solid #4c4949;color: #f0eeee; font-size: 150%;\" outline=\"info\" size=\"lg\" @click=\"getProviderInfo(provider,'green')\">{{provider.yritys}}</MDBBtn>\r\n                <MDBBadge\r\n                    color=\"success\"\r\n                    class=\"translate-middle p-1\"\r\n                    pill\r\n                    notification\r\n                ><h4>Saatavilla sen aikaan</h4>\r\n                </MDBBadge>\r\n              </td>\r\n              <td v-else>\r\n<!--                <form @submit.prevent=\"getProviderInfo(provider, 'orange')\">-->\r\n<!--                  <MDBBtn style=\"width: 200px; padding: 20px; background-color: #999797; border: solid #5f5d5d;color: #f0eeee; font-size: 150%;\" size=\"lg\" type=\"submit\">{{provider.yritys}}</MDBBtn>-->\r\n<!--                </form>-->\r\n\r\n                <MDBBtn style=\"width: 200px; padding: 20px; background-color: #999797; border: solid #5f5d5d;color: #f0eeee; font-size: 150%;\" size=\"lg\" @click=\"getProviderInfo(provider, 'orange')\">{{provider.yritys}}</MDBBtn>\r\n\r\n\r\n                <MDBBadge\r\n                    color=\"info\"\r\n                    class=\"translate-middle p-1\"\r\n                    pill\r\n                    notification\r\n                ><h4>Sovittaessa</h4></MDBBadge>\r\n\r\n              </td>\r\n\r\n            </tr>\r\n            <tr>\r\n            </tr>\r\n            </tbody>\r\n          </MDBTable>\r\n\r\n<!--          Booking {{booking}}-->\r\n\r\n        </div>\r\n        <div v-else>\r\n          <h2>Yrityksiä hetkellä ei löytyy</h2>\r\n        </div>\r\n\r\n\r\n\r\n      </MDBCol>\r\n      <MDBBtn block outline=\"danger\" size=\"lg\" @click=\"canselResult\">Takaisin</MDBBtn>\r\n    </MDBRow>\r\n\r\n  </MDBContainer>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  MDBBtn, MDBContainer, MDBTable, MDBRow,\r\n  MDBCol,\r\n  //MDBIcon,\r\n  MDBBadge\r\n}from \"mdb-vue-ui-kit\";\r\nimport dt from '../components/controllers/datetime'\r\nimport recipientFinal from '../pages/RecipientPanelFinal'\r\nimport successMessage from '../components/notifications/successMessage'\r\nimport providerService from '../service/providers'\r\n//import socket from \"@/socket\";\r\nimport recipientService from \"@/service/recipients\";\r\nimport socket from \"@/socket\";\r\n//import socket from \"@/socket\";\r\n\r\nexport default {\r\n  name: \"recipient-panel-result\",\r\n  props: {\r\n    chatusers: Array,\r\n    loggedInUser: Object,\r\n    booking: null,\r\n    bookingTime: null,\r\n    providers: [],\r\n    confirmedBookings: Array,\r\n    line: String\r\n  },\r\n  data () {\r\n    return {\r\n      chatUser: {},\r\n      count: 0,\r\n      datetime: dt,\r\n      selectedProvider: null,\r\n      isProviderSelected: false,\r\n      availability: \"\",\r\n      orderMessage: null,\r\n      isOrdered: false,\r\n      room: \"\",\r\n      roomUserCount: 0\r\n    }\r\n  },\r\n  components: {\r\n    successMessage,\r\n    recipientFinal,\r\n    MDBBtn,\r\n    MDBContainer,\r\n    MDBTable,\r\n    MDBRow,\r\n    MDBCol,\r\n    //MDBIcon,\r\n    MDBBadge\r\n  },\r\n  methods: {\r\n    selectUser (user) {\r\n      this.$emit('select', user);\r\n    },\r\n    onMessage (content, date) {\r\n      this.$emit(\"message\", content, date);\r\n    },\r\n    finalinfo (data) {\r\n      console.log(\"Final info in result pressed \");\r\n      this.$emit(\"finalinfo\", data)\r\n\r\n    },\r\n    getChatCredentials () {\r\n\r\n    },\r\n    async orderSuccess (provId) {\r\n      //console.log(\"Ordered!!!\")\r\n\r\n      this.isProviderSelected = false;\r\n\r\n      //this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\r\n      console.log(\"Provider id \" + provId)\r\n      console.log(\"Recpient id: \" + this.booking[0].id);\r\n      //const status = \"notSeen\";\r\n      const createBookingStatus = await recipientService.updateRecipient(this.booking[0].id, {status: \"notSeen\"});\r\n      console.log(\"Is status updated: \" + createBookingStatus.status);\r\n      this.$emit('remove:confirmed:provider', provId);\r\n      this.$emit('set:order:to:send', this.booking[0].id)\r\n\r\n      const recipientId = this.booking[0].id;\r\n\r\n      //--------------- About need delete selected and confirmed provider ------------\r\n\r\n      //const booking = await providerServise.updateProvider(provId, {booking: [this.booking.id]})\r\n\r\n      const booking = await providerService.addProviderBooking(provId, recipientId);\r\n      if (booking === \"Recipient is added!\") {\r\n        this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\r\n\r\n        console.log(\"Booking made - id: \" + booking.id);\r\n\r\n        this.isOrdered = true;\r\n\r\n        setTimeout(() => {\r\n          this.orderMessage = null;\r\n        }, 3000)\r\n      } else {\r\n        this.orderMessage = \"Olet jo lähetännyt tilauksen!\"\r\n        setTimeout(() => {\r\n          this.orderMessage = null;\r\n        }, 3000)\r\n        //console.log(\"Yritys on jo tilattu!\")\r\n      }\r\n\r\n\r\n\r\n    },\r\n    getProviderInfo (provider, marker) {\r\n\r\n      this.selectedProvider = provider;\r\n      this.availability = marker;\r\n      this.isProviderSelected = true;\r\n\r\n      console.log(\"Booking username \" + this.booking[0].user.username)\r\n      console.log(\"Recipient room: \" + (provider.yritys + this.booking[0].user.username))\r\n      this.room = provider.yritys + this.booking[0].user.username\r\n\r\n      socket.emit(\"room users count\")\r\n      socket.on('get room users count', (data) => {\r\n        console.log(\"Can we get users data from backend in recipient final??? \" + data.users.length)\r\n        this.roomUserCount = data.users.length;\r\n      })\r\n\r\n      const username = this.booking[0].user.username;\r\n      const room = provider.yritys + this.booking[0].user.username;\r\n\r\n\r\n\r\n      const chatCredentials = {\r\n        room: room,\r\n        userID: this.chatUser.id,\r\n        username: username,\r\n      }\r\n\r\n      const otherChatUser = {\r\n        userID: provider.user.id,\r\n        username: provider.user.username,\r\n        room: room\r\n      }\r\n\r\n      this.$emit(\"otherUser\", otherChatUser);\r\n\r\n      this.$emit(\"chatCredentials\", chatCredentials)\r\n      // for (let i = 0; i < 2; i++) {\r\n      //\r\n      // }\r\n\r\n\r\n      socket.emit(\"update room\", room)\r\n      // let rooms = [\"Oopersama\", \"tvsama\"]\r\n      // socket.emit(\"join all room\", rooms);\r\n\r\n\r\n\r\n\r\n\r\n      //window.location.replace(\"http://localhost:8080/received#/received\");\r\n\r\n      // socket.disconnect();\r\n      // socket.connect();\r\n\r\n      // window.localStorage.removeItem('sessionID')\r\n      // socket.disconnect()\r\n      //\r\n      // socket.auth = { username, room };\r\n      // socket.connect();\r\n\r\n\r\n\r\n\r\n      //socket.emit('updateRoom', this.room);\r\n\r\n      //socket.room = this.room\r\n\r\n\r\n\r\n      // this.$router.push({\r\n      //   name: 'recipient-final',\r\n      //   params: {\r\n      //     data: provider.yritys,\r\n      //   }\r\n      // })\r\n      //this.$router.push(\"received-final\");\r\n      //console.log(\"Provider id \" + provider.id)\r\n    },\r\n    handleCanselFinal (result) {\r\n      this.isProviderSelected = result;\r\n    },\r\n    canselResult () {\r\n      this.$emit('cansel:result', false)\r\n    }\r\n  },\r\n  mounted() {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      this.chatUser = user;\r\n\r\n      //this.joinServer(username, userID);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.success {\r\n  color: white;\r\n  background: #7bc47b;\r\n  font-size: 20px;\r\n  border: solid #0e920e;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n</style>","\r\nconst compare = (rec, prov) => {\r\n    const receiverDate = new Date(rec.y, rec.m, rec.d, rec.hour, rec.min);\r\n    const providerDate = new Date(prov.y, prov.m, prov.d, prov.hour, prov.min)\r\n    return providerDate >= receiverDate;\r\n}\r\n\r\nconst providerMatchingForClient = (re, pFrom, pTo) => {\r\n    //const rDate = new Date(re.y, re.m, re.d, re.hour, re.min);\r\n    const pFromDate = new Date(pFrom.y, pFrom.m, pFrom.d, pFrom.hour, pFrom.min);\r\n    const pToDate = new Date(pTo.y, pTo.m, pTo.d, pTo.hour, pTo.min);\r\n    return re >= pFromDate && re < pToDate;\r\n}\r\nexport default { compare, providerMatchingForClient }","import { render } from \"./RecipientPanelResult.vue?vue&type=template&id=c70dc960&scoped=true\"\nimport script from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanelResult.vue?vue&type=style&index=0&id=c70dc960&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c70dc960\"]])\n\nexport default __exports__"],"names":["SuccessMessage","message","_createVNode","_createElementBlock","_toDisplayString","$props","chatusers","_createElementVNode","provider","yritys","_component_MDBTable","style","_component_MDBRow","_component_MDBCol","_component_MDBIcon","i","class","size","onClick","$options","getPositiveFeedback","_component_MDBBadge","color","pill","notification","$data","isPositive","_createBlock","_component_PositiveFeedback","closeComments","getNegativeFeedback","isNegative","_component_NegativeFeedback","_Fragment","_renderList","user","key","userID","_component_User","selected","selectedUser","onSelect","$event","selectUser","_component_MessagePanel","onMessage","_component_MDBBtn","outline","block","_cache","handleOrder","id","canselRecipientFinal","_component_MDBListGroup","light","small","_component_MDBListGroupItem","closeFeedback","name","components","MDBListGroup","MDBListGroupItem","MDBBtn","data","methods","this","$emit","__exports__","props","Array","Object","room","String","roomUserCount","Number","available","booking","User","MessagePanel","PositiveFeedback","NegativeFeedback","MDBTable","MDBRow","MDBCol","MDBIcon","MDBBadge","isChat","isPressedOpenChat","isPressedContactToUser","isConnection","isTwoUsers","isPressedFinal","count","userCount","mounted","chatCredentials","sendToApp","console","log","content","date","test","state","openChat","contactToUser","socket","emit","on","users","length","disconnect","connect","result","render","_hoisted_11","isProviderSelected","_component_MDBContainer","_component_recipientFinal","handleCanselFinal","orderSuccess","selectedProvider","availability","onFinalinfo","finalinfo","line","_component_successMessage","orderMessage","border","description","image","_id","src","require","map","im","alt","_hoisted_2","isOrdered","_hoisted_3","providers","_hoisted_4","timeoffer","to","datetime","providerMatchingForClient","bookingTime","monthFrom","d","dayFrom","hour","hoursFrom","min","minutesFrom","monthTo","dayTo","hoursTo","minutesTo","includes","_hoisted_5","getProviderInfo","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_12","canselResult","compare","rec","prov","receiverDate","Date","y","m","providerDate","re","pFrom","pTo","pFromDate","pToDate","loggedInUser","confirmedBookings","chatUser","dt","successMessage","recipientFinal","MDBContainer","getChatCredentials","async","provId","createBookingStatus","recipientService","updateRecipient","status","recipientId","providerService","addProviderBooking","setTimeout","marker","username","otherChatUser","loggedUserJSON","window","localStorage","getItem","JSON","parse"],"sourceRoot":""}