{"version":3,"file":"js/729.70a0b0e8.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/notifications/errorMessage.js","webpack://prore-mongo/./src/components/RegisterForm.vue","webpack://prore-mongo/./src/components/RegisterForm.vue?33ca","webpack://prore-mongo/./src/pages/LoginRegister.vue","webpack://prore-mongo/./src/components/LoginForm.vue","webpack://prore-mongo/./src/components/LoginForm.vue?dcb9","webpack://prore-mongo/./src/pages/LoginRegister.vue?ad87"],"sourcesContent":["const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n            <img className={'errorImg'} alt={'error'} src={require('@/assets/error.png')}/>\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage","<template>\n  <div>\n    <h2 style=\"margin-top: 50px; text-align: center\">- Rekisteröintilomake -</h2>\n    <MDBContainer style=\"margin-top: 50px;\">\n\n      <registerError\n          :message = registerErrorMessage\n      />\n      <registerError\n          :message = usernameExisting\n      />\n      <registerError\n          :message = registerEmailErrorMessage\n      />\n      <register-error\n        :message = registerPwRepeatErrorMessage\n      />\n      <form  @submit.prevent=\"userData\">\n        <!-- 2 column grid layout with text inputs for the first and last names -->\n        <!-- First name input -->\n\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Etunimi\"\n            white\n            id=\"registerFirstName\"\n            v-model=\"registerFirstName\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Last name input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Sukunimi\"\n            white\n            id=\"registerLastName\"\n            v-model=\"registerLastName\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Username input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"käyttäjätunnus\"\n            white\n            id=\"registerUsername\"\n            v-model=\"registerUsername\"\n            wrapperClass=\"mb-4\"\n        />\n        <!-- Email input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Email\"\n            white\n            id=\"registerEmail\"\n            v-model=\"registerEmail\"\n            wrapperClass=\"mb-4\"\n        />\n<!--        <div>-->\n<!--          Email is {{isValidEmail ? 'valid' : 'invalid'}}-->\n<!--        </div>-->\n        <!-- Password input -->\n        <MDBInput\n            type=\"password\"\n            size=\"lg\"\n            label=\"Salasana\"\n            white\n            id=\"registerPassword\"\n            v-model=\"registerPassword\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Repeat Password input -->\n        <MDBInput\n            type=\"password\"\n            size=\"lg\"\n            label=\"Toista salasana\"\n            white\n            id=\"registerPasswordRepeat\"\n            v-model=\"registerPasswordRepeat\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Checkbox -->\n        <MDBCheckbox\n            label=\"Muista minut\"\n            white\n            size=\"lg\"\n            id=\"registerSubscribeCheck\"\n            v-model=\"registerSubscribeCheck\"\n            wrapperClass=\"d-flex justify-content-center mb-4\"\n        />\n\n<!--        <input required=\"required\" v-model=\"registerEmail\" :error-messages=\"emailErrors\"-->\n<!--               @input=\"$v.registerEmail.$touch()\" @blur=\"$v.registerEmail.$touch()\" label=\"Email\"-->\n<!--               />-->\n\n        <!-- Submit button -->\n        <MDBBtn outline=\"primary\" size=\"lg\" type=\"submit\"  block class=\"mb-4\"> Luo tili </MDBBtn>\n\n        <!-- Register buttons -->\n        <div class=\"text-center\">\n          <p>Tai registeröidy käyttämällä:</p>\n          <MDBBtn color=\"secondary\" floating class=\"mx-1\">\n            <MDBIcon iconStyle=\"fab\" icon=\"facebook-f\" />>\n          </MDBBtn>\n\n          <MDBBtn color=\"secondary\" floating class=\"mx-1\">\n            <MDBIcon iconStyle=\"fab\" icon=\"google\" />\n          </MDBBtn>\n\n          <MDBBtn color=\"secondary\" floating class=\"mx-1\">\n            <MDBIcon iconStyle=\"fab\" icon=\"twitter\" />\n          </MDBBtn>\n        </div>\n      </form>\n    </MDBContainer>\n\n  </div>\n\n</template>\n\n<script>\n/* eslint-disable */\n// import { validationMixin } from 'vuelidate'\n// import { required, email} from 'vuelidate/lib/validators'\nimport {\n  MDBContainer,\n  MDBInput,\n  MDBCheckbox,\n  MDBBtn,\n  MDBIcon\n} from \"mdb-vue-ui-kit\";\nimport { ref } from \"vue\";\nimport userService from \"@/service/users\";\nimport loginService from \"@/service/login\";\nimport registerError from '../components/notifications/errorMessage'\n\n\nexport default {\n  name: \"app-register\",\n  components: {\n    registerError,\n    MDBContainer,\n    MDBInput,\n    MDBCheckbox,\n    MDBBtn,\n    MDBIcon\n  },\n  // mixins: [validationMixin],\n  // validations: {\n  //\n  //   email: { required, email },\n  //\n  // },\n  data () {\n    return {\n      registerErrorMessage: null,\n      registerEmailErrorMessage: null,\n      registerPwRepeatErrorMessage: null,\n      usernameExisting: null\n    }\n  },\n\n  setup() {\n    const registerFirstName = ref(\"\");\n    const registerLastName = ref(\"\");\n    const registerUsername = ref(\"\");\n    const registerEmail = ref(\"\");\n    const registerPassword = ref(\"\");\n    const registerPasswordRepeat = ref(\"\");\n    const registerSubscribeCheck = ref(true);\n    return {\n      registerLastName,\n      registerFirstName,\n      registerUsername,\n      registerEmail,\n      registerPassword,\n      registerPasswordRepeat,\n      registerSubscribeCheck\n    };\n  },\n  computed: {\n    isValidEmail() {\n      return /^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.registerEmail);\n    }\n  },\n  // computed: {\n  //   emailErrors () {\n  //     const errors = []\n  //     if (!this.$v.email.$dirty) return errors\n  //     !this.$v.email.email && errors.push('Must be valid e-mail')\n  //     !this.$v.email.required && errors.push('E-mail is required')\n  //     return errors\n  //   },\n  // },\n  methods: {\n    emailValidation () {\n  //     Vue.createApp({\n  //       data: () => ({ email: '', password: '', errors: null }),\n  //       methods: {\n  //         async submitForm() {\n  //           const errors = {};\n  //           if (!this.email) {\n  //             errors.email = 'Email is required';\n  //           } else if (!/^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.email)) {\n  //             errors.email = 'Invalid email';\n  //           }\n  //\n  //           if (Object.keys(errors).length > 0) {\n  //             this.errors = errors;\n  //             return;\n  //           } else {\n  //             this.errors = null;\n  //           }\n  //\n  //           // Handle submitting form\n  //         }\n  //       },\n  //       template: `\n  // <div>\n  //   <form @submit.prevent=\"submitForm\">\n  //     <div>\n  //       <input v-model=\"email\" placeholder=\"email\" />\n  //       <div v-if=\"errors && errors.email\">\n  //         {{errors.email}}\n  //       </div>\n  //     </div>\n  //     <div>\n  //       <input type=\"password\" v-model=\"password\" />\n  //     </div>\n  //     <div>\n  //       <button type=\"submit\">Register</button>\n  //     </div>\n  //   </form>\n  // </div>\n  // `\n  //     }).mount('#example2');\n    },\n    validateEmail() {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.email)) {\n        this.msg['email'] = 'Please enter a valid email address';\n      } else {\n        this.msg['email'] = '';\n      }\n    },\n    // New user data to send forward\n    async userData () {\n      const newUser = {\n        firstName: this.registerFirstName,\n        lastName: this.registerLastName,\n        username: this.registerUsername,\n        email: this.registerEmail,\n        password: this.registerPassword\n      }\n      if (this.registerFirstName !== \"\"\n          && this.registerLastName !== \"\"\n          && this.registerUsername !== \"\"\n          && this.registerPassword !== \"\"\n          && this.registerEmail !== \"\"\n      ) {\n\n        if (this.registerUsername.length < 4) {\n          this.registerErrorMessage = \"Username must be longer than 4 characters!\"\n          setTimeout(() => {\n            this.registerErrorMessage = null;\n          }, 2000);\n        } else if (!/^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.registerEmail)) {\n          this.registerEmailErrorMessage = \"Anna kelvollinen sähköpostiosoite!\";\n          setTimeout(() => {\n            this.registerEmailErrorMessage = null;\n          }, 2000);\n        } else if (this.registerPassword !== this.registerPasswordRepeat) {\n          this.registerPwRepeatErrorMessage = \"Salasana on oltava sama!\";\n          setTimeout(() => {\n            this.registerPwRepeatErrorMessage = null;\n          }, 2000);\n        }\n        else {\n          console.log(\"Uus kasutaja\")\n          const userExisting = await userService.addUser(newUser);\n          if (userExisting.error === \"Käyttäjätunnus on jo olemassa!\") {\n            this.usernameExisting = \"Käyttäjätunnus on jo olemassa! Vaihda käyttäjätunnus\";\n            setTimeout(() => {\n              this.usernameExisting = null;\n            }, 2000);\n          } else if (userExisting.error === \"Sähköposti on jo olemassa!\") {\n            this.registerEmailErrorMessage = \"Antamasi sähköpostiosoite on jo olemassa!\";\n            setTimeout(() => {\n              this.registerEmailErrorMessage = null;\n            }, 2000);\n          }\n          else {\n            const loggedInUser = await loginService.login({username: this.registerUsername, password: this.registerPassword});\n            if (loggedInUser.error !== \"login error\") {\n              this.$emit('register:data', loggedInUser)\n            }\n          }\n\n        }\n      } else {\n        this.registerErrorMessage = \"Kaikki kentät on täytettävä!!\"\n        setTimeout(() => {\n          this.registerErrorMessage = null;\n        }, 2000);\n      }\n      //await userService.addUser(newUser);\n\n      //const loggedInUser = await loginService.login({username: this.registerUsername, password: this.registerPassword});\n\n      //this.$emit('register:data', newUser)\n    }\n  }\n}\n</script>\n\n<style scoped>\n#app {\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n.error {\n  color: white;\n  background: #f5839c;\n  font-size: 20px;\n  border: solid #f75959;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n.errorImg {\n  width: 50px;\n  margin-left: 20px;\n}\n</style>","import { render } from \"./RegisterForm.vue?vue&type=template&id=38c88c2c&scoped=true\"\nimport script from \"./RegisterForm.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterForm.vue?vue&type=script&lang=js\"\n\nimport \"./RegisterForm.vue?vue&type=style&index=0&id=38c88c2c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-38c88c2c\"]])\n\nexport default __exports__","<template>\n  <div>\n    <MDBContainer style=\"margin-top: 50px;\">\n      <MDBTabs v-model=\"form7ActiveTab\">\n        <MDBTabNav pills justify tabsClasses=\"mb-3\">\n          <MDBTabItem style=\"background-color: #37546a; color: #ddd;\" @click=\"pressLoginTab\" tabId=\"ex3-1\" href=\"ex3-1\"\n          >Kirjaudu</MDBTabItem\n          >\n          <MDBTabItem style=\"background-color: #223340; color: #ddd;\" @click=\"pressRegisterTab\" tabId=\"ex3-2\" href=\"ex3-2\"\n          >Registeröidy</MDBTabItem\n          >\n        </MDBTabNav>\n\n\n      </MDBTabs>\n\n      <div v-if=\"isRegister\">\n        <Register\n          @register:data = handleRegister\n        />\n      </div>\n\n      <div v-else>\n        <Login\n            @login:data = userControl\n        />\n      </div>\n\n    </MDBContainer>\n\n  </div>\n\n</template>\n\n<script>\nimport Login from '../components/LoginForm.vue'\nimport Register from '../components/RegisterForm'\nimport {\n  MDBContainer,\n  MDBTabs,\n  MDBTabNav,\n  MDBTabItem,\n\n} from \"mdb-vue-ui-kit\";\nimport { ref } from \"vue\";\nexport default {\n  name: \"login-register\",\n  components: {\n    Login,\n    Register,\n    MDBContainer,\n    MDBTabs,\n    MDBTabNav,\n\n\n\n    MDBTabItem,\n\n  },\n  setup() {\n    const form7ActiveTab = ref(\"ex3-1\");\n    const form2Username = ref(\"\");\n    const form2Password = ref(\"\");\n    const form7LoginCheck = ref(true);\n    const form7RegisterName = ref(\"\");\n    const form7RegisterUsername = ref(\"\");\n    const form7RegisterEmail = ref(\"\");\n    const form7RegisterPassword = ref(\"\");\n    const form7RegisterPasswordRepeat = ref(\"\");\n    const form7RegisterTermsCheck = ref(true);\n\n    return {\n      form7ActiveTab,\n      form2Username,\n      form2Password,\n      form7LoginCheck,\n      form7RegisterName,\n      form7RegisterUsername,\n      form7RegisterEmail,\n      form7RegisterPassword,\n      form7RegisterPasswordRepeat,\n      form7RegisterTermsCheck\n    };\n  },\n  data () {\n    return {\n      isLogin: true,\n      isRegister: false\n    }\n  },\n  mounted () {\n    this.isLogin = true\n  },\n  methods: {\n    pressLoginTab () {\n      this.isRegister = false\n      this.islogin = true\n    },\n    pressRegisterTab () {\n      this.isLogin = false\n      this.isRegister = true\n    },\n    handleRegister (data) {\n\n      this.$emit('register:data', data)\n    },\n    userControl (userCredentials) {\n      this.$emit('login:data', userCredentials)\n\n    }\n  }\n}\n</script>\n\n<style >\n#app {\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  /*color: #2c3e50;*/\n}\n\n</style>","<template>\n  <div>\n    <loginError\n        :message = loginErrorMessage\n    />\n    <form @submit.prevent=\"userLoginData\">\n<!--      <div class=\"text-center mb-3\">-->\n<!--        <p>Kirjaudu käyttämällä:</p>-->\n<!--        <MDBBtn color=\"secondary\" floating class=\"mx-1\">-->\n<!--          <MDBIcon iconStyle=\"fab\" icon=\"facebook-f\" />>-->\n<!--        </MDBBtn>-->\n\n<!--        <MDBBtn color=\"secondary\" floating class=\"mx-1\">-->\n<!--          <MDBIcon iconStyle=\"fab\" icon=\"google\" />-->\n<!--        </MDBBtn>-->\n\n<!--        <MDBBtn color=\"secondary\" floating class=\"mx-1\">-->\n<!--          <MDBIcon iconStyle=\"fab\" icon=\"twitter\" />-->\n<!--        </MDBBtn>-->\n\n<!--        <MDBBtn color=\"secondary\" floating class=\"mx-1\">-->\n<!--          <MDBIcon iconStyle=\"fab\" icon=\"github\" />-->\n<!--        </MDBBtn>-->\n<!--      </div>-->\n\n<!--      <p class=\"text-center\">tai:</p>-->\n\n      <!-- Email input -->\n      <MDBInput\n          type=\"text\"\n          size=\"lg\"\n          label=\"Käyttäjätunnus\"\n          white\n          id=\"loginUsername\"\n          v-model=\"loginUsername\"\n          wrapperClass=\"mb-4\"\n      />\n\n      <!-- Password input -->\n      <MDBInput\n\n          type=\"password\"\n          size=\"lg\"\n          label=\"Salasana\"\n          white\n          id=\"loginPassword\"\n          v-model=\"loginPassword\"\n          wrapperClass=\"mb-4\"\n      />\n\n      <!-- 2 column grid layout for inline styling -->\n      <MDBRow class=\"mb-4\">\n        <MDBCol class=\"d-flex justify-content-center\">\n          <!-- Checkbox -->\n          <MDBCheckbox\n              label=\"Muista minut\"\n              white\n              id=\"loginCheck\"\n              v-model=\"loginCheck\"\n              wrapperClass=\"mb-3 mb-md-0\"\n          />\n        </MDBCol>\n\n        <MDBCol>\n          <!-- Simple link -->\n          <router-link to=\"/forgot_auth\">Forgot password</router-link>\n<!--          <a href=\"/recipients\">Unohtuiko salasana?</a>-->\n        </MDBCol>\n      </MDBRow>\n\n      <!-- Submit button -->\n      <MDBBtn white color=\"primary\" size=\"lg\" type=\"submit\" block class=\"mb-4\"> Kirjaudu </MDBBtn>\n\n      <!-- Register buttons -->\n      <div class=\"text-center\">\n        <p>Ei jäsen? <span id=\"reg\" @click=\"this.$router.push('/register')\" style=\"cursor: pointer;\">rekisteröidy</span></p>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\n// @click=\"userLoginData\"\nimport {\n  MDBInput,\n  MDBCheckbox,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBIcon\n} from \"mdb-vue-ui-kit\";\nimport { ref } from \"vue\";\nimport loginService from \"@/service/login\";\nimport loginError from '../components/notifications/errorMessage'\nexport default {\n  name: \"login-form\",\n  components: {\n    loginError,\n    MDBInput,\n    MDBCheckbox,\n    MDBBtn,\n    MDBRow,\n    MDBCol,\n    MDBIcon\n  },\n  setup() {\n\n    const loginUsername = ref(\"\");\n    const loginPassword = ref(\"\");\n    const loginCheck = ref(true);\n    const loginErrorMessage = ref(null);\n\n    return {\n\n      loginUsername,\n      loginPassword,\n      loginCheck,\n      loginErrorMessage\n    };\n  },\n  methods: {\n    // Data from login fields forward\n    async userLoginData () {\n      let user;\n      const userLogin = {\n        username: this.loginUsername,\n        password: this.loginPassword\n      }\n\n\n      if (this.loginUsername !== \"\" && this.loginPassword !== \"\") {\n        user = await loginService.login(userLogin)\n        if (user.error !== \"login error\") {\n          console.log(\"User logged in\")\n          this.$emit('login:data', user)\n        } else {\n          console.log(\"No user logged in\")\n          this.loginError = \"Väärä Käyttäjätunnus tai salasana!\"\n          this.loginErrorMessage = \"Väärä Käyttäjätunnus tai salasana!\";\n          setTimeout(() => {\n            this.loginErrorMessage = null;\n          }, 2000);\n        }\n      } else {\n        console.log(\"Mingi väli on tühi!!\")\n        this.loginErrorMessage = \"kaikki kentät on täytettävä!\"\n        setTimeout(() => {\n          this.loginErrorMessage = null\n        }, 2000);\n      }\n\n      //this.$emit('login:data', userLogin)\n      this.emptyLoginFields()\n    },\n    // empty login form fields after login\n    emptyLoginFields () {\n      this.loginUsername = \"\"\n      this.loginPassword = \"\"\n      this.loginCheck = false\n    }\n  }\n}\n</script>\n\n<style >\n#reg {\n  padding: 10px;\n  color: blue;\n}\n.error {\n  color: white;\n  background: #f5839c;\n  font-size: 20px;\n  border: solid #f75959;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n\n .errorImg {\n  width: 50px;\n  margin-left: 20px;\n}\n\n.mdb.input-control {\n  color: red;\n}\n\n.mdb.input-control:focus {\n  color: red;\n}\n</style>","import { render } from \"./LoginForm.vue?vue&type=template&id=c1233bf0\"\nimport script from \"./LoginForm.vue?vue&type=script&lang=js\"\nexport * from \"./LoginForm.vue?vue&type=script&lang=js\"\n\nimport \"./LoginForm.vue?vue&type=style&index=0&id=c1233bf0&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./LoginRegister.vue?vue&type=template&id=761c9c40\"\nimport script from \"./LoginRegister.vue?vue&type=script&lang=js\"\nexport * from \"./LoginRegister.vue?vue&type=script&lang=js\"\n\nimport \"./LoginRegister.vue?vue&type=style&index=0&id=761c9c40&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["ErrorMessage","message","_createVNode","require","_createElementVNode","style","class","_createElementBlock","_hoisted_1","_component_MDBContainer","_component_registerError","$data","registerErrorMessage","usernameExisting","registerEmailErrorMessage","_component_register_error","registerPwRepeatErrorMessage","onSubmit","_cache","_withModifiers","args","$options","userData","_component_MDBInput","type","size","label","white","id","$setup","registerFirstName","$event","wrapperClass","registerLastName","registerUsername","registerEmail","registerPassword","registerPasswordRepeat","_component_MDBCheckbox","registerSubscribeCheck","_component_MDBBtn","outline","block","_hoisted_2","_hoisted_3","color","floating","_component_MDBIcon","iconStyle","icon","name","components","registerError","MDBContainer","MDBInput","MDBCheckbox","MDBBtn","MDBIcon","data","setup","ref","computed","isValidEmail","test","this","methods","emailValidation","validateEmail","email","msg","async","newUser","firstName","lastName","username","password","length","setTimeout","console","log","userExisting","userService","addUser","error","loggedInUser","loginService","login","$emit","__exports__","render","_component_MDBTabs","form7ActiveTab","_component_MDBTabNav","pills","justify","tabsClasses","_component_MDBTabItem","onClick","pressLoginTab","tabId","href","pressRegisterTab","isRegister","_component_Register","handleRegister","_component_Login","userControl","_component_loginError","loginErrorMessage","userLoginData","loginUsername","loginPassword","_component_MDBRow","_component_MDBCol","loginCheck","_component_router_link","to","$router","push","loginError","MDBRow","MDBCol","user","userLogin","emptyLoginFields","Login","Register","MDBTabs","MDBTabNav","MDBTabItem","form2Username","form2Password","form7LoginCheck","form7RegisterName","form7RegisterUsername","form7RegisterEmail","form7RegisterPassword","form7RegisterPasswordRepeat","form7RegisterTermsCheck","isLogin","mounted","islogin","userCredentials"],"sourceRoot":""}