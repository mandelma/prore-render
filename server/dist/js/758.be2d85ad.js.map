{"version":3,"file":"js/758.be2d85ad.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/controllers/datetime.js","webpack://prore-mongo/./src/components/controllers/distance.js","webpack://prore-mongo/./src/service/image.js","webpack://prore-mongo/./src/pages/RecipientPanelFinal.vue","webpack://prore-mongo/./src/components/PositiveFeedback.vue","webpack://prore-mongo/./src/components/PositiveFeedback.vue?22e3","webpack://prore-mongo/./src/components/NegativeFeedback.vue","webpack://prore-mongo/./src/components/NegativeFeedback.vue?a06f","webpack://prore-mongo/./src/pages/RecipientPanelFinal.vue?5797","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue?7f3a"],"sourcesContent":["\nconst compare = (rec, prov) => {\n    const receiverDate = new Date(rec.y, rec.m, rec.d, rec.hour, rec.min);\n    const providerDate = new Date(prov.y, prov.m, prov.d, prov.hour, prov.min)\n    return providerDate >= receiverDate;\n}\n\nconst providerMatchingForClient = (re, pFrom, pTo) => {\n    //const rDate = new Date(re.y, re.m, re.d, re.hour, re.min);\n    const pFromDate = new Date(pFrom.y, pFrom.m, pFrom.d, pFrom.hour, pFrom.min);\n    const pToDate = new Date(pTo.y, pTo.m, pTo.d, pTo.hour, pTo.min);\n    return re >= pFromDate && re < pToDate;\n}\nexport default { compare, providerMatchingForClient }","/*global google*/\nlet res = \"\";\nconst distance = () => {\n    //let text = \"\";\n    //let value = 0;\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\n    var service = new google.maps.DistanceMatrixService();\n    service.getDistanceMatrix(\n        {\n            origins: [origin],\n            destinations: [destination],\n            travelMode: 'DRIVING',\n            unitSystem: google.maps.UnitSystem.METRIC,\n            durationInTraffic: true,\n            avoidHighways: false,\n            avoidTolls: false\n        }, response_data);\n    //return response_data;\n}\n\nconst response_data = (responseDis, status) => {\n    //let result = \"\";\n    if (status !== google.maps.DistanceMatrixStatus.OK || status !== \"OK\"){\n        console.log('Error:', status);\n        // OR\n        alert(status);\n    }else{\n        //alert(responseDis.rows[0].elements[0].distance.text);\n        console.log(\"Distance \" + responseDis.rows[0].elements[0].distance.text)\n\n        res = responseDis.rows[0].elements[0].distance.text;\n        return \"aaaaaaaaaaaaa\"\n        //result = responseDis.rows[0].elements[0].distance.text;\n    }\n    //return  \"Hallo\"        //result.toString();\n}\n\nconst test = () => {\n    console.log(\"Is it working??\" + res)\n\n    return  <div>Hiiii</div>;\n}\n\nconst theDist = () => {\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\n    return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n}\n\n// function calcDistance() {\n//     // var origin = new google.maps.LatLng(60.233093,24.7531362);\n//     // var destination = new google.maps.LatLng(60.2767265,24.8575089);\n//     // return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n//\n//     var directionsService = new google.maps.DirectionsService();\n//\n//     var request = {\n//         origin      : 'Melbourne VIC', // a city, full address, landmark etc\n//         destination : 'Sydney NSW',\n//         travelMode  : google.maps.DirectionsTravelMode.DRIVING\n//     };\n//\n//     directionsService.route(request, function(response, status) {\n//         if ( status === google.maps.DirectionsStatus.OK ) {\n//             alert( response.routes[0].legs[0].distance.value ) ; // the distance in metres\n//         }\n//         else {\n//             // oops, there's no route between these two locations\n//             // every time this happens, a kitten dies\n//             // so please, ensure your address is formatted properly\n//         }\n//     });\n// }\n\nexport default { distance, test, theDist }","const axios = require('axios')\nconst baseUrl = '/api/upload'\n\nconst getAll = async () => {\n    const result = await axios.get(baseUrl)\n    return result.data\n}\n\nconst create = async (newImageData) => {\n    const result = await axios.post(baseUrl, newImageData, {})\n    return result.data\n}\n\n// Create image for avatar\nconst createProfileImage =  async (id, imageData) => {\n    const image = await axios.post(`${baseUrl}/${id}/avatar`, imageData);\n    return image.data;\n}\n\n// Update user avatar\nconst newAvatar = async (id, avatar) => {\n    const avt = await axios.post(`${baseUrl}/${id}/update_avatar`, avatar);\n    return avt.data;\n}\n\nconst updateImage = async (id, newImageData) => {\n    const result = await axios.put(`${baseUrl}/${id}`, newImageData)\n    return result.data\n}\n\nconst remove = async (id, recipientId) => {\n    await axios.delete(`${baseUrl}/${id}/${recipientId}`)\n}\n\nexport default { getAll, create, createProfileImage, newAvatar, updateImage, remove }","<template>\n  <div>\n    <!--\n    <MDBContainer style=\"margin-top: 30px;\">\n    -->\n<!--    users {{chatusers}}-->\n      <h2>- {{ provider.yritys }} -</h2>\n\n      <MDBTable style=\"font-size: 18px; text-align: center;\">\n        <tbody>\n        <tr>\n\n          <td>\n            <MDBRow >\n              <MDBCol>\n\n                <MDBIcon style=\"padding: 10px; cursor: pointer;\" i class=\"far fa-thumbs-up\" size=\"2x\"\n                @click=\"getPositiveFeedback\"></MDBIcon>\n\n\n                <MDBBadge color=\"success\" class=\"translate-middle p-1\"\n                          pill\n                          notification>{{provider.rating.positive}}</MDBBadge>\n                <div v-if=\"isPositive\">\n                  <PositiveFeedback\n\n                      :feedback = provider.feedback\n                      @close:comments = closeComments\n                  />\n                </div>\n\n\n              </MDBCol>\n              <MDBCol>\n\n                <MDBIcon\n                    style=\"padding: 10px; cursor: pointer;\" i\n                    class=\"far fa-thumbs-down\" size=\"2x\" @click=\"getNegativeFeedback\"></MDBIcon>\n\n\n                <MDBBadge color=\"danger\" class=\"translate-middle p-1\"\n                          pill\n                          size=\"lg\"\n                          notification>{{provider.rating.negative}}</MDBBadge>\n\n                <NegativeFeedback\n                    v-if=\"isNegative\"\n                    :feedback = provider.feedback\n                    @close:comments = closeComments\n                />\n\n              </MDBCol>\n            </MDBRow>\n\n          </td>\n        </tr>\n        </tbody>\n      </MDBTable>\n\n<!--    selecteduser in recipient panel final {{selecteduser}}-->\n<!--    Chat users on line: {{roomUserCount}}-->\n<!--    <MDBBtn-->\n<!--        v-if=\"!isPressedOpenChat\"-->\n<!--        type=\"submit\"-->\n<!--        size=\"lg\"-->\n<!--        color=\"success\"-->\n<!--        @click=\"openChat\"-->\n<!--    >-->\n<!--      Ava chat-->\n<!--    </MDBBtn>-->\n\n<!--    !isPressedOpenChat-->\n\n\n\n<!--    <MDBBtn-->\n<!--        v-if=\"!isPressedOpenChat\"-->\n<!--        style=\"margin-bottom: 20px;\"-->\n<!--        type=\"submit\"-->\n<!--        size=\"lg\"-->\n<!--        color=\"success\"-->\n<!--        @click=\"openChat\"-->\n<!--    >-->\n<!--      Vaata rohkem infot-->\n<!--    </MDBBtn>-->\n\n<!--    <MDBBtn-->\n<!--        v-if=\"!isPressedContactToUser\"-->\n<!--        style=\"margin-bottom: 20px;\"-->\n<!--        type=\"submit\"-->\n<!--        size=\"lg\"-->\n<!--        color=\"success\"-->\n<!--        @click=\"contactToUser\"-->\n<!--    >-->\n<!--      Saada kasutajale sõnum-->\n<!--    </MDBBtn>-->\n\n\n\n\n\n\n<!--    <MDBBtn-->\n<!--        v-if=\"!isPressedContactToUser\"-->\n<!--        type=\"submit\"-->\n<!--        size=\"lg\"-->\n<!--        color=\"success\"-->\n<!--        @click=\"contactToUser\"-->\n<!--    >-->\n<!--      contact to user-->\n<!--    </MDBBtn>-->\n\n<!--    !isPressedContactToUser-->\n\n<!--    <user-dialog-->\n<!--        v-if=\"isChat\"-->\n<!--        :key=\"count\"-->\n<!--        :chatusers = chatusers-->\n<!--    />-->\n\n    <live-chat\n        :chatusers = chatusers\n        :messages =messages\n        :selecteduser = selecteduser\n        @select:user = selectUser\n        @noSelected = noSelectUser\n        @on:message = onMessage\n\n    />\n\n    \n\n<!--    <div v-for=\"user in chatusers\" :key=\"user.id\">-->\n<!--      <User-->\n<!--          :user = user-->\n<!--          :selected=\"selectedUser === user\"-->\n<!--          @select=\"selectUser(user)\"-->\n<!--      />-->\n<!--    </div>-->\n\n<!--    <MessagePanel-->\n<!--        v-if=\"selectedUser\"-->\n<!--        :user = selectedUser-->\n<!--        :messages = messages-->\n<!--        @new:message=\"onMessage\"-->\n<!--    />-->\n\n\n<!--    <form @submit.prevent=\"sendToApp\">-->\n<!--      <MDBBtn color=\"danger\" type=\"submit\">Info to App page</MDBBtn>-->\n<!--    </form>-->\n\n<!--    <form @submit.prevent=\"avajauuenda\">-->\n<!--      <MDBBtn-->\n\n<!--          type=\"submit\"-->\n<!--          size=\"lg\"-->\n<!--          color=\"success\"-->\n\n<!--      >-->\n<!--        uuenda ja ava-->\n<!--      </MDBBtn>-->\n<!--    </form>-->\n\n\n\n\n\n\n\n<!--    <liveChat-->\n\n<!--        style=\"margin-bottom: 20px;\"-->\n<!--        :un = booking[0].user.username-->\n<!--        :ri = room-->\n<!--        :key=\"count\"-->\n<!--        :room = room-->\n<!--        @test = test-->\n<!--    />-->\n\n\n\n\n\n\n<!--    <span v-if=\"!isChat\" @click=\"renderComponent\">Click to reload render-component</span>-->\n\n<!--    <MDBBtn v-if=\"!isChat\" size=\"lg\" color=\"success\" block @click=\"renderComponent\">-->\n<!--      Saada töö tegijale sõnum-->\n<!--    </MDBBtn>-->\n\n<!--    <MDBBtn color=\"info\" size=\"lg\" @click=\"makeDiil\">-->\n<!--      -&#45;&#45; Suhtle töö pakkujaga -&#45;&#45;-->\n<!--    </MDBBtn>-->\n    <MDBBtn outline=\"info\" block size=\"lg\" @click=\"handleOrder(provider.id)\">\n      Tilaa yritys\n    </MDBBtn>\n\n\n\n\n    <MDBBtn outline=\"secondary\" block size=\"lg\" @click=\"canselRecipientFinal\">\n      Poistu\n    </MDBBtn>\n    <!--\n    </MDBContainer>\n    -->\n<!--    BookingBB {{booking}}-->\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  MDBBtn,\n  //MDBContainer,\n  MDBTable,\n  MDBRow,\n  MDBCol,\n  MDBIcon, MDBBadge\n}from \"mdb-vue-ui-kit\";\nimport PositiveFeedback from \"@/components/PositiveFeedback\";\nimport NegativeFeedback from \"@/components/NegativeFeedback\"\nimport liveChat from '../pages/LiveChat'\n//import UserDialog from './LiveChat'\nimport socket from \"@/socket\";\nimport User from '../components/chatio/User'\nimport MessagePanel from '../components/chatio/MessagePanel.vue'\n//import DialogPanel from \"@/components/DialogPanel\";\n//import UserDialog from \"@/pages/UserDialog\";\n//import socket from \"@/socket\";\n//import socket from \"@/socket\";\n/*{{provider.timeoffer.map(to =>\n\ndatetime.providerMatchingForClient(\n    bookingTime,\n    {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\n    {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\n)\n)\n}}*/\nexport default {\n  name: \"recipient-final\",\n  props: {\n    chatusers: Array,\n\n    selecteduser: null,\n    messages: Array,\n    provider: Object,\n    room: String,\n    roomUserCount: Number,\n    available: String,\n    booking: Array\n  },\n  components: {\n    User,\n    MessagePanel,\n    //UserDialog,\n    //DialogPanel,\n    PositiveFeedback,\n    NegativeFeedback,\n    liveChat,\n    MDBBtn,\n    //MDBContainer,\n    MDBTable,\n    MDBRow,\n    MDBCol,\n    MDBIcon,\n    MDBBadge\n  },\n  data() {\n    return {\n      selectedUser: null,\n      isPositive: false,\n      isNegative: false,\n\n      isChat: false,\n      isPressedOpenChat: false,\n      isPressedContactToUser: false,\n      isConnection: false,\n      isTwoUsers: false,\n\n      feedback: this.provider.feedback,\n\n      //room: \"\",\n\n      isPressedFinal: false,\n\n      //isRoom: false,\n      count: 0,\n      userCount: 0\n    }\n  },\n  mounted () {\n\n  },\n  methods: {\n    chatCredentials () {\n\n    },\n\n    sendToApp () {\n      console.log(\"Pressed\")\n      this.$emit(\"finalinfo\", \"Tere siit finaalist\")\n\n    },\n\n    selectUser(user) {\n      this.$emit(\"select\", user)\n      //if (!user.self)\n      //this.selectedUser = user;\n    },\n\n    noSelectUser () {\n      this.$emit(\"noSelect\");\n    },\n\n    onMessage(content, date) {\n\n      this.$emit(\"message\", content, date)\n\n      // if (this.selectedUser) {\n      //   console.log(\"Selected user: \" + this.selectedUser.username);\n      //   socket.emit(\"private message\", {\n      //     content,\n      //     date,\n      //     to: this.selectedUser.userID,\n      //   });\n      //   this.selectedUser.messages.push({\n      //     content,\n      //     date,\n      //     fromSelf: true,\n      //   });\n      // }\n    },\n\n\n\n\n    test (state) {\n      console.log(\"From chat: \" + state)\n    },\n\n    openChat () {\n      this.isChat = true;\n      this.count++;\n      // socket.on('get updated room users', (data) => {\n      //   console.log(\"Data users length \" + data.users.length)\n      //\n      //   if (data.users.length > 1) {\n      //\n      //     this.isTwoUsers = true;\n      //\n      //   }\n      // })\n\n      //this.isChat = true;\n\n      console.log(\"this room is \" + this.room)\n    },\n\n    // Uus teema homseks valmis aretada!!!\n\n    contactToUser() {\n\n      this.isPressedContactToUser = true;\n      socket.emit('updateRoom', this.room);\n      socket.on('get updated room users', (data) => {\n        console.log(\"New users update \" + data.users.length)\n        if (data.users.length > 1) {\n          this.isConnection = true;\n          //this.isTwoUsers = true;\n        } else {\n          this.isConnection = false;\n        }\n\n      })\n      this.isPressedFinal = true;\n      this.isChat = true;\n\n      // socket.disconnect()\n      // socket.connect()\n    },\n\n\n\n\n\n\n\n    // openChat () {\n    //\n    //\n    //\n    //   socket.on('get room users', (data) => {\n    //     console.log(\"Data users length \" + data.users.length)\n    //\n    //     if (data.users.length > 1) {\n    //\n    //       this.isTwoUsers = true;\n    //\n    //     }\n    //   })\n    //\n    //   //this.isChat = true;\n    //\n    //   this.isPressedOpenChat = true;\n    //\n    //   for (let i = 0; i < 2; i++) {\n    //     this.count ++;\n    //   }\n    //   //this.count ++\n    //\n    //\n    // },\n    //\n    // // Uus teema homseks valmis aretada!!!\n    //\n    // contactToUser() {\n    //\n    //   this.isPressedContactToUser = true;\n    //   socket.emit('updateRoom', this.room);\n    //   socket.on('get updated room users', (data) => {\n    //     console.log(\"New users update \" + data.users.length)\n    //     if (data.users.length > 1) {\n    //       this.isConnection = true;\n    //       //this.isTwoUsers = true;\n    //     } else {\n    //       this.isConnection = false;\n    //     }\n    //\n    //   })\n    //   this.isPressedFinal = true;\n    //   this.isChat = true;\n    //\n    //   socket.disconnect()\n    //   socket.connect()\n    // },\n\n\n    handleOrder (id) {\n      this.$emit('provider:ordered', id)\n    },\n    getPositiveFeedback () {\n      this.isPositive = true;\n      this.isNegative = false;\n\n    },\n    getNegativeFeedback () {\n      this.isNegative = true;\n      this.isPositive = false;\n      //console.log(\"Feedback\")\n    },\n    closeComments (result) {\n      this.isPositive = this.isNegative = result;\n      console.log(\"result \" + result)\n    },\n    canselRecipientFinal () {\n      //this.$router.push(\"/recipient-result\");\n      //socket.emit('unsubscribe')\n      //window.localStorage.removeItem('sessionID')\n      //location.reload();\n\n      this.isChat = false;\n\n      this.$emit('cansel:final', false)\n      this.noSelectUser();\n\n    }\n  },\n\n}\n</script>\n\n<style scoped>\n\n</style>","<template>\n  <div>\n    <MDBListGroup\n        light small style=\"text-align: left;\"\n        v-for=\"data in feedback\" :key=\"data.id\"\n    >\n      <MDBListGroupItem >{{ data.pos }}</MDBListGroupItem>\n\n\n    </MDBListGroup>\n\n    <MDBBtn block outline=\"secondary\" size=\"lg\" @click=\"closeFeedback\">Poistu kommenteistä</MDBBtn>\n  </div>\n</template>\n\n<script>\nimport {\n  MDBListGroup,\n  MDBListGroupItem,\n  MDBBtn\n}from \"mdb-vue-ui-kit\";\n\nexport default {\n  name: \"positive-feedback\",\n  props: {\n    feedback: Array\n  },\n  components: {\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBBtn\n  },\n  data() {\n    return{\n\n    }\n  },\n  methods: {\n    closeFeedback () {\n      this.$emit('close:comments', false);\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./PositiveFeedback.vue?vue&type=template&id=8735e830\"\nimport script from \"./PositiveFeedback.vue?vue&type=script&lang=js\"\nexport * from \"./PositiveFeedback.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <MDBListGroup light small style=\"text-align: left;\" v-for=\"data in feedback\" :key=\"data.id\">\n      <MDBListGroupItem>{{ data.neg }}</MDBListGroupItem>\n\n\n    </MDBListGroup>\n    <MDBBtn block outline=\"secondary\" size=\"lg\" @click=\"closeFeedback\">Poistu kommenteistä</MDBBtn>\n  </div>\n</template>\n\n<script>\nimport {\n  MDBListGroup,\n  MDBListGroupItem,\n  MDBBtn\n}from \"mdb-vue-ui-kit\";\n\nexport default {\n  name: \"negative-feedback\",\n  props: {\n    feedback: Array\n  },\n  components: {\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBBtn\n  },\n  data() {\n    return{\n\n    }\n  },\n  methods: {\n    closeFeedback () {\n      this.$emit('close:comments', false)\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./NegativeFeedback.vue?vue&type=template&id=c924f122\"\nimport script from \"./NegativeFeedback.vue?vue&type=script&lang=js\"\nexport * from \"./NegativeFeedback.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./RecipientPanelFinal.vue?vue&type=template&id=03bbc958\"\nimport script from \"./RecipientPanelFinal.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelFinal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\n\n  <MDBContainer v-if=\"isProviderSelected\">\n    <recipientFinal\n        @cansel:final = handleCanselFinal\n        @provider:ordered = orderSuccess\n        :provider = selectedProvider\n        :room = room\n        :available = availability\n        :booking = booking\n\n        :chatusers = chatusers\n\n\n\n        :selecteduser = selecteduser\n        :messages = messages\n        @message = onMessage\n        @select = selectUser\n        @noSelect = noSelectUser\n        @finalinfo = finalinfo\n\n    />\n\n  </MDBContainer>\n  <MDBContainer v-else>\n    <MDBIcon\n        style=\"float:right; cursor: pointer;\"\n        @click=\"canselResult\"\n        size=\"3x\"\n    >\n      <i class=\"fas fa-undo\"></i>\n    </MDBIcon>\n    <h3>Päivämäärä: {{booking[0].date}}</h3>\n\n    <h2>Tarvin tässä osaaja - {{line}}</h2>\n\n    <successMessage\n        :message = orderMessage\n    />\n\n    <MDBRow>\n      <MDBCol>\n        <MDBTable border=\"primary\" style=\"font-size: 18px; text-align: left;\">\n          <tbody>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              {{booking[0].description}}\n\n\n            </td>\n            <td v-else>\n              <MDBRow>\n                <MDBCol col=\"11\">\n                  <MDBTextarea\n                      label=\"Muokkaa tehtävän kuvausta...\"\n                      rows=\"4\" v-model=\"description\"\n                      style=\"font-size: 14px; padding: 20px;\"\n                  />\n                </MDBCol>\n                <MDBCol col=\"1\">\n                  <MDBBtnClose\n                      @click=\"isEditDescription = false\"\n                      style=\"float: right; cursor: pointer\"\n\n                  />\n                </MDBCol>\n              </MDBRow>\n\n\n\n\n            </td>\n          </tr>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"pressedEditDescription\">Muokkaa tehtävän kuvausta</MDBBtn>\n            </td>\n            <td v-else>\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"saveEditedDescription\">Tallenna tehtävän kuvaus</MDBBtn>\n            </td>\n          </tr>\n\n          </tbody>\n        </MDBTable>\n\n\n        <!--   If not images yet    -->\n<!--        booking[0].image === null || booking[0].image.length === 0-->\n<!--        <MDBRow v-if=\"images.length === 0\">-->\n<!--          <MDBCol>-->\n\n<!--            <MDBBtn v-if=\"!isAddIFirstImage\" block color=\"primary\" @click=\"pressAddFirstImage\">Add image</MDBBtn>-->\n<!--            <label v-if=\"isAddFirstImage\" for=\"file-upload\" class=\"custom-file-upload\">-->\n<!--                    <span v-if=\"value\">-->\n<!--                    Muokkaa kuva: {{value.name}}-->\n\n<!--                     </span>-->\n<!--              <span v-else>Valitse kuva tehtävästä</span>-->\n<!--            </label>-->\n<!--            <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>-->\n<!--            <img v-if=\"showImage && !isUploaded\" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>-->\n<!--            <MDBBtn v-if=\"isImageSelected\" block size=\"lg\" @click=\"uploadFirstImage(i)\">Upload image</MDBBtn>-->\n<!--          </MDBCol>-->\n<!--        </MDBRow>-->\n<!--        &lt;!&ndash;        <div v-if=\"isUploadImage && images.length === 0\" class=\"spinner-border\" role=\"status\">-->\n<!--                  <span class=\"visually-hidden\">Loading...</span>-->\n<!--                </div>&ndash;&gt;-->\n<!--        <div>-->\n\n<!--          <MDBRow class=\"imageSection\" v-for=\"(image, i) in images\" :key=\"i\">-->\n\n<!--            <MDBCol v-if=\"image.name\">-->\n<!--              <img-->\n\n<!--                  :src=\"showImage && isUploaded && (imageIndex === i) ? showImage : require(`/server/uploads/${image.name}`)\"-->\n<!--                  class = \"loading\"-->\n<!--                  style=\"width: 100%; margin-bottom: 20px;\"-->\n<!--                  alt=\"kuva\"-->\n<!--              />-->\n\n<!--              <div >-->\n<!--                <MDBBtn-->\n<!--                    v-if=\"!isEditImage || imageIndex !== i\"-->\n<!--                    outline=\"info\"-->\n<!--                    block-->\n<!--                    size=\"lg\"-->\n<!--                    @click=\"pressEditImage(i)\"-->\n<!--                >-->\n<!--                  Muokkaa kuva tehtävästä-->\n<!--                </MDBBtn>-->\n<!--                <div v-if=\"imageIndex === i\" style=\"border: 1px solid grey; padding: 10px;\">-->\n<!--                  <MDBBtnClose style=\"float: right;\" @click=\"closeEditImage\">-->\n\n<!--                  </MDBBtnClose>-->\n<!--                  <label for=\"file-upload\" class=\"custom-file-upload\">-->\n<!--                    <span v-if=\"value\">-->\n<!--                    Muokkaa kuva: {{value.name}}-->\n\n<!--                     </span>-->\n<!--                    <span v-else>Valitse uusi kuva tehtävästä</span>-->\n<!--                  </label>-->\n\n\n<!--                  <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>-->\n<!--                  <MDBBtn v-if=\"isImageSelected\" block size=\"lg\" @click=\"uploadEditedImage(image, i)\">Change image</MDBBtn>-->\n<!--                  <MDBBtn block color=\"danger\" size=\"lg\" @click=\"removeImg(image._id)\">Remove image</MDBBtn>'-->\n<!--                  <img v-if=\"showImage && !isImageCreated \" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>-->\n\n<!--                  &lt;!&ndash;                  <MDBBtn v-if=\"isImageSelected\" block size=\"lg\" @click=\"uploadFirstImage(i)\">Upload image</MDBBtn>&ndash;&gt;-->\n<!--                </div>-->\n\n<!--              </div>-->\n\n\n<!--            </MDBCol>-->\n\n<!--          </MDBRow>-->\n<!--          <div v-if=\"booking[0].image !== null\">-->\n<!--            <MDBBtn-->\n<!--                v-if=\"booking[0].image.length > 0\"-->\n<!--                style=\"margin-bottom: 20px;\"-->\n<!--                block-->\n<!--                size=\"lg\"-->\n<!--                outline=\"success\"-->\n<!--                @click=\"pressAdditionalImage\">-->\n<!--              Lataa uusi kuva-->\n<!--            </MDBBtn>-->\n\n<!--          </div>-->\n\n\n<!--          <label v-if=\"isAddImage\" for=\"file-upload\" class=\"custom-file-upload\">-->\n<!--                    <span v-if=\"value\">-->\n<!--                    Muokkaa kuva: {{value.name}}-->\n\n<!--                     </span>-->\n<!--            <span v-else>Valitse kuva tehtävästä</span>-->\n<!--          </label>-->\n<!--          <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>-->\n\n<!--          <MDBBtn v-if=\"isImageSelected\" block size=\"lg\" @click=\"uploadAdditionalImage\">Lataa uusi kuva tehtävästä</MDBBtn>-->\n<!--          &lt;!&ndash;          <MDBBtn block color=\"danger\" size=\"lg\" @click=\"removeImg(image._id)\">Remove image</MDBBtn>'&ndash;&gt;-->\n<!--          <img v-if=\"showImage && !isImageCreated \" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>-->\n\n<!--        </div>-->\n\n<!--        &lt;!&ndash;        images {{booking}}&ndash;&gt;-->\n<!--        <MDBRow>-->\n<!--          <MDBCol>-->\n<!--            &lt;!&ndash;            <div >-->\n<!--                          <MDBBtn v-if=\"!isEditImage\" outline=\"info\" block size=\"lg\" @click=\"isEditImage = true\">Muokkaa tehtävän kuvausta</MDBBtn>-->\n<!--                          <input v-else id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>-->\n<!--                          <MDBBtn v-if=\"isImageSelected\" block size=\"lg\" @click=\"uploadEditedImage(image._id)\">Change image</MDBBtn>-->\n<!--                          <img v-if=\"showImage\" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>-->\n<!--                        </div>&ndash;&gt;-->\n<!--          </MDBCol>-->\n<!--        </MDBRow>-->\n\n        <MDBRow v-if=\"booking[0].image === null || booking[0].image.length === 0\">\n          <MDBCol>\n\n            <MDBBtn v-if=\"!isAddFirstImage\" block outline=\"primary\" size=\"lg\" @click=\"pressAddFirstImage\">Lisää kuva tehtävästä</MDBBtn>\n            <label v-if=\"isAddFirstImage\" for=\"file-upload\" class=\"custom-file-upload\">\n                    <span v-if=\"value\">\n                    Muokkaa kuva: {{value.name}}\n\n                     </span>\n              <span v-else>Valitse ensimmäinen kuva tehtävästä</span>\n            </label>\n            <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>\n            <img v-if=\"showImage && !isUploaded && imageIndex === 0\" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>\n            <MDBBtn v-if=\"isImageSelected\" block size=\"lg\" @click=\"uploadFirstImage(i)\">Upload image</MDBBtn>\n          </MDBCol>\n        </MDBRow>\n\n        <div>\n\n          <MDBRow class=\"imageSection\" v-for=\"(image, i) in images\" :key=\"i\">\n\n            <MDBCol >\n              index {{i}}\n              <img\n\n                  :src=\"showImage  && imageIndex === i ? showImage : require(`/server/uploads/${image.name}`)\"\n                  class = \"loading\"\n                  style=\"width: 100%; margin-bottom: 20px;\"\n                  alt=\"kuva\"\n              />\n\n              <div >\n                <MDBBtn\n\n                    outline=\"info\"\n                    block\n                    size=\"lg\"\n                    @click=\"pressEditImage(i)\"\n                >\n                  Muokkaa kuva tehtävästä\n                </MDBBtn>\n                <div v-if=\"imageIndex === i && isEditPanel\" style=\"border: 1px solid grey; padding: 10px;\">\n                  <MDBBtnClose style=\"float: right;\" @click=\"closeEditImage(i)\">\n\n                  </MDBBtnClose>\n                  <label for=\"file-upload\" class=\"custom-file-upload\">\n                    <span v-if=\"value\">\n                    Muokkaa kuva: {{value.name}}\n\n                     </span>\n                    <span v-else>Valitse uusi kuva tehtävästä</span>\n                  </label>\n\n\n                  <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>\n                  <MDBBtn v-if=\"isImageSelected\" block size=\"lg\" @click=\"uploadEditedImage(image, i)\">Change image</MDBBtn>\n                  <MDBBtn block color=\"danger\" size=\"lg\" @click=\"removeImg(image._id)\">Remove image</MDBBtn>'\n\n\n                  <!--                  <img v-if=\"showImage && !isImageCreated \" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>-->\n\n                  <!--                  <MDBBtn v-if=\"isImageSelected\" block size=\"lg\" @click=\"uploadFirstImage(i)\">Upload image</MDBBtn>-->\n                </div>\n\n              </div>\n\n\n            </MDBCol>\n\n          </MDBRow>\n          <div v-if=\"booking[0].image !== null\">\n            <MDBBtn\n                v-if=\"booking[0].image.length > 0\"\n                style=\"margin-bottom: 20px;\"\n                block\n                size=\"lg\"\n                outline=\"success\"\n                @click=\"pressAdditionalImage\">\n              Lataa uusi kuva\n            </MDBBtn>\n\n          </div>\n\n\n          <label v-if=\"isAddAdditionalImage\" for=\"file-upload\" class=\"custom-file-upload\">\n                    <span v-if=\"value\">\n                    Muokkaa kuva: {{value.name}}\n\n                     </span>\n            <span v-else>Valitse kuva tehtävästä</span>\n          </label>\n          <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>\n\n          <MDBBtn v-if=\"isAddAdditionalImage && value\" block size=\"lg\" @click=\"uploadAdditionalImage\">Lataa uusi kuva tehtävästä</MDBBtn>\n          <!--          <MDBBtn block color=\"danger\" size=\"lg\" @click=\"removeImg(image._id)\">Remove image</MDBBtn>'-->\n          <!--          <img v-if=\"showImage && !isImageCreated \" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>-->\n\n        </div>\n\n        <!--        images {{booking}}-->\n        <MDBRow>\n          <MDBCol>\n            <!--            <div >\n                          <MDBBtn v-if=\"!isEditImage\" outline=\"info\" block size=\"lg\" @click=\"isEditImage = true\">Muokkaa tehtävän kuvausta</MDBBtn>\n                          <input v-else id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>\n                          <MDBBtn v-if=\"isImageSelected\" block size=\"lg\" @click=\"uploadEditedImage(image._id)\">Change image</MDBBtn>\n                          <img v-if=\"showImage\" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>\n                        </div>-->\n          </MDBCol>\n        </MDBRow>\n\n\n\n\n\n\n\n\n      </MDBCol>\n      <MDBCol v-if=\"isOrdered\">\n        <h2>Ordered</h2>\n      </MDBCol>\n      <MDBCol lg=\"6\" v-else>\n        <div v-if=\"providers.length > 0\">\n          <div class=\"ui large form\">\n            <div class=\"field\">\n              <select id=\"listOfProviders\" v-model=\"filterResult\" @click=\"addFilter\">\n                <option disabled value=\"\">Suodatin...</option>\n                <option value=\"distance\">Etäisyyden mukaan</option>\n                <option value=\"rating\">positiivisen palauteen mukaan</option>\n                <!--                <option>Rating</option>-->\n                <!--                <option>Else more</option>-->\n              </select>\n            </div>\n\n          </div>\n          <br>\n\n          <MDBTable  style=\"font-size: 18px; text-align: center;\">\n            <tbody>\n            <tr v-for=\"provider in providers\" :key=\"provider.id\">\n\n\n              <td v-if=\"provider.timeoffer.map(to =>\n\n                datetime.providerMatchingForClient(\n                    bookingTime,\n                    {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\n                    {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\n                )\n              ).includes(true)\">\n                <MDBBtn style=\"width: 200px; padding: 20px; background-color: grey; border: solid #4c4949;color: #f0eeee; font-size: 150%;\"\n                        outline=\"info\"\n                        size=\"lg\"\n                        @click=\"getProviderInfo(provider,'green')\"\n                >\n                  {{provider.yritys}}\n                  <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span>\n                </MDBBtn>\n                <MDBBadge\n                    color=\"success\"\n                    class=\"translate-middle p-1\"\n                    pill\n                    notification\n                ><h4>Saatavilla sen aikaan</h4>\n                </MDBBadge>\n\n\n\n\n\n              </td>\n              <td v-else>\n\n                <MDBBtn\n                    style=\"width: 200px; padding: 20px; background-color: #827f7f; border: solid #5f5d5d;color: #f0eeee; font-size: 150%;\"\n                    size=\"lg\"\n                    @click=\"getProviderInfo(provider, 'orange')\"\n                >\n                  {{provider.yritys}} <br>\n                  <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span>\n                </MDBBtn>\n\n\n\n                <MDBBadge\n                    color=\"info\"\n                    class=\"translate-middle p-1\"\n                    pill\n                    notification\n                ><h4>Sovittaessa</h4></MDBBadge>\n\n              </td>\n\n            </tr>\n            <tr>\n            </tr>\n            </tbody>\n          </MDBTable>\n\n          <!--          Booking {{booking}}-->\n\n        </div>\n        <div v-else>\n          <h2 style=\"width: 100%;\">Yrityksiä hetkellä ei löytyy</h2>\n        </div>\n\n\n\n      </MDBCol>\n      <MDBBtn block outline=\"danger\" size=\"lg\" @click=\"canselResult\">Takaisin</MDBBtn>\n    </MDBRow>\n    images {{images}}\n  </MDBContainer>\n\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  MDBBtn, MDBContainer, MDBTable, MDBRow,\n  MDBBtnClose,\n  MDBCol, MDBTextarea,\n  MDBIcon,\n  MDBBadge,\n}from \"mdb-vue-ui-kit\";\nimport dt from '../components/controllers/datetime'\nimport recipientFinal from '../pages/RecipientPanelFinal'\nimport successMessage from '../components/notifications/successMessage'\nimport dist from '../components/controllers/distance'\nimport providerService from '../service/providers'\nimport imageService from '../service/image'\n//import socket from \"@/socket\";\nimport {ref} from 'vue'\nimport recipientService from \"@/service/recipients\";\nimport socket from \"@/socket\";\nimport uploadService from \"@/service/image\";\n//import socket from \"@/socket\";\n\n\nexport default {\n  name: \"recipient-panel-result\",\n  props: {\n    chatusers: Array,\n\n    selecteduser: null,\n    messages: Array,\n    loggedInUser: Object,\n    booking: null,\n    images: Array,\n    bookingTime: null,\n    providers: Array,\n    confirmedBookings: Array,\n    line: String\n  },\n  data () {\n    return {\n      chatUser: {},\n      count: 0,\n      datetime: dt,\n      distance: dist,\n      selectedProvider: null,\n      isProviderSelected: false,\n      availability: \"\",\n      orderMessage: null,\n      isOrdered: false,\n      isEditDescription: false,\n      description: this.booking[0].description,\n\n      isAddImage: false,\n      isAddFirstImage: false,\n      isAddAdditionalImage: false,\n      isEditImage: false,\n      isUploadImage: false,\n      isUploaded: false,\n      isImageCreated: false,\n      isAddNewImage: false,\n      isEditPanel: false,\n\n      value: null,\n      imageIndex: null,\n      file: null,\n      isImageSelected: false,\n      isAdditionalImageSelected: false,\n      showImage: null,\n      tempImages: [],\n      imagesx: [],\n      imagesxxx: [],\n      room: \"\",\n      roomUserCount: 0,\n      filterResult: \"\"\n    }\n  },\n\n  components: {\n    successMessage,\n    dist,\n    recipientFinal,\n    MDBBtn,\n    MDBBtnClose,\n    MDBContainer,\n    MDBTable,\n    MDBRow,\n    MDBCol,\n    MDBTextarea,\n    MDBIcon,\n    MDBBadge\n  },\n  methods: {\n    getDistance () {\n      //console.log(\"Distance +++++??? \" + dist.distance())\n      console.log(\"sss \" + dist.test())\n    },\n    selectUser (user) {\n      this.$emit('select', user);\n    },\n    noSelectUser () {\n      this.$emit(\"noSelect\");\n    },\n    onMessage (content, date) {\n      this.$emit(\"message\", content, date);\n    },\n    finalinfo (data) {\n      console.log(\"Final info in result pressed \");\n      this.$emit(\"finalinfo\", data)\n\n    },\n    getChatCredentials () {\n\n    },\n    async pressAddFirstImage () {\n      this.isAddFirstImage = true;\n      this.imageIndex = 0;\n    },\n    pressEditImage (index) {\n      //this.isImageSelected = false;\n      this.imageIndex = index;\n      this.isEditImage = true;\n\n      this.isEditPanel = true;\n\n      //this.isImageCreated = false;\n      //this.isUploaded = false;\n\n      this.showImage = null;\n      //this.value = null;\n    },\n    pressAdditionalImage (index) {\n      //this.imageIndex = this.booking[0].image.length - 1;\n      this.isAddAdditionalImage = true;\n      this.imageIndex = this.images.length;\n      //this.imageIndex = \"new\";\n      //this.isAddNewImage = true;\n\n      console.log(\"Images index = \" + this.imageIndex);\n      this.isAddImage = true;\n    },\n    closeEditImage () {\n      this.imageIndex = null;\n      this.isEditPanel = false\n      this.isEditImage = true;\n    },\n    handleFileChange(e) {\n      //this.$emit('input', e.target.client[0])\n\n      try {\n\n        const files = e.target.files[0]\n        console.log('event target client ', e.target.files[0])\n        if (files) {\n          const tempImage = URL.createObjectURL(files)\n          this.tempImages.push(tempImage);\n          this.showImage = URL.createObjectURL(files)\n          this.file = e.target.files[0];\n        }\n\n      } catch (err) {\n        console.log('Error:', err)\n      }\n\n      this.value = e.target.files[0]\n      if (e.target.files[0]) {\n        this.isImageSelected = true;\n      } else {\n        this.isImageSelected = false;\n      }\n    },\n\n    closeEditPanel (index) {\n      this.imageIndex = index;\n      //this.isEditImage = true;\n      this.isEditPanel = false\n    },\n\n    async removeImg (id) {\n      //this.value = null;\n      this.$emit(\"removeImage\", id);\n\n      //this.imagesxxx= this.imagesxxx.filter(img => img._id !== id);\n      await recipientService.removeImage(this.booking[0].id, id);\n      await imageService.remove(id, this.booking[0].id);\n\n      this.imageIndex = null\n      //this.isEditDescription = false;\n\n      this.isImageSelected = false;\n      this.showImage = null;\n    },\n    async uploadFirstImage (index) {\n      const data = new FormData();\n      this.isUploadImage = true;\n      this.imageIndex = 0;\n      //this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n\n      if (img) {\n        this.file = null;\n\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name\n        }\n\n        this.$emit(\"addImage\", image);\n\n        this.imageIndex = 0;\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n\n      }\n\n\n\n    },\n    async uploadAdditionalImage () {\n      this.isAdditionalImageSelected = false;\n      this.isAddAdditionalImage = false;\n      this.value = null;\n      //this.isEditImage = false;\n      //this.imageIndex = null;\n      //this.imageIndex = this.booking[0].image.length - 1;\n      console.log(\"Image index index \" + this.imageIndex)\n      const data = new FormData();\n\n      this.isUploadImage = true;\n      //this.imageIndex = 0;\n      this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n\n      if (img) {\n        //this.imgId = img.imgCreated._id;\n        this.file = null;\n        //this.showImage = null;\n        //this.value = null;\n\n        //console.log(\"xxx \" + img.imgCreated._id)\n        //console.log(\"Image itself \" + img.imgCreated.image)\n        //await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name\n        }\n\n        //this.imagesxxx.push(image);\n\n        this.$emit(\"addImage\", image);\n\n        //this.images.push(image);\n\n        // const booking = await recipientService.getBookingById(this.booking[0].id);\n        //\n        // setTimeout( async () => {\n        //   booking[0].image.forEach(im=> {\n        //     this.images.push(im)\n        //   })\n        //   //this.images = this.images.concat(booking[0].image)\n        // }, 500)\n\n\n        /*const booking = await recipientService.getBookingById(this.booking[0].id);\n\n        this.imagesxxx = booking[0].image\n*/\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n\n\n        //this.imageIndex = null;\n      }\n\n\n\n    },\n    async uploadEditedImage (image, index) {\n\n      console.log(\"Edited image index is: \" + index);\n      //this.imageIndex = index;\n      this.isUploaded = true;\n      this.isImageCreated = true;\n      const data = new FormData();\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.updateImage(image._id, data);\n\n\n\n      if (img) {\n\n\n        //console.log(\"New image name is \" + img.name)\n        //this.imgId = img.imgCreated._id;\n        this.file = null;\n\n        this.$emit(\"editImage\", image, img)\n\n        this.isImageSelected = false;\n\n        this.isEditPanel = false;\n\n        this.isEditImage = false;\n        this.isUploaded = true;\n\n        //this.imageIndex = null;\n      }\n\n      //this.imageIndex = null;\n\n    },\n    pressedEditDescription () {\n      this.isEditDescription = true\n      console.log(\"Descripton: \" + this.description);\n    },\n    saveEditedDescription () {\n      this.isEditDescription = false;\n      const description = {\n        description: this.description\n      }\n      this.$emit(\"editDescription\", this.description);\n      recipientService.editDescription(this.booking[0].id, description)\n      //this.description = \"\";\n    },\n    cancelEditDescription () {\n      console.log(\"Is here something happening??\")\n    },\n    async orderSuccess (provId) {\n      //console.log(\"Ordered!!!\")\n\n      this.isProviderSelected = false;\n\n      //this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n      console.log(\"Provider id \" + provId)\n      console.log(\"Recpient id: \" + this.booking[0].id);\n\n      const providerID = {\n        providerID: this.selectedProvider.id\n      };\n\n\n      //await recipientService.addProviderID(this.booking[0].id, providerID);\n\n      await recipientService.addProviderData(this.booking[0].id, this.selectedProvider.id);\n\n      //socket.emit(\"send booking notification\", this.booking[0], this.selectedProvider.id);\n\n      //const providerName =\n      //const status = \"notSeen\";\n      const createBookingStatus = await recipientService.updateRecipient(this.booking[0].id, {status: \"notSeen\"});\n      console.log(\"Is status updated: \" + createBookingStatus.status);\n      this.$emit('remove:confirmed:provider', provId);\n      this.$emit('set:order:to:send', this.booking[0].id)\n\n      const recipientId = this.booking[0].id;\n\n      //--------------- About need delete selected and confirmed provider ------------\n\n      //const booking = await providerServise.updateProvider(provId, {booking: [this.booking.id]})\n\n      const booking = await providerService.addProviderBooking(provId, recipientId);\n      if (booking === \"Recipient is added!\") {\n        this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n\n        console.log(\"Booking made - id: \" + booking.id);\n\n        this.isOrdered = true;\n\n        setTimeout(() => {\n          this.orderMessage = null;\n        }, 3000)\n      } else {\n        this.orderMessage = \"Olet jo lähetänyt tilauksen!\"\n        setTimeout(() => {\n          this.orderMessage = null;\n        }, 3000)\n        //console.log(\"Yritys on jo tilattu!\")\n      }\n\n\n\n    },\n    getProviderInfo (provider, marker) {\n\n      this.selectedProvider = provider;\n      this.availability = marker;\n      this.isProviderSelected = true;\n\n      //console.log(\"Booking username \" + this.booking[0].user.username)\n      //console.log(\"Recipient room: \" + (provider.yritys + this.booking[0].user.username))\n      this.room = provider.yritys + this.booking[0].user.username\n\n      socket.emit(\"room users count\")\n      socket.on('get room users count', (data) => {\n        console.log(\"Can we get users data from backend in recipient final??? \" + data.users.length)\n        this.roomUserCount = data.users.length;\n      })\n\n      const username = this.booking[0].user.username;\n      const room = provider.yritys + this.booking[0].user.username;\n\n\n\n      const chatCredentials = {\n        room: room,\n        userID: this.chatUser.id,\n        username: username,\n      }\n\n      const providerDatax = {\n        userID: provider.user.id,\n        username: provider.user.username,\n        room: room\n      }\n\n      this.$emit(\"provider\", providerDatax);\n\n      const providerData = \"Allu\"\n\n      const id = provider.user.id;\n      const name = provider.user.username;\n\n      // data to create new room\n      this.$emit(\"chatCredentials\", chatCredentials)\n\n      //socket.emit(\"online\", (room));\n\n      // socket.emit(\"create new room user\", {\n      //   room: room,\n      //   username: username\n      // })\n      socket.emit(\"create room users\", {\n        room: room,\n        username: username,\n        providerUsername: provider.user.username,\n        providerID: provider.user.id\n      })\n\n      //socket.emit(\"update room\", room, id, name)\n      // let rooms = [\"Oopersama\", \"tvsama\"]\n      // socket.emit(\"join all room\", rooms);\n      // iolrhjwefiogäqhj\n    },\n    addFilter () {\n      const filterListedProviders = document.getElementById(\"listOfProviders\")\n\n      filterListedProviders.addEventListener(\"change\", (event) => {\n        console.log(\"Filtered provider: \" + event.target.value);\n        this.$emit(\"filter_provider\", event.target.value);\n        // if (event.target.value === \"distance\") {\n        //   this.$emit(\"filter_provider\", event.target.value);\n        // } else if (event.target.value === \"feedback\") {\n        //\n        //   this.$emit(\"filter_feedback\")\n        // }\n\n\n\n      })\n    },\n    handleCanselFinal (result) {\n      this.isProviderSelected = result;\n    },\n    canselResult () {\n      this.$emit('cansel:result', false)\n    }\n  },\n  async mounted() {\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      this.chatUser = user;\n\n      /*const booking = await recipientService.getBookingById(this.booking[0].id);\n      this.imagesxxx = booking[0].image*/\n      /*booking[0].image.forEach(bi => {\n        this.tempImages.push(bi.name)\n      })*/\n\n\n\n\n\n      //this.joinServer(username, userID);\n    }\n\n\n  }\n}\n</script>\n\n\n<style scoped>\nimg.loading {\n  width: 100%;\n  height: 400px;\n  background: transparent url(https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif) no-repeat scroll center center;\n}\n.success {\n  color: white;\n  background: #7bc47b;\n  font-size: 20px;\n  border: solid #0e920e;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\ninput[type=\"file\"] {\n  display: none;\n}\n.custom-file-upload {\n  width: 100%;\n\n  color: white;\n  background-color: #87958e;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 10px 12px;\n  margin-bottom: 10px;\n  cursor: pointer;\n}\n.imageSection {\n  margin-bottom: 20px;\n}\n\n\n</style>","import { render } from \"./RecipientPanelResult.vue?vue&type=template&id=177037a7&scoped=true\"\nimport script from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanelResult.vue?vue&type=style&index=0&id=177037a7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-177037a7\"]])\n\nexport default __exports__"],"names":["compare","rec","prov","receiverDate","Date","y","m","d","hour","min","providerDate","providerMatchingForClient","re","pFrom","pTo","pFromDate","pToDate","res","distance","origin","google","maps","LatLng","destination","service","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","unitSystem","UnitSystem","METRIC","durationInTraffic","avoidHighways","avoidTolls","response_data","responseDis","status","DistanceMatrixStatus","OK","console","log","rows","elements","text","alert","test","_createVNode","_createTextVNode","theDist","geometry","spherical","computeDistanceBetween","toFixed","axios","require","baseUrl","getAll","async","result","get","data","create","post","newImageData","createProfileImage","id","imageData","image","newAvatar","avatar","avt","updateImage","put","remove","recipientId","delete","_createElementBlock","_createElementVNode","_toDisplayString","$props","provider","yritys","_component_MDBTable","style","_component_MDBRow","_component_MDBCol","_component_MDBIcon","i","class","size","onClick","$options","getPositiveFeedback","_component_MDBBadge","color","pill","notification","rating","positive","$data","isPositive","_hoisted_1","_component_PositiveFeedback","feedback","closeComments","getNegativeFeedback","negative","isNegative","_createBlock","_component_NegativeFeedback","_component_live_chat","chatusers","messages","selecteduser","selectUser","onNoSelected","noSelectUser","onMessage","_component_MDBBtn","outline","block","_cache","$event","handleOrder","canselRecipientFinal","_Fragment","_renderList","_component_MDBListGroup","light","small","key","_component_MDBListGroupItem","pos","closeFeedback","name","props","Array","components","MDBListGroup","MDBListGroupItem","MDBBtn","methods","this","$emit","__exports__","neg","Object","room","String","roomUserCount","Number","available","booking","User","MessagePanel","PositiveFeedback","NegativeFeedback","liveChat","MDBTable","MDBRow","MDBCol","MDBIcon","MDBBadge","selectedUser","isChat","isPressedOpenChat","isPressedContactToUser","isConnection","isTwoUsers","isPressedFinal","count","userCount","mounted","chatCredentials","sendToApp","user","content","date","state","openChat","contactToUser","socket","emit","on","users","length","render","for","disabled","value","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_37","isProviderSelected","_component_MDBContainer","_component_recipientFinal","handleCanselFinal","orderSuccess","selectedProvider","availability","onSelect","onNoSelect","onFinalinfo","finalinfo","canselResult","line","_component_successMessage","message","orderMessage","border","isEditDescription","_hoisted_3","col","_component_MDBTextarea","label","description","_component_MDBBtnClose","_hoisted_2","_hoisted_5","saveEditedDescription","_hoisted_4","pressedEditDescription","isAddFirstImage","pressAddFirstImage","_hoisted_6","_hoisted_7","_hoisted_8","type","onChange","args","handleFileChange","showImage","isUploaded","imageIndex","src","alt","isImageSelected","uploadFirstImage","_ctx","images","pressEditImage","isEditPanel","_hoisted_11","closeEditImage","_hoisted_12","_hoisted_13","_hoisted_14","uploadEditedImage","removeImg","_id","_hoisted_15","pressAdditionalImage","isAddAdditionalImage","_hoisted_16","_hoisted_17","_hoisted_18","uploadAdditionalImage","isOrdered","_hoisted_19","lg","providers","_hoisted_20","_hoisted_21","_hoisted_22","filterResult","addFilter","_hoisted_27","timeoffer","map","to","datetime","bookingTime","yearFrom","monthFrom","dayFrom","hoursFrom","minutesFrom","yearTo","monthTo","dayTo","hoursTo","minutesTo","includes","_hoisted_28","getProviderInfo","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_38","loggedInUser","confirmedBookings","chatUser","dt","dist","isAddImage","isEditImage","isUploadImage","isImageCreated","isAddNewImage","file","isAdditionalImageSelected","tempImages","imagesx","imagesxxx","successMessage","recipientFinal","MDBBtnClose","MDBContainer","MDBTextarea","getDistance","getChatCredentials","index","e","files","target","tempImage","URL","createObjectURL","push","err","closeEditPanel","recipientService","removeImage","imageService","FormData","append","img","addImage","imgCreated","editDescription","cancelEditDescription","provId","addProviderData","createBookingStatus","updateRecipient","providerService","addProviderBooking","setTimeout","marker","username","userID","providerDatax","providerUsername","providerID","filterListedProviders","document","getElementById","addEventListener","event","loggedUserJSON","window","localStorage","getItem","JSON","parse"],"sourceRoot":""}