{"version":3,"file":"js/854.7983b65f.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/profession/proList.js","webpack://prore-mongo/./src/pages/RecipientForm.vue","webpack://prore-mongo/./src/pages/RecipientForm.vue?59c8"],"sourcesContent":["// const list = [\r\n//     \"Siivooja\",\r\n//     \"Hitsaaja\",\r\n//     \"Bussikuski\"\r\n// ]\r\n\r\nconst construction = [\r\n    {\"label\": \"Hitsaaja\"},\r\n    {\"label\": \"Putkimies\"},\r\n    {\"label\": \"Sähkömies\"}\r\n]\r\nconst realEstate = [\r\n    {\"label\": \"Siivooja\", \"value\": \"4\"}\r\n]\r\n\r\nconst hospital = [\r\n    {\"label\": \"Kirurgi\", \"value\": \"5\"},\r\n    {\"label\": \"Psykiatri\", \"value\": \"6\"}\r\n]\r\n\r\nconst beauty = [\r\n    {\"label\": \"Kampaaja\", \"value\": \"7\"},\r\n    {\"label\": \"Parturi\", \"value\": \"8\"}\r\n]\r\n\r\n\r\nconst options = [\r\n    {\"group\": \"Rakennus\", \"options\": construction},\r\n    {\"group\": \"Kiinteistöala\", \"options\": realEstate},\r\n    {\"group\": \"Terveydenala\", \"options\": hospital},\r\n    {\"group\": \"Kauneusala\", \"options\": beauty}\r\n]\r\n\r\n\r\n\r\nexport default options;","<template>\n\n  <div>\n\n\n\n    <MDBContainer style=\"padding-top: 70px; position: relative;\">\n      <MDBBtnClose\n          white\n          class=\"close_btn\"\n          @click=\"$router.go(-1)\"\n      />\n      <MDBRow>\n        <MDBCol>\n          <h3 style=\"margin-top: 10px;\">Täytä alla oleva tilaus</h3>\n        </MDBCol>\n        <MDBCol>\n          <h3 style=\"margin-top:20px; margin-bottom: 20px;\">--- TAI ---</h3>\n        </MDBCol>\n        <MDBCol>\n          <MDBBtn outline=\"success\" block size=\"lg\" @click=\"this.$router.push('/recipient-public')\" style=\"margin-top:5px; margin-bottom: 20px;\">Etsi kartalta</MDBBtn>\n        </MDBCol>\n      </MDBRow>\n      <form class=\"g-3 needs-validation\" novalidate @submit.prevent=\"checkForm\">\n        <MDBInput\n            counter :maxlength=\"30\"\n            label=\"Anna otsikko\"\n            white\n            v-model=\"header\"\n            id=\"header\"\n            size=\"lg\"\n            invalidFeedback=\"Ole hyvä ja kirjoita otsikko.\"\n            validFeedback=\"Ok!\"\n            required\n            wrapperClass=\"mb-4\"/>\n\n        <p v-if=\"recipientBookings.length > 0\" style=\"text-align: left; color: deepskyblue\">Osoite: {{ recipientBookings[0].address }}</p>\n\n        <MDBInput\n            :label=\"recipientBookings.length > 0 ? 'Anna toinen osoitteesi' : 'Anna osoite'\"\n            white\n            v-model=\"address\"\n            id=\"osoite\"\n            size=\"lg\"\n            invalidFeedback=\"Ole hyvä ja kirjoita osoite.\"\n            validFeedback=\"Ok!\"\n            required\n            wrapperClass=\"mb-4\"/>\n\n        <div class=\"ui form\">\n          <div class=\"field\">\n<!--            <select v-if=\"isNotSelected\"-->\n<!--                    id=\"noSelected\"-->\n<!--                    style=\"border-color: red; color: red; margin-bottom: 20px;\"-->\n<!--                    v-model=\"professional\"-->\n<!--                    @change=\"isNotSelected = false\">-->\n<!--              <option disabled value=\"\" >Valitse ammattilainen</option>-->\n<!--              <option>Putkimies</option>-->\n<!--              <option>Sähkömies</option>-->\n<!--              <option>Siivooja</option>-->\n<!--            </select>-->\n<!--            <select v-else v-model=\"professional\"-->\n<!--                    style=\"margin-bottom: 20px;\">-->\n<!--              <option disabled value=\"\">Valitse ammattilainen</option>-->\n<!--              <option>Putkimies</option>-->\n<!--              <option>Sähkömies</option>-->\n<!--              <option>Siivooja</option>-->\n<!--            </select>-->\n\n            <select\n                v-if=\"isNotSelected\"\n                type=\"text\"\n                id=\"noSelected\"\n                style=\"border-color: red;  color: red; margin-bottom: 20px; background-color: #221a16;\"\n                v-model=\"professional\"\n                @change=\"isNotSelected = false\"\n            >\n              <option value=\"\">Valitse ammattilainen</option>\n              <template v-for=\"option in prodata\">\n\n                <!-- if the `group` property is truthy -->\n                <optgroup v-if=\"option.group\" :label=\"option.group\" :key=\"option.group\">\n                  <option v-for=\"opt in option.options\" :value=\"opt.label\" :key=\"opt.label\">\n                    {{ opt.label }}\n                  </option>\n                </optgroup>\n                <!-- otherwise -->\n                <option v-else :value=\"option\" :key=\"option.value\">\n                  {{ option.label }}\n                </option>\n              </template>\n            </select>\n\n            <select\n                v-else\n                v-model=\"professional\"\n                style=\"margin-bottom: 20px; background-color: #221a16; border: 1px solid #ddd; color: #ddd;\"\n            >\n              <option value=\"\">Valitse ammattilainen</option>\n              <template v-for=\"option in prodata\">\n\n                <!-- if the `group` property is truthy -->\n                <optgroup v-if=\"option.group\" :label=\"option.group\" :key=\"option.group\">\n                  <option v-for=\"opt in option.options\" :value=\"opt.label\" :key=\"opt.label\">\n                    {{ opt.label }}\n                  </option>\n                </optgroup>\n                <!-- otherwise -->\n                <option v-else :value=\"option\" :key=\"option.value\">\n                  {{ option.label }}\n                </option>\n              </template>\n            </select>\n\n          </div>\n        </div>\n\n<!--        <input placeholder=\"Select a category\" type=\"text\" list=\"categories\" name=\"category\" />-->\n<!--        <datalist id=\"categories\">-->\n<!--          <option name=\"table1\" value=\"1\"   disabled=\"disabled\">Select A Category</option>-->\n<!--          <option name=\"category1\" value=\"general\">General</option>-->\n<!--          <option name=\"Category2\" value=\"tech\">Tech</option>-->\n<!--        </datalist>-->\n\n        <p style=\"text-align: left;\">Missä ajalla haluaisit ammattilaista?</p>\n\n        <div style=\"color: #fff;\">\n          <VueDatePicker\n              style=\"margin-bottom: 20px;\"\n              v-model=\"date\"\n              dark\n              :min-date=\"new Date()\"\n\n              @internal-model-change=\"handleInternalDate\"\n              :state=\"isNoDate ? false : null\"\n          >\n\n          </VueDatePicker>\n        </div>\n\n\n\n        <!--\n    Everything is wrapped in a label, which acts as a clickable wrapper around a form element.\n    In this case, the file input.\n  -->\n\n        <MDBContainer style=\"margin-bottom: 20px;\">\n          <MDBRow>\n            <MDBCol md=\"4\">\n              <img v-if=\"showImage\" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>\n              <label v-if=\"!isUploaded\" for=\"file-upload\" class=\"custom-file-upload\">\n\n                <span v-if=\"value\">\n                    Muokkaa kuva: {{value.name}}\n\n                </span>\n                <span v-else>Valitse kuva tehtävästä</span>\n\n              </label>\n\n              <input id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>\n\n              <MDBBtn v-if=\"isImageSelected\" outline=\"danger\" size=\"lg\" block @click=\"removeFile\">Poista valitsettu kuva</MDBBtn>\n              <MDBBtn v-if=\"isImageSelected\"\n                      outline=\"success\"\n                      size=\"lg\"\n                      block\n                      style=\"margin-bottom: 10px;\"\n                      @click=\"uploadImage\">Lataa valitsettu kuva</MDBBtn>\n\n            </MDBCol>\n\n            <MDBCol md=\"8\">\n              <MDBTextarea\n                  maxlength=\"70\"\n                  label=\"Tehtävän kuvaus...\"\n                  white\n                  rows=\"3\"\n\n                  v-model=\"explanation\"\n                  invalidFeedback=\"Ole hyvä ja kirjoita tehtävän kuvaus.\"\n                  validFeedback=\"Ok!\"\n                  required\n              />\n              <span class=\"message-counter\">{{ explanation.length }} / 70</span>\n            </MDBCol>\n          </MDBRow>\n\n          <MDBBtn outline=\"success\" size=\"lg\" block @click=\"addRecipient\" style=\"margin-top:5px; margin-bottom: 20px;\" type=\"submit\">Vahvista tilaus</MDBBtn>\n\n        </MDBContainer>\n\n\n\n\n\n<!--        <MDBBtn outline=\"success\" size=\"lg\" block @click=\"addRecipient\" style=\"margin-top:20px; margin-bottom: 20px;\" type=\"submit\">Tee tilaus</MDBBtn> -Or- -->\n<!--        <MDBBtn outline=\"secondary\">Vaata kaardilt</MDBBtn>-->\n      </form>\n\n\n      <!--\n      <h1>{{result}}</h1>\n      <MDBBtn outline=\"success\" size=\"lg\" block @click=\"this.$router.push('/received')\">Asiakkaan paneeli</MDBBtn>\n\n      <MDBBtn outline=\"success\" size=\"lg\" block @click=\"findRecipients\">findRecipients</MDBBtn>\n\n\n\n      <MDBBtn outline=\"danger\" size=\"lg\" block @click=\"remFile\">Remove file</MDBBtn>\n      -->\n<!--      <MDBBtn outline=\"danger\" size=\"lg\" block @click=\"cancelRecipientForm\" style=\"margin-bottom: 50px;\"> Poistu </MDBBtn>-->\n\n\n    </MDBContainer>\n\n  </div>\n\n</template>\n\n<script>\n/* eslint-disable */\n/*global google*/\n//const fs = require('fs');\n\nimport VueDatePicker from '@vuepic/vue-datepicker';\nimport {\n  MDBBtn,\n  MDBContainer,\n  MDBInput,\n  MDBRow,\n  MDBCol,\n  MDBTextarea,\n    MDBBtnClose\n} from \"mdb-vue-ui-kit\";\nimport recipientService from '../service/recipients'\nimport uploadService from '../service/image'\nimport proData from '@/components/profession/proList'\n\n//import ImageSelect from '../components/ImageSelect.vue'\nimport { format } from 'date-fns'\nimport {ref} from \"vue\";\n\n\n\n//import mapService from '../service/map'\n\n\nexport default {\n  name: \"recipient-form\",\n  props: {\n    recipientBookings: Array\n  },\n  components: {\n    MDBBtn,\n    MDBContainer,\n    MDBInput,\n    MDBRow,\n    MDBCol,\n    MDBTextarea,\n    MDBBtnClose,\n    //ImageSelect,\n    VueDatePicker\n  },\n  data () {\n\n    return {\n      recipientId: null,\n      header: \"\",\n      address: null,\n      lat: null,\n      lng: null,\n      isNoDate: false,\n      professional: \"\",\n      addFile: null,\n      dateTest: null,\n      calendarTooltips: [],\n      value: null,\n      aaa: \"\",\n      file: null,\n      f: null,\n      prodata: proData\n    }\n  },\n\n  setup () {\n    const date = ref(null)\n    const explanation = ref(\"\")\n    const isImageSelected = ref(false)\n    const imgId = ref(null)\n    const showImage = ref(null)\n    const isShowImage = ref(false)\n    const isUploaded = ref(false)\n    const isNotSelected = ref(false)\n    //const file = ref(null)\n\n\n    return {\n      date,\n      explanation,\n\n      isImageSelected,\n      imgId,\n      showImage,\n      isShowImage,\n      isUploaded,\n      isNotSelected\n\n\n    }\n  },\n  computed: {\n    currentRouteName() {\n      return this.$route.name;\n    }\n  },\n\n  async mounted () {\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      this.recipientId = user.id\n      //console.log(\"User token: \" + this.loggedUser.token)\n      console.log(\"User id in recipient: \" + user.id)\n    }\n\n    //console.log(\"Google key test: \" + await mapService.getLocation())\n\n    const center = { lat: 50.064192, lng: -130.605469 };\n    // Create a bounding box with sides ~10km away from the center point\n    const defaultBounds = {\n      north: center.lat + 0.1,\n      south: center.lat - 0.1,\n      east: center.lng + 0.1,\n      west: center.lng - 0.1,\n    };\n    const input = document.getElementById(\"osoite\");\n    const options = {\n      bounds: defaultBounds,\n      componentRestrictions: { country: \"fi\" },\n      fields: [\"address_components\", \"geometry\", \"icon\", \"name\", \"formatted_address\"],\n      strictBounds: false,\n      //types: [\"establishment\"],\n    };\n    const autocomplete = new google.maps.places.Autocomplete(input, options);\n\n    autocomplete.addListener(\"place_changed\", () => {\n      let place = autocomplete.getPlace()\n      this.lat = place.geometry.location.lat()\n      this.lng = place.geometry.location.lng()\n\n      this.address = place.formatted_address\n      console.log(place)\n    })\n  },\n\n  methods: {\n    cancelRecipientForm () {\n      this.$router.go(-1);\n\n      // this.$router.push('/')\n    },\n    async findRecipients () {\n      const recipients = await recipientService.getOwnBookings(this.recipientId)\n      console.log(\"Recipients \" + recipients.length)\n\n    },\n    async remFile () {\n\n      await uploadService.remove('644cff805261bf7d9943c5da',  '644cff875261bf7d9943c5dd');\n    },\n    handleFileChange(e) {\n      //this.$emit('input', e.target.client[0])\n\n      try {\n\n        const files = e.target.files[0]\n        console.log('event target client ', e.target.files[0])\n        if (files) {\n          this.showImage = URL.createObjectURL(files)\n          this.file = e.target.files[0];\n        }\n\n      } catch (err) {\n        console.log('Error:', err)\n      }\n\n      this.value = e.target.files[0]\n      if (e.target.files[0]) {\n        this.isImageSelected = true;\n      } else {\n        this.isImageSelected = false;\n      }\n    },\n    async uploadImage () {\n      const data = new FormData();\n      data.append('file', this.file, this.file.name)\n      const img = await uploadService.create(data);\n\n      if (img) {\n        this.imgId = img.imgCreated._id;\n        this.file = null;\n        //this.showImage = null;\n        //this.value = null;\n        this.isImageSelected = false;\n        this.isUploaded = true;\n      }\n\n\n\n\n    },\n    removeFile () {\n      this.value = null;\n      this.isImageSelected = false;\n      this.showImage = null;\n    },\n    formatDate (date = Date) {\n      //let date = datee;\n      if (!date) {\n        return null\n      }\n      return format(date, 'dd.MM.yyyy, HH:mm');\n    },\n\n    backToDashboard () {\n\n    },\n    getDate () {\n      // date Thu Apr 20 2023 10:27:00 GMT+0300\n      console.log(\"selected date: \" + this.date.getDate())\n    },\n    handleInternalDate () {\n      console.log(\"Handled\")\n      this.isNoDate = false;\n    },\n\n    // New client to the database\n    async addRecipient () {\n      let recipient;\n      if (this.address === null) {\n        this.address = this.recipientBookings[0].address;\n        this.lat = this.recipientBookings[0].latitude;\n        this.lng = this.recipientBookings[0].longitude;\n      }\n      if (this.professional === \"\") {\n        this.isNotSelected = true;\n      }\n      if (!this.date) {\n        this.isNoDate = true;\n      }\n      if (this.date) {\n        let year = this.date.getFullYear();\n        let month = this.date.getMonth();\n        let day = this.date.getDate();\n        let hour = this.date.getHours();\n        let minute = this.date.getMinutes();\n        const dateForMs = new Date(year, month, day, hour, minute).getTime()\n        recipient = {\n          created: this.date,\n          created_ms: dateForMs,\n          header: this.header,\n          address: this.address,\n          latitude: this.lat,\n          longitude: this.lng,\n          professional: this.professional,\n          year: this.date.getFullYear(),\n          month: this.date.getMonth(),\n          day: this.date.getDate(),\n          hours: this.date.getHours(),\n          minutes: this.date.getMinutes(),\n          description: this.explanation,\n          imageId: this.imgId\n        }\n      }\n\n\n      if (this.header && this.address && this.professional && this.date && this.explanation) {\n        const booking = await recipientService.addRecipient(this.recipientId, recipient)\n        this.$emit('booking:update', booking)\n        console.log(\"Booking--- \" + booking);\n        this.$router.push('/received')\n      } else {\n        console.log(\"Something went wrong\")\n        console.log(\"Aadress \" + this.address)\n        console.log(\"header \" + this.header)\n        console.log(\"Explanation \" + this.explanation)\n        console.log(\"Profession \" + this.professional)\n        console.log(\"Date \" + this.date)\n      }\n\n      //const recipientAdded = await recipientService.addRecipient(this.recipientId, recipient)\n\n    },\n    checkForm (event=Event) {\n      event.target.classList.add(\"was-validated\");\n    }\n  }\n}\n</script>\n\n<style >\n\n.action-row {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 20px;\n  width: 100%;\n}\n\n\n\ninput[type=\"file\"] {\n  display: none;\n}\n\n.custom-file-upload {\n  width: 100%;\n\n  color: white;\n  background-color: #87958e;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 10px 12px;\n  margin-bottom: 10px;\n  cursor: pointer;\n}\n.dp__theme_dark {\n  --dp-icon-color: #fff;\n  --dp-border-color: #ddd;\n\n}\n.input {\n  color: red;\n}\n.close_btn {\n  position: absolute;\n  right: 20px;\n  top: -30px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n</style>","import { render } from \"./RecipientForm.vue?vue&type=template&id=31ffa619\"\nimport script from \"./RecipientForm.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientForm.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientForm.vue?vue&type=style&index=0&id=31ffa619&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["construction","realEstate","hospital","beauty","options","_createElementVNode","style","class","value","for","_createElementBlock","_createVNode","_component_MDBContainer","_component_MDBBtnClose","white","onClick","_cache","$event","_ctx","$router","go","_component_MDBRow","_component_MDBCol","_hoisted_1","_hoisted_2","_component_MDBBtn","outline","block","size","push","novalidate","onSubmit","_withModifiers","args","$options","checkForm","_component_MDBInput","counter","maxlength","label","$data","header","id","invalidFeedback","validFeedback","required","wrapperClass","$props","recipientBookings","length","_hoisted_3","_toDisplayString","address","_hoisted_4","_hoisted_5","$setup","isNotSelected","type","professional","onChange","_hoisted_6","_Fragment","_renderList","prodata","option","group","key","opt","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_component_VueDatePicker","date","dark","Date","onInternalModelChange","handleInternalDate","state","isNoDate","md","showImage","src","alt","isUploaded","_hoisted_17","_hoisted_18","name","_hoisted_19","handleFileChange","isImageSelected","_createBlock","removeFile","uploadImage","_component_MDBTextarea","rows","explanation","_hoisted_20","addRecipient","props","Array","components","MDBBtn","MDBContainer","MDBInput","MDBRow","MDBCol","MDBTextarea","MDBBtnClose","VueDatePicker","data","recipientId","lat","lng","addFile","dateTest","calendarTooltips","aaa","file","f","proData","setup","ref","imgId","isShowImage","computed","currentRouteName","this","$route","async","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","console","log","center","defaultBounds","north","south","east","west","input","document","getElementById","bounds","componentRestrictions","country","fields","strictBounds","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","geometry","location","formatted_address","methods","cancelRecipientForm","recipients","recipientService","getOwnBookings","uploadService","remove","e","files","target","URL","createObjectURL","err","FormData","append","img","create","imgCreated","_id","formatDate","format","backToDashboard","getDate","recipient","latitude","longitude","year","getFullYear","month","getMonth","day","hour","getHours","minute","getMinutes","dateForMs","getTime","created","created_ms","hours","minutes","description","imageId","booking","$emit","event","Event","classList","add","__exports__","render"],"sourceRoot":""}