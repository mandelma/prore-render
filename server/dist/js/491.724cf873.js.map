{"version":3,"file":"js/491.724cf873.js","mappings":"mHAMA,MAAMA,EAAe,CACjB,CAAC,MAAS,WAAY,MAAS,KAC/B,CAAC,MAAS,YAAa,MAAS,KAChC,CAAC,MAAS,YAAa,MAAS,MAE9BC,EAAa,CACf,CAAC,MAAS,WAAY,MAAS,MAY7BC,EAAU,CACZ,CAAC,MAAS,WAAY,QAAWF,GACjC,CAAC,MAAS,gBAAiB,QAAWC,IAK1C,K,6HCZ+CE,MAAA,2C,GAYlCC,MAAM,W,GACJA,MAAM,S,GA0BPC,EAAAA,EAAAA,GAA+C,UAAvCC,MAAM,IAAG,yBAAqB,G,uCAqBtCD,EAAAA,EAAAA,GAA+C,UAAvCC,MAAM,IAAG,yBAAqB,G,uDAyCZC,IAAI,cAAcH,MAAM,sB,uBAkC5CA,MAAM,mB,GAadC,EAAAA,EAAAA,GAAkE,MAA9DF,MAAA,8CAA8C,eAAW,G,uNArKvEK,EAAAA,EAAAA,IAiMM,aA9LJC,EAAAA,EAAAA,IA4LeC,EAAA,CA5LDP,MAAA,wBAA0B,C,kBACtC,IA2KO,EA3KPE,EAAAA,EAAAA,GA2KO,QA3KDD,MAAM,uBAAuBO,WAAA,GAAYC,SAAMC,EAAA,KAAAA,EAAA,IAAAC,EAAAA,EAAAA,KAAA,IAAAC,IAAUC,EAAAC,WAAAD,EAAAC,aAAAF,IAAS,e,EACtEN,EAAAA,EAAAA,IAUyBS,EAAA,CATrBC,QAAA,GAASC,UAAW,GACpBC,MAAM,eACNC,MAAA,G,WACSC,EAAAC,O,qCAAAD,EAAAC,OAAMC,GACfC,GAAG,SACHC,KAAK,KACLC,gBAAgB,gCAChBC,cAAc,MACdC,SAAA,GACAC,aAAa,Q,uBAERC,EAAAC,kBAAkBC,OAAS,IAAH,WAAjC1B,EAAAA,EAAAA,IAAkI,IAAlI2B,EAAoF,YAAQC,EAAAA,EAAAA,IAAGJ,EAAAC,kBAAkB,GAAGI,SAAO,qBAE3H5B,EAAAA,EAAAA,IAQyBS,EAAA,CAPpBG,MAAOW,EAAAC,kBAAkBC,OAAS,EAAI,yBAA2B,c,WACzDX,EAAAc,Q,qCAAAd,EAAAc,QAAOZ,GAChBC,GAAG,SACHC,KAAK,KACLC,gBAAgB,+BAChBC,cAAc,MACdC,SAAA,GACAC,aAAa,Q,gCAEjB1B,EAAAA,EAAAA,GAiEM,MAjENiC,EAiEM,EAhEJjC,EAAAA,EAAAA,GA+DM,MA/DNkC,EA+DM,CA3CMC,EAAAC,eAAa,qBADvBjC,EAAAA,EAAAA,IAqBS,U,MAnBLkB,GAAG,aACHvB,MAAA,0D,qCACSoB,EAAAmB,aAAYjB,GACpBkB,SAAM9B,EAAA,KAAAA,EAAA,GAAAY,GAAEe,EAAAC,eAAgB,I,CAE3BG,IAA+C,aAC/CpC,EAAAA,EAAAA,IAYWqC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAZgBvB,EAAAwB,SAAVC,K,8BAGCA,EAAOC,QAAK,WAA5BzC,EAAAA,EAAAA,IAIW,YAJoBa,MAAO2B,EAAOC,MAAQC,IAAKF,EAAOC,O,gBAC/DzC,EAAAA,EAAAA,IAESqC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAFaE,EAAO9C,SAAdiD,K,WAAf3C,EAAAA,EAAAA,IAES,UAF8BF,MAAO6C,EAAI9B,MAAQ6B,IAAKC,EAAI9B,Q,QAC9D8B,EAAI9B,OAAK,EAAA+B,M,0BAIhB5C,EAAAA,EAAAA,IAES,UAFOF,MAAO0C,EAASE,IAAKF,EAAO1C,Q,QACvC0C,EAAO3B,OAAK,EAAAgC,KAAA,O,oBAdR9B,EAAAmB,iBAAY,qBAmBzBlC,EAAAA,EAAAA,IAmBS,U,2CAjBIe,EAAAmB,aAAYjB,GACrBtB,MAAA,0B,CAEFmD,IAA+C,aAC/C9C,EAAAA,EAAAA,IAYWqC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAZgBvB,EAAAwB,SAAVC,K,8BAGCA,EAAOC,QAAK,WAA5BzC,EAAAA,EAAAA,IAIW,YAJoBa,MAAO2B,EAAOC,MAAQC,IAAKF,EAAOC,O,gBAC/DzC,EAAAA,EAAAA,IAESqC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAFaE,EAAO9C,SAAdiD,K,WAAf3C,EAAAA,EAAAA,IAES,UAF8BF,MAAO6C,EAAI9B,MAAQ6B,IAAKC,EAAI9B,Q,QAC9D8B,EAAI9B,OAAK,EAAAkC,M,0BAIhB/C,EAAAA,EAAAA,IAES,UAFOF,MAAO0C,EAASE,IAAKF,EAAO1C,Q,QACvC0C,EAAO3B,OAAK,EAAAmC,KAAA,O,oBAdRjC,EAAAmB,qBAuBjBjC,EAAAA,EAAAA,IASgBgD,EAAA,CARZtD,MAAA,yB,WACSqC,EAAAkB,K,qCAAAlB,EAAAkB,KAAIjC,GACZ,WAAQ,IAAMkC,KACfC,YAAY,qCACXC,sBAAuB7C,EAAA8C,mBACvBC,OAAOxC,EAAAyC,UAAmB,M,mEAW/BvD,EAAAA,EAAAA,IA2CeC,EAAA,CA3CDP,MAAA,0BAA4B,C,kBACxC,IAuCS,EAvCTM,EAAAA,EAAAA,IAuCSwD,EAAA,M,kBAtCP,IAsBS,EAtBTxD,EAAAA,EAAAA,IAsBSyD,EAAA,CAtBDC,GAAG,KAAG,C,kBACZ,IAA6F,CAAlF3B,EAAA4B,YAAS,WAApB5D,EAAAA,EAAAA,IAA6F,O,MAAtE6D,IAAK7B,EAAA4B,UAAWjE,MAAA,uCAA2CmE,IAAI,O,2BACxE9B,EAAA+B,YAMwB,iBANd,WAAxB/D,EAAAA,EAAAA,IAQQ,QARRgE,EAQQ,CANMjD,EAAAjB,QAAK,WAAjBE,EAAAA,EAAAA,IAGO,OAAAiE,EAHY,mBACDrC,EAAAA,EAAAA,IAAEb,EAAAjB,MAAMoE,MAAI,iBAG9BlE,EAAAA,EAAAA,IAA2C,OAAAmE,EAA9B,gCAIftE,EAAAA,EAAAA,GAAgE,SAAzDqB,GAAG,cAAckD,KAAK,OAAQjC,SAAM9B,EAAA,KAAAA,EAAA,OAAAE,IAAEC,EAAA6D,kBAAA7D,EAAA6D,oBAAA9D,K,SAE/ByB,EAAAsC,kBAAe,WAA7BC,EAAAA,EAAAA,IAAmHC,EAAA,C,MAApFC,QAAQ,SAAStD,KAAK,KAAKuD,MAAA,GAAOC,QAAOnE,EAAAoE,Y,mBAAY,IAAsB,UAAtB,6B,qCACtE5C,EAAAsC,kBAAe,WAA7BC,EAAAA,EAAAA,IAK2DC,EAAA,C,MAJnDC,QAAQ,UACRtD,KAAK,KACLuD,MAAA,GACA/E,MAAA,yBACCgF,QAAOnE,EAAAqE,a,mBAAa,IAAqB,UAArB,4B,+CAI/B5E,EAAAA,EAAAA,IAaSyD,EAAA,CAbDC,GAAG,KAAG,C,kBACZ,IAUE,EAVF1D,EAAAA,EAAAA,IAUE6E,EAAA,CATElE,UAAU,KACVC,MAAM,qBAENkE,KAAK,I,WAEI/C,EAAAgD,Y,qCAAAhD,EAAAgD,YAAW/D,GACpBG,gBAAgB,wCAChBC,cAAc,MACdC,SAAA,I,wBAEJzB,EAAAA,EAAAA,GAAkE,OAAlEoF,GAAkErD,EAAAA,EAAAA,IAAjCI,EAAAgD,YAAYtD,QAAS,QAAK,M,yBAQjEzB,EAAAA,EAAAA,IAUSwD,EAAA,M,kBATP,IAES,EAFTxD,EAAAA,EAAAA,IAESyD,EAAA,M,kBADP,IAA8I,EAA9IzD,EAAAA,EAAAA,IAA8IuE,EAAA,CAAtIC,QAAQ,UAAUtD,KAAK,KAAKuD,MAAA,GAAOC,QAAOnE,EAAA0E,aAAcvF,MAAA,4CAA6CyE,KAAK,U,mBAAS,IAAU,UAAV,iB,8BAE7HnE,EAAAA,EAAAA,IAESyD,EAAA,M,kBADP,IAAkE,CAAlEyB,K,OAEFlF,EAAAA,EAAAA,IAESyD,EAAA,M,kBADP,IAA+J,EAA/JzD,EAAAA,EAAAA,IAA+JuE,EAAA,CAAvJC,QAAQ,YAAYC,MAAA,GAAMvD,KAAK,KAAMwD,QAAKtE,EAAA,KAAAA,EAAA,GAAAY,GAAA,KAAOmE,QAAQC,KAAK,sBAAsB1F,MAAA,6C,mBAA6C,IAAa,UAAb,oB,8BAoB/IM,EAAAA,EAAAA,IAAoHuE,EAAA,CAA5GC,QAAQ,SAAStD,KAAK,KAAKuD,MAAA,GAAOC,QAAOnE,EAAA8E,oBAAqB3F,MAAA,0B,mBAA6B,IAAQ,UAAR,e,+GAoCzG,GACEuE,KAAM,iBACNqB,MAAO,CACL9D,kBAAmB+D,OAErBC,WAAY,CACVC,OAAM,KACNC,aAAY,KACZC,SAAQ,KACRC,OAAM,KACNC,OAAM,KACNC,YAAW,KAEXC,cAAaA,EAAAA,GAEfC,OAEE,MAAO,CACLC,YAAa,KACblF,OAAQ,GACRa,QAAS,KACTsE,IAAK,KACLC,IAAK,KACL5C,UAAU,EACVtB,aAAc,GACdmE,QAAS,KACTC,SAAU,KACVC,iBAAkB,GAClBzG,MAAO,KACP0G,IAAK,GACLC,KAAM,KACNC,EAAG,KACHnE,QAASoE,EAAAA,EAEb,EAEAC,QACE,MAAM1D,GAAO2D,EAAAA,EAAAA,IAAI,MACX7B,GAAc6B,EAAAA,EAAAA,IAAI,IAClBvC,GAAkBuC,EAAAA,EAAAA,KAAI,GACtBC,GAAQD,EAAAA,EAAAA,IAAI,MACZjD,GAAYiD,EAAAA,EAAAA,IAAI,MAChBE,GAAcF,EAAAA,EAAAA,KAAI,GAClB9C,GAAa8C,EAAAA,EAAAA,KAAI,GACjB5E,GAAgB4E,EAAAA,EAAAA,KAAI,GAI1B,MAAO,CACL3D,OACA8B,cAEAV,kBACAwC,QACAlD,YACAmD,cACAhD,aACA9B,gBAIJ,EACA+E,SAAU,CACRC,mBACE,OAAOC,KAAKC,OAAOjD,IACrB,GAGFkD,gBACE,MAAMC,EAAiBC,OAAOC,aAAaC,QAAQ,iBACnD,GAAIH,EAAgB,CAClB,MAAMI,EAAOC,KAAKC,MAAMN,GACxBH,KAAKhB,YAAcuB,EAAKvG,GAExB0G,QAAQC,IAAI,yBAA2BJ,EAAKvG,GAC9C,CAIA,MAAM4G,EAAS,CAAE3B,IAAK,UAAWC,KAAM,YAEjC2B,EAAgB,CACpBC,MAAOF,EAAO3B,IAAM,GACpB8B,MAAOH,EAAO3B,IAAM,GACpB+B,KAAMJ,EAAO1B,IAAM,GACnB+B,KAAML,EAAO1B,IAAM,IAEfgC,EAAQC,SAASC,eAAe,UAChC5I,EAAU,CACd6I,OAAQR,EACRS,sBAAuB,CAAEC,QAAS,MAClCC,OAAQ,CAAC,qBAAsB,WAAY,OAAQ,OAAQ,qBAC3DC,cAAc,GAGVC,EAAe,IAAIC,OAAOC,KAAKC,OAAOC,aAAaZ,EAAO1I,GAEhEkJ,EAAaK,YAAY,iBAAiB,KACxC,IAAIC,EAAQN,EAAaO,WACzBjC,KAAKf,IAAM+C,EAAME,SAASC,SAASlD,MACnCe,KAAKd,IAAM8C,EAAME,SAASC,SAASjD,MAEnCc,KAAKrF,QAAUqH,EAAMI,kBACrB1B,QAAQC,IAAIqB,EAAM,GAEtB,EAEAK,QAAS,CACPjE,sBAQE4B,KAAK9B,QAAQoE,IAAI,EAGnB,EACApC,uBACE,MAAMqC,QAAmBC,EAAAA,EAAiBC,eAAezC,KAAKhB,aAC9D0B,QAAQC,IAAI,cAAgB4B,EAAW/H,OAEzC,EACA0F,sBAEQwC,EAAAA,EAAcC,OAAO,2BAA6B,2BAC1D,EACAxF,iBAAiByF,GAGf,IAEE,MAAMC,EAAQD,EAAEE,OAAOD,MAAM,GAC7BnC,QAAQC,IAAI,uBAAwBiC,EAAEE,OAAOD,MAAM,IAC/CA,IACF7C,KAAKtD,UAAYqG,IAAIC,gBAAgBH,GACrC7C,KAAKT,KAAOqD,EAAEE,OAAOD,MAAM,GAG/B,CAAE,MAAOI,GACPvC,QAAQC,IAAI,SAAUsC,EACxB,CAEAjD,KAAKpH,MAAQgK,EAAEE,OAAOD,MAAM,GACxBD,EAAEE,OAAOD,MAAM,GACjB7C,KAAK5C,iBAAkB,EAEvB4C,KAAK5C,iBAAkB,CAE3B,EACA8C,oBACE,MAAMnB,EAAO,IAAImE,SACjBnE,EAAKoE,OAAO,OAAQnD,KAAKT,KAAMS,KAAKT,KAAKvC,MACzC,MAAMoG,QAAYV,EAAAA,EAAcW,OAAOtE,GAEnCqE,IACFpD,KAAKJ,MAAQwD,EAAIE,WAAWC,IAC5BvD,KAAKT,KAAO,KAGZS,KAAK5C,iBAAkB,EACvB4C,KAAKnD,YAAa,EAMtB,EACAa,aACEsC,KAAKpH,MAAQ,KACboH,KAAK5C,iBAAkB,EACvB4C,KAAKtD,UAAY,IACnB,EACA8G,WAAYxH,EAAOC,MAEjB,OAAKD,GAGEyH,EAAAA,EAAAA,GAAOzH,EAAM,qBAFX,IAGX,EAEA0H,kBAEA,EACAC,UAEEjD,QAAQC,IAAI,kBAAoBX,KAAKhE,KAAK2H,UAC5C,EACAvH,qBACEsE,QAAQC,IAAI,WACZX,KAAK1D,UAAW,CAClB,EAGA4D,qBACE,IAAI0D,EA+BJ,GA9BqB,OAAjB5D,KAAKrF,UACPqF,KAAKrF,QAAUqF,KAAKzF,kBAAkB,GAAGI,QACzCqF,KAAKf,IAAMe,KAAKzF,kBAAkB,GAAGsJ,SACrC7D,KAAKd,IAAMc,KAAKzF,kBAAkB,GAAGuJ,WAEb,KAAtB9D,KAAKhF,eACPgF,KAAKjF,eAAgB,GAElBiF,KAAKhE,OACRgE,KAAK1D,UAAW,GAEd0D,KAAKhE,OACP4H,EAAY,CACVG,QAAS/D,KAAKhE,KACdlC,OAAQkG,KAAKlG,OACba,QAASqF,KAAKrF,QACdkJ,SAAU7D,KAAKf,IACf6E,UAAW9D,KAAKd,IAChBlE,aAAcgF,KAAKhF,aACnBgJ,KAAMhE,KAAKhE,KAAKiI,cAChBC,MAAOlE,KAAKhE,KAAKmI,WACjBC,IAAKpE,KAAKhE,KAAK2H,UACfU,MAAOrE,KAAKhE,KAAKsI,WACjBC,QAASvE,KAAKhE,KAAKwI,aACnBC,YAAazE,KAAKlC,YAClB4G,QAAS1E,KAAKJ,QAKdI,KAAKlG,QAAUkG,KAAKrF,SAAWqF,KAAKhF,cAAgBgF,KAAKhE,MAAQgE,KAAKlC,YAAa,CACrF,MAAM6G,QAAgBnC,EAAAA,EAAiBxE,aAAagC,KAAKhB,YAAa4E,GACtE5D,KAAK4E,MAAM,iBAAkBD,GAC7BjE,QAAQC,IAAI,cAAgBgE,GAC5B3E,KAAK9B,QAAQC,KAAK,YACpB,MACEuC,QAAQC,IAAI,wBACZD,QAAQC,IAAI,WAAaX,KAAKrF,SAC9B+F,QAAQC,IAAI,UAAYX,KAAKlG,QAC7B4G,QAAQC,IAAI,eAAiBX,KAAKlC,aAClC4C,QAAQC,IAAI,cAAgBX,KAAKhF,cACjC0F,QAAQC,IAAI,QAAUX,KAAKhE,KAK/B,EACAzC,UAAWsL,EAAMC,OACfD,EAAM/B,OAAOiC,UAAUC,IAAI,gBAC7B,I,QCldJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://prore-mongo/./src/components/profession/proList.js","webpack://prore-mongo/./src/pages/RecipientForm.vue","webpack://prore-mongo/./src/pages/RecipientForm.vue?59c8"],"sourcesContent":["// const list = [\r\n//     \"Siivooja\",\r\n//     \"Hitsaaja\",\r\n//     \"Bussikuski\"\r\n// ]\r\n\r\nconst construction = [\r\n    {\"label\": \"Hitsaaja\", \"value\": \"1\"},\r\n    {\"label\": \"Putkimies\", \"value\": \"2\"},\r\n    {\"label\": \"Sähkömies\", \"value\": \"3\"}\r\n]\r\nconst realEstate = [\r\n    {\"label\": \"Siivooja\", \"value\": \"4\"}\r\n]\r\n\r\n// const options = [\r\n//     {\"group\":\"Fruits\",\"options\":[{\"label\":\"Apple\",\"value\":\"f-1\"},{\"label\":\"Banana\",\"value\":\"f-2\"},{\"label\":\"Orange\",\"value\":\"f-3\"}]},\r\n//     {\"label\":\"Chocolate\",\"value\":\"m-1\"},\r\n//     {\"label\":\"Cake\",\"value\":\"m-2\"},\r\n//     {\"group\": \"Construction\", \"options\": construction},\r\n//     {\"group\":\"Vegetables\",\"options\":[{\"label\":\"Cabbage\",\"value\":\"v-1\"},{\"label\":\"Tomato\",\"value\":\"v-2\"}]},\r\n//     {\"label\":\"Puddin\",\"value\":\"m-3\"}\r\n// ]\r\n\r\nconst options = [\r\n    {\"group\": \"Rakennus\", \"options\": construction},\r\n    {\"group\": \"Kiinteistöala\", \"options\": realEstate}\r\n]\r\n\r\n\r\n\r\nexport default options;","<template>\n\n  <div>\n\n\n    <MDBContainer style=\"padding-top: 70px;\">\n      <form class=\"g-3 needs-validation\" novalidate @submit.prevent=\"checkForm\">\n        <MDBInput\n            counter :maxlength=\"30\"\n            label=\"Anna otsikko\"\n            white\n            v-model=\"header\"\n            id=\"header\"\n            size=\"lg\"\n            invalidFeedback=\"Ole hyvä ja kirjoita otsikko.\"\n            validFeedback=\"Ok!\"\n            required\n            wrapperClass=\"mb-4\"/>\n\n        <p v-if=\"recipientBookings.length > 0\" style=\"text-align: left; color: deepskyblue\">Osoite: {{ recipientBookings[0].address }}</p>\n\n        <MDBInput\n            :label=\"recipientBookings.length > 0 ? 'Anna toinen osoitteesi' : 'Anna osoite'\"\n            v-model=\"address\"\n            id=\"osoite\"\n            size=\"lg\"\n            invalidFeedback=\"Ole hyvä ja kirjoita osoite.\"\n            validFeedback=\"Ok!\"\n            required\n            wrapperClass=\"mb-4\"/>\n\n        <div class=\"ui form\">\n          <div class=\"field\">\n<!--            <select v-if=\"isNotSelected\"-->\n<!--                    id=\"noSelected\"-->\n<!--                    style=\"border-color: red; color: red; margin-bottom: 20px;\"-->\n<!--                    v-model=\"professional\"-->\n<!--                    @change=\"isNotSelected = false\">-->\n<!--              <option disabled value=\"\" >Valitse ammattilainen</option>-->\n<!--              <option>Putkimies</option>-->\n<!--              <option>Sähkömies</option>-->\n<!--              <option>Siivooja</option>-->\n<!--            </select>-->\n<!--            <select v-else v-model=\"professional\"-->\n<!--                    style=\"margin-bottom: 20px;\">-->\n<!--              <option disabled value=\"\">Valitse ammattilainen</option>-->\n<!--              <option>Putkimies</option>-->\n<!--              <option>Sähkömies</option>-->\n<!--              <option>Siivooja</option>-->\n<!--            </select>-->\n\n            <select\n                v-if=\"isNotSelected\"\n                id=\"noSelected\"\n                style=\"border-color: red; color: red; margin-bottom: 20px;\"\n                v-model=\"professional\"\n                @change=\"isNotSelected = false\"\n            >\n              <option value=\"\">Valitse ammattilainen</option>\n              <template v-for=\"option in prodata\">\n\n                <!-- if the `group` property is truthy -->\n                <optgroup v-if=\"option.group\" :label=\"option.group\" :key=\"option.group\">\n                  <option v-for=\"opt in option.options\" :value=\"opt.label\" :key=\"opt.label\">\n                    {{ opt.label }}\n                  </option>\n                </optgroup>\n                <!-- otherwise -->\n                <option v-else :value=\"option\" :key=\"option.value\">\n                  {{ option.label }}\n                </option>\n              </template>\n            </select>\n\n            <select\n                v-else\n                v-model=\"professional\"\n                style=\"margin-bottom: 20px;\"\n            >\n              <option value=\"\">Valitse ammattilainen</option>\n              <template v-for=\"option in prodata\">\n\n                <!-- if the `group` property is truthy -->\n                <optgroup v-if=\"option.group\" :label=\"option.group\" :key=\"option.group\">\n                  <option v-for=\"opt in option.options\" :value=\"opt.label\" :key=\"opt.label\">\n                    {{ opt.label }}\n                  </option>\n                </optgroup>\n                <!-- otherwise -->\n                <option v-else :value=\"option\" :key=\"option.value\">\n                  {{ option.label }}\n                </option>\n              </template>\n            </select>\n\n          </div>\n        </div>\n\n\n        <VueDatePicker\n            style=\"margin-bottom: 20px;\"\n            v-model=\"date\"\n            :min-date=\"new Date()\"\n            placeholder=\"Missä ajalla haluat ammattilaista?\"\n            @internal-model-change=\"handleInternalDate\"\n            :state=\"isNoDate ? false : null\"\n        >\n\n        </VueDatePicker>\n\n\n        <!--\n    Everything is wrapped in a label, which acts as a clickable wrapper around a form element.\n    In this case, the file input.\n  -->\n\n        <MDBContainer style=\"margin-bottom: 20px;\">\n          <MDBRow>\n            <MDBCol md=\"4\">\n              <img v-if=\"showImage\" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>\n              <label v-if=\"!isUploaded\" for=\"file-upload\" class=\"custom-file-upload\">\n\n                <span v-if=\"value\">\n                    Muokkaa kuva: {{value.name}}\n\n                </span>\n                <span v-else>Valitse kuva tehtävästä</span>\n\n              </label>\n\n              <input id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>\n\n              <MDBBtn v-if=\"isImageSelected\" outline=\"danger\" size=\"lg\" block @click=\"removeFile\">Poista valitsettu kuva</MDBBtn>\n              <MDBBtn v-if=\"isImageSelected\"\n                      outline=\"success\"\n                      size=\"lg\"\n                      block\n                      style=\"margin-bottom: 10px;\"\n                      @click=\"uploadImage\">Lataa valitsettu kuva</MDBBtn>\n\n            </MDBCol>\n\n            <MDBCol md=\"8\">\n              <MDBTextarea\n                  maxlength=\"70\"\n                  label=\"Tehtävän kuvaus...\"\n\n                  rows=\"3\"\n\n                  v-model=\"explanation\"\n                  invalidFeedback=\"Ole hyvä ja kirjoita tehtävän kuvaus.\"\n                  validFeedback=\"Ok!\"\n                  required\n              />\n              <span class=\"message-counter\">{{ explanation.length }} / 70</span>\n            </MDBCol>\n          </MDBRow>\n\n\n        </MDBContainer>\n\n\n        <MDBRow>\n          <MDBCol>\n            <MDBBtn outline=\"success\" size=\"lg\" block @click=\"addRecipient\" style=\"margin-top:5px; margin-bottom: 20px;\" type=\"submit\">Tee tilaus</MDBBtn>\n          </MDBCol>\n          <MDBCol>\n            <h3 style=\"margin-top:20px; margin-bottom: 20px;\">--- TAI ---</h3>\n          </MDBCol>\n          <MDBCol>\n            <MDBBtn outline=\"secondary\" block size=\"lg\" @click=\"this.$router.push('/recipient-public')\" style=\"margin-top:5px; margin-bottom: 20px;\">Etsi kartalta</MDBBtn>\n          </MDBCol>\n        </MDBRow>\n\n\n<!--        <MDBBtn outline=\"success\" size=\"lg\" block @click=\"addRecipient\" style=\"margin-top:20px; margin-bottom: 20px;\" type=\"submit\">Tee tilaus</MDBBtn> -Or- -->\n<!--        <MDBBtn outline=\"secondary\">Vaata kaardilt</MDBBtn>-->\n      </form>\n\n\n      <!--\n      <h1>{{result}}</h1>\n      <MDBBtn outline=\"success\" size=\"lg\" block @click=\"this.$router.push('/received')\">Asiakkaan paneeli</MDBBtn>\n\n      <MDBBtn outline=\"success\" size=\"lg\" block @click=\"findRecipients\">findRecipients</MDBBtn>\n\n\n\n      <MDBBtn outline=\"danger\" size=\"lg\" block @click=\"remFile\">Remove file</MDBBtn>\n      -->\n      <MDBBtn outline=\"danger\" size=\"lg\" block @click=\"cancelRecipientForm\" style=\"margin-bottom: 50px;\"> Poistu </MDBBtn>\n\n\n    </MDBContainer>\n\n  </div>\n\n</template>\n\n<script>\n/* eslint-disable */\n/*global google*/\n//const fs = require('fs');\n\nimport VueDatePicker from '@vuepic/vue-datepicker';\nimport {\n  MDBBtn,\n  MDBContainer,\n  MDBInput,\n  MDBRow,\n  MDBCol,\n  MDBTextarea\n} from \"mdb-vue-ui-kit\";\nimport recipientService from '../service/recipients'\nimport uploadService from '../service/image'\nimport proData from '@/components/profession/proList'\n\n//import ImageSelect from '../components/ImageSelect.vue'\nimport { format } from 'date-fns'\nimport {ref} from \"vue\";\n\n\n\n//import mapService from '../service/map'\n\n\nexport default {\n  name: \"recipient-form\",\n  props: {\n    recipientBookings: Array\n  },\n  components: {\n    MDBBtn,\n    MDBContainer,\n    MDBInput,\n    MDBRow,\n    MDBCol,\n    MDBTextarea,\n    //ImageSelect,\n    VueDatePicker\n  },\n  data () {\n\n    return {\n      recipientId: null,\n      header: \"\",\n      address: null,\n      lat: null,\n      lng: null,\n      isNoDate: false,\n      professional: \"\",\n      addFile: null,\n      dateTest: null,\n      calendarTooltips: [],\n      value: null,\n      aaa: \"\",\n      file: null,\n      f: null,\n      prodata: proData\n    }\n  },\n\n  setup () {\n    const date = ref(null)\n    const explanation = ref(\"\")\n    const isImageSelected = ref(false)\n    const imgId = ref(null)\n    const showImage = ref(null)\n    const isShowImage = ref(false)\n    const isUploaded = ref(false)\n    const isNotSelected = ref(false)\n    //const file = ref(null)\n\n\n    return {\n      date,\n      explanation,\n\n      isImageSelected,\n      imgId,\n      showImage,\n      isShowImage,\n      isUploaded,\n      isNotSelected\n\n\n    }\n  },\n  computed: {\n    currentRouteName() {\n      return this.$route.name;\n    }\n  },\n\n  async mounted () {\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      this.recipientId = user.id\n      //console.log(\"User token: \" + this.loggedUser.token)\n      console.log(\"User id in recipient: \" + user.id)\n    }\n\n    //console.log(\"Google key test: \" + await mapService.getLocation())\n\n    const center = { lat: 50.064192, lng: -130.605469 };\n    // Create a bounding box with sides ~10km away from the center point\n    const defaultBounds = {\n      north: center.lat + 0.1,\n      south: center.lat - 0.1,\n      east: center.lng + 0.1,\n      west: center.lng - 0.1,\n    };\n    const input = document.getElementById(\"osoite\");\n    const options = {\n      bounds: defaultBounds,\n      componentRestrictions: { country: \"fi\" },\n      fields: [\"address_components\", \"geometry\", \"icon\", \"name\", \"formatted_address\"],\n      strictBounds: false,\n      //types: [\"establishment\"],\n    };\n    const autocomplete = new google.maps.places.Autocomplete(input, options);\n\n    autocomplete.addListener(\"place_changed\", () => {\n      let place = autocomplete.getPlace()\n      this.lat = place.geometry.location.lat()\n      this.lng = place.geometry.location.lng()\n\n      this.address = place.formatted_address\n      console.log(place)\n    })\n  },\n\n  methods: {\n    cancelRecipientForm () {\n      // if (this.currentRouteName === 'r-form') {\n      //   this.$router.push('/received')\n      //   //console.log(\"Name is r-form\")\n      // } else {\n      //   this.$router.push('/')\n      // }\n\n      this.$router.go(-1);\n\n      // this.$router.push('/')\n    },\n    async findRecipients () {\n      const recipients = await recipientService.getOwnBookings(this.recipientId)\n      console.log(\"Recipients \" + recipients.length)\n\n    },\n    async remFile () {\n\n      await uploadService.remove('644cff805261bf7d9943c5da',  '644cff875261bf7d9943c5dd');\n    },\n    handleFileChange(e) {\n      //this.$emit('input', e.target.client[0])\n\n      try {\n\n        const files = e.target.files[0]\n        console.log('event target client ', e.target.files[0])\n        if (files) {\n          this.showImage = URL.createObjectURL(files)\n          this.file = e.target.files[0];\n        }\n\n      } catch (err) {\n        console.log('Error:', err)\n      }\n\n      this.value = e.target.files[0]\n      if (e.target.files[0]) {\n        this.isImageSelected = true;\n      } else {\n        this.isImageSelected = false;\n      }\n    },\n    async uploadImage () {\n      const data = new FormData();\n      data.append('file', this.file, this.file.name)\n      const img = await uploadService.create(data);\n\n      if (img) {\n        this.imgId = img.imgCreated._id;\n        this.file = null;\n        //this.showImage = null;\n        //this.value = null;\n        this.isImageSelected = false;\n        this.isUploaded = true;\n      }\n\n\n\n\n    },\n    removeFile () {\n      this.value = null;\n      this.isImageSelected = false;\n      this.showImage = null;\n    },\n    formatDate (date = Date) {\n      //let date = datee;\n      if (!date) {\n        return null\n      }\n      return format(date, 'dd.MM.yyyy, HH:mm');\n    },\n\n    backToDashboard () {\n\n    },\n    getDate () {\n      // date Thu Apr 20 2023 10:27:00 GMT+0300\n      console.log(\"selected date: \" + this.date.getDate())\n    },\n    handleInternalDate () {\n      console.log(\"Handled\")\n      this.isNoDate = false;\n    },\n\n    // New client to the database\n    async addRecipient () {\n      let recipient;\n      if (this.address === null) {\n        this.address = this.recipientBookings[0].address;\n        this.lat = this.recipientBookings[0].latitude;\n        this.lng = this.recipientBookings[0].longitude;\n      }\n      if (this.professional === \"\") {\n        this.isNotSelected = true;\n      }\n      if (!this.date) {\n        this.isNoDate = true;\n      }\n      if (this.date) {\n        recipient = {\n          created: this.date,\n          header: this.header,\n          address: this.address,\n          latitude: this.lat,\n          longitude: this.lng,\n          professional: this.professional,\n          year: this.date.getFullYear(),\n          month: this.date.getMonth(),\n          day: this.date.getDate(),\n          hours: this.date.getHours(),\n          minutes: this.date.getMinutes(),\n          description: this.explanation,\n          imageId: this.imgId\n        }\n      }\n\n\n      if (this.header && this.address && this.professional && this.date && this.explanation) {\n        const booking = await recipientService.addRecipient(this.recipientId, recipient)\n        this.$emit('booking:update', booking)\n        console.log(\"Booking--- \" + booking);\n        this.$router.push('/received')\n      } else {\n        console.log(\"Something went wrong\")\n        console.log(\"Aadress \" + this.address)\n        console.log(\"header \" + this.header)\n        console.log(\"Explanation \" + this.explanation)\n        console.log(\"Profession \" + this.professional)\n        console.log(\"Date \" + this.date)\n      }\n\n      //const recipientAdded = await recipientService.addRecipient(this.recipientId, recipient)\n\n    },\n    checkForm (event=Event) {\n      event.target.classList.add(\"was-validated\");\n    }\n  }\n}\n</script>\n\n<style >\n\n.action-row {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 20px;\n  width: 100%;\n}\n\n\n\ninput[type=\"file\"] {\n  display: none;\n}\n\n.custom-file-upload {\n  width: 100%;\n\n  color: white;\n  background-color: #87958e;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 10px 12px;\n  margin-bottom: 10px;\n  cursor: pointer;\n}\n\n\n\n</style>","import { render } from \"./RecipientForm.vue?vue&type=template&id=47789a6a\"\nimport script from \"./RecipientForm.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientForm.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientForm.vue?vue&type=style&index=0&id=47789a6a&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["construction","realEstate","options","style","class","_createElementVNode","value","for","_createElementBlock","_createVNode","_component_MDBContainer","novalidate","onSubmit","_cache","_withModifiers","args","$options","checkForm","_component_MDBInput","counter","maxlength","label","white","$data","header","$event","id","size","invalidFeedback","validFeedback","required","wrapperClass","$props","recipientBookings","length","_hoisted_1","_toDisplayString","address","_hoisted_2","_hoisted_3","$setup","isNotSelected","professional","onChange","_hoisted_4","_Fragment","_renderList","prodata","option","group","key","opt","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_10","_hoisted_11","_component_VueDatePicker","date","Date","placeholder","onInternalModelChange","handleInternalDate","state","isNoDate","_component_MDBRow","_component_MDBCol","md","showImage","src","alt","isUploaded","_hoisted_13","_hoisted_14","name","_hoisted_15","type","handleFileChange","isImageSelected","_createBlock","_component_MDBBtn","outline","block","onClick","removeFile","uploadImage","_component_MDBTextarea","rows","explanation","_hoisted_16","addRecipient","_hoisted_17","$router","push","cancelRecipientForm","props","Array","components","MDBBtn","MDBContainer","MDBInput","MDBRow","MDBCol","MDBTextarea","VueDatePicker","data","recipientId","lat","lng","addFile","dateTest","calendarTooltips","aaa","file","f","proData","setup","ref","imgId","isShowImage","computed","currentRouteName","this","$route","async","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","console","log","center","defaultBounds","north","south","east","west","input","document","getElementById","bounds","componentRestrictions","country","fields","strictBounds","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","geometry","location","formatted_address","methods","go","recipients","recipientService","getOwnBookings","uploadService","remove","e","files","target","URL","createObjectURL","err","FormData","append","img","create","imgCreated","_id","formatDate","format","backToDashboard","getDate","recipient","latitude","longitude","created","year","getFullYear","month","getMonth","day","hours","getHours","minutes","getMinutes","description","imageId","booking","$emit","event","Event","classList","add","__exports__","render"],"sourceRoot":""}