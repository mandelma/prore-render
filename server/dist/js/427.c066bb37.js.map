{"version":3,"file":"js/427.c066bb37.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/controllers/datetime.js","webpack://prore-mongo/./src/components/controllers/distance.js","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue?7f3a"],"sourcesContent":["\nconst compare = (rec, prov) => {\n    const receiverDate = new Date(rec.y, rec.m, rec.d, rec.hour, rec.min);\n    const providerDate = new Date(prov.y, prov.m, prov.d, prov.hour, prov.min)\n    return providerDate >= receiverDate;\n}\n\nconst providerMatchingForClient = (re, pFrom, pTo) => {\n    //const rDate = new Date(re.y, re.m, re.d, re.hour, re.min);\n    const pFromDate = new Date(pFrom.y, pFrom.m, pFrom.d, pFrom.hour, pFrom.min);\n    const pToDate = new Date(pTo.y, pTo.m, pTo.d, pTo.hour, pTo.min);\n    return re >= pFromDate && re < pToDate;\n}\nexport default { compare, providerMatchingForClient }","/*global google*/\nlet res = \"\";\nconst distance = () => {\n    //let text = \"\";\n    //let value = 0;\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\n    var service = new google.maps.DistanceMatrixService();\n    service.getDistanceMatrix(\n        {\n            origins: [origin],\n            destinations: [destination],\n            travelMode: 'DRIVING',\n            unitSystem: google.maps.UnitSystem.METRIC,\n            durationInTraffic: true,\n            avoidHighways: false,\n            avoidTolls: false\n        }, response_data);\n    //return response_data;\n}\n\nconst response_data = (responseDis, status) => {\n    //let result = \"\";\n    if (status !== google.maps.DistanceMatrixStatus.OK || status !== \"OK\"){\n        console.log('Error:', status);\n        // OR\n        alert(status);\n    }else{\n        //alert(responseDis.rows[0].elements[0].distance.text);\n        console.log(\"Distance \" + responseDis.rows[0].elements[0].distance.text)\n\n        res = responseDis.rows[0].elements[0].distance.text;\n        return \"aaaaaaaaaaaaa\"\n        //result = responseDis.rows[0].elements[0].distance.text;\n    }\n    //return  \"Hallo\"        //result.toString();\n}\n\nconst test = () => {\n    console.log(\"Is it working??\" + res)\n\n    return  <div>Hiiii</div>;\n}\n\nconst theDist = () => {\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\n    return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n}\n\n// function calcDistance() {\n//     // var origin = new google.maps.LatLng(60.233093,24.7531362);\n//     // var destination = new google.maps.LatLng(60.2767265,24.8575089);\n//     // return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n//\n//     var directionsService = new google.maps.DirectionsService();\n//\n//     var request = {\n//         origin      : 'Melbourne VIC', // a city, full address, landmark etc\n//         destination : 'Sydney NSW',\n//         travelMode  : google.maps.DirectionsTravelMode.DRIVING\n//     };\n//\n//     directionsService.route(request, function(response, status) {\n//         if ( status === google.maps.DirectionsStatus.OK ) {\n//             alert( response.routes[0].legs[0].distance.value ) ; // the distance in metres\n//         }\n//         else {\n//             // oops, there's no route between these two locations\n//             // every time this happens, a kitten dies\n//             // so please, ensure your address is formatted properly\n//         }\n//     });\n// }\n\nexport default { distance, test, theDist }","<template>\n\n\n  <MDBContainer v-if=\"isProviderSelected\">\n    <recipientFinal\n        @cansel:final = handleCanselFinal\n        @provider:ordered = orderSuccess\n        :test = test\n        :provider = selectedProvider\n        :proSlides = proSlides\n        :room = room\n        :available = availability\n        :booking = booking\n\n        :chatusers = chatusers\n\n        :chatCredentials = chatCredentials\n\n        :selecteduser = selecteduser\n        :messages = messages\n        @message = onMessage\n        @select = selectUser\n        @noSelect = noSelectUser\n        @finalinfo = finalinfo\n\n    />\n\n  </MDBContainer>\n  <MDBContainer v-else>\n    <MDBBtnClose\n        white\n        style=\"float:right; cursor: pointer;\"\n        @click=\"canselResult\"\n    />\n<!--    <MDBIcon-->\n<!--        style=\"float:right; cursor: pointer;\"-->\n<!--        @click=\"canselResult\"-->\n<!--        size=\"3x\"-->\n<!--    >-->\n<!--      <i class=\"fas fa-undo\"></i>-->\n<!--    </MDBIcon>-->\n\n    <h2>Tarvin tässä osaaja - {{line}}</h2>\n\n\n    <successMessage\n        :message = orderMessage\n    />\n    <MDBRow style=\"margin-top: 50px;\">\n      <MDBCol>\n\n        <MDBTable border=\"primary\" style=\"font-size: 18px; text-align: left;\">\n          <tbody>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              {{booking.description}}\n\n\n            </td>\n            <td v-else>\n              <MDBRow>\n                <MDBCol >\n                  <MDBTextarea\n                      label=\"Muokkaa tehtävän kuvausta...\"\n                      rows=\"4\" v-model=\"description\"\n                      style=\"font-size: 14px; padding: 20px;\"\n                  />\n                </MDBCol>\n                <MDBCol col=\"1\">\n                  <MDBBtnClose\n\n                      @click=\"isEditDescription = false\"\n                      style=\"float: right; cursor: pointer\"\n\n                  />\n                </MDBCol>\n              </MDBRow>\n\n\n\n\n            </td>\n          </tr>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"pressedEditDescription\">Muokkaa tehtävän kuvausta</MDBBtn>\n            </td>\n            <td v-else>\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"saveEditedDescription\">Tallenna tehtävän kuvaus</MDBBtn>\n            </td>\n          </tr>\n          <tr>\n            <td v-if=\"!isEditDate\">\n              <h3>{{bookingDateToDisplay}}</h3>\n              <MDBBtn block size=\"lg\" outline=\"info\" @click=\"editDate\">Muokkaa päivämäärä</MDBBtn>\n            </td>\n            <td v-else>\n              <MDBRow>\n                <MDBCol>\n                  <h3>{{bookingDateToDisplay}}</h3>\n\n                  <VueDatePicker\n                      style=\"margin-bottom: 20px;\"\n                      v-model=\"bookingDate\"\n                      :min-date=\"new Date()\"\n                      placeholder=\"Valitse sopivaa päivä milloin haluaisit ammattilaista!\"\n                      @internal-model-change=\"handleInternalDate\"\n                      :state=\"isNoDate ? false : null\"\n                  >\n\n                  </VueDatePicker>\n                </MDBCol>\n                <MDBCol>\n                  <MDBBtnClose\n                      white\n                      @click=\"isEditDate = false\"\n                      style=\"float: right; cursor: pointer\"\n\n                  />\n                </MDBCol>\n              </MDBRow>\n\n            </td>\n\n          </tr>\n\n          </tbody>\n        </MDBTable>\n\n\n        <div v-for=\"(im, i) in images\" :key=\"i\">\n          <img\n              class=\"loading\"\n              style=\"width: 100%;\"\n              :src=\"im.blob ? im.blob : require(`/server/uploads/${im.name}`)\"\n              :alt=\"im.name\"\n          />\n\n          <MDBBtn v-if=\"!isEditPanel\" block outline=\"success\" @click=\"pressEditPanel(i)\">Muokkaa kuva</MDBBtn>\n          <div class=\"edit-panel\" v-if=\"isEditPanel && imageIndex === i\">\n\n            <MDBRow>\n              <MDBCol>\n                <MDBBtnClose\n                    v-if=\"!value\"\n                    class=\"close-btn\"\n                    style=\"float: right;\"\n                    @click=\"closeEditPanel\"\n                />\n                <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\n                <label  for=\"file-upload\" class=\"custom-file-upload\">\n                  <span v-if=\"value\">\n                  Muokka tehtävän kuvausta: {{value.name}}\n\n                   </span>\n                  <span v-else>Valitse uusi kuva tehtävästä</span>\n                </label>\n                <MDBBtn v-if=\"isEditImage\" block color=\"success\" @click=\"uploadEditedImage(i)\">Upload edited image</MDBBtn>\n                <MDBBtn class=\"btn\" block size=\"lg\" color=\"danger\" @click=\"removeImg(i)\">Poista kuva</MDBBtn>\n              </MDBCol>\n              <MDBCol v-if=\"value\">\n                <MDBBtnClose\n                    class=\"close-btn\"\n                    style=\"float: right;\"\n                    @click=\"closeEditPanel\"\n                />\n                <img\n                    style=\"width:100px; padding-top: 20px;\"\n                    :src=\"this.showImage\"\n                    alt=\"addEdit\"\n                />\n              </MDBCol>\n            </MDBRow>\n\n          </div>\n\n\n\n\n        </div>\n\n        <MDBBtn v-if=\"!isPressedAddlmage\" block color=\"info\" @click=\"pressedAddImage\">Lisää uusi kuva tehtävästä</MDBBtn>\n        <div class=\"add-panel\" v-if=\"isPressedAddlmage && isAddImagePanel\">\n\n\n          <MDBRow>\n\n            <MDBCol>\n              <MDBBtnClose\n                  v-if=\"!value\"\n                  class=\"close-btn\"\n                  @click=\"closeAddPanel\"\n              />\n              <input   id=\"file-upload-x\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\n              <label  for=\"file-upload-x\" class=\"custom-file-upload\">\n                  <span v-if=\"value\">\n                  Muokka tehtävän kuvausta: {{value.name}}\n+\n                   </span>\n                <span v-else>Valitse lisää kuva tehtävästä</span>\n              </label>\n              <MDBBtn v-if=\"isAddImage\" block outline=\"primary\" @click=\"addAdditionalImage\">Tallenna kuva</MDBBtn>\n            </MDBCol>\n            <MDBCol v-if=\"value\">\n              <MDBBtnClose\n                  class=\"close-btn\"\n                  @click=\"closeAddPanel\"\n              />\n              <img\n                  style=\"width:100px\"\n                  :src=\"this.showImage\"\n                  alt=\"addShow\"\n              />\n            </MDBCol>\n          </MDBRow>\n\n        </div>\n\n\n      </MDBCol>\n      <MDBCol v-if=\"isOrdered\">\n\n      </MDBCol>\n      <MDBCol lg=\"6\" v-else>\n        <div v-if=\"providers.length > 0\">\n          <div class=\"ui large form\">\n            <div class=\"field\">\n              <select style=\"padding: 20px; background-color: #3c3535; color: lightgrey; font-size: 18px;\" id=\"listOfProviders\" v-model=\"filterResult\" @click=\"addFilter\">\n                <option value=\"\">Suodatin...</option>\n                <option value=\"distance\">Etäisyyden mukaan</option>\n                <option value=\"rating\">positiivisen palauteen mukaan</option>\n                <!--                <option>Rating</option>-->\n                <!--                <option>Else more</option>-->\n              </select>\n            </div>\n\n          </div>\n          <br>\n\n          <MDBTable  style=\"font-size: 18px; text-align: center;\">\n            <tbody>\n            <tr v-for=\"provider in providers\" :key=\"provider.id\">\n\n\n              <td v-if=\"provider.timeoffer.map(to =>\n\n                datetime.providerMatchingForClient(\n                    bookingTime,\n                    {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\n                    {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\n                )\n              ).includes(true)\">\n                <MDBBtn class=\"provider-selection\"\n                        outline=\"info\"\n                        size=\"lg\"\n                        @click=\"getProviderInfo(provider,'green')\"\n                >\n\n                  {{provider.yritys}}<br>\n\n                  <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span>\n                </MDBBtn>\n                <MDBBadge\n\n                    color=\"success\"\n                    class=\"translate-middle p-1\"\n                    pill\n                    notification\n                ><h4 style=\"padding: 12px;\">\n                  Saatavilla &nbsp;\n                  <img\n                      style=\"width: 50px;\"\n                      :src=\"require(`@/assets/ok.png`)\"\n                      alt=\"ok\"\n                  />\n                </h4>\n                </MDBBadge>\n\n\n\n\n\n              </td>\n              <td v-else>\n\n                <MDBBtn\n                    class=\"provider-selection\"\n                    size=\"lg\"\n                    @click=\"getProviderInfo(provider, 'orange')\"\n                >\n\n                  {{provider.yritys}} <br>\n                  <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span><br>\n                  <span style=\"font-size: 17px;\">{{provider.priceByHour}} Eur</span>\n                </MDBBtn>\n\n\n\n                <MDBBadge\n                    color=\"info\"\n                    class=\"translate-middle p-1\"\n                    pill\n                    notification\n                ><h4 style=\"padding: 12px;\">Sovittaessa</h4></MDBBadge>\n\n              </td>\n\n            </tr>\n            <tr>\n            </tr>\n            </tbody>\n          </MDBTable>\n\n\n\n          <!--          Booking {{booking}}-->\n\n        </div>\n        <div v-else>\n          <h2 style=\"width: 100%;\">Yrityksiä hetkellä ei löytyy</h2>\n        </div>\n\n\n\n      </MDBCol>\n      <MDBBtn block outline=\"danger\" size=\"lg\" @click=\"removeBooking\">Poista tilaus</MDBBtn>\n    </MDBRow>\n\n  </MDBContainer>\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  MDBBtn, MDBContainer, MDBTable, MDBRow,\n  MDBBtnClose,\n  MDBCol, MDBTextarea,\n  MDBIcon,\n  MDBBadge,\n}from \"mdb-vue-ui-kit\";\nimport dt from '../components/controllers/datetime'\nimport recipientFinal from '../pages/RecipientPanelFinal'\nimport successMessage from '../components/notifications/successMessage'\nimport dist from '../components/controllers/distance'\nimport providerService from '../service/providers'\nimport imageService from '../service/image'\nimport VueDatePicker from '@vuepic/vue-datepicker';\n//import socket from \"@/socket\";\nimport {ref} from 'vue'\nimport recipientService from \"@/service/recipients\";\nimport socket from \"@/socket\";\nimport uploadService from \"@/service/image\";\n//import socket from \"@/socket\";\n\n\nexport default {\n  name: \"recipient-panel-result\",\n  props: {\n    test: Boolean,\n    chatusers: Array,\n\n    selecteduser: null,\n    messages: Array,\n    loggedInUser: Object,\n    booking: null,\n    images: Array,\n    bookingTime: null,\n    providers: Array,\n    confirmedBookings: Array,\n    line: String\n  },\n  data () {\n    return {\n      //image: [],\n      //chatUser: {},\n      count: 0,\n      datetime: dt,\n      distance: dist,\n      selectedProvider: null,\n      proSlides: [],\n      isProviderSelected: false,\n      availability: \"\",\n      orderMessage: null,\n      isOrdered: false,\n      isEditDescription: false,\n      description: this.booking.description,\n\n      isEditDate: false,\n      bookingDate: null,\n      bookingDateToDisplay: this.booking.date,\n      //isAddImage: false,\n      isAddFirstImage: false,\n      isPressedAddlmage: false,\n      isAddImage: false,\n      isAddImagePanel: false,\n      isEditImage: false,\n\n\n      isUploadImage: false,\n      isUploaded: false,\n      isImageCreated: false,\n      isAddNewImage: false,\n      isEditPanel: false,\n\n      value: null,\n      imageIndex: 0,\n      file: null,\n      isImageSelected: false,\n      isAdditionalImageSelected: false,\n      showImage: null,\n      tempImages: [],\n      imagesx: [],\n      imagesxxx: [],\n      room: \"\",\n      roomUserCount: 0,\n      filterResult: \"\",\n    }\n  },\n\n  components: {\n    successMessage,\n    VueDatePicker,\n    dist,\n    recipientFinal,\n    MDBBtn,\n    MDBBtnClose,\n    MDBContainer,\n    MDBTable,\n    MDBRow,\n    MDBCol,\n    MDBTextarea,\n    MDBIcon,\n    MDBBadge\n  },\n  methods: {\n\n    editDate () {\n      this.isEditDate = true;\n    },\n    async handleInternalDate () {\n\n      if (this.bookingDate) {\n        this.bookingDateToDisplay = (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear();\n        console.log(\"eeeeee \" + (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear());\n        await recipientService.newDate(this.booking.id, {\n          year: this.bookingDate.getFullYear(),\n          month: this.bookingDate.getMonth(),\n          day: this.bookingDate.getDate(),\n          hours: this.bookingDate.getHours(),\n          minutes: this.bookingDate.getMinutes()\n        })\n\n        const updatedDate = {\n          year: this.bookingDate.getFullYear(),\n          month: this.bookingDate.getMonth(),\n          day: this.bookingDate.getDate(),\n          hours: this.bookingDate.getHours(),\n          minutes: this.bookingDate.getMinutes()\n        }\n\n        this.$emit(\"updateBookingDate\", updatedDate);\n      }\n      console.log(\"Date is handled\")\n     // console.log(\"Selected date: \" + this.date)\n    },\n    handleFileChange(e, i) {\n      //this.$emit('input', e.target.client[0])\n      console.log(\"i in file change \" + i)\n      this.imageIndex = i;\n      try {\n\n        const files = e.target.files[0]\n        console.log('event target client ', e.target.files[0])\n\n        if (files) {\n          const tempImage = URL.createObjectURL(files)\n          this.tempImages.push(tempImage);\n          this.showImage = URL.createObjectURL(files)\n          this.file = e.target.files[0]\n\n          this.isAddImage = true;\n          this.isEditImage = true;\n        }\n\n      } catch (err) {\n        console.log('Error:', err)\n      }\n\n      this.value = e.target.files[0]\n      // if (e.target.files[0]) {\n      //   this.isImageSelected = true;\n      // } else {\n      //   this.isImageSelected = false;\n      // }\n    },\n    pressedAddImage () {\n      this.isAddImage = false\n      this.isEditImage = false;\n      this.isEditPanel = false;\n      this.isPressedAddlmage = true;\n      this.isAddImagePanel = true;\n    },\n    async addImage () {\n\n\n    },\n    pressEditPanel (index) {\n      //this.isImageSelected = false;\n      this.isEditImage = false;\n      this.value = null;\n      this.imageIndex = index;\n      //this.isEditImage = true;\n\n      this.isEditPanel = true;\n      this.isAddImagePanel = false\n      //this.isImageCreated = false;\n      //this.isUploaded = false;\n\n      //this.showImage = null;\n      //this.value = null;\n    },\n    closeEditPanel () {\n      //this.imageIndex = index;\n      //this.isEditImage = true;\n      this.isAddImagePanel = false\n      this.isEditPanel = false\n      this.isEditImage = false;\n      this.value = null;\n    },\n    closeAddPanel () {\n      this.isAddImagePanel = false\n      this.isPressedAddlmage = false;\n      this.value = null;\n    },\n    async uploadEditedImage (index, img) {\n\n      console.log(\"Edited image index is: \" + index);\n\n      this.isEditPanel = false;\n      this.isEditImage = false;\n\n      // this.images.push({\n      //   blob: this.showImage\n      // })\n\n\n\n\n\n      const data = new FormData();\n      data.append('file', this.file, this.file.name)\n\n      //this.$emit(\"editImage\", index, image.imgCreated._id,  this.showImage);\n      console.log(\"Image id \" + this.images[index]._id)\n\n      //this.images[this.imageIndex] = {_id: image._id, blob: this.showImage}\n\n\n\n      const image = await imageService.updateImage(this.images[index]._id, data);\n\n      if (image) {\n        this.images[this.imageIndex] = {_id: this.images[index]._id, blob: this.showImage}\n\n        this.images.forEach(img => {\n          console.log(\"Image name \" + img._id)\n        })\n\n\n        //this.$emit(\"editImage\", index, image.imgCreated._id,  this.showImage);\n        console.log(\"New image id is \" + image._id)\n        this.imgId = image._id;\n        this.file = null;\n\n        //this.$emit(\"editImage\", image, img)\n\n\n\n        this.isEditPanel = false;\n\n      }\n\n      //this.imageIndex = null;\n\n    },\n    async addAdditionalImage () {\n      this.value = null;\n      this.isAddImagePanel = false;\n      this.isAddImage = false;\n      this.isPressedAddlmage = false;\n      const data = new FormData();\n\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking.id, img.imgCreated._id)\n      if (img) {\n        const image = {\n          _id: img.imgCreated._id,\n          blob: this.showImage\n        }\n        this.$emit(\"addImage\", image, this.booking.id);\n      }\n\n\n      // this.images.push({\n      //   _id: img.imgCreated._id,\n      //   blob: this.showImage\n      // })\n\n\n    },\n    async removeImg (id) {\n      //this.value = null;\n      if (!this.images[id].blob) {\n        console.log(\"removed image is blob\")\n\n      }\n\n      console.log(\"removable image id is \" + this.images[id]._id)\n\n      await recipientService.removeImage(this.booking.id, this.images[id]._id);\n      await imageService.remove(this.images[id]._id, this.booking.id);\n\n      this.$emit(\"removeImage\", id);\n\n      this.isEditPanel = false;\n\n\n      //this.imageIndex = null\n      //this.isEditDescription = false;\n\n      //this.isImageSelected = false;\n      //this.showImage = null;\n    },\n    getDistance () {\n      //console.log(\"Distance +++++??? \" + dist.distance())\n      console.log(\"sss \" + dist.test())\n    },\n    selectUser (user) {\n      this.$emit('select', user);\n    },\n    noSelectUser () {\n      this.$emit(\"noSelect\");\n    },\n    onMessage (content, date) {\n      this.$emit(\"message\", content, date);\n    },\n    finalinfo (data) {\n      console.log(\"Final info in result pressed \");\n      this.$emit(\"finalinfo\", data)\n\n    },\n\n\n    async pressAddFirstImage () {\n      this.isAddFirstImage = true;\n      this.imageIndex = 0;\n    },\n\n    pressAdditionalImage (index) {\n      //this.imageIndex = this.booking[0].image.length - 1;\n      this.isAddImage = true;\n      this.imageIndex = this.images.length;\n      //this.imageIndex = \"new\";\n      //this.isAddNewImage = true;\n\n      console.log(\"Images index = \" + this.imageIndex);\n      this.isAddImage = true;\n    },\n\n\n\n    async uploadFirstImage (index) {\n      const data = new FormData();\n      this.isUploadImage = true;\n      this.imageIndex = 0;\n      //this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking.id, img.imgCreated._id);\n\n      if (img) {\n        this.file = null;\n\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name\n        }\n\n        this.$emit(\"addImage\", image);\n\n        this.imageIndex = 0;\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n\n      }\n\n\n\n    },\n    async uploadAdditionalImage () {\n      this.isAdditionalImageSelected = false;\n      this.isAddImage = false;\n      this.value = null;\n      //this.isEditImage = false;\n      //this.imageIndex = null;\n      //this.imageIndex = this.booking[0].image.length - 1;\n      console.log(\"Image index index \" + this.imageIndex)\n      const data = new FormData();\n\n      this.isUploadImage = true;\n      //this.imageIndex = 0;\n      this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking.id, img.imgCreated._id);\n\n      if (img) {\n        //this.imgId = img.imgCreated._id;\n        this.file = null;\n        //this.showImage = null;\n        //this.value = null;\n\n        //console.log(\"xxx \" + img.imgCreated._id)\n        //console.log(\"Image itself \" + img.imgCreated.image)\n        //await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name\n        }\n\n        //this.imagesxxx.push(image);\n\n        this.$emit(\"addImage\", image);\n\n        //this.images.push(image);\n\n        // const booking = await recipientService.getBookingById(this.booking[0].id);\n        //\n        // setTimeout( async () => {\n        //   booking[0].image.forEach(im=> {\n        //     this.images.push(im)\n        //   })\n        //   //this.images = this.images.concat(booking[0].image)\n        // }, 500)\n\n\n        /*const booking = await recipientService.getBookingById(this.booking[0].id);\n\n        this.imagesxxx = booking[0].image\n*/\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n\n\n        //this.imageIndex = null;\n      }\n\n\n\n    },\n\n    chatCredentials (data) {\n      this.$emit(\"chatCredentials\", data);\n    },\n\n    pressedEditDescription () {\n      this.isEditDescription = true\n      console.log(\"Descripton: \" + this.description);\n    },\n    saveEditedDescription () {\n      this.isEditDescription = false;\n      const description = {\n        description: this.description\n      }\n      this.$emit(\"editDescription\", this.description);\n      recipientService.editDescription(this.booking.id, description)\n      //this.description = \"\";\n    },\n    cancelEditDescription () {\n      console.log(\"Is here something happening??\")\n    },\n    providerGetBooking (id, booking) {\n      //const id = this.provider.user.id;\n      console.log(\"Sended to user id... \" + id)\n      socket.emit(\"accept provider\", {\n        id,\n        booking: booking\n      })\n    },\n    async orderSuccess (prov) {\n      //console.log(\"Ordered!!!\")\n\n      this.isProviderSelected = false;\n\n      //this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n      console.log(\"Provider id \" + prov.id)\n      console.log(\"Recpient id: \" + this.booking.id);\n\n      const providerID = {\n        providerID: this.selectedProvider.id\n      };\n\n\n      //await recipientService.addProviderID(this.booking[0].id, providerID);\n\n      await recipientService.addProviderData(this.booking.id, this.selectedProvider.id);\n\n      //socket.emit(\"send booking notification\", this.booking[0], this.selectedProvider.id);\n\n      //const providerName =\n      //const status = \"notSeen\";\n      const createBookingStatus = await recipientService.updateRecipient(this.booking.id, {status: \"notSeen\"});\n      console.log(\"Is status updated: \" + createBookingStatus.status);\n\n\n      const recipientId = this.booking.id;\n\n      //--------------- About need delete selected and confirmed provider ------------\n\n      //const booking = await providerServise.updateProvider(provId, {booking: [this.booking.id]})\n      // To ordered\n      const booking = await providerService.addProviderBooking(prov.id, recipientId);\n      if (booking === \"Recipient is added!\") {\n        const chatUserDataNavbar = {\n          status: \"\",\n          userID: prov.user.id,\n          name: prov.user.username,\n          room: this.room\n        };\n        this.$emit('client:confirmed_provider', prov.id, this.booking, chatUserDataNavbar);\n        //this.$emit('set:order:to:send', prov.id, this.booking, chatUserDataNavbar)\n\n        this.roomToDb(prov.id, {userID: this.booking.user.id, client: this.booking.user.username, room: this.room});\n        //this.providerGetBooking(prov.user.id, booking);\n        const id = prov.user.id;\n\n        socket.emit(\"accept provider\", {\n          id,\n          booking: this.booking,\n        })\n\n        this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n\n        console.log(\"Booking made - id: \" + booking.id);\n\n        this.isOrdered = true;\n\n        setTimeout(() => {\n          this.orderMessage = null;\n        }, 3000)\n\n      } else {\n        this.orderMessage = \"Olet lähetänyt jo tilauksen!\"\n        setTimeout(() => {\n          this.orderMessage = null;\n        }, 3000)\n        //console.log(\"Yritys on jo tilattu!\")\n      }\n\n\n\n    },\n    getProviderInfo (provider, marker) {\n      this.proSlides = [];\n      this.selectedProvider = provider;\n      provider.reference.forEach(slide => {\n        this.proSlides = [\n            ...this.proSlides,\n          {\n            id: slide.id,\n            size: '1400-933',\n            src: require(`/server/uploads/pro/${slide.name}`),\n            thumb: require(`/server/uploads/pro/${slide.name}`),\n            subHtml: `<div class=\"lightGallery-captions\">\n                <h2>Terve</h2>\n\n            </div>\"`\n          }\n        ]\n      })\n      this.availability = marker;\n      this.isProviderSelected = true;\n\n      //console.log(\"Booking username \" + this.booking[0].user.username)\n      //console.log(\"Recipient room: \" + (provider.yritys + this.booking[0].user.username))\n      this.room = provider.yritys + this.booking.user.username\n\n      // socket.emit(\"room users count\")\n      // socket.on('get room users count', (data) => {\n      //   console.log(\"Can we get users data from backend in recipient final??? \" + data.users.length)\n      //   this.roomUserCount = data.users.length;\n      // })\n\n      const username = this.booking.user.username;\n      //const room = provider.yritys + this.booking.user.username;\n      const room = provider.yritys + this.booking.user.username;\n\n      console.log(\"Provider username---- \" + provider.user.username);\n\n      const chatCredentials = {\n        room: room,\n        userID: provider.user.id,\n        username: provider.user.username,\n      }\n\n\n\n      const providerDatax = {\n        userID: provider.user.id,\n        username: provider.user.username,\n        room: room\n      }\n\n      this.$emit(\"provider\", providerDatax);\n\n      const providerData = \"Allu\"\n\n      const id = provider.user.id;\n      const name = provider.user.username;\n\n      // data to create new room\n\n\n      //socket.emit(\"online\", (room));\n\n      // socket.emit(\"create new room user\", {\n      //   room: room,\n      //   username: username\n      // })\n\n\n\n      socket.emit(\"create room users\", {\n        room: room,\n        username: username,\n        providerUsername: provider.user.username,\n        providerID: provider.user.id\n      })\n\n      this.$emit(\"chatCredentials\", chatCredentials)\n\n      //socket.emit(\"update room\", room, id, name)\n      // let rooms = [\"Oopersama\", \"tvsama\"]\n      // socket.emit(\"join all room\", rooms);\n      // iolrhjwefiogäqhj\n    },\n    async roomToDb (id, room) {\n      await providerService.addRoom(id, room)\n    },\n    addFilter () {\n      const filterListedProviders = document.getElementById(\"listOfProviders\")\n\n      filterListedProviders.addEventListener(\"change\", (event) => {\n        console.log(\"Filtered provider: \" + event.target.value);\n        this.$emit(\"filter_provider\", event.target.value);\n        // if (event.target.value === \"distance\") {\n        //   this.$emit(\"filter_provider\", event.target.value);\n        // } else if (event.target.value === \"feedback\") {\n        //\n        //   this.$emit(\"filter_feedback\")\n        // }\n\n\n\n      })\n    },\n    handleCanselFinal (result) {\n      this.isProviderSelected = result;\n    },\n    canselResult () {\n      this.$emit('cansel:result', false)\n    },\n    async removeBooking () {\n      // booking[0].id\n      //this.$emit(\"removeBooking\", this.booking.id);\n      console.log(\"In start booking id \" + this.booking.id)\n      if (confirm(\"Oletko varmaa, että haluat poistaa tilauksen!?\") === true) {\n        console.log(\"You pressed OK!\")\n\n\n        this.$emit(\"removeBooking\", this.booking.id);\n\n      } else {\n        console.log(\"You canceled!\")\n      }\n      //await recipientService.removeBooking(this.booking[0].id);\n\n      this.images.forEach(img => {\n        console.log(\"Images ## \" + img._id);\n        imageService.cleanAllRecipientImages(img._id)\n      })\n\n      // const removable = this.recipientBookings.find(res => res.id === id);\n      // if (removable.image !== null) {\n      //   removable.image.forEach( (rem) => {\n      //     console.log(\"### \" + rem._id)\n      //     imageService.cleanAllRecipientImages(rem._id)\n      //   })\n      // }\n\n\n\n    },\n  },\n\n  async mounted() {\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      this.chatUser = user;\n\n      /*const booking = await recipientService.getBookingById(this.booking[0].id);\n      this.imagesxxx = booking[0].image*/\n      /*booking[0].image.forEach(bi => {\n        this.tempImages.push(bi.name)\n      })*/\n\n\n\n\n\n      //this.joinServer(username, userID);\n    }\n\n\n  }\n}\n</script>\n\n\n<style scoped>\n.edit-panel {\n  border: solid grey;\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.add-panel {\n  border: solid grey;\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.add-additional-panel {\n  border: solid blue;\n}\n.btn {\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.close-btn {\n  float: right;\n  padding: 20px;\n}\nimg.loading {\n  width: 100%;\n  height: 400px;\n  background: transparent url(https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif) no-repeat scroll center center;\n}\n.success {\n  color: white;\n  background: #7bc47b;\n  font-size: 20px;\n  border: solid #0e920e;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\ninput[type=\"file\"] {\n  display: none;\n}\n.custom-file-upload {\n  width: 100%;\n\n  color: white;\n  font-size: 18px;\n  background-color: #87958e;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 20px 12px;\n  margin-bottom: 0;\n  cursor: pointer;\n}\n.imageSection {\n  margin-bottom: 20px;\n}\n.provider-selection {\n  width: 300px;\n  padding: 20px;\n  background-color: grey;\n  border: solid #4c4949;\n  color: #f0eeee;\n  font-size: 150%;\n}\n\nselect option {\n  border: solid red;\n}\n\n</style>","import { render } from \"./RecipientPanelResult.vue?vue&type=template&id=2c521c6d&scoped=true\"\nimport script from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanelResult.vue?vue&type=style&index=0&id=2c521c6d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2c521c6d\"]])\n\nexport default __exports__"],"names":["compare","rec","prov","receiverDate","Date","y","m","d","hour","min","providerDate","providerMatchingForClient","re","pFrom","pTo","pFromDate","pToDate","res","distance","origin","google","maps","LatLng","destination","service","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","unitSystem","UnitSystem","METRIC","durationInTraffic","avoidHighways","avoidTolls","response_data","responseDis","status","DistanceMatrixStatus","OK","console","log","rows","elements","text","alert","test","_createVNode","_createTextVNode","theDist","geometry","spherical","computeDistanceBetween","toFixed","class","for","_createElementVNode","value","_hoisted_22","_hoisted_23","_hoisted_24","style","_hoisted_40","$data","isProviderSelected","_createBlock","_component_MDBContainer","key","_component_recipientFinal","$options","handleCanselFinal","orderSuccess","$props","provider","selectedProvider","proSlides","room","available","availability","booking","chatusers","chatCredentials","selecteduser","messages","onMessage","onSelect","selectUser","onNoSelect","noSelectUser","onFinalinfo","finalinfo","_component_MDBBtnClose","white","onClick","canselResult","_toDisplayString","line","_component_successMessage","message","orderMessage","_component_MDBRow","_component_MDBCol","_component_MDBTable","border","isEditDescription","_createElementBlock","_hoisted_2","_component_MDBTextarea","label","description","$event","col","_cache","_hoisted_1","_hoisted_4","_component_MDBBtn","outline","block","size","saveEditedDescription","_hoisted_3","pressedEditDescription","isEditDate","_hoisted_6","bookingDateToDisplay","_component_VueDatePicker","bookingDate","placeholder","onInternalModelChange","handleInternalDate","state","_ctx","isNoDate","_hoisted_5","editDate","_Fragment","_renderList","images","im","i","src","blob","require","name","alt","isEditPanel","pressEditPanel","imageIndex","_hoisted_8","closeEditPanel","id","type","onChange","handleFileChange","_hoisted_10","_hoisted_11","_hoisted_12","isEditImage","color","uploadEditedImage","removeImg","showImage","isPressedAddlmage","pressedAddImage","isAddImagePanel","_hoisted_14","closeAddPanel","_hoisted_15","_hoisted_16","_hoisted_17","isAddImage","addAdditionalImage","isOrdered","lg","providers","length","_hoisted_19","_hoisted_20","_hoisted_21","filterResult","args","addFilter","_hoisted_26","timeoffer","map","to","datetime","bookingTime","yearFrom","monthFrom","dayFrom","hoursFrom","minutesFrom","yearTo","monthTo","dayTo","hoursTo","minutesTo","includes","_hoisted_27","getProviderInfo","yritys","_hoisted_28","_hoisted_29","_component_MDBBadge","pill","notification","_hoisted_30","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","priceByHour","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_41","removeBooking","props","Boolean","Array","loggedInUser","Object","confirmedBookings","String","data","count","dt","dist","this","date","isAddFirstImage","isUploadImage","isUploaded","isImageCreated","isAddNewImage","file","isImageSelected","isAdditionalImageSelected","tempImages","imagesx","imagesxxx","roomUserCount","components","successMessage","VueDatePicker","recipientFinal","MDBBtn","MDBBtnClose","MDBContainer","MDBTable","MDBRow","MDBCol","MDBTextarea","MDBIcon","MDBBadge","methods","async","getMonth","getDate","getFullYear","recipientService","newDate","year","month","day","hours","getHours","minutes","getMinutes","updatedDate","$emit","e","files","target","tempImage","URL","createObjectURL","push","err","index","img","FormData","append","_id","image","imageService","updateImage","forEach","imgId","create","addImage","imgCreated","removeImage","remove","getDistance","user","content","pressAdditionalImage","editDescription","cancelEditDescription","providerGetBooking","socket","emit","addProviderData","createBookingStatus","updateRecipient","recipientId","providerService","addProviderBooking","chatUserDataNavbar","userID","username","roomToDb","client","setTimeout","marker","reference","slide","thumb","subHtml","providerDatax","providerUsername","providerID","addRoom","filterListedProviders","document","getElementById","addEventListener","event","result","confirm","cleanAllRecipientImages","loggedUserJSON","window","localStorage","getItem","JSON","parse","chatUser","__exports__","render"],"sourceRoot":""}