{"version":3,"file":"js/906.0dd5f1fa.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/notifications/errorMessage.js","webpack://prore-mongo/./src/pages/Profile.vue","webpack://prore-mongo/./src/components/EditProfile.vue","webpack://prore-mongo/./src/components/EditProfile.vue?c1b4","webpack://prore-mongo/./src/pages/Profile.vue?5f2d"],"sourcesContent":["const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n            <img className={'errorImg'} alt={'error'} src={require('@/assets/error.png')}/>\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage","<template>\n  <div >\n    <MDBContainer style=\"margin-top: 70px;\">\n\n      <div v-if=\"!userData\" class=\"spinner-border\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n      <div v-else>\n        <MDBRow>\n          <file-error\n              :message = fileSizeError\n          />\n          <file-error\n              :message = fileTypeError\n          />\n          <file-error\n              :message = emailErrorMessage\n          />\n          <MDBCol lg=\"4\">\n\n            <MDBCol lg=\"6\">\n\n              <MDBRow>\n\n                <MDBCol  >\n<!--                  require(`/server/uploads/avatar/${avatar}`)-->\n<!--                  :src=\"showImage ? showImage : (avatar.name !== 'avatar.png' ? avatar.image : require(`/server/uploads/avatar/${avatar.name}`))\"-->\n<!--                  :src=\"showImage ? showImage : require(`/server/uploads/avatar/${avatar.name}`)\"-->\n                  <img\n\n                      :src=\"showImage ? showImage : avatar\"\n                      alt=\"profile_img_blob\"\n                      style=\"width: 100px; height: 100px; border: 1px solid darkgrey; border-radius: 50px; margin-bottom: 20px;\"\n                  />\n                </MDBCol>\n\n<!--                <div v-if=\"showImage && !isOpenSetAvatar && isPressedEditProfile\">-->\n<!--                  <p @click=\"isOpenSetAvatar = true\">Muokkaa</p>-->\n<!--                </div>-->\n<!--                <div v-else>-->\n<!--                  <p v-if=\"isPressedEditProfile && !isOpenSetAvatar\" @click=\"isOpenSetAvatar = true\">Lisa avatar</p>-->\n<!--                </div>-->\n\n<!--                <div v-if=\"(showImage) && !isOpenSetAvatar && isPressedEditProfile\">-->\n<!--                  <p @click=\"isOpenSetAvatar = true\">Muokkaa</p>-->\n<!--                </div>-->\n<!--                <div v-else>-->\n<!--                  <div v-if=\"avatarObject.isImage === false\">-->\n<!--                    <p v-if=\"isPressedEditProfile && !isOpenSetAvatar\" @click=\"isOpenSetAvatar = true\">Lisa avatar</p>-->\n<!--                  </div>-->\n\n<!--                </div>-->\n                    <div v-if=\"showImage\">\n                      <div v-if=\"!isOpenSetAvatar && isPressedEditProfile\">\n                        <p @click=\"editProfileAvatar\">Muokkaa</p>\n                      </div>\n                      <div v-else>\n                        <p v-if=\"isPressedEditProfile && !isOpenSetAvatar\" @click=\"addNewAvatar\">Lisää avatar</p>\n                      </div>\n                    </div>\n                    <div v-else>\n                      <div v-if=\"avatarObject.isImage === true\">\n                        <div v-if=\"isPressedEditProfile\">\n                          <p @click=\"editProfileAvatar\">Muokkaa</p>\n                        </div>\n\n                      </div>\n                      <div v-else>\n                        <p v-if=\"isPressedEditProfile && !isOpenSetAvatar\" @click=\"addNewAvatar\">Lisää avatar</p>\n                      </div>\n                    </div>\n\n\n\n\n\n                <div class=\"edit-panel\" v-if=\"(isOpenSetAvatar)  \">\n                  <!--                <error-message :message = wrong_SizeType_Message />-->\n                  <div style=\"display: flex; justify-content: right;\">\n                    <MDBBtnClose\n                        white\n                        class=\"close-btn\"\n                        style=\"float: right;\"\n                        @click=\"closeEditPanel\"\n                    />\n                  </div>\n                  <MDBRow >\n                    <MDBCol>\n                      <input  id=\"avatar-upload\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\n                      <label  for=\"avatar-upload\" class=\"profile-file-upload\">\n                  <span v-if=\"value\">\n                  Muokka tehtävän kuvausta\n\n                   </span>\n                        <span v-else>Valitse avatar</span>\n                      </label>\n<!--                      <MDBBtn v-if=\"isEditImage\" block color=\"success\" @click=\"uploadEditedImage(i)\">Upload edited image</MDBBtn>-->\n                      <MDBBtn v-if=\"showImage || avatarObject.isImage === true\" class=\"btn\" block size=\"lg\" color=\"danger\" @click=\"removeProfileImage\">Poista kuva</MDBBtn>\n                    </MDBCol>\n\n                  </MDBRow>\n\n                </div>\n\n                <MDBCol>\n\n                  <div v-if=\"!isPressedEditProfile\">\n                    <div style=\"float: right; padding: 10px; width: 100%;\">\n\n                      <div class=\"profile-info\">\n                        <div v-if=\"pro\" >\n                          <h3 >{{ pro.yritys }}</h3>\n                          <div style=\" color: cadetblue;\">\n\n                            <div\n                                v-if=\"((pro.proTime - new Date().getTime()) / 86400000).toFixed() <= 0\"\n                            >\n                              <p>Valitettavasti käyttö on päättynyt!</p>\n                              <p style=\"color: orangered; cursor: pointer;\" @click=\"$router.push('/pay-plan')\">Lattaa lisää aikaa!</p>\n                            </div>\n                            <div v-else-if=\"((pro.proTime - new Date().getTime()) / 86400000).toFixed() <= 3\n                          && ((pro.proTime - new Date().getTime()) / 86400000).toFixed() > 0\">\n                              <p>Käyttö</p>\n                              <p>{{((pro.proTime - new Date().getTime()) / 86400000).toFixed()}} päivää</p>\n                              <p style=\"color: orangered;  cursor: pointer;\" @click=\"$router.push('/pay-plan')\">Lattaa lisää aikaa!</p>\n                            </div>\n                            <div v-else>\n                              <div v-if=\"((pro.proTime - new Date().getTime()) / 86400000).toFixed() === 'NaN'\" class=\"spinner-border\" role=\"status\">\n                                <span class=\"visually-hidden\">Loading...</span>\n                              </div>\n                              <div v-else>\n                                <p>Käyttö: </p>\n                                <p>{{((pro.proTime - new Date().getTime()) / 86400000).toFixed()}} päivää</p>\n                              </div>\n                            </div>\n                          </div>\n\n\n                        </div>\n\n                        <p v-if=\"client\">Sinulla on varauksia ({{client.length}})</p>\n                      </div>\n\n                    </div>\n                  </div>\n\n                </MDBCol>\n              </MDBRow>\n\n            </MDBCol>\n\n          </MDBCol>\n          <MDBCol  lg=\"8\">\n            <div class=\"profile-main\">\n              <MDBBtnClose\n                  v-if=\"!isPressedEditProfile\"\n                  white\n                  style=\"float: right; padding: 13px;\"\n                  @click=\"$router.go(-1)\"\n              />\n              <!--            <MDBBtnClose-->\n              <!--                -->\n              <!--                white-->\n              <!--                style=\"float: right;\"-->\n              <!--                @click=\"isPressedEditProfile = false\"-->\n              <!--            />-->\n              <MDBTable v-if=\"!isPressedEditProfile\" borderless style=\"font-size: 14px; text-align: left;\">\n                <tbody>\n                <tr>\n                  <td>\n                    Etunimi:\n                  </td>\n                  <td>\n                    {{userData.firstName}}\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    Sukunimi:\n                  </td>\n                  <td>\n                    {{loggedInUser.lastName}}\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    Käyttäjätunnus:\n                  </td>\n                  <td>\n                    {{loggedInUser.username}}\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    Osoite:\n                  </td>\n                  <td>\n                    {{userData.address}}\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    Sähköposti\n                  </td>\n                  <td>\n                    <!--              <div style=\"word-wrap: break-word;\">this_is_a_long_email@some_domain.net</div>-->\n                    {{userData.email}}\n                  </td>\n                </tr>\n                <tr>\n                  <td colspan=\"2\">\n                    <MDBBtn block size=\"lg\" outline=\"success\" @click=\"pressedEditProfile\">Muokkaa tiotosi</MDBBtn>\n                  </td>\n                </tr>\n                </tbody>\n              </MDBTable>\n\n              <edit-profile\n                  v-else\n                  :loggedInUser = loggedInUser\n                  :userData=\" userData\"\n                  @goBackFromEditProfile = handleCloseEditProfile\n                  @profile:data = handleSaveProfile\n                  @saveProfileImg = handleSaveProfileImage\n              />\n\n            </div>\n\n\n          </MDBCol>\n        </MDBRow>\n      </div>\n\n<!--      show image {{showImage}}<br>-->\n<!--      avatar {{avatar}}<br>-->\n<!--      Avatar obj {{avatarObject}}<br>-->\n<!--      isEditProfImage {{isEditProfileImage}}<br>-->\n<!--      isAddProfileImage {{isAddProfileImage}}-->\n<!--      file {{file}}-->\n\n    </MDBContainer>\n  </div>\n\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  MDBContainer,\n  MDBTable,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBIcon,\n  MDBBtnClose\n  //MDBInput\n}from \"mdb-vue-ui-kit\";\nimport editProfile from \"../components/EditProfile\";\nimport providerService from \"@/service/providers\";\nimport recipientService from \"@/service/recipients\";\nimport imageService from \"@/service/image\"\nimport awsUploadService from '@/service/awsUploads'\nimport userService from \"@/service/users\"\nimport fileError from \"@/components/notifications/errorMessage\"\nimport '@/css/style.css';\nimport '@/css/notification.css'\nimport socket from \"@/socket\"\nexport default {\n  name: \"user-profile\",\n  props: {\n    avatar:  Object,\n    avatarObject: Object,\n    loggedInUser: Object,\n    provider: Object,\n    recipient: Array\n  },\n  components: {\n    editProfile,\n    fileError,\n    MDBContainer,\n    MDBTable,\n    MDBBtn,\n    MDBRow,\n    MDBCol,\n    MDBIcon,\n    MDBBtnClose\n    //MDBInput\n  },\n  data () {\n    return {\n      isOpenSetAvatar: false,\n      isOpenAdd: false,\n      isOpenEdit: false,\n      user: null,\n      userData: null,\n      isPressedEditProfile: false,\n      isAddProfileImage: false,\n      isEditProfileImage: false,\n      isEditData: false,\n      pro: null,\n      client: [],\n      mail: \"\",\n      address:\"\",\n      osoite:null,\n      lat: null,\n      long: null,\n      showImage: null,\n      value: null,\n      file: null,\n      isProfileImageSelected: false,\n      isUploaded: false,\n      user_profile_image: [],\n      //avatar: {name: \"avatar.png\", image: \"\"} ,\n      image_id: null,\n      fileSizeError: null,\n      fileTypeError: null,\n      emailErrorMessage: null\n    }\n  },\n  mounted () {\n    this.getUserData();\n\n  },\n  methods: {\n    // Get user\n    addNewAvatar () {\n      this.isOpenSetAvatar = true;\n      this.isAddProfileImage = true;\n    },\n    editProfileAvatar () {\n      this.isOpenSetAvatar = true;\n      this.isEditProfileImage = true;\n    },\n    async getUserData () {\n      const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n      if (!loggedUserJSON) {\n        this.$router.push('/');\n      } else {\n        this.user = JSON.parse(loggedUserJSON)\n\n        const pro = await providerService.getProvider(this.user.id)\n        const client = await recipientService.getOwnBookings(this.user.id);\n\n        if (pro && client.length > 0) {\n          //this.avatar = pro.user.avatar;\n          this.pro = pro\n          this.userData = {\n            firstName: this.user.firstName,\n            address: pro.address,\n            email: pro.user.email\n          }\n        } else if (pro) {\n          //this.avatar = pro.user.avatar;\n          this.pro = pro\n          this.userData = {\n            firstName: this.user.firstName,\n            address: pro.address,\n            email: pro.user.email\n          }\n        } else if(client.length > 0) {\n          //if (client[0].user.avatar)\n            //this.avatar = client[0].user.avatar;\n          this.client = client\n          //console.log(\"Client avatar: \" + client[0].user.avatar.name)\n\n          this.userData = {\n            firstName: this.user.firstName,\n            address: client[0].address,\n            email: client[0].user.email\n          }\n        } else {\n          this.userData = {\n            firstName: this.user.firstName,\n            address: \"\",\n            email: this.user.email\n          }\n        }\n\n\n\n      }\n\n    },\n    async getUserPro () {\n      const provider = await providerService.getProvider(this.user.id)\n      //const client = await recipientService.getOwnBookings(this.user.id);\n\n      if (provider) {\n        console.log(\"User pro username \" + provider.user.username)\n        this.pro = provider\n        this.userData = {\n          firstName: this.loggedInUser.firstName,\n          address: this.pro.address\n        }\n      }\n\n\n    },\n    async getUserRecipient () {\n      const client = await recipientService.getOwnBookings(this.user.id);\n      if (client && client.length > 0) {\n        this.client = client\n        this.userData = {\n          firstName: this.user.firstName,\n          address: client[0].address\n        }\n      }\n    },\n    pressedEditProfile () {\n      this.isPressedEditProfile = true;\n    },\n    handleSaveProfileData () {\n\n    },\n    // getPro (pro) {\n    //   if (pro.yritys) {\n    //     this.pro = pro;\n    //   } else {\n    //     this.pro = null;\n    //   }\n    //   // setTimeout(() => {\n    //   //   if (pro.yritys) {\n    //   //     this.pro = pro;\n    //   //   } else {\n    //   //     this.pro = null;\n    //   //   }\n    //   // }, 2000)\n    // },\n\n    async validateUploadErrors (data, file, status) {\n      console.log(\"FILE \" + file.type);\n      console.log(\"Status: \" + status);\n      console.log(\"Is true or false \" + file.type === \"image/jpeg\" || file.type === \"image/png\" || file.type === \"image/jpg\" || file.type === \"image/gif\")\n      const acceptedTypes = [\"image/jpeg\", \"image/png\", \"image/jpg\", \"image/gif\"];\n      if (acceptedTypes.includes(file.type)) {\n        console.log(\"KUNNOSSA\")\n        console.log(\"File size \" + file.size);\n        if (file.size < 1000000) {\n          if (status === \"add\") {\n            console.log(\"_____Add image\")\n            const uploadedAvatar = await awsUploadService.uploadAvatarImage(this.user.id, data);\n            const info = {\n              isImage: true,\n              key: uploadedAvatar.key,\n              imageUrl: uploadedAvatar.imageUrl\n            }\n            this.$emit(\"updateAvatar\", info,  this.showImage); // to app, for navbar avatar adding\n\n          } else {\n\n            const key = this.avatarObject.key;\n\n            const editedAvatar = await awsUploadService.editAvatarImage(this.user.id, key, data);\n            const editInfo = {\n              isImage: true,\n              key: editedAvatar.key,\n              imageUrl: editedAvatar.imageUrl\n            }\n            console.log(\"_____Edit image \" + editedAvatar.key);\n            this.$emit(\"updateAvatar\", editInfo, this.showImage); // to app, for navbar avatar update\n\n          }\n        } else {\n          this.showImage = null;\n          this.value = null;\n          this.isPressedEditProfile = false;\n          this.openSetAvatar = false;\n\n          this.fileSizeError = \"Kuvan koko on oltava pienempi kun 1 MB!\"\n          setTimeout(() => {\n            this.fileSizeError = null;\n          }, 3000)\n\n        }\n      } else {\n        console.log(\"EI KUNNOSSA\")\n\n        this.fileTypeError = \"Pitäisi käyttää kuvan formaatti (jpeg, jpg, png, gif)!\"\n        setTimeout(() => {\n          this.fileTypeError = null;\n        }, 3000)\n        this.showImage = null;\n        this.isAddProfileImage = false;\n        this.isEditProfileImage = false;\n        this.value = null;\n      }\n    },\n    async handleSaveProfile (newAddress, newEmailAddress) {\n      console.log(\"Is new address?? \" + newAddress.latitude)\n      // Edit address if address is choosen, otherwice do nothing\n      if (newEmailAddress !== \"\") {\n        const emailAlreadyExists = await userService.editEmail(this.user.id, {email: newEmailAddress});\n        if (emailAlreadyExists.error !== \"email existing\") {\n          this.userData.email = newEmailAddress;\n        } else {\n          this.emailErrorMessage = \"Antamasi sähköpostiosoite on jo olemassa!\"\n          setTimeout(() => {\n            this.emailErrorMessage = null;\n          }, 2000);\n        }\n      }\n      if (newAddress.latitude !== null) {\n        if (this.pro) { // If client is provider\n          await providerService.editAddress(this.pro.id, newAddress);\n          this.userData.address = newAddress.address;\n        }\n        if (this.client.length > 0) { // If client is recipient\n          for (let booking in this.client) {\n            const bookingID = this.client[booking].id;\n            await recipientService.editBookingAddress(bookingID, newAddress);\n            this.userData.address = newAddress.address;\n          }\n        }\n\n      }\n      const data = new FormData();\n      if (this.value !== null) {\n        if (this.isAddProfileImage) {\n          console.log(\"Saving image type \" + this.file.type);\n\n\n          data.append('file', this.file, this.file.name)\n\n          await this.validateUploadErrors(data, this.file, \"add\");\n          //this.$router.go(-1);\n\n        } else if (this.isEditProfileImage) {\n          console.log(\"Editing image here\")\n          data.append('file', this.file, this.file.name);\n          await this.validateUploadErrors(data, this.file, \"edit\");\n          //this.$router.go(-1);\n\n        }\n\n        this.isAddProfileImage = false;\n        this.isEditProfileImage = false;\n\n      }\n\n    },\n    saveEditedName () {\n      this.userData.firstName = this.name;\n      this.isEditName = false;\n    },\n    handleCloseEditProfile () {\n      this.isPressedEditProfile = false;\n      this.isAddProfileImage = false;\n      this.isEditProfileImage = false;\n    },\n    handleFileChange(e) {\n      //this.$emit('input', e.target.client[0])\n\n      try {\n\n        const files = e.target.files[0]\n        this.file = files;\n        console.log('event target client ', e.target.files[0])\n        if (files){\n          //const tempImage = URL.createObjectURL(files)\n          //this.tempImages.push(tempImage);\n\n\n\n          //this.isAddProfileImage = true;\n\n\n\n          this.file = e.target.files[0];\n\n          this.isOpenEdit = true;\n          //this.showImage = URL.createObjectURL(files)\n          this.showImage = URL.createObjectURL(files);\n\n          //this.avatar = URL.createObjectURL(files)\n\n\n\n\n\n\n          // console.log(\"Image type: \" +  this.file.type)\n          // console.log(\"Image size: \" + typeof this.file.size)\n        }\n\n      } catch (err) {\n        console.log('Error:', err)\n      }\n\n      this.value = e.target.files[0]\n      if (e.target.files[0]) {\n        this.isProfileImageSelected = true;\n      } else {\n        this.isProfileImageSelected = false;\n      }\n    },\n    addProfileImage () {\n      this.isAddProfileImage = true;\n    },\n    editProfileImage () {\n      this.isEditProfileImage = true;\n    },\n    closeEditPanel () {\n      this.isOpenSetAvatar = false;\n      this.isAddProfileImage = false;\n      this.isEditProfileImage = false;\n    },\n    async removeProfileImage () {\n      //this.avatar = null;\n      this.openSetAvatar = false;\n      if (!this.showImage) {\n        console.log(\"Deleting real image...\");\n        await awsUploadService.deleteAvatar(this.user.id, this.avatarObject.key);\n        this.$emit('delete_avatar');\n      } else {\n        //this.avatar = {name: \"avatar.png\", image: \"\"};\n        this.value = null;\n        this.showImage = null;\n        this.isOpenSetAvatar = false;\n        //this.isEditProfileImage = false;\n\n      }\n      // this.avatar = \"avatar.png\"\n      // this.showImage = null;\n      // this.$emit(\"removeAvatar\")\n      // await userService.removeAvatar(this.user.id);\n      // this.isEditProfileImage = false;\n      // this.isPressedEditProfile = false;\n\n\n\n\n      // if (this.avatar) {\n      //   // Removing avatar will take place in User router\n      //   await userService.removeAvatar(this.loggedInUser.id);\n      // }\n\n    },\n    async handleSaveProfileImage () {\n      //this.isUploaded = true;\n      this.isPressedEditProfile = false;\n      this.isOpenSetAvatar = false;\n      // this.isAddProfileImage = false;\n      // this.isEditProfileImage = false;\n    }\n\n\n  }\n}\n</script>\n\n<style scoped>\nhtml, body {\n  /*overflow-y: auto;*/\n  background-color: #141414;\n  /*background-image: url('../assets/247.png');*/\n  background-image: url('../assets/247.png');\n\n}\n\n.profile_image {\n  width: 160px;\n  text-align: center;\n  color: cadetblue;\n  margin-top: 50px;\n  cursor:pointer;\n}\nimg.loading {\n  width: 100px;\n  height: 100px;\n  background: transparent url(https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif) no-repeat scroll center center;\n}\ninput[type=\"file\"] {\n  display: none;\n}\n.profile-file-upload {\n  width: 100%;\n\n  text-align: center;\n  color: white;\n  background-color: #2e2b2b;\n\n  display: inline-block;\n  padding: 10px 12px;\n  margin-bottom: 10px;\n  cursor: pointer;\n}\n\n.profile-main table {\n  color: #ddd;\n}\n</style>","<template>\n  <MDBBtnClose\n      white\n      style=\"float: right; cursor: pointer; padding: 13px;\"\n      @click=\"closeEditProfile\"\n  />\n  <MDBContainer>\n    <div class=\"edit-profile\">\n      <MDBTable  borderless style=\"font-size: 14px; text-align: left;\">\n        <tbody>\n        <tr>\n          <td>\n            Etunimi:\n          </td>\n          <td>\n            {{loggedInUser.firstName}}\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Sukunimi:\n          </td>\n          <td>\n            {{loggedInUser.lastName}}\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Käyttäjätunnus:\n          </td>\n          <td>\n            {{loggedInUser.username}}\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Osoite\n          </td>\n          <td>\n            <p style=\"color:cornflowerblue;\">{{userData.address}}</p>\n            <MDBInput\n                white\n                size=\"lg\"\n                id=\"address\"\n                :label=\"userData.address ? 'Anna uusi osoitteesi' : 'Anna Osoitteesi'\"\n                v-model=\"newAddress\"\n            />\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Sähköposti\n          </td>\n          <td>\n            <p style=\"color: cornflowerblue\">{{userData.email}}</p>\n            <MDBInput\n                white\n                size=\"lg\"\n                :label=\"userData.email !== '' ? 'Anna uusi sähköpostisi' : 'Anna Sähköpostisi'\"\n                v-model=\"email\"\n            />\n          </td>\n        </tr>\n        <tr>\n          <td colspan=\"2\">\n            <MDBBtn block size=\"lg\" color=\"success\" @click=\"saveProfileData\">Tallenna tiedot</MDBBtn>\n          </td>\n        </tr>\n        </tbody>\n      </MDBTable>\n    </div>\n\n  </MDBContainer>\n\n</template>\n\n<script>\n/*global google*/\nimport {\n  MDBContainer,\n  MDBInput,\n  MDBBtn,\n  MDBBtnClose,\n  MDBTable\n} from 'mdb-vue-ui-kit'\nimport '@/css/style.css';\nimport '@/css/notification.css'\nexport default {\n  name: \"EditProfile\",\n  props: {\n    loggedInUser:Object,\n    userData: Object\n  },\n  components: {\n    MDBContainer,\n    MDBInput,\n    MDBBtnClose,\n    MDBBtn,\n    MDBTable\n  },\n  data () {\n    return {\n      lat: null,\n      long: null,\n      address: null,\n      email: \"\",\n      newAddress: \"\"\n    }\n  },\n  mounted() {\n    const center = { lat: 50.064192, lng: -130.605469 };\n    // Create a bounding box with sides ~10km away from the center point\n    const defaultBounds = {\n      north: center.lat + 0.1,\n      south: center.lat - 0.1,\n      east: center.lng + 0.1,\n      west: center.lng - 0.1,\n    };\n    const input = document.getElementById(\"address\");\n    const options = {\n      bounds: defaultBounds,\n      componentRestrictions: { country: \"fi\" },\n      fields: [\"address_components\", \"geometry\", \"icon\", \"name\", \"formatted_address\"],\n      strictBounds: false,\n      //types: [\"establishment\"],\n    };\n    const autocomplete = new google.maps.places.Autocomplete(input, options);\n\n    autocomplete.addListener(\"place_changed\", () => {\n      let place = autocomplete.getPlace()\n      this.lat = place.geometry.location.lat()\n      this.long = place.geometry.location.lng()\n\n      this.address = place.formatted_address\n      console.log(place)\n    })\n  },\n  methods: {\n    closeEditProfile () {\n      this.$emit(\"goBackFromEditProfile\")\n    },\n    saveProfileData () {\n      const addressData = {\n        latitude: this.lat,\n        longitude: this.long,\n        address: this.address\n      }\n\n      const newMailAddress = this.email;\n      this.$emit(\"profile:data\", addressData, newMailAddress);\n      this.$emit(\"saveProfileImg\");\n    },\n\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./EditProfile.vue?vue&type=template&id=291f9588\"\nimport script from \"./EditProfile.vue?vue&type=script&lang=js\"\nexport * from \"./EditProfile.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Profile.vue?vue&type=template&id=076355a2&scoped=true\"\nimport script from \"./Profile.vue?vue&type=script&lang=js\"\nexport * from \"./Profile.vue?vue&type=script&lang=js\"\n\nimport \"./Profile.vue?vue&type=style&index=0&id=076355a2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-076355a2\"]])\n\nexport default __exports__"],"names":["ErrorMessage","message","_createVNode","require","key","class","role","style","for","colspan","_createElementBlock","_component_MDBContainer","default","_withCtx","$data","userData","_hoisted_2","_component_MDBRow","_component_file_error","fileSizeError","fileTypeError","emailErrorMessage","_component_MDBCol","lg","_createElementVNode","src","showImage","$props","avatar","alt","_hoisted_3","_","_hoisted_4","isOpenSetAvatar","isPressedEditProfile","_hoisted_5","onClick","_cache","args","$options","editProfileAvatar","_hoisted_6","addNewAvatar","_createCommentVNode","_hoisted_7","avatarObject","isImage","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_component_MDBBtnClose","white","closeEditPanel","id","type","onChange","$event","handleFileChange","_ctx","i","_hoisted_13","value","_hoisted_14","_hoisted_15","_createBlock","_component_MDBBtn","block","size","color","removeProfileImage","_createTextVNode","_hoisted_16","_hoisted_17","_hoisted_18","pro","_hoisted_19","_toDisplayString","yritys","_hoisted_20","proTime","Date","getTime","toFixed","_hoisted_21","$router","push","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","client","_hoisted_26","length","_hoisted_27","go","_component_edit_profile","loggedInUser","onGoBackFromEditProfile","handleCloseEditProfile","handleSaveProfile","onSaveProfileImg","handleSaveProfileImage","_component_MDBTable","borderless","firstName","lastName","username","address","email","_hoisted_28","outline","pressedEditProfile","_hoisted_1","_Fragment","closeEditProfile","_component_MDBInput","label","modelValue","newAddress","saveProfileData","name","props","Object","components","MDBContainer","MDBInput","MDBBtnClose","MDBBtn","MDBTable","data","lat","long","mounted","center","lng","defaultBounds","north","south","east","west","input","document","getElementById","options","bounds","componentRestrictions","country","fields","strictBounds","autocomplete","google","maps","places","Autocomplete","addListener","place","getPlace","this","geometry","location","formatted_address","console","log","methods","$emit","addressData","latitude","longitude","newMailAddress","__exports__","provider","recipient","Array","editProfile","fileError","MDBRow","MDBCol","MDBIcon","isOpenAdd","isOpenEdit","user","isAddProfileImage","isEditProfileImage","isEditData","mail","osoite","file","isProfileImageSelected","isUploaded","user_profile_image","image_id","getUserData","loggedUserJSON","window","localStorage","getItem","JSON","parse","providerService","getProvider","recipientService","getOwnBookings","getUserPro","getUserRecipient","handleSaveProfileData","validateUploadErrors","status","acceptedTypes","includes","uploadedAvatar","awsUploadService","uploadAvatarImage","info","imageUrl","editedAvatar","editAvatarImage","editInfo","openSetAvatar","setTimeout","newEmailAddress","emailAlreadyExists","userService","editEmail","error","editAddress","booking","bookingID","editBookingAddress","FormData","append","saveEditedName","isEditName","e","files","target","URL","createObjectURL","err","addProfileImage","editProfileImage","deleteAvatar","render"],"sourceRoot":""}