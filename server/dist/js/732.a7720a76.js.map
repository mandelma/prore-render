{"version":3,"file":"js/732.a7720a76.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/Info.vue","webpack://prore-mongo/./src/components/Info.vue?5bb4","webpack://prore-mongo/./src/pages/RecipientPanel.vue","webpack://prore-mongo/./src/pages/RecipientPanel.vue?32f9"],"sourcesContent":["<template>\r\n  <div v-if=\"status === 'for-recipient'\">\r\n    <div class = \"waiting-info\">\r\n      <b>{{msg.provider}}</b> -\r\n      {{msg.header}}\r\n      <monthConverter :num=\" msg.onTime[0].month\" />, {{msg.onTime[0].day}}, {{msg.onTime[0].year}}\r\n      kello\r\n      {{msg.onTime[0].hours}} : {{msg.onTime[0].minutes}}\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div v-else>\r\n    <div  class=\"info\">\r\n      <MDBBtnClose\r\n          class=\"closeConfirmedBooking\"\r\n          @click=\"handleCloseInfo\"\r\n      />\r\n      <div v-if=\"status === 'for-provider'\">\r\n        <h2><b>{{msg.header}}</b></h2> {{msg.address}}\r\n        <monthConverter :num=\" msg.onTime[0].month\" />, {{msg.onTime[0].day}}, {{msg.onTime[0].year}}\r\n        kello\r\n        {{msg.onTime[0].hours}} : {{msg.onTime[0].minutes}}\r\n      </div>\r\n      <div v-else-if=\"status === 'recipient'\">\r\n        <b>{{msg.provider}}</b> -\r\n        {{msg.header}}\r\n        <monthConverter :num=\" msg.onTime[0].month\" />, {{msg.onTime[0].day}}, {{msg.onTime[0].year}}\r\n        kello\r\n        {{msg.onTime[0].hours}} : {{msg.onTime[0].minutes}}\r\n      </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {MDBBtnClose} from 'mdb-vue-ui-kit'\r\nimport monthConverter from './controllers/month-converter'\r\nexport default {\r\n  name: \"Info\",\r\n  props: {\r\n    status: String,\r\n    msg: String\r\n  },\r\n  components: {\r\n    MDBBtnClose,\r\n    monthConverter\r\n  },\r\n  methods: {\r\n    handleCloseInfo () {\r\n      this.$emit('close:info')\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.info {\r\n  color: white;\r\n  background: lightblue;\r\n  font-size: 20px;\r\n  border: solid #acbbbc;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n\r\n}\r\n.waiting-info {\r\n  width: 100%;\r\n  color: grey;\r\n  background: #f5f532;\r\n  font-size: 20px;\r\n  border: solid #acbbbc;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n.closeConfirmedBooking {\r\n  float: right;\r\n}\r\n</style>","import { render } from \"./Info.vue?vue&type=template&id=49920980&scoped=true\"\nimport script from \"./Info.vue?vue&type=script&lang=js\"\nexport * from \"./Info.vue?vue&type=script&lang=js\"\n\nimport \"./Info.vue?vue&type=style&index=0&id=49920980&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-49920980\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n\r\n    <!--\r\n    <div v-if=\"isAvailable\">\r\n      <RecipientSuccess\r\n        :provider = provider\r\n      />\r\n    </div>\r\n    -->\r\n\r\n<!--    <h1 style=\"margin-top: 200px; margin-bottom: 50px\">Asiakkaan hallintapaneeli...</h1>-->\r\n\r\n    <MDBContainer style=\"margin-top: 200px\">\r\n<!--      {{confirmedBookings}}-->\r\n\r\n      <div v-if=\"isBooking\">\r\n        <recipientResult\r\n            :booking = booking\r\n            :images = images\r\n            :bookingTime = recipientDateTime\r\n            :providers = providerMatchByProfession\r\n            :confirmedBookings = confirmedBookings\r\n            :line = line\r\n            @set:order:to:send = handleOrderToSend\r\n            @remove:confirmed:provider = handleConfirmedProvider\r\n            @cansel:result = handleCanselResult\r\n\r\n            @editDescription = handleEditDescription\r\n\r\n            @addImage = handleAddImage\r\n            @editImage = handleEditImage\r\n            @removeImage = handleRemoveImage\r\n\r\n            @finalinfo = finalinfo\r\n            :chatusers = chatusers\r\n            :selecteduser = selecteduser\r\n            :messages = messages\r\n            @select = selectUser\r\n            @message = onMessage\r\n            @chatCredentials = chatCredentials\r\n            @filter_provider = handleFilterProvider\r\n\r\n            @otherUser = otherUser\r\n        />\r\n      </div>\r\n      <div v-else>\r\n\r\n        <div v-if=\"bookings.length === 0\" class=\"spinner-border\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n        <div v-else>\r\n\r\n          <MDBRow>\r\n            <MDBCol md=\"6\">\r\n\r\n            </MDBCol>\r\n            <MDBCol md=\"6\" >\r\n              <aside v-if=\"confirmedBookings.length > 0\" id=\"info-block\" >\r\n                <section class=\"file-marker\">\r\n                  <div>\r\n                    <div class=\"box-title\">\r\n                      Vahvistetut varaukset!\r\n                    </div>\r\n                    <div class=\"box-contents\">\r\n                      <bookingInfo\r\n                          v-for=\"item in confirmedBookings\" :key=\"item.id\"\r\n                          status = \"for-recipient\"\r\n                          :msg = item\r\n                      />\r\n                      <MDBBtn color=\"danger\" @click=\"removeConfirmationNotification\">\r\n                        Kustuta teade\r\n                      </MDBBtn>\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n              </aside>\r\n            </MDBCol>\r\n          </MDBRow>\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <h3>Sinulla on hetkellä - {{bookings.length}} - avointa tilausta:</h3>\r\n\r\n          <MDBRow v-for=\"(booking, index) in bookings\" :key=\"booking.id\" class=\"bookings\">\r\n\r\n            <aside v-if=\"clientConfirmedBookings.some(ccb => ccb.id === booking.id)\" id=\"info-block-confirmed\" >\r\n              <section class=\"file-marker\">\r\n                <div>\r\n                  <div class=\"box-title-confirmed\">\r\n                    Varaus on vireillä, kun yritys vahvistaa sen.\r\n                  </div>\r\n                  <div class=\"box-contents-confirmed\">\r\n                    <MDBRow>\r\n                      <MDBCol>\r\n                        {{booking.date}}\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        {{booking.header}}\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n                        <MDBBtn v-if=\"!isChat\" outline=\"secondary\" block size=\"lg\" @click=\"contactToProvider(booking, index)\">Ava chat</MDBBtn>\r\n                        <MDBBtn v-if=\"isChat\" outline=\"danger\" block size=\"lg\" @click=\"bookingWaitingProBackBtn\">Poistu</MDBBtn>\r\n\r\n\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow>\r\n                      <MDBCol>\r\n\r\n                      </MDBCol>\r\n                      <MDBCol style=\"text-align: center;\">\r\n                        <live-chat\r\n                            v-if=\"selectedIndex === index && isChat\"\r\n                            :chatusers = chatusers\r\n                            :messages =messages\r\n                            :selecteduser = selecteduser\r\n                            @select:user = selectUser\r\n                            @on:message = onMessage\r\n                        />\r\n                      </MDBCol>\r\n                      <MDBCol>\r\n\r\n                      </MDBCol>\r\n\r\n                    </MDBRow>\r\n\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </aside>\r\n\r\n\r\n            <aside v-else>\r\n              <MDBRow>\r\n                <MDBCol>\r\n                  {{booking.date}}\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  {{booking.header}}\r\n                </MDBCol>\r\n                <MDBCol>\r\n                  <MDBBtn outline=\"info\" block size=\"lg\" @click=\"handleRecipientResult(booking.id)\">Tiedot</MDBBtn>\r\n                </MDBCol>\r\n              </MDBRow>\r\n\r\n            </aside>\r\n\r\n\r\n\r\n          </MDBRow>\r\n\r\n\r\n<!--          <MDBTable borderless style=\"font-size: 16px; text-align: left;\" >-->\r\n<!--            <tbody>-->\r\n<!--            <tr v-for=\"(booking) in bookings\" :key=\"booking.id\">-->\r\n\r\n<!--              <td>-->\r\n\r\n<!--                {{booking.date}}-->\r\n\r\n<!--              </td>-->\r\n<!--              <td>-->\r\n<!--                {{booking.header}}-->\r\n<!--              </td>-->\r\n<!--              <td>-->\r\n<!--                <MDBBtn outline=\"info\" block size=\"lg\" @click=\"handleRecipientResult(booking.id)\">Tiedot</MDBBtn>-->\r\n<!--              </td>-->\r\n\r\n<!--            </tr>-->\r\n<!--            </tbody>-->\r\n<!--          </MDBTable>-->\r\n          <MDBBtn outline=\"info\" block size=\"lg\" @click=\"newBooking\">Teen uuden tilauksen</MDBBtn>\r\n          <MDBBtn outline=\"black\" block size=\"lg\" @click=\"openMap\">Asiantuntijoita ympärilläsi</MDBBtn>\r\n          <!--\r\n          <MDBBtn outline=\"info\" block size=\"lg\" @click=\"getDistance\">Distance</MDBBtn>\r\n          <MDBBtn outline=\"info\" block size=\"lg\" @click=\"compareTime\">Compare time</MDBBtn>\r\n          -->\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    </MDBContainer>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/*global google*/\r\n\r\nimport {\r\n  //MDBTable,\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol\r\n}from \"mdb-vue-ui-kit\";\r\nimport {ref} from \"vue\";\r\nimport liveChat from './LiveChat'\r\nimport providerFit from '../components/controllers/datetime'\r\n//import dist from '../components/controllers/distance'\r\n//import validateToken from \"@/components/validateToken\";\r\n//import Fieldset from 'primevue/fieldset';\r\n\r\n//import RecipientSuccess from '../components/RecipientSuccess'\r\nimport recipientResult from '../pages/RecipientPanelResult'\r\nimport providerService from '../service/providers'\r\nimport recipientService from '../service/recipients'\r\nimport bookingInfo from '../components/Info'\r\n//import RecipientBookingChatPanel from './RecipientBookingChatPanel'\r\n//import axios from \"axios\";\r\n//import driving from '../components/controllers/distance'\r\n\r\nimport monthConverter from '../components/controllers/month-converter'\r\nimport socket from \"@/socket\";\r\n//import axios from \"axios\";\r\nexport default {\r\n  name: \"recipient-panel\",\r\n  props: {\r\n    chatusers: Array,\r\n    selecteduser: null,\r\n    messages: Array,\r\n    recipientBookings: Array, // bookings from app (not active)\r\n\r\n  },\r\n  data () {\r\n    return {\r\n      images: [],\r\n      userId: null,\r\n      bookings: [],\r\n      provider: {},\r\n      booking: null,\r\n      isChat: false,\r\n      selectedIndex: null,\r\n      d: null,\r\n      confirmedBookings: [],\r\n      clientConfirmedBookings: [],\r\n      isBooking: false,\r\n      //providerMatchByProfession: null,\r\n      providerMatchByProfession: [],\r\n      providerMatchingRequirements: null,\r\n      line: \"\",\r\n      recipientDateTime: null,\r\n      providersAvailable: [],\r\n      providersBusy: []\r\n    }\r\n  },\r\n  setup () {\r\n    const isAvailable = ref(false)\r\n    return {\r\n      isAvailable\r\n    }\r\n  },\r\n  components: {\r\n    //RecipientSuccess,\r\n    //Fieldset,\r\n    //validateToken,\r\n    //RecipientBookingChatPanel,\r\n    liveChat,\r\n    bookingInfo,\r\n    recipientResult,\r\n    //MDBTable,\r\n    MDBBtn,\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol\r\n    //MDBBadge\r\n  },\r\n  async mounted () {\r\n\r\n    /*const validated = await validateToken()\r\n    if (!validated) {\r\n      //console.log(\"user is no validated\")\r\n      this.$router.push('/login');\r\n    } else {\r\n      //console.log(\"User is validated\")\r\n      this.userId = validated.id\r\n      this.provider = await providerService.getProvider(validated.id);\r\n\r\n      this.handleRecipientBookings();\r\n    }*/\r\n\r\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\r\n    if (!loggedUserJSON) {\r\n      this.$router.push('/')\r\n    } else {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      this.userId = user.id\r\n\r\n      this.provider = await providerService.getProvider(user.id);\r\n\r\n      this.handleRecipientBookings();\r\n\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    selectUser (user) {\r\n      this.$emit('select:user', user);\r\n    },\r\n    onMessage (content, date) {\r\n      this.$emit(\"on:message\", content, date);\r\n    },\r\n    bookingWaitingProBackBtn () {\r\n      this.$emit(\"bookingWaitingProBack\");\r\n      this.isChat = false\r\n    },\r\n    contactToProvider (booking, index) {\r\n      console.log(\"Contact \" + index);\r\n\r\n      //this.$router.push('/chat');\r\n      const room = booking.provider + booking.user.username;\r\n      socket.emit(\"update room\", room)\r\n      this.selectedIndex = index;\r\n      this.isChat = true;\r\n    },\r\n    otherUser (data) {\r\n      this.$emit(\"otherUser\", data)\r\n    },\r\n    finalinfo (data) {\r\n      console.log(\"Data in recipient panel \" + data)\r\n      this.$emit(\"finalinfo\", data)\r\n    },\r\n    chatCredentials (data) {\r\n      this.$emit(\"chatCredentials\", data);\r\n    },\r\n    async handleRecipientBookings () {\r\n      let bookings = await recipientService.getOwnBookings(this.userId);\r\n      this.confirmedBookings = bookings.filter(booking => booking.status === \"confirmed\");\r\n      this.clientConfirmedBookings = bookings.filter(cb => cb.status === \"notSeen\" || cb.status === \"seen\");\r\n      this.bookings = bookings.filter(b => b.status !== \"confirmed\" && b.status !== \"completed\");\r\n      //this.bookings = bookings.filter(booking => booking.status === \"waiting\")\r\n\r\n    },\r\n\r\n    async handleRecipientResult (id) {\r\n      //this.isAvailable = true\r\n      console.log(\"Provider id is: \" + id)\r\n\r\n      this.booking = await recipientService.getBookingById(id);\r\n      this.images = this.booking[0].image;\r\n      /*this.booking[0].image.forEach(img => {\r\n        console.log(\"x-x-x- \" + img.name)\r\n        this.images.push(img)\r\n      })*/\r\n\r\n      console.log(\"Profession: \" + this.booking.map(b => b.professional))\r\n      let temp = []\r\n      //const profession = this.booking.map(b => b.professional)\r\n      temp = this.booking[0].professional;\r\n      console.log(\"Professional length \" + this.booking[0].professional.length);\r\n      this.booking.map(b => {\r\n        //temp = b.professional\r\n        //temp.push(b.professional);\r\n        this.recipientDateTime = new Date(2023, b.onTime[0].month, b.onTime[0].day, b.onTime[0].hours, b.onTime[0].minutes)\r\n        console.log(\"Recipient datetime: \" + b.onTime[0].day)\r\n      })\r\n\r\n      console.log(\"xxx \" + this.recipientDateTime.getTime())\r\n      // TODO siia veel mitmuse vorm elukutse sobivuse kohalt otsingus\r\n      this.line = temp[0]\r\n\r\n\r\n      this.providerMatchByProfession = await providerService.getProvidersMatchingByProfession(\r\n          {result: temp}\r\n      )\r\n\r\n      //this.providerMatchByProfession = this.providerMatchByProfession.filter(pro => pro.user.id !== this.userId);\r\n      //this.providerMatchByProfession.filter(pro => pro.user.id !== this.userId);\r\n      console.log(\"Pro user id \" + this.providerMatchByProfession.map(p => p.user ? p.user.id !== this.userId : \"EI ole kasutajat???\"))\r\n\r\n      //const provDist = \"\";\r\n\r\n      //dist.distance();\r\n\r\n      const getDistanceMatrix = (service, data) => new Promise((resolve, reject) => {\r\n        service.getDistanceMatrix(data, (response, status) => {\r\n          if(status === 'OK') {\r\n            resolve(response)\r\n          } else {\r\n            reject(response);\r\n          }\r\n        })\r\n      });\r\n\r\n\r\n      let start = []\r\n      let end = [];\r\n\r\n\r\n      //console.log(\"Booking lat on \" + this.booking[0].latitude)\r\n      let originLat = this.booking[0].latitude;\r\n      let originLng = this.booking[0].longitude;\r\n      start = [originLat, originLng];\r\n      this.providerMatchByProfession.forEach(pro => {\r\n        let destinationLat = pro.latitude;\r\n        //console.log(\"Dest latitude \" + destinationLat )\r\n        let destinationLng = pro.longitude;\r\n        end = [destinationLat, destinationLng];\r\n        //console.log(\"Dest longitude \" + destinationLng )\r\n\r\n        const getDistance = async (start, end) => {\r\n          const origin = new google.maps.LatLng(start[0], start[1]);\r\n          const final = new google.maps.LatLng(end[0], end[1]);\r\n          const service = new google.maps.DistanceMatrixService();\r\n          const result = await getDistanceMatrix(\r\n              service,\r\n              {\r\n                origins: [origin],\r\n                destinations: [final],\r\n                travelMode: 'DRIVING'\r\n              }\r\n          )\r\n          return {\r\n            distance: (result.rows[0].elements[0].distance.value / 1000).toFixed(1),\r\n            duration: result.rows[0].elements[0].duration.text\r\n          };\r\n        };\r\n\r\n        getDistance(start, end).then(res => {\r\n          //console.log(\"DDxxiist \" + res.distance)\r\n          pro.distance = res.distance;\r\n          pro.duration = res.duration;\r\n        });\r\n      })\r\n\r\n      console.log(\"xxxxxx \" + this.providerMatchByProfession.length)\r\n\r\n      this.isBooking = true;\r\n    },\r\n    handleFilterProvider (content) {\r\n      console.log(\"Filtering is working! \" + content)\r\n      if (content === \"distance\") {\r\n        this.providerMatchByProfession.sort((a, b) => a.distance - b.distance);\r\n      } else if (content === \"rating\") {\r\n        this.providerMatchByProfession.sort((a, b) => a.rating.positive - b.rating.negative);\r\n        //this.providerMatchByProfession = this.providersAvailable + this.providersBusy;\r\n      }\r\n      // -------------- teha vaja siin -------------------\r\n      //this.handleFilterAvailability();\r\n\r\n      //console.log(\"Filtering: \" + this.providerMatchByProfession.map(pm => pm.distance))\r\n    },\r\n    handleFilterByFeedback () {\r\n      console.log(\"By feedback\")\r\n    },\r\n    handleFilterAvailability () {\r\n      console.log(\"Heyy here\")\r\n      //this.recipientDateTime\r\n      //this.available = [];\r\n      //let busy = [];\r\n\r\n\r\n      this.providerMatchByProfession.forEach(pro => {\r\n        pro.timeoffer.forEach(time => {\r\n          if (\r\n              providerFit.providerMatchingForClient(\r\n                  this.recipientDateTime,\r\n                  {y:2023, m: time.monthFrom, d: time.dayFrom, hour: time.hoursFrom, min: time.minutesFrom},\r\n                  {y: 2023, m: time.monthTo, d: time.dayTo, hour: time.hoursTo, min: time.minutesTo}\r\n              )\r\n          ) {\r\n            console.log(\"Is available \" + pro.yritys)\r\n            this.providersAvailable.push(pro)\r\n          } else {\r\n            this.providersBusy.push(pro);\r\n          }\r\n        })\r\n      })\r\n\r\n      console.log(\"Available length \" + this.providersAvailable.length)\r\n      console.log(\"Not available length \" + this.providersBusy.length)\r\n\r\n\r\n      // console.log(\"xxx \" +\r\n      //     this.providerMatchByProfession.sort((a, b) =>\r\n      //         providerFit.providerMatchingForClient(\r\n      //             this.recipientDateTime,\r\n      //             {y: a.timeoffer.yearFrom, m: a.timeoffer.monthFrom, d: a.timeoffer.dayFrom, hour: a.timeoffer.hoursFrom, min: a.timeoffer.minutesFrom},\r\n      //             {y: a.timeoffer.yearTo, m: a.timeoffer.monthTo, d: a.timeoffer.dayTo, hour: a.timeoffer.hoursTo, min: a.timeoffer.minutesTo}\r\n      //         ).includes(true)\r\n      //         -\r\n      //         providerFit.providerMatchingForClient(\r\n      //             this.recipientDateTime,\r\n      //             {y: b.timeoffer.yearFrom, m: b.timeoffer.monthFrom, d: b.timeoffer.dayFrom, hour: b.timeoffer.hoursFrom, min: b.timeoffer.minutesFrom},\r\n      //             {y: b.timeoffer.yearTo, m: b.timeoffer.monthTo, d: b.timeoffer.dayTo, hour: b.timeoffer.hoursTo, min: b.timeoffer.minutesTo}\r\n      //         ).includes(false)\r\n      //     )\r\n      // )\r\n\r\n\r\n\r\n      // this.providerMatchByProfession.forEach(pmbp => {\r\n      //\r\n      // })\r\n    },\r\n    handleOrderToSend (id) {\r\n      console.log(\"Order is sended \" + id)\r\n      this.clientConfirmedBookings = this.clientConfirmedBookings.concat(this.booking);\r\n      //this.bookings = this.bookings.filter(booking => booking.id !== id)\r\n    },\r\n    newBooking () {\r\n\r\n      this.$router.push('/rf')\r\n\r\n\r\n    },\r\n    handleConfirmedProvider (provId) {\r\n      this.providerMatchByProfession = this.providerMatchByProfession.filter(prov => prov.id !== provId);\r\n    },\r\n    openMap () {\r\n      this.$router.push('/recipient-public');\r\n    },\r\n    compareTime () {\r\n      console.log(\"Month is: \" + monthConverter.month(4))\r\n\r\n      // console.log(\"Time comparison: \" + (new Date(2023,3, 20, 10, 20).getTime()\r\n      //     < new Date(2023, 3, 20, 11, 11).getTime()))\r\n    },\r\n    removeConfirmationNotification () {\r\n\r\n    },\r\n    handleEditDescription (description) {\r\n      this.booking[0].description = description;\r\n    },\r\n    async handleAddImage (image) {\r\n      console.log(\"Image id in upload \" + image._id)\r\n      console.log(\"Image image in upload \" + image.image)\r\n      console.log(\"Image name in upload \" + image.name)\r\n\r\n      this.images.push(image);\r\n      //this.images.push(image);\r\n      // this.$router.go()\r\n      // this.isBooking = true;\r\n    },\r\n    handleEditImage (previous_image, current_image) {\r\n      if (this.booking) {\r\n        console.log(\"Image enne \" + previous_image.name)\r\n        console.log(\"Image pärast \" + current_image.name)\r\n        //this.booking= this.booking[0].image.filter(f => f.name === img.name);\r\n\r\n        var index = this.images.indexOf(previous_image);\r\n        if (index !== -1) {\r\n          this.images[index] = current_image;\r\n        }\r\n\r\n        // setTimeout(() => {\r\n        //\r\n        // }, 1000)\r\n\r\n\r\n        //this.images.push(img)\r\n        //this.images = this.images.filter(i => i.name === img.name)\r\n\r\n        //this.booking[0].image = this.booking[0].image.concat(img);\r\n        //this.images.push(img)\r\n        //this.images = this.images.map(i => i.name === img.name ? i : null)\r\n      }\r\n    },\r\n    async handleRemoveImage (imageID) {\r\n      await recipientService.removeImage(this.booking[0].id, imageID);\r\n      this.images = this.images.filter(img => img._id !== imageID);\r\n      console.log(\"Image removed from array\")\r\n    },\r\n    handleCanselResult (back) {\r\n      console.log(\"Canseled: \" + back)\r\n      this.isBooking = back;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.bookings {\r\n  font-size: 16px;\r\n  text-align: left;\r\n  padding: 20px;\r\n}\r\n\r\n\r\n#info-block section {\r\n  border: 1px solid #a0dde0;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n#info-block-confirmed section {\r\n  border: 2px solid #d5b13c;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.file-marker > div {\r\n  padding: 0 3px;\r\n  /*height: 130px;*/\r\n  /*margin-top: -0.8em;*/\r\n  margin-top: -1em;\r\n}\r\n\r\n.box-title {\r\n  background: white none repeat scroll 0 0;\r\n  display: inline-block;\r\n  /*padding: 0 2px;*/\r\n  font-size: 16px;\r\n  padding: 0 10px;\r\n\r\n  margin-left: 8em;\r\n}\r\n.box-title-confirmed {\r\n  background: white none repeat scroll 0 0;\r\n  display: inline-block;\r\n  color: red;\r\n  /*padding: 0 2px;*/\r\n  font-size: 16px;\r\n  padding: 0 10px;\r\n\r\n  margin-left: 8em;\r\n}\r\n.box-contents {\r\n  /*border: solid red;*/\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n}\r\n.box-contents-confirmed {\r\n\r\n  padding: 10px;\r\n}\r\n</style>","import { render } from \"./RecipientPanel.vue?vue&type=template&id=e154b7f0&scoped=true\"\nimport script from \"./RecipientPanel.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanel.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanel.vue?vue&type=style&index=0&id=e154b7f0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e154b7f0\"]])\n\nexport default __exports__"],"names":["class","$props","status","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","msg","provider","header","_createVNode","_component_monthConverter","num","onTime","month","day","year","hours","minutes","_hoisted_3","_hoisted_4","_component_MDBBtnClose","onClick","$options","handleCloseInfo","_hoisted_5","address","_hoisted_6","name","props","String","components","MDBBtnClose","monthConverter","methods","this","$emit","__exports__","render","role","id","_component_MDBContainer","style","$data","isBooking","_component_recipientResult","booking","images","bookingTime","recipientDateTime","providers","providerMatchByProfession","confirmedBookings","line","handleOrderToSend","handleConfirmedProvider","handleCanselResult","onEditDescription","handleEditDescription","onAddImage","handleAddImage","onEditImage","handleEditImage","onRemoveImage","handleRemoveImage","onFinalinfo","finalinfo","chatusers","selecteduser","messages","onSelect","selectUser","onMessage","onChatCredentials","chatCredentials","onFilter_provider","handleFilterProvider","onOtherUser","otherUser","bookings","length","_component_MDBRow","_component_MDBCol","md","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_Fragment","_renderList","item","_createBlock","_component_bookingInfo","key","_component_MDBBtn","color","removeConfirmationNotification","index","clientConfirmedBookings","some","ccb","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","date","isChat","outline","block","size","$event","contactToProvider","bookingWaitingProBackBtn","selectedIndex","_component_live_chat","_hoisted_15","handleRecipientResult","newBooking","openMap","Array","recipientBookings","data","userId","d","providerMatchingRequirements","providersAvailable","providersBusy","setup","isAvailable","ref","liveChat","bookingInfo","recipientResult","MDBBtn","MDBContainer","MDBRow","MDBCol","async","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","providerService","getProvider","handleRecipientBookings","$router","push","content","console","log","room","username","socket","emit","recipientService","getOwnBookings","filter","cb","b","getBookingById","image","map","professional","temp","Date","getTime","getProvidersMatchingByProfession","result","p","getDistanceMatrix","service","Promise","resolve","reject","response","start","end","originLat","latitude","originLng","longitude","forEach","pro","destinationLat","destinationLng","getDistance","origin","google","maps","LatLng","final","DistanceMatrixService","origins","destinations","travelMode","distance","rows","elements","value","toFixed","duration","text","then","res","sort","a","rating","positive","negative","handleFilterByFeedback","handleFilterAvailability","timeoffer","time","providerFit","providerMatchingForClient","y","m","monthFrom","dayFrom","hour","hoursFrom","min","minutesFrom","monthTo","dayTo","hoursTo","minutesTo","yritys","concat","provId","prov","compareTime","description","_id","previous_image","current_image","indexOf","imageID","removeImage","img","back"],"sourceRoot":""}