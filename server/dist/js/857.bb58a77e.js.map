{"version":3,"file":"js/857.bb58a77e.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/CompletedBookingPanel.vue","webpack://prore-mongo/./src/components/CompletedBookingPanel.vue?ee6e","webpack://prore-mongo/./src/pages/RecipientPanel.vue","webpack://prore-mongo/./src/pages/RecipientPanel.vue?32f9"],"sourcesContent":["<template>\n  <div v-if=\"status === 'for-recipient'\">\n    <div class = \"waiting-info\">\n      ( <b>{{msg.ordered[0].yritys}}</b> )  -\n      {{msg.header}} -\n      <monthConverter :num=\" msg.onTime[0].month\" />, {{msg.onTime[0].day}}, {{msg.onTime[0].year}}\n      kello\n      {{msg.onTime[0].hours}} : {{msg.onTime[0].minutes}}\n      <MDBBtn block outline=\"warning\" @click=\"removeComplitedBookingPanel(msg)\">\n        (Kustub muidu kui aeg läbi saab) - Saab eemaldada kohe (ajutine lahendus)\n      </MDBBtn>\n\n    </div>\n\n  </div>\n\n  <div v-else>\n    <div  class=\"info\">\n<!--      <MDBBtnClose-->\n<!--          white-->\n<!--          class=\"closeConfirmedBooking\"-->\n<!--          @click=\"removeCompletedBookingPro(msg)\"-->\n<!--      />-->\n      <div v-if=\"status === 'for-provider'\">\n        <h2><b>{{msg.header}}</b></h2> {{msg.address}}\n        <monthConverter :num=\" msg.onTime[0].month\" />, {{msg.onTime[0].day}}, {{msg.onTime[0].year}}\n        kello\n        {{msg.onTime[0].hours}} : {{msg.onTime[0].minutes}}\n      </div>\n      <div v-else-if=\"status === 'recipient'\">\n        <b>{{msg.provider}}</b> -\n        {{msg.header}}\n        <monthConverter :num=\" msg.onTime[0].month\" />, {{msg.onTime[0].day}}, {{msg.onTime[0].year}}\n        kello\n        {{msg.onTime[0].hours}} : {{msg.onTime[0].minutes}}\n      </div>\n  </div>\n\n\n\n\n\n\n\n\n  </div>\n</template>\n\n<script>\nimport {\n  //MDBBtnClose,\n  MDBBtn\n} from 'mdb-vue-ui-kit'\nimport monthConverter from './controllers/month-converter'\nexport default {\n  name: \"Info\",\n  props: {\n    status: String,\n    msg: Object,\n  },\n  components: {\n    //MDBBtnClose,\n    MDBBtn,\n    monthConverter\n  },\n  methods: {\n    removeCompletedBookingPro (booking) {\n      this.$emit('remove:proConfirmed', booking);\n    },\n    removeComplitedBookingPanel (booking) {\n      this.$emit('remove:complitedBookingPanel', booking)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.info {\n  width: 100%;\n  color: #f5f532;\n  background: #141414;\n  font-size: 20px;\n  border: 1px solid #acbbbc;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n\n}\n.waiting-info {\n  width: 100%;\n  color: #f5f532;\n  /*background: #f5f532;*/\n  font-size: 20px;\n  border: 1px solid #acbbbc;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n.waiting-info b {\n  color: #7070e0;\n}\n.closeConfirmedBooking {\n  float: right;\n}\n</style>","import { render } from \"./CompletedBookingPanel.vue?vue&type=template&id=20e875e8&scoped=true\"\nimport script from \"./CompletedBookingPanel.vue?vue&type=script&lang=js\"\nexport * from \"./CompletedBookingPanel.vue?vue&type=script&lang=js\"\n\nimport \"./CompletedBookingPanel.vue?vue&type=style&index=0&id=20e875e8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-20e875e8\"]])\n\nexport default __exports__","<template>\n  <div>\n\n    <MDBContainer style=\"margin-top: 50px\">\n\n      <div v-if=\"isBooking\">\n        <recipientResult\n            :test = test\n            :booking = booking\n            :images = images\n            :bookingTime = recipientDateTime\n\n            :providers = providerMatchByProfession\n            :confirmedBookings = confirmedBookings\n            :line = line\n            @updateBookingDate = handleUpdateBookingDate\n            @set:order:to:send = handleOrderToSend\n            @client:confirmed_provider = handleConfirmedProvider\n            @removeBooking = handleRemoveBooking\n            @cansel:result = handleCanselResult\n\n            @editDescription = handleEditDescription\n\n            @addImage = handleAddImage\n            @editImage = handleEditImage\n            @removeImage = handleRemoveImage\n\n            @finalinfo = finalinfo\n            :chatusers = chatusers\n            :selecteduser = selecteduser\n            :messages = messages\n            @select = selectUser\n            @noSelect = noSelectUser\n            @message = onMessage\n            @initializeChat = handleInitializeChat\n            @filter_provider = handleFilterProvider\n\n            @otherUser = otherUser\n        />\n      </div>\n      <div v-else>\n\n        <div v-if=\"isSpinner\" class=\"spinner-border\" role=\"status\">\n          <span class=\"visually-hidden\">Loading...</span>\n        </div>\n        <div v-else>\n\n          <MDBRow>\n\n            <MDBCol md=\"8\" >\n              <aside v-if=\"confirmedBookingsByProvider.length > 0\" id=\"info-block\" >\n                <section class=\"file-marker\">\n                  <div>\n                    <div class=\"box-title\">\n                      Vahvistetut varaukset!\n                    </div>\n                    <div class=\"box-contents\">\n                      <div class=\"flex flex-wrap align-items-center justify-content-center\">\n                        <div  class=\"scalein animation-duration-3000 animation-iteration flex align-items-center justify-content-center\n                          font-bold   w-full \">\n                          <bookingInfo\n                              v-for=\"item in confirmedBookingsByProvider\" :key=\"item.id\"\n                              status = \"for-recipient\"\n                              :msg = item\n                              @remove:complitedBookingPanel = handleRemoveComplitedBookingPanel\n                          />\n                        </div>\n                      </div>\n\n<!--                      <bookingInfo-->\n<!--                          v-for=\"item in confirmedBookingsByProvider\" :key=\"item.id\"-->\n<!--                          status = \"for-recipient\"-->\n<!--                          :msg = item-->\n<!--                          @remove:complitedBookingPanel = handleRemoveComplitedBookingPanel-->\n<!--                      />-->\n\n                    </div>\n                  </div>\n                </section>\n              </aside>\n            </MDBCol>\n            <MDBCol style=\"padding: 20px 5px 20px 5px\" md=\"4\">\n              <h3>Sinulla on hetkellä - {{recipientBookings.length}} - avointa tilausta:</h3>\n            </MDBCol>\n          </MDBRow>\n\n\n\n\n\n\n\n\n          <MDBRow v-for=\"(booking, index) in recipientBookings\" :key=\"index\" class=\"bookings\">\n\n            <aside v-if=\"confirmedBookingsByClient.some(ccb => ccb.id === booking.id)\" id=\"info-block-confirmed\" >\n              <section class=\"file-marker\">\n                <div>\n                  <div class=\"box-title-confirmed\">\n                    Varaus on vireillä, kun yritys vahvistaa sen.\n                  </div>\n                  <div class=\"box-contents-confirmed\">\n                    <MDBRow>\n                      <MDBCol>\n                        {{booking.date}}\n                      </MDBCol>\n                      <MDBCol>\n                        {{booking.header}}\n                      </MDBCol>\n<!--                      isQuitBooking-->\n                      <MDBCol >\n                        <MDBBtn v-if=\"index === selectedIndex\" outline=\"danger\" block size=\"lg\" @click=\"canselQuitSelectedBooking\">Poistu</MDBBtn>\n                        <MDBBtn v-else color=\"danger\" @click=\"handleQuitSelectedBooking(index)\" >Lopettaa tilaus</MDBBtn>\n<!--                        <MDBBtn v-if=\"!isChat\" outline=\"info\" block size=\"lg\" @click=\"contactToProvider(booking, index)\">Ava chat</MDBBtn>-->\n\n\n\n                      </MDBCol>\n                    </MDBRow>\n                    <MDBRow v-if=\"selectedIndex === index\">\n\n                      <MDBCol lg=\"8\" style=\"text-align: center;\">\n                        <MDBTextarea\n                            v-if=\"isQuitBooking\"\n                            white\n                            style=\"\"\n                            label=\"Anna syy...\"\n                            rows=\"3\"\n                        >\n\n                        </MDBTextarea>\n\n                      </MDBCol>\n                      <MDBCol lg=\"4\">\n                        <MDBBtn v-if=\"isQuitBooking\" block color=\"success\" size=\"lg>\" style=\"margin-top: 10px;\">Varmista</MDBBtn>\n                      </MDBCol>\n\n                    </MDBRow>\n\n                  </div>\n                </div>\n              </section>\n            </aside>\n\n\n            <aside v-else>\n              <MDBRow>\n                <MDBCol>\n                  {{booking.date}}\n                </MDBCol>\n                <MDBCol>\n                  {{booking.header}}\n                </MDBCol>\n                <MDBCol>\n                  <MDBBtn outline=\"info\" block size=\"lg\" @click=\"handleRecipientResult(booking.id, booking)\">Tilaus</MDBBtn>\n                </MDBCol>\n              </MDBRow>\n\n            </aside>\n\n\n\n          </MDBRow>\n\n\n          <MDBBtn outline=\"info\" block size=\"lg\" @click=\"newBooking\">Teen uuden tilauksen</MDBBtn>\n\n        </div>\n\n      </div>\n\n<!--      client confirmed bookings {{confirmedBookingsByClient}}-->\n    </MDBContainer>\n\n\n  </div>\n</template>\n\n<script>\n/*global google*/\n\nimport {\n  //MDBTable,\n  MDBBtn,\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBTextarea\n}from \"mdb-vue-ui-kit\";\nimport {ref} from \"vue\";\nimport liveChat from './LiveChat'\nimport providerFit from '../components/controllers/datetime'\n/* eslint-disable */\n//import dist from '../components/controllers/distance'\n//import validateToken from \"@/components/validateToken\";\n//import Fieldset from 'primevue/fieldset';\n\n//import RecipientSuccess from '../components/RecipientSuccess'\nimport recipientResult from '../pages/RecipientPanelResult'\nimport providerService from '../service/providers'\nimport recipientService from '../service/recipients'\nimport bookingInfo from '../components/CompletedBookingPanel'\n//import RecipientBookingChatPanel from './RecipientBookingChatPanel'\n//import axios from \"axios\";\n//import driving from '../components/controllers/distance'\n\nimport monthConverter from '../components/controllers/month-converter'\nimport socket from \"@/socket\";\n//import axios from \"axios\";\nexport default {\n  name: \"recipient-panel\",\n  props: {\n    test: Boolean,\n    chatusers: Array,\n\n    selecteduser: null,\n    messages: Array,\n    recipientTest: null,\n    recipientBookings: Array, // bookings from app (not active)  ?????????\n\n    confirmedBookingsByClient: Array,\n    confirmedBookingsByProvider: Array,\n\n  },\n  data () {\n    return {\n      id: \"\",\n      isSpinner: false,\n      images: [],\n      userId: null,\n      //bookings: [],\n      //recipientBookings: [],\n      bookings: this.recipientBookings,\n      provider: {},\n      booking: null,\n      isQuitBooking: false,\n      currentRoom: \"\",\n      selectedIndex: null,\n      isPressedQuit: false,\n      d: null,\n      //confirmedBookings: [],\n      confirmedBookings: [] ,\n      //confirmedBookings: this.recipientBookings.filter(booking => booking.status === \"confirmed\"),\n      clientConfirmedBookings: [],\n      //clientConfirmedBookings: this.recipientBookings.filter(cb => cb.status === \"notSeen\" || cb.status === \"seen\"),\n      isBooking: false,\n      //providerMatchByProfession: null,\n      providerMatchByProfession: [],\n      providerMatchingRequirements: null,\n      line: \"\",\n      recipientDateTime: null,\n      providersAvailable: [],\n      providersBusy: []\n    }\n  },\n  setup () {\n    const isAvailable = ref(false)\n    return {\n      isAvailable\n    }\n  },\n  components: {\n    //RecipientSuccess,\n    //Fieldset,\n    //validateToken,\n    //RecipientBookingChatPanel,\n    liveChat,\n    bookingInfo,\n    recipientResult,\n    //MDBTable,\n    MDBBtn,\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBTextarea\n    //MDBBadge\n  },\n  async mounted () {\n\n    /*const validated = await validateToken()\n    if (!validated) {\n      //console.log(\"user is no validated\")\n      this.$router.push('/login');\n    } else {\n      //console.log(\"User is validated\")\n      this.userId = validated.id\n      this.provider = await providerService.getProvider(validated.id);\n\n      this.handleRecipientBookings();\n    }*/\n\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (!loggedUserJSON) {\n      this.$router.push('/')\n    } else {\n      const user = JSON.parse(loggedUserJSON)\n      this.userId = user.id\n\n      this.provider = await providerService.getProvider(user.id);\n\n      this.handleRecipientBookings();\n\n    }\n\n  },\n  methods: {\n    handleUpdateBookingDate (nd) {\n      this.recipientDateTime = new Date(nd.year, nd.month, nd.day, nd.hours, nd.minutes);\n      console.log(\"recipient date time \" + this.recipientDateTime);\n\n    },\n    handleQuitSelectedBooking (index) {\n      this.selectedIndex = index;\n      console.log(\"Index \" + index)\n      console.log(\"Selected index \" + this.selectedIndex)\n      this.isQuitBooking = true\n    },\n    canselQuitSelectedBooking () {\n      this.isQuitBooking = false;\n      this.selectedIndex = null;\n    },\n    selectUser (user) {\n      this.$emit('select:user', user);\n    },\n    noSelectUser () {\n      this.$emit(\"noSelected\");\n    },\n    onMessage (content, date) {\n      this.$emit(\"on:message\", content, date);\n    },\n    // bookingWaitingProBackBtn () {\n    //   this.$emit(\"bookingWaitingProBack\");\n    //   this.noSelectUser();\n    //\n    // },\n    // async contactToProvider (booking, index) {\n    //   let bookings = await recipientService.getOwnBookings(this.userId);\n    //   //this.handleRecipientBookings ();\n    //   // console.log(\"Contact \" + index);\n    //   let room = \"\";\n    //   if (booking.ordered.length > 0) {\n    //     room = booking.ordered[0].yritys + booking.user.username;\n    //   } else {\n    //     room = this.currentRoom;\n    //   }\n    //   console.log(\"room xxx \" + room);\n    //   //this.$router.push('/chat');\n    //   //const room = booking.ordered[0].yritys + booking.user.username;\n    //   //console.log(\"Room in recipient panel \" + room)\n    //   socket.emit(\"update room\", room);\n    //   this.selectedIndex = index;\n    //   this.isChat = true;\n    // },\n    otherUser (data) {\n      this.$emit(\"otherUser\", data)\n    },\n    // finalinfo (data) {\n    //   console.log(\"Data in recipient panel \" + data)\n    //   this.$emit(\"finalinfo\", data)\n    // },\n    handleInitializeChat (data) {\n      this.$emit(\"initializeChat\", data);\n    },\n    async handleRecipientBookings () {\n      let bookings = await recipientService.getOwnBookings(this.userId);\n\n\n\n      //this.confirmedBookings = bookings.filter(booking => booking.status === \"confirmed\");\n\n      this.confirmedBookings = bookings.filter(booking => booking.status === \"confirmed\");\n\n\n      this.clientConfirmedBookings = bookings.filter(cb => cb.status === \"notSeen\" || cb.status === \"seen\");\n\n\n      //this.bookings = bookings.filter(b => b.status !== \"confirmed\" && b.status !== \"completed\");\n\n      //this.recipientBookings = bookings.filter(b => b.status !== \"confirmed\" && b.status !== \"completed\");\n\n      if (this.recipientBookings > 0) {\n        if (!this.recipientBookings[0].onTime.month)\n          this.isSpinner = true;\n      }\n\n\n\n\n      //this.bookings = bookings.filter(booking => booking.status === \"waiting\")\n\n    },\n\n    async handleRecipientResult (id, booking) {\n      //this.isAvailable = true\n      //console.log(\"Provider id is: \" + id)\n\n      //this.booking = await recipientService.getBookingById(id);\n      this.booking = booking\n      //this.images = this.booking[0].image;\n\n\n      if (this.booking.image)\n        this.images = this.booking.image;\n\n\n\n      /*this.booking[0].image.forEach(img => {\n        console.log(\"x-x-x- \" + img.name)\n        this.images.push(img)\n      })*/\n\n      //console.log(\"Profession: \" + this.booking.map(b => b.professional))\n      console.log(\"Profession: \" + this.booking.professional)\n      let temp = []\n      //const profession = this.booking.map(b => b.professional)\n      //temp = this.booking[0].professional;\n      temp = this.booking.professional;\n      console.log(\"Professional length \" + this.booking.professional.length);\n      // this.booking.map(b => {\n      //\n      //   this.recipientDateTime = new Date(b.onTime[0].year, b.onTime[0].month, b.onTime[0].day, b.onTime[0].hours, b.onTime[0].minutes)\n      //   console.log(\"Recipient datetime: \" + b.onTime[0].day)\n      // })\n\n      this.recipientDateTime = new Date(booking.onTime[0].year, booking.onTime[0].month, booking.onTime[0].day, booking.onTime[0].hours, booking.onTime[0].minutes)\n      console.log(\"Recipient datetime: \" + booking.onTime[0].day)\n\n      console.log(\"xxx \" + this.recipientDateTime.getTime())\n      // TODO siia veel mitmuse vorm elukutse sobivuse kohalt otsingus\n      this.line = temp[0]\n\n\n      this.providerMatchByProfession = await providerService.getProvidersMatchingByProfession(\n          {result: temp}\n      )\n\n      // User's own company do not included\n      this.providerMatchByProfession = this.providerMatchByProfession.filter(pro => pro.user.id !== this.userId);\n\n\n      const getDistanceMatrix = (service, data) => new Promise((resolve, reject) => {\n        service.getDistanceMatrix(data, (response, status) => {\n          if(status === 'OK') {\n            resolve(response)\n          } else {\n            reject(response);\n          }\n        })\n      });\n\n\n      let start = []\n      let end = [];\n\n\n      //console.log(\"Booking lat on \" + this.booking[0].latitude)\n      let originLat = booking.latitude;\n      let originLng = booking.longitude;\n      start = [originLat, originLng];\n      this.providerMatchByProfession.forEach(pro => {\n        let destinationLat = pro.latitude;\n        //console.log(\"Dest latitude \" + destinationLat )\n        let destinationLng = pro.longitude;\n        end = [destinationLat, destinationLng];\n        //console.log(\"Dest longitude \" + destinationLng )\n\n        const getDistance = async (start, end) => {\n          const origin = new google.maps.LatLng(start[0], start[1]);\n          const final = new google.maps.LatLng(end[0], end[1]);\n          const service = new google.maps.DistanceMatrixService();\n          const result = await getDistanceMatrix(\n              service,\n              {\n                origins: [origin],\n                destinations: [final],\n                travelMode: 'DRIVING'\n              }\n          )\n          return {\n            distance: (result.rows[0].elements[0].distance.value / 1000).toFixed(1),\n            duration: result.rows[0].elements[0].duration.text\n          };\n        };\n\n        getDistance(start, end).then(res => {\n          //console.log(\"DDxxiist \" + res.distance)\n          pro.distance = res.distance;\n          pro.duration = res.duration;\n        });\n      })\n\n      //console.log(\"xxxxxx \" + this.providerMatchByProfession.length)\n\n      this.isBooking = true;\n    },\n    handleFilterProvider (content) {\n      console.log(\"Filtering is working! \" + content)\n      if (content === \"distance\") {\n        this.providerMatchByProfession.sort((a, b) => a.distance - b.distance);\n      } else if (content === \"rating\") {\n        this.providerMatchByProfession.sort((a, b) => a.rating.positive - b.rating.positive);\n        //this.providerMatchByProfession = this.providersAvailable + this.providersBusy;\n      }\n      // -------------- teha vaja siin -------------------\n      this.handleFilterAvailability();\n\n      //console.log(\"Filtering: \" + this.providerMatchByProfession.map(pm => pm.distance))\n    },\n    handleFilterByFeedback () {\n      console.log(\"By feedback\")\n    },\n    handleFilterAvailability () {\n      console.log(\"Heyy here\")\n\n      this.providerMatchByProfession.forEach(pro => {\n        console.log(\"Recipient time \" + this.recipientDateTime)\n        if (pro.timeoffer) {\n          pro.timeoffer.forEach(time => {\n            if (\n                providerFit.providerMatchingForClient(\n                    this.recipientDateTime,\n                    {y: time.yearFrom, m: time.monthFrom, d: time.dayFrom, hour: time.hoursFrom, min: time.minutesFrom},\n                    {y: time.yearTo, m: time.monthTo, d: time.dayTo, hour: time.hoursTo, min: time.minutesTo}\n                )\n            ) {\n              console.log(\"Is available \" + pro.yritys)\n              this.providersAvailable.push(pro)\n            } else {\n              console.log(\"Is not available provider yritys \" + pro.yritys)\n              this.providersBusy.push(pro);\n            }\n          })\n        } else {\n          console.log(\"Not timeoffer setted\")\n        }\n\n      })\n\n      console.log(\"Available length \" + this.providersAvailable.length)\n      console.log(\"Not available length \" + this.providersBusy.length)\n\n    },\n    handleOrderToSend (provId, booking, navbarChatUser) {\n      console.log(\"Order is sended \" + booking.id)\n      prov.id, this.booking, chatUserDataNavbar\n      this.$emit(\"update:booking\", booking.id);\n\n      this.clientConfirmedBookings = this.clientConfirmedBookings.concat(this.booking);\n\n    },\n    newBooking () {\n\n      this.$router.push('/rf')\n\n\n    },\n    handleConfirmedProvider (provId, booking, navbarChatUser) {\n      this.currentRoom = navbarChatUser.room;\n      this.providerMatchByProfession = this.providerMatchByProfession.filter(prov => prov.id !== provId);\n      this.$emit(\"setNavbarChatUser\", booking,  navbarChatUser);\n      console.log(\"nb chat user start \" + navbarChatUser.name);\n      this.isBooking = false;\n    },\n    openMap () {\n      const test = \"Tehnika 1-5, Antsla\"\n      this.$router.push('/recipient-public', {params: test});\n\n    },\n    compareTime () {\n      console.log(\"Month is: \" + monthConverter.month(4))\n\n      // console.log(\"Time comparison: \" + (new Date(2023,3, 20, 10, 20).getTime()\n      //     < new Date(2023, 3, 20, 11, 11).getTime()))\n    },\n    removeConfirmationNotification () {\n\n    },\n    handleEditDescription (description) {\n      this.booking.description = description;\n    },\n    async handleAddImage (image, bookingID) {\n      console.log(\"Image id in upload \" + image._id)\n      console.log(\"Image image in upload \" + image.image)\n      console.log(\"Image name in upload \" + image.name)\n      this.$emit(\"addImageToRecipientBookings\", image, bookingID)\n      this.images = [\n          ...this.images,\n          image\n      ]\n\n\n      //this.images.push(image);\n      // this.$router.go()\n      // this.isBooking = true;\n    },\n    handleEditImage (index, id, blob) {\n\n      if (index !== -1) {\n        this.images[index] = {_id: id, blob: blob};\n      }\n\n    },\n    // handleEditImage (previous_image, current_image) {\n    //   if (this.booking) {\n    //     console.log(\"Image enne \" + previous_image.name)\n    //     console.log(\"Image pärast \" + current_image.name)\n    //     //this.booking= this.booking[0].image.filter(f => f.name === img.name);\n    //\n    //     var index = this.images.indexOf(previous_image);\n    //     if (index !== -1) {\n    //       this.images[index] = current_image;\n    //     }\n    //   }\n    // },\n    async handleRemoveImage (imageID) {\n      //await recipientService.removeImage(this.booking[0].id, imageID);\n      //this.images = this.images.filter(img => img._id !== imageID);\n      this.images.splice(imageID, 1);\n      console.log(\"Image removed from array\")\n    },\n    handleCanselResult (back) {\n      console.log(\"Canseled: \" + back)\n      this.isBooking = back;\n    },\n    async handleRemoveComplitedBookingPanel (booking) {\n      //console.log(\"Removed complited booking \" + booking.id)\n\n      //console.log(\"Provider data +++ id \" + booking.ordered[0].id);\n      //console.log(\"Provider data +++ recipient userID \" + booking.ordered[0].user.id);\n      this.$emit('setNavbarFeedbackNotification', booking)\n\n\n\n      await recipientService.updateRecipient(booking.id, {status: \"completed\"});\n    },\n\n\n    async handleRemoveBooking (id) {\n      console.log(\"Removing booking id \" + id);\n      this.isBooking = false;\n\n      this.$emit(\"removeRecipient\", id)\n      //await recipientService.removeBooking(id);\n\n      //await recipientService.removeBooking(id);\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.bookings {\n  font-size: 16px;\n  text-align: left;\n  padding: 20px;\n}\n\n\n#info-block section {\n  border: 1px solid #a0dde0;\n  margin-bottom: 20px;\n}\n\n#info-block-confirmed section {\n  border: 2px solid #d5b13c;\n  margin-bottom: 20px;\n}\n\n.file-marker > div {\n  padding: 0 3px;\n  /*height: 130px;*/\n  /*margin-top: -0.8em;*/\n  margin-top: -1em;\n}\n\n.box-title {\n  background: #141414 none repeat scroll 0 0;\n  display: inline-block;\n  /*padding: 0 2px;*/\n  font-size: 16px;\n  padding: 0 10px;\n\n  margin-left: 8em;\n}\n.box-title-confirmed {\n  background: #141414 none repeat scroll 0 0;\n  display: inline-block;\n  color: #f18080;\n  /*padding: 0 2px;*/\n  font-size: 16px;\n  padding: 0 10px;\n\n  margin-left: 8em;\n}\n.box-contents {\n  /*border: solid red;*/\n  padding: 20px;\n  overflow-y: auto;\n}\n.box-contents-confirmed {\n\n  padding: 10px;\n}\n</style>","import { render } from \"./RecipientPanel.vue?vue&type=template&id=687a5b83&scoped=true\"\nimport script from \"./RecipientPanel.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanel.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanel.vue?vue&type=style&index=0&id=687a5b83&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-687a5b83\"]])\n\nexport default __exports__"],"names":["class","$props","status","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","msg","ordered","yritys","header","_createVNode","_component_monthConverter","num","onTime","month","day","year","hours","minutes","_component_MDBBtn","block","outline","onClick","_cache","$event","$options","removeComplitedBookingPanel","_hoisted_3","_hoisted_4","_hoisted_5","address","_hoisted_6","provider","name","props","String","Object","components","MDBBtn","monthConverter","methods","removeCompletedBookingPro","booking","this","$emit","__exports__","render","role","id","_component_MDBContainer","style","$data","isBooking","_component_recipientResult","test","images","bookingTime","recipientDateTime","providers","providerMatchByProfession","confirmedBookings","line","onUpdateBookingDate","handleUpdateBookingDate","handleOrderToSend","handleConfirmedProvider","onRemoveBooking","handleRemoveBooking","handleCanselResult","onEditDescription","handleEditDescription","onAddImage","handleAddImage","onEditImage","handleEditImage","onRemoveImage","handleRemoveImage","onFinalinfo","_ctx","finalinfo","chatusers","selecteduser","messages","onSelect","selectUser","onNoSelect","noSelectUser","onMessage","onInitializeChat","handleInitializeChat","onFilter_provider","handleFilterProvider","onOtherUser","otherUser","isSpinner","_component_MDBRow","_component_MDBCol","md","confirmedBookingsByProvider","length","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_Fragment","_renderList","item","_createBlock","_component_bookingInfo","key","handleRemoveComplitedBookingPanel","recipientBookings","index","confirmedBookingsByClient","some","ccb","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","date","selectedIndex","size","canselQuitSelectedBooking","color","handleQuitSelectedBooking","lg","isQuitBooking","_component_MDBTextarea","white","label","rows","_hoisted_17","handleRecipientResult","newBooking","Boolean","Array","recipientTest","data","userId","bookings","currentRoom","isPressedQuit","d","clientConfirmedBookings","providerMatchingRequirements","providersAvailable","providersBusy","setup","isAvailable","ref","liveChat","bookingInfo","recipientResult","MDBContainer","MDBRow","MDBCol","MDBTextarea","async","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","providerService","getProvider","handleRecipientBookings","$router","push","nd","Date","console","log","content","recipientService","getOwnBookings","filter","cb","image","professional","temp","getTime","getProvidersMatchingByProfession","result","pro","getDistanceMatrix","service","Promise","resolve","reject","response","start","end","originLat","latitude","originLng","longitude","forEach","destinationLat","destinationLng","getDistance","origin","google","maps","LatLng","final","DistanceMatrixService","origins","destinations","travelMode","distance","elements","value","toFixed","duration","text","then","res","sort","a","b","rating","positive","handleFilterAvailability","handleFilterByFeedback","timeoffer","time","providerFit","providerMatchingForClient","y","yearFrom","m","monthFrom","dayFrom","hour","hoursFrom","min","minutesFrom","yearTo","monthTo","dayTo","hoursTo","minutesTo","provId","navbarChatUser","prov","chatUserDataNavbar","concat","room","openMap","params","compareTime","removeConfirmationNotification","description","bookingID","_id","blob","imageID","splice","back","updateRecipient"],"sourceRoot":""}