{"version":3,"file":"js/926.1a446474.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/controllers/datetime.js","webpack://prore-mongo/./src/components/controllers/distance.js","webpack://prore-mongo/./src/service/image.js","webpack://prore-mongo/./src/pages/RecipientPanelFinal.vue","webpack://prore-mongo/./src/components/PositiveFeedback.vue","webpack://prore-mongo/./src/components/PositiveFeedback.vue?22e3","webpack://prore-mongo/./src/components/NegativeFeedback.vue","webpack://prore-mongo/./src/components/NegativeFeedback.vue?a06f","webpack://prore-mongo/./src/pages/RecipientPanelFinal.vue?5797","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue?7f3a"],"sourcesContent":["\nconst compare = (rec, prov) => {\n    const receiverDate = new Date(rec.y, rec.m, rec.d, rec.hour, rec.min);\n    const providerDate = new Date(prov.y, prov.m, prov.d, prov.hour, prov.min)\n    return providerDate >= receiverDate;\n}\n\nconst providerMatchingForClient = (re, pFrom, pTo) => {\n    //const rDate = new Date(re.y, re.m, re.d, re.hour, re.min);\n    const pFromDate = new Date(pFrom.y, pFrom.m, pFrom.d, pFrom.hour, pFrom.min);\n    const pToDate = new Date(pTo.y, pTo.m, pTo.d, pTo.hour, pTo.min);\n    return re >= pFromDate && re < pToDate;\n}\nexport default { compare, providerMatchingForClient }","/*global google*/\nlet res = \"\";\nconst distance = () => {\n    //let text = \"\";\n    //let value = 0;\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\n    var service = new google.maps.DistanceMatrixService();\n    service.getDistanceMatrix(\n        {\n            origins: [origin],\n            destinations: [destination],\n            travelMode: 'DRIVING',\n            unitSystem: google.maps.UnitSystem.METRIC,\n            durationInTraffic: true,\n            avoidHighways: false,\n            avoidTolls: false\n        }, response_data);\n    //return response_data;\n}\n\nconst response_data = (responseDis, status) => {\n    //let result = \"\";\n    if (status !== google.maps.DistanceMatrixStatus.OK || status !== \"OK\"){\n        console.log('Error:', status);\n        // OR\n        alert(status);\n    }else{\n        //alert(responseDis.rows[0].elements[0].distance.text);\n        console.log(\"Distance \" + responseDis.rows[0].elements[0].distance.text)\n\n        res = responseDis.rows[0].elements[0].distance.text;\n        return \"aaaaaaaaaaaaa\"\n        //result = responseDis.rows[0].elements[0].distance.text;\n    }\n    //return  \"Hallo\"        //result.toString();\n}\n\nconst test = () => {\n    console.log(\"Is it working??\" + res)\n\n    return  <div>Hiiii</div>;\n}\n\nconst theDist = () => {\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\n    return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n}\n\n// function calcDistance() {\n//     // var origin = new google.maps.LatLng(60.233093,24.7531362);\n//     // var destination = new google.maps.LatLng(60.2767265,24.8575089);\n//     // return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n//\n//     var directionsService = new google.maps.DirectionsService();\n//\n//     var request = {\n//         origin      : 'Melbourne VIC', // a city, full address, landmark etc\n//         destination : 'Sydney NSW',\n//         travelMode  : google.maps.DirectionsTravelMode.DRIVING\n//     };\n//\n//     directionsService.route(request, function(response, status) {\n//         if ( status === google.maps.DirectionsStatus.OK ) {\n//             alert( response.routes[0].legs[0].distance.value ) ; // the distance in metres\n//         }\n//         else {\n//             // oops, there's no route between these two locations\n//             // every time this happens, a kitten dies\n//             // so please, ensure your address is formatted properly\n//         }\n//     });\n// }\n\nexport default { distance, test, theDist }","const axios = require('axios')\nconst baseUrl = '/api/upload'\n\nconst getAll = async () => {\n    const result = await axios.get(baseUrl)\n    return result.data\n}\n\nconst create = async (newImageData) => {\n    const result = await axios.post(baseUrl, newImageData, {})\n    return result.data\n}\n\n// Create image for avatar\nconst createProfileImage =  async (id, imageData) => {\n    const image = await axios.post(`${baseUrl}/${id}/avatar`, imageData);\n    return image.data;\n}\n\n// Update user avatar\nconst newAvatar = async (id, avatar) => {\n    const avt = await axios.post(`${baseUrl}/${id}/update_avatar`, avatar);\n    return avt.data;\n}\n\nconst updateImage = async (id, newImageData) => {\n    const result = await axios.put(`${baseUrl}/${id}`, newImageData)\n    return result.data\n}\n\nconst remove = async (id, recipientId) => {\n    await axios.delete(`${baseUrl}/${id}/${recipientId}`)\n}\n\nexport default { getAll, create, createProfileImage, newAvatar, updateImage, remove }","<template>\n  <div>\n    <!--\n    <MDBContainer style=\"margin-top: 30px;\">\n    -->\n<!--    users {{chatusers}}-->\n      <h2>- {{ provider.yritys }} -</h2>\n\n      <MDBTable style=\"font-size: 18px; text-align: center;\">\n        <tbody>\n        <tr>\n          <td>\n            Palautteet\n          </td>\n          <td>\n            <MDBRow >\n              <MDBCol>\n\n                <MDBIcon style=\"padding: 10px; cursor: pointer;\" i class=\"far fa-thumbs-up\" size=\"2x\"\n                @click=\"getPositiveFeedback\"></MDBIcon>\n\n\n                <MDBBadge color=\"success\" class=\"translate-middle p-1\"\n                          pill\n                          notification>{{provider.rating.positive}}</MDBBadge>\n\n\n\n              </MDBCol>\n              <MDBCol>\n\n                <MDBIcon\n                    style=\"padding: 10px; cursor: pointer;\" i\n                    class=\"far fa-thumbs-down\" size=\"2x\" @click=\"getNegativeFeedback\"></MDBIcon>\n\n\n                <MDBBadge color=\"danger\" class=\"translate-middle p-1\"\n                          pill\n                          size=\"lg\"\n                          notification>{{provider.rating.negative}}</MDBBadge>\n\n\n\n              </MDBCol>\n              <div v-if=\"isPositive\">\n                <PositiveFeedback\n\n                    :feedback = provider.feedback\n                    @close:comments = closeComments\n                />\n              </div>\n              <NegativeFeedback\n                  v-if=\"isNegative\"\n                  :feedback = provider.feedback\n                  @close:comments = closeComments\n              />\n            </MDBRow>\n\n\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Y-tunnus\n          </td>\n          <td>\n            {{provider.ytunnus}}\n          </td>\n        </tr>\n        <tr>\n          <td>\n            Tuntihinta\n          </td>\n          <td>\n            {{provider.priceByHour}} euroa\n          </td>\n        </tr>\n        </tbody>\n      </MDBTable>\n\n    <MDBBtn\n        v-if=\"!isChat\"\n        block color=\"secondary\"\n        size=\"lg\"\n        @click=\"isChat = true\"\n    >\n      Kirjoita palveluntarjoajalle\n    </MDBBtn>\n    <div v-else>\n\n      <h3  style=\"color: green; float: right; cursor: pointer\" @click=\"isChat = false\">Valmis</h3>\n    </div><br><br>\n\n\n    <live-chat\n        v-if=\"isChat\"\n        :test = test\n        :chatusers = chatusers\n        :messages =messages\n        :selecteduser = selecteduser\n        @select:user = selectUser\n        @noSelected = noSelectUser\n        @on:message = onMessage\n\n    />\n\n<!--    <MDBBtn block color=\"primary\" size=\"lg\" @click=\"handleRecipientAction(provider.id)\">Testime saadavust...</MDBBtn>-->\n\n\n    <MDBBtn outline=\"info\" block size=\"lg\" @click=\"handleOrder(provider)\">\n      Tilaa yritys\n    </MDBBtn>\n\n\n\n\n    <MDBBtn outline=\"secondary\" block size=\"lg\" @click=\"canselRecipientFinal\">\n      Poistu\n    </MDBBtn>\n    <!--\n    </MDBContainer>\n    -->\n<!--    BookingBB {{booking}}-->\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  MDBBtn,\n  //MDBContainer,\n  MDBTable,\n  MDBRow,\n  MDBCol,\n  MDBIcon, MDBBadge\n}from \"mdb-vue-ui-kit\";\nimport PositiveFeedback from \"@/components/PositiveFeedback\";\nimport NegativeFeedback from \"@/components/NegativeFeedback\"\nimport liveChat from '../pages/LiveChat'\n//import UserDialog from './LiveChat'\nimport socket from \"@/socket\";\nimport User from '../components/chatio/User'\nimport MessagePanel from '../components/chatio/MessagePanel.vue'\n//import DialogPanel from \"@/components/DialogPanel\";\n//import UserDialog from \"@/pages/UserDialog\";\n//import socket from \"@/socket\";\n//import socket from \"@/socket\";\n/*{{provider.timeoffer.map(to =>\n\ndatetime.providerMatchingForClient(\n    bookingTime,\n    {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\n    {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\n)\n)\n}}*/\nexport default {\n  name: \"recipient-final\",\n  props: {\n    test: Boolean,\n    chatusers: Array,\n\n    selecteduser: null,\n    messages: Array,\n    provider: Object,\n    room: String,\n    roomUserCount: Number,\n    available: String,\n    booking: Array\n  },\n  components: {\n    User,\n    MessagePanel,\n    //UserDialog,\n    //DialogPanel,\n    PositiveFeedback,\n    NegativeFeedback,\n    liveChat,\n    MDBBtn,\n    //MDBContainer,\n    MDBTable,\n    MDBRow,\n    MDBCol,\n    MDBIcon,\n    MDBBadge\n  },\n  data() {\n    return {\n      selectedUser: null,\n      isPositive: false,\n      isNegative: false,\n\n      isChat: false,\n      isPressedOpenChat: false,\n      isPressedContactToUser: false,\n      isConnection: false,\n      isTwoUsers: false,\n\n      feedback: this.provider.feedback,\n\n      //room: \"\",\n\n      isPressedFinal: false,\n\n      //isRoom: false,\n      count: 0,\n      userCount: 0\n    }\n  },\n  mounted () {\n\n  },\n  methods: {\n    // handleAction () {\n    //   const id = this.provider.user.id;\n    //   console.log(\"Sended to user id... \" + id)\n    //   socket.emit(\"accept provider\", {\n    //     id,\n    //     //to: this.loggedUser.id,\n    //   })\n    // },\n    chatCredentials () {\n\n    },\n\n    sendToApp () {\n      console.log(\"Pressed\")\n      this.$emit(\"finalinfo\", \"Tere siit finaalist\")\n\n    },\n\n    selectUser(user) {\n      this.$emit(\"select\", user)\n      //if (!user.self)\n      //this.selectedUser = user;\n    },\n\n    noSelectUser () {\n      this.$emit(\"noSelect\");\n    },\n\n    onMessage(content, date) {\n\n      this.$emit(\"message\", content, date)\n\n    },\n\n\n\n\n    test (state) {\n      console.log(\"From chat: \" + state)\n    },\n\n    openChat () {\n      this.isChat = true;\n      this.count++;\n\n      //this.isChat = true;\n\n      console.log(\"this room is \" + this.room)\n    },\n\n    // Uus teema homseks valmis aretada!!!\n\n    contactToUser() {\n\n      this.isPressedContactToUser = true;\n      socket.emit('updateRoom', this.room);\n      socket.on('get updated room users', (data) => {\n        console.log(\"New users update \" + data.users.length)\n        if (data.users.length > 1) {\n          this.isConnection = true;\n          //this.isTwoUsers = true;\n        } else {\n          this.isConnection = false;\n        }\n\n      })\n      this.isPressedFinal = true;\n      this.isChat = true;\n    },\n\n\n    handleOrder (provider) {\n      this.$emit('provider:ordered', provider)\n    },\n    getPositiveFeedback () {\n      this.isPositive = true;\n      this.isNegative = false;\n\n    },\n    getNegativeFeedback () {\n      this.isNegative = true;\n      this.isPositive = false;\n      //console.log(\"Feedback\")\n    },\n    closeComments (result) {\n      this.isPositive = this.isNegative = result;\n      console.log(\"result \" + result)\n    },\n    canselRecipientFinal () {\n      this.isChat = false;\n\n      this.$emit('cansel:final', false)\n      this.noSelectUser();\n\n    }\n  },\n\n}\n</script>\n\n<style scoped>\n\n</style>","<template>\n  <div v-if=\"feedback.pos\" style=\"background-color: lightgray; padding: 12px;\">\n    <MDBListGroup\n        light small style=\"text-align: left;\"\n        v-for=\"data in feedback\" :key=\"data.id\"\n    >\n      <MDBListGroupItem >{{ data.pos }}</MDBListGroupItem>\n\n\n    </MDBListGroup>\n\n    <MDBBtn block outline=\"secondary\" size=\"lg\" @click=\"closeFeedback\">Poistu kommenteistä</MDBBtn>\n  </div>\n  <div v-else style=\"background-color: lightgray; padding: 12px;\">\n    <h3  style=\"color: green; float: right; cursor: pointer\" @click=\"closeFeedback\">Valmis</h3><br><br>\n    <h3>Ei vielä arvostelua</h3>\n\n\n  </div>\n</template>\n\n<script>\nimport {\n  MDBListGroup,\n  MDBListGroupItem,\n  MDBBtn\n}from \"mdb-vue-ui-kit\";\n\nexport default {\n  name: \"positive-feedback\",\n  props: {\n    feedback: Array\n  },\n  components: {\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBBtn\n  },\n  data() {\n    return{\n\n    }\n  },\n  methods: {\n    closeFeedback () {\n      this.$emit('close:comments', false);\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./PositiveFeedback.vue?vue&type=template&id=2855066e\"\nimport script from \"./PositiveFeedback.vue?vue&type=script&lang=js\"\nexport * from \"./PositiveFeedback.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div v-if=\"feedback.neg\" style=\"background-color: lightgray; padding: 12px;\">\n    <MDBListGroup light small style=\"text-align: left;\" v-for=\"data in feedback\" :key=\"data.id\">\n      <MDBListGroupItem>{{ data.neg }}</MDBListGroupItem>\n\n\n    </MDBListGroup>\n    <MDBBtn block outline=\"secondary\" size=\"lg\" @click=\"closeFeedback\">Poistu kommenteistä</MDBBtn>\n  </div>\n  <div v-else style=\"background-color: lightgray; padding: 12px;\">\n    <h3  style=\"color: green; float: right; cursor: pointer\" @click=\"closeFeedback\">Valmis</h3><br><br>\n    <h3>Ei vielä arvostelua</h3>\n\n\n  </div>\n</template>\n\n<script>\nimport {\n  MDBListGroup,\n  MDBListGroupItem,\n  MDBBtn\n}from \"mdb-vue-ui-kit\";\n\nexport default {\n  name: \"negative-feedback\",\n  props: {\n    feedback: Array\n  },\n  components: {\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBBtn\n  },\n  data() {\n    return{\n\n    }\n  },\n  methods: {\n    closeFeedback () {\n      this.$emit('close:comments', false)\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./NegativeFeedback.vue?vue&type=template&id=5d31d8e3\"\nimport script from \"./NegativeFeedback.vue?vue&type=script&lang=js\"\nexport * from \"./NegativeFeedback.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./RecipientPanelFinal.vue?vue&type=template&id=4028cb8a\"\nimport script from \"./RecipientPanelFinal.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelFinal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\n\n  <MDBContainer v-if=\"isProviderSelected\">\n    <recipientFinal\n        @cansel:final = handleCanselFinal\n        @provider:ordered = orderSuccess\n        :test = test\n        :provider = selectedProvider\n        :room = room\n        :available = availability\n        :booking = booking\n\n        :chatusers = chatusers\n\n\n\n        :selecteduser = selecteduser\n        :messages = messages\n        @message = onMessage\n        @select = selectUser\n        @noSelect = noSelectUser\n        @finalinfo = finalinfo\n\n    />\n\n  </MDBContainer>\n  <MDBContainer v-else>\n    <MDBIcon\n        style=\"float:right; cursor: pointer;\"\n        @click=\"canselResult\"\n        size=\"3x\"\n    >\n      <i class=\"fas fa-undo\"></i>\n    </MDBIcon>\n\n    <h2>Tarvin tässä osaaja - {{line}}</h2>\n\n\n    <successMessage\n        :message = orderMessage\n    />\n    <MDBRow style=\"margin-top: 50px;\">\n      <MDBCol>\n\n        <MDBTable border=\"primary\" style=\"font-size: 18px; text-align: left;\">\n          <tbody>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              {{booking[0].description}}\n\n\n            </td>\n            <td v-else>\n              <MDBRow>\n                <MDBCol >\n                  <MDBTextarea\n                      label=\"Muokkaa tehtävän kuvausta...\"\n                      rows=\"4\" v-model=\"description\"\n                      style=\"font-size: 14px; padding: 20px;\"\n                  />\n                </MDBCol>\n                <MDBCol col=\"1\">\n                  <MDBBtnClose\n                      @click=\"isEditDescription = false\"\n                      style=\"float: right; cursor: pointer\"\n\n                  />\n                </MDBCol>\n              </MDBRow>\n\n\n\n\n            </td>\n          </tr>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"pressedEditDescription\">Muokkaa tehtävän kuvausta</MDBBtn>\n            </td>\n            <td v-else>\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"saveEditedDescription\">Tallenna tehtävän kuvaus</MDBBtn>\n            </td>\n          </tr>\n          <tr>\n            <td v-if=\"!isEditDate\">\n              <h3>{{bookingDateToDisplay}}</h3>\n              <MDBBtn block size=\"lg\" outline=\"info\" @click=\"editDate\">Muokkaa päivämäärä</MDBBtn>\n            </td>\n            <td v-else>\n              <MDBRow>\n                <MDBCol>\n                  <h3>{{bookingDateToDisplay}}</h3>\n\n                  <VueDatePicker\n                      style=\"margin-bottom: 20px;\"\n                      v-model=\"bookingDate\"\n                      :min-date=\"new Date()\"\n                      placeholder=\"Valitse sopivaa päivä milloin haluaisit ammattilaista!\"\n                      @internal-model-change=\"handleInternalDate\"\n                      :state=\"isNoDate ? false : null\"\n                  >\n\n                  </VueDatePicker>\n                </MDBCol>\n                <MDBCol>\n                  <MDBBtnClose\n                      @click=\"isEditDate = false\"\n                      style=\"float: right; cursor: pointer\"\n\n                  />\n                </MDBCol>\n              </MDBRow>\n\n            </td>\n\n          </tr>\n\n          </tbody>\n        </MDBTable>\n\n\n        <div v-for=\"(im, i) in images\" :key=\"i\">\n          <img\n              class=\"loading\"\n              style=\"width: 100%;\"\n              :src=\"im.blob ? im.blob : require(`/server/uploads/${im.name}`)\"\n              :alt=\"im.name\"\n          />\n\n          <MDBBtn v-if=\"!isEditPanel\" block outline=\"success\" @click=\"pressEditPanel(i)\">Muokkaa kuva</MDBBtn>\n          <div class=\"edit-panel\" v-if=\"isEditPanel && imageIndex === i\">\n\n            <MDBRow>\n              <MDBCol>\n                <MDBBtnClose\n                    v-if=\"!value\"\n                    class=\"close-btn\"\n                    style=\"float: right;\"\n                    @click=\"closeEditPanel\"\n                />\n                <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\n                <label  for=\"file-upload\" class=\"custom-file-upload\">\n                  <span v-if=\"value\">\n                  Muokka tehtävän kuvausta: {{value.name}}\n\n                   </span>\n                  <span v-else>Valitse uusi kuva tehtävästä</span>\n                </label>\n                <MDBBtn v-if=\"isEditImage\" block color=\"success\" @click=\"uploadEditedImage(i)\">Upload edited image</MDBBtn>\n                <MDBBtn class=\"btn\" block size=\"lg\" color=\"danger\" @click=\"removeImg(i)\">Poista kuva</MDBBtn>\n              </MDBCol>\n              <MDBCol v-if=\"value\">\n                <MDBBtnClose\n                    class=\"close-btn\"\n                    style=\"float: right;\"\n                    @click=\"closeEditPanel\"\n                />\n                <img\n                    style=\"width:100px; padding-top: 20px;\"\n                    :src=\"this.showImage\"\n                    alt=\"addEdit\"\n                />\n              </MDBCol>\n            </MDBRow>\n\n          </div>\n\n\n\n\n        </div>\n\n        <MDBBtn v-if=\"!isPressedAddlmage\" block color=\"info\" @click=\"pressedAddImage\">Lisää uusi kuva tehtävästä</MDBBtn>\n        <div class=\"add-panel\" v-if=\"isPressedAddlmage && isAddImagePanel\">\n\n\n          <MDBRow>\n\n            <MDBCol>\n              <MDBBtnClose\n                  v-if=\"!value\"\n                  class=\"close-btn\"\n                  @click=\"closeAddPanel\"\n              />\n              <input   id=\"file-upload-x\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\n              <label  for=\"file-upload-x\" class=\"custom-file-upload\">\n                  <span v-if=\"value\">\n                  Muokka tehtävän kuvausta: {{value.name}}\n+\n                   </span>\n                <span v-else>Valitse lisää kuva tehtävästä</span>\n              </label>\n              <MDBBtn v-if=\"isAddImage\" block outline=\"primary\" @click=\"addAdditionalImage\">Tallenna kuva</MDBBtn>\n            </MDBCol>\n            <MDBCol v-if=\"value\">\n              <MDBBtnClose\n                  class=\"close-btn\"\n                  @click=\"closeAddPanel\"\n              />\n              <img\n                  style=\"width:100px\"\n                  :src=\"this.showImage\"\n                  alt=\"addShow\"\n              />\n            </MDBCol>\n          </MDBRow>\n\n        </div>\n\n\n      </MDBCol>\n      <MDBCol v-if=\"isOrdered\">\n\n      </MDBCol>\n      <MDBCol lg=\"6\" v-else>\n        <div v-if=\"providers.length > 0\">\n          <div class=\"ui large form\">\n            <div class=\"field\">\n              <select style=\"padding: 20px; font-size: 18px;\" id=\"listOfProviders\" v-model=\"filterResult\" @click=\"addFilter\">\n                <option disabled value=\"\">Suodatin...</option>\n                <option value=\"distance\">Etäisyyden mukaan</option>\n                <option value=\"rating\">positiivisen palauteen mukaan</option>\n                <!--                <option>Rating</option>-->\n                <!--                <option>Else more</option>-->\n              </select>\n            </div>\n\n          </div>\n          <br>\n\n          <MDBTable  style=\"font-size: 18px; text-align: center;\">\n            <tbody>\n            <tr v-for=\"provider in providers\" :key=\"provider.id\">\n\n\n              <td v-if=\"provider.timeoffer.map(to =>\n\n                datetime.providerMatchingForClient(\n                    bookingTime,\n                    {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\n                    {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\n                )\n              ).includes(true)\">\n                <MDBBtn class=\"provider-selection\"\n                        outline=\"info\"\n                        size=\"lg\"\n                        @click=\"getProviderInfo(provider,'green')\"\n                >\n\n                  {{provider.yritys}}<br>\n\n                  <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span>\n                </MDBBtn>\n                <MDBBadge\n\n                    color=\"success\"\n                    class=\"translate-middle p-1\"\n                    pill\n                    notification\n                ><h4 style=\"padding: 12px;\">\n                  Saatavilla &nbsp;\n                  <img\n                      style=\"width: 50px;\"\n                      :src=\"require(`@/assets/ok.png`)\"\n                      alt=\"ok\"\n                  />\n                </h4>\n                </MDBBadge>\n\n\n\n\n\n              </td>\n              <td v-else>\n\n                <MDBBtn\n                    class=\"provider-selection\"\n                    size=\"lg\"\n                    @click=\"getProviderInfo(provider, 'orange')\"\n                >\n\n                  {{provider.yritys}} <br>\n                  <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span>\n                </MDBBtn>\n\n\n\n                <MDBBadge\n                    color=\"info\"\n                    class=\"translate-middle p-1\"\n                    pill\n                    notification\n                ><h4 style=\"padding: 12px;\">Sovittaessa</h4></MDBBadge>\n\n              </td>\n\n            </tr>\n            <tr>\n            </tr>\n            </tbody>\n          </MDBTable>\n\n\n\n          <!--          Booking {{booking}}-->\n\n        </div>\n        <div v-else>\n          <h2 style=\"width: 100%;\">Yrityksiä hetkellä ei löytyy</h2>\n        </div>\n\n\n\n      </MDBCol>\n      <MDBBtn block outline=\"danger\" size=\"lg\" @click=\"canselResult\">Takaisin</MDBBtn>\n    </MDBRow>\n  </MDBContainer>\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  MDBBtn, MDBContainer, MDBTable, MDBRow,\n  MDBBtnClose,\n  MDBCol, MDBTextarea,\n  MDBIcon,\n  MDBBadge,\n}from \"mdb-vue-ui-kit\";\nimport dt from '../components/controllers/datetime'\nimport recipientFinal from '../pages/RecipientPanelFinal'\nimport successMessage from '../components/notifications/successMessage'\nimport dist from '../components/controllers/distance'\nimport providerService from '../service/providers'\nimport imageService from '../service/image'\nimport VueDatePicker from '@vuepic/vue-datepicker';\n//import socket from \"@/socket\";\nimport {ref} from 'vue'\nimport recipientService from \"@/service/recipients\";\nimport socket from \"@/socket\";\nimport uploadService from \"@/service/image\";\n//import socket from \"@/socket\";\n\n\nexport default {\n  name: \"recipient-panel-result\",\n  props: {\n    test: Boolean,\n    chatusers: Array,\n\n    selecteduser: null,\n    messages: Array,\n    loggedInUser: Object,\n    booking: null,\n    images: Array,\n    bookingTime: null,\n    providers: Array,\n    confirmedBookings: Array,\n    line: String\n  },\n  data () {\n    return {\n      //image: [],\n      //chatUser: {},\n      count: 0,\n      datetime: dt,\n      distance: dist,\n      selectedProvider: null,\n      isProviderSelected: false,\n      availability: \"\",\n      orderMessage: null,\n      isOrdered: false,\n      isEditDescription: false,\n      description: this.booking[0].description,\n\n      isEditDate: false,\n      bookingDate: null,\n      bookingDateToDisplay: this.booking[0].date,\n      //isAddImage: false,\n      isAddFirstImage: false,\n      isPressedAddlmage: false,\n      isAddImage: false,\n      isAddImagePanel: false,\n      isEditImage: false,\n\n\n      isUploadImage: false,\n      isUploaded: false,\n      isImageCreated: false,\n      isAddNewImage: false,\n      isEditPanel: false,\n\n      value: null,\n      imageIndex: 0,\n      file: null,\n      isImageSelected: false,\n      isAdditionalImageSelected: false,\n      showImage: null,\n      tempImages: [],\n      imagesx: [],\n      imagesxxx: [],\n      room: \"\",\n      roomUserCount: 0,\n      filterResult: \"\"\n    }\n  },\n\n  components: {\n    successMessage,\n    VueDatePicker,\n    dist,\n    recipientFinal,\n    MDBBtn,\n    MDBBtnClose,\n    MDBContainer,\n    MDBTable,\n    MDBRow,\n    MDBCol,\n    MDBTextarea,\n    MDBIcon,\n    MDBBadge\n  },\n  methods: {\n\n    editDate () {\n      this.isEditDate = true;\n    },\n    async handleInternalDate () {\n\n      if (this.bookingDate) {\n        this.bookingDateToDisplay = (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear();\n        console.log(\"eeeeee \" + (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear());\n        await recipientService.newDate(this.booking[0].id, {\n          year: this.bookingDate.getFullYear(),\n          month: this.bookingDate.getMonth(),\n          day: this.bookingDate.getDate(),\n          hours: this.bookingDate.getHours(),\n          minutes: this.bookingDate.getMinutes()\n        })\n\n        const updatedDate = {\n          year: this.bookingDate.getFullYear(),\n          month: this.bookingDate.getMonth(),\n          day: this.bookingDate.getDate(),\n          hours: this.bookingDate.getHours(),\n          minutes: this.bookingDate.getMinutes()\n        }\n\n        this.$emit(\"updateBookingDate\", updatedDate);\n      }\n      console.log(\"Date is handled\")\n     // console.log(\"Selected date: \" + this.date)\n    },\n    handleFileChange(e, i) {\n      //this.$emit('input', e.target.client[0])\n      console.log(\"i in file change \" + i)\n      this.imageIndex = i;\n      try {\n\n        const files = e.target.files[0]\n        console.log('event target client ', e.target.files[0])\n\n        if (files) {\n          const tempImage = URL.createObjectURL(files)\n          this.tempImages.push(tempImage);\n          this.showImage = URL.createObjectURL(files)\n          this.file = e.target.files[0]\n\n          this.isAddImage = true;\n          this.isEditImage = true;\n        }\n\n      } catch (err) {\n        console.log('Error:', err)\n      }\n\n      this.value = e.target.files[0]\n      // if (e.target.files[0]) {\n      //   this.isImageSelected = true;\n      // } else {\n      //   this.isImageSelected = false;\n      // }\n    },\n    pressedAddImage () {\n      this.isAddImage = false\n      this.isEditImage = false;\n      this.isEditPanel = false;\n      this.isPressedAddlmage = true;\n      this.isAddImagePanel = true;\n    },\n    async addImage () {\n\n\n    },\n    pressEditPanel (index) {\n      //this.isImageSelected = false;\n      this.isEditImage = false;\n      this.value = null;\n      this.imageIndex = index;\n      //this.isEditImage = true;\n\n      this.isEditPanel = true;\n      this.isAddImagePanel = false\n      //this.isImageCreated = false;\n      //this.isUploaded = false;\n\n      //this.showImage = null;\n      //this.value = null;\n    },\n    closeEditPanel () {\n      //this.imageIndex = index;\n      //this.isEditImage = true;\n      this.isAddImagePanel = false\n      this.isEditPanel = false\n      this.isEditImage = false;\n      this.value = null;\n    },\n    closeAddPanel () {\n      this.isAddImagePanel = false\n      this.isPressedAddlmage = false;\n      this.value = null;\n    },\n    async uploadEditedImage (index, img) {\n\n      console.log(\"Edited image index is: \" + index);\n\n      this.isEditPanel = false;\n      this.isEditImage = false;\n\n      // this.images.push({\n      //   blob: this.showImage\n      // })\n\n\n\n\n\n      const data = new FormData();\n      data.append('file', this.file, this.file.name)\n\n      //this.$emit(\"editImage\", index, image.imgCreated._id,  this.showImage);\n      console.log(\"Image id \" + this.images[index]._id)\n\n      //this.images[this.imageIndex] = {_id: image._id, blob: this.showImage}\n\n\n\n      const image = await imageService.updateImage(this.images[index]._id, data);\n\n      if (image) {\n        this.images[this.imageIndex] = {_id: this.images[index]._id, blob: this.showImage}\n\n        this.images.forEach(img => {\n          console.log(\"Image name \" + img._id)\n        })\n\n\n        //this.$emit(\"editImage\", index, image.imgCreated._id,  this.showImage);\n        console.log(\"New image id is \" + image._id)\n        this.imgId = image._id;\n        this.file = null;\n\n        //this.$emit(\"editImage\", image, img)\n\n\n\n        this.isEditPanel = false;\n\n      }\n\n      //this.imageIndex = null;\n\n    },\n    async addAdditionalImage () {\n      this.value = null;\n      this.isAddImagePanel = false;\n      this.isAddImage = false;\n      this.isPressedAddlmage = false;\n      const data = new FormData();\n\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking[0].id, img.imgCreated._id)\n      const image = {\n        _id: img.imgCreated._id,\n        blob: this.showImage\n      }\n      this.$emit(\"addImage\", image);\n\n      // this.images.push({\n      //   _id: img.imgCreated._id,\n      //   blob: this.showImage\n      // })\n\n\n    },\n    async removeImg (id) {\n      //this.value = null;\n      if (!this.images[id].blob) {\n        console.log(\"removed image is blob\")\n\n      }\n\n      console.log(\"removable image id is \" + this.images[id]._id)\n\n      await recipientService.removeImage(this.booking[0].id, this.images[id]._id);\n      await imageService.remove(this.images[id]._id, this.booking[0].id);\n\n      this.$emit(\"removeImage\", id);\n\n      this.isEditPanel = false;\n\n\n      //this.imageIndex = null\n      //this.isEditDescription = false;\n\n      //this.isImageSelected = false;\n      //this.showImage = null;\n    },\n    getDistance () {\n      //console.log(\"Distance +++++??? \" + dist.distance())\n      console.log(\"sss \" + dist.test())\n    },\n    selectUser (user) {\n      this.$emit('select', user);\n    },\n    noSelectUser () {\n      this.$emit(\"noSelect\");\n    },\n    onMessage (content, date) {\n      this.$emit(\"message\", content, date);\n    },\n    finalinfo (data) {\n      console.log(\"Final info in result pressed \");\n      this.$emit(\"finalinfo\", data)\n\n    },\n    getChatCredentials () {\n\n    },\n    async pressAddFirstImage () {\n      this.isAddFirstImage = true;\n      this.imageIndex = 0;\n    },\n\n    pressAdditionalImage (index) {\n      //this.imageIndex = this.booking[0].image.length - 1;\n      this.isAddImage = true;\n      this.imageIndex = this.images.length;\n      //this.imageIndex = \"new\";\n      //this.isAddNewImage = true;\n\n      console.log(\"Images index = \" + this.imageIndex);\n      this.isAddImage = true;\n    },\n\n\n\n    async uploadFirstImage (index) {\n      const data = new FormData();\n      this.isUploadImage = true;\n      this.imageIndex = 0;\n      //this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n\n      if (img) {\n        this.file = null;\n\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name\n        }\n\n        this.$emit(\"addImage\", image);\n\n        this.imageIndex = 0;\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n\n      }\n\n\n\n    },\n    async uploadAdditionalImage () {\n      this.isAdditionalImageSelected = false;\n      this.isAddImage = false;\n      this.value = null;\n      //this.isEditImage = false;\n      //this.imageIndex = null;\n      //this.imageIndex = this.booking[0].image.length - 1;\n      console.log(\"Image index index \" + this.imageIndex)\n      const data = new FormData();\n\n      this.isUploadImage = true;\n      //this.imageIndex = 0;\n      this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n\n      if (img) {\n        //this.imgId = img.imgCreated._id;\n        this.file = null;\n        //this.showImage = null;\n        //this.value = null;\n\n        //console.log(\"xxx \" + img.imgCreated._id)\n        //console.log(\"Image itself \" + img.imgCreated.image)\n        //await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name\n        }\n\n        //this.imagesxxx.push(image);\n\n        this.$emit(\"addImage\", image);\n\n        //this.images.push(image);\n\n        // const booking = await recipientService.getBookingById(this.booking[0].id);\n        //\n        // setTimeout( async () => {\n        //   booking[0].image.forEach(im=> {\n        //     this.images.push(im)\n        //   })\n        //   //this.images = this.images.concat(booking[0].image)\n        // }, 500)\n\n\n        /*const booking = await recipientService.getBookingById(this.booking[0].id);\n\n        this.imagesxxx = booking[0].image\n*/\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n\n\n        //this.imageIndex = null;\n      }\n\n\n\n    },\n\n    pressedEditDescription () {\n      this.isEditDescription = true\n      console.log(\"Descripton: \" + this.description);\n    },\n    saveEditedDescription () {\n      this.isEditDescription = false;\n      const description = {\n        description: this.description\n      }\n      this.$emit(\"editDescription\", this.description);\n      recipientService.editDescription(this.booking[0].id, description)\n      //this.description = \"\";\n    },\n    cancelEditDescription () {\n      console.log(\"Is here something happening??\")\n    },\n    providerGetBooking (id, booking) {\n      //const id = this.provider.user.id;\n      console.log(\"Sended to user id... \" + id)\n      socket.emit(\"accept provider\", {\n        id,\n        booking: booking\n      })\n    },\n    async orderSuccess (prov) {\n      //console.log(\"Ordered!!!\")\n\n      this.isProviderSelected = false;\n\n      //this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n      console.log(\"Provider id \" + prov.id)\n      console.log(\"Recpient id: \" + this.booking[0].id);\n\n      const providerID = {\n        providerID: this.selectedProvider.id\n      };\n\n\n      //await recipientService.addProviderID(this.booking[0].id, providerID);\n\n      await recipientService.addProviderData(this.booking[0].id, this.selectedProvider.id);\n\n      //socket.emit(\"send booking notification\", this.booking[0], this.selectedProvider.id);\n\n      //const providerName =\n      //const status = \"notSeen\";\n      const createBookingStatus = await recipientService.updateRecipient(this.booking[0].id, {status: \"notSeen\"});\n      console.log(\"Is status updated: \" + createBookingStatus.status);\n\n\n      const recipientId = this.booking[0].id;\n\n      //--------------- About need delete selected and confirmed provider ------------\n\n      //const booking = await providerServise.updateProvider(provId, {booking: [this.booking.id]})\n      // To ordered\n      const booking = await providerService.addProviderBooking(prov.id, recipientId);\n      if (booking === \"Recipient is added!\") {\n        const chatUserDataNavbar = {\n          status: \"\",\n          userID: prov.user.id,\n          name: prov.yritys,\n          room: this.room\n        };\n        this.$emit('remove:confirmed:provider', prov.id, chatUserDataNavbar);\n        this.$emit('set:order:to:send', this.booking[0].id)\n        // Room info to provider\n        this.roomToDb(prov.id, {userID: this.booking[0].user.id, client: this.booking[0].user.username, room: this.room});\n        //this.providerGetBooking(prov.user.id, booking);\n        const id = prov.user.id;\n        console.log(\"Sended nav user... \" + prov.user.id)\n        socket.emit(\"accept provider\", {\n          id,\n          booking: this.booking[0],\n          room: {status: \"\", userID: this.booking[0].user.id, name: this.booking[0].user.username, room: this.room}\n        })\n\n        // name: this.booking[0].user.username\n\n\n\n        this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n\n        console.log(\"Booking made - id: \" + booking.id);\n\n        this.isOrdered = true;\n\n        setTimeout(() => {\n          this.orderMessage = null;\n        }, 3000)\n\n      } else {\n        this.orderMessage = \"Olet jo lähetänyt tilauksen!\"\n        setTimeout(() => {\n          this.orderMessage = null;\n        }, 3000)\n        //console.log(\"Yritys on jo tilattu!\")\n      }\n\n\n\n    },\n    getProviderInfo (provider, marker) {\n\n      this.selectedProvider = provider;\n      this.availability = marker;\n      this.isProviderSelected = true;\n\n      //console.log(\"Booking username \" + this.booking[0].user.username)\n      //console.log(\"Recipient room: \" + (provider.yritys + this.booking[0].user.username))\n      this.room = provider.yritys + this.booking[0].user.username\n\n      socket.emit(\"room users count\")\n      socket.on('get room users count', (data) => {\n        console.log(\"Can we get users data from backend in recipient final??? \" + data.users.length)\n        this.roomUserCount = data.users.length;\n      })\n\n      const username = this.booking[0].user.username;\n      const room = provider.yritys + this.booking[0].user.username;\n\n\n\n      const chatCredentials = {\n        room: room,\n        userID: this.chatUser.id,\n        username: username,\n      }\n\n\n\n      const providerDatax = {\n        userID: provider.user.id,\n        username: provider.user.username,\n        room: room\n      }\n\n      this.$emit(\"provider\", providerDatax);\n\n      const providerData = \"Allu\"\n\n      const id = provider.user.id;\n      const name = provider.user.username;\n\n      // data to create new room\n      this.$emit(\"chatCredentials\", chatCredentials)\n\n      //socket.emit(\"online\", (room));\n\n      // socket.emit(\"create new room user\", {\n      //   room: room,\n      //   username: username\n      // })\n\n\n\n      socket.emit(\"create room users\", {\n        room: room,\n        username: username,\n        providerUsername: provider.user.username,\n        providerID: provider.user.id\n      })\n\n\n\n      //socket.emit(\"update room\", room, id, name)\n      // let rooms = [\"Oopersama\", \"tvsama\"]\n      // socket.emit(\"join all room\", rooms);\n      // iolrhjwefiogäqhj\n    },\n    async roomToDb (id, room) {\n      await providerService.addRoom(id, room)\n    },\n    addFilter () {\n      const filterListedProviders = document.getElementById(\"listOfProviders\")\n\n      filterListedProviders.addEventListener(\"change\", (event) => {\n        console.log(\"Filtered provider: \" + event.target.value);\n        this.$emit(\"filter_provider\", event.target.value);\n        // if (event.target.value === \"distance\") {\n        //   this.$emit(\"filter_provider\", event.target.value);\n        // } else if (event.target.value === \"feedback\") {\n        //\n        //   this.$emit(\"filter_feedback\")\n        // }\n\n\n\n      })\n    },\n    handleCanselFinal (result) {\n      this.isProviderSelected = result;\n    },\n    canselResult () {\n      this.$emit('cansel:result', false)\n    }\n  },\n  async mounted() {\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      this.chatUser = user;\n\n      /*const booking = await recipientService.getBookingById(this.booking[0].id);\n      this.imagesxxx = booking[0].image*/\n      /*booking[0].image.forEach(bi => {\n        this.tempImages.push(bi.name)\n      })*/\n\n\n\n\n\n      //this.joinServer(username, userID);\n    }\n\n\n  }\n}\n</script>\n\n\n<style scoped>\n.edit-panel {\n  border: solid grey;\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.add-panel {\n  border: solid grey;\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.add-additional-panel {\n  border: solid blue;\n}\n.btn {\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.close-btn {\n  float: right;\n  padding: 20px;\n}\nimg.loading {\n  width: 100%;\n  height: 400px;\n  background: transparent url(https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif) no-repeat scroll center center;\n}\n.success {\n  color: white;\n  background: #7bc47b;\n  font-size: 20px;\n  border: solid #0e920e;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\ninput[type=\"file\"] {\n  display: none;\n}\n.custom-file-upload {\n  width: 100%;\n\n  color: white;\n  font-size: 18px;\n  background-color: #87958e;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 20px 12px;\n  margin-bottom: 0;\n  cursor: pointer;\n}\n.imageSection {\n  margin-bottom: 20px;\n}\n.provider-selection {\n  width: 300px;\n  padding: 20px;\n  background-color: grey;\n  border: solid #4c4949;\n  color: #f0eeee;\n  font-size: 150%;\n}\n\n</style>","import { render } from \"./RecipientPanelResult.vue?vue&type=template&id=6a39cb3c&scoped=true\"\nimport script from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanelResult.vue?vue&type=style&index=0&id=6a39cb3c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6a39cb3c\"]])\n\nexport default __exports__"],"names":["compare","rec","prov","receiverDate","Date","y","m","d","hour","min","providerDate","providerMatchingForClient","re","pFrom","pTo","pFromDate","pToDate","res","distance","origin","google","maps","LatLng","destination","service","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","unitSystem","UnitSystem","METRIC","durationInTraffic","avoidHighways","avoidTolls","response_data","responseDis","status","DistanceMatrixStatus","OK","console","log","rows","elements","text","alert","test","_createVNode","_createTextVNode","theDist","geometry","spherical","computeDistanceBetween","toFixed","axios","require","baseUrl","getAll","async","result","get","data","create","post","newImageData","createProfileImage","id","imageData","image","newAvatar","avatar","avt","updateImage","put","remove","recipientId","delete","_createElementVNode","_createElementBlock","_toDisplayString","$props","provider","yritys","_component_MDBTable","style","_hoisted_1","_component_MDBRow","_component_MDBCol","_component_MDBIcon","i","class","size","onClick","$options","getPositiveFeedback","_component_MDBBadge","color","pill","notification","rating","positive","getNegativeFeedback","negative","$data","isPositive","_hoisted_2","_component_PositiveFeedback","feedback","closeComments","isNegative","_createBlock","_component_NegativeFeedback","_hoisted_3","ytunnus","_hoisted_4","priceByHour","isChat","_hoisted_5","_cache","$event","_component_MDBBtn","block","_hoisted_6","_hoisted_7","_component_live_chat","chatusers","messages","selecteduser","selectUser","onNoSelected","noSelectUser","onMessage","outline","handleOrder","canselRecipientFinal","pos","_Fragment","_renderList","_component_MDBListGroup","light","small","key","_component_MDBListGroupItem","closeFeedback","args","name","props","Array","components","MDBListGroup","MDBListGroupItem","MDBBtn","methods","this","$emit","__exports__","neg","Boolean","Object","room","String","roomUserCount","Number","available","booking","User","MessagePanel","PositiveFeedback","NegativeFeedback","liveChat","MDBTable","MDBRow","MDBCol","MDBIcon","MDBBadge","selectedUser","isPressedOpenChat","isPressedContactToUser","isConnection","isTwoUsers","isPressedFinal","count","userCount","mounted","chatCredentials","sendToApp","user","content","date","state","openChat","contactToUser","socket","emit","on","users","length","render","for","disabled","value","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_39","isProviderSelected","_component_MDBContainer","_component_recipientFinal","handleCanselFinal","orderSuccess","selectedProvider","availability","onSelect","onNoSelect","onFinalinfo","finalinfo","canselResult","line","_component_successMessage","message","orderMessage","border","isEditDescription","_component_MDBTextarea","label","description","col","_component_MDBBtnClose","saveEditedDescription","pressedEditDescription","isEditDate","bookingDateToDisplay","_component_VueDatePicker","bookingDate","placeholder","onInternalModelChange","handleInternalDate","_ctx","isNoDate","editDate","images","im","src","blob","alt","isEditPanel","pressEditPanel","imageIndex","_hoisted_9","closeEditPanel","type","onChange","handleFileChange","_hoisted_11","_hoisted_12","_hoisted_13","isEditImage","uploadEditedImage","removeImg","showImage","isPressedAddlmage","pressedAddImage","isAddImagePanel","_hoisted_15","closeAddPanel","_hoisted_16","_hoisted_17","_hoisted_18","isAddImage","addAdditionalImage","isOrdered","lg","providers","_hoisted_20","_hoisted_21","_hoisted_22","filterResult","addFilter","_hoisted_27","timeoffer","map","to","datetime","bookingTime","yearFrom","monthFrom","dayFrom","hoursFrom","minutesFrom","yearTo","monthTo","dayTo","hoursTo","minutesTo","includes","_hoisted_28","getProviderInfo","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_40","loggedInUser","confirmedBookings","dt","dist","isAddFirstImage","isUploadImage","isUploaded","isImageCreated","isAddNewImage","file","isImageSelected","isAdditionalImageSelected","tempImages","imagesx","imagesxxx","successMessage","VueDatePicker","recipientFinal","MDBBtnClose","MDBContainer","MDBTextarea","getMonth","getDate","getFullYear","recipientService","newDate","year","month","day","hours","getHours","minutes","getMinutes","updatedDate","e","files","target","tempImage","URL","createObjectURL","push","err","index","img","FormData","append","_id","imageService","forEach","imgId","addImage","imgCreated","removeImage","getDistance","getChatCredentials","pressAdditionalImage","editDescription","cancelEditDescription","providerGetBooking","addProviderData","createBookingStatus","updateRecipient","providerService","addProviderBooking","chatUserDataNavbar","userID","roomToDb","client","username","setTimeout","marker","chatUser","providerDatax","providerUsername","providerID","addRoom","filterListedProviders","document","getElementById","addEventListener","event","loggedUserJSON","window","localStorage","getItem","JSON","parse"],"sourceRoot":""}