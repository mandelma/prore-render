{"version":3,"file":"js/959.f70219c4.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/controllers/datetime.js","webpack://prore-mongo/./src/components/notifications/errorMessage.js","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue?7f3a"],"sourcesContent":["\nconst compare = (rec, prov) => {\n    const receiverDate = new Date(rec.y, rec.m, rec.d, rec.hour, rec.min);\n    const providerDate = new Date(prov.y, prov.m, prov.d, prov.hour, prov.min)\n    return providerDate >= receiverDate;\n}\n\nconst providerMatchingForClient = (re, pFrom, pTo) => {\n    //const rDate = new Date(re.y, re.m, re.d, re.hour, re.min);\n    const pFromDate = new Date(pFrom.y, pFrom.m, pFrom.d, pFrom.hour, pFrom.min);\n    const pToDate = new Date(pTo.y, pTo.m, pTo.d, pTo.hour, pTo.min);\n    return re >= pFromDate && re < pToDate;\n}\nexport default { compare, providerMatchingForClient }","const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n            <img className={'errorImg'} alt={'error'} src={require('@/assets/error.png')}/>\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage","<template>\r\n\r\n\r\n  <MDBContainer v-if=\"isProviderSelected\">\r\n    <recipientFinal\r\n        @cansel:final = handleCanselFinal\r\n        @provider:ordered = orderSuccess\r\n        :proRefSlides = proRefSlides\r\n        :test = test\r\n        :provider = selectedProvider\r\n        :offer = offer\r\n        :proSlides = slides\r\n        :room = room\r\n        :available = availability\r\n        :booking = booking\r\n\r\n        :chatusers = chatusers\r\n\r\n        :initialize_chat = handleInitializeChat\r\n\r\n        :selecteduser = selecteduser\r\n        :messages = messages\r\n        @message = onMessage\r\n        @select = selectUser\r\n        @noSelect = noSelectUser\r\n        @join_chat_panel = handleJoinChatPanel\r\n\r\n    />\r\n\r\n  </MDBContainer>\r\n  <MDBContainer v-else>\r\n    <div style=\"display: flex; justify-content: right; padding: 20px;\">\r\n      <MDBBtnClose\r\n          white\r\n          style=\"cursor: pointer;\"\r\n          @click=\"canselResult\"\r\n      />\r\n    </div>\r\n\r\n    <prompt-panel\r\n        :promptPanelContent = promptPanelContent\r\n        @prompt:no = handlePromptNo\r\n        @prompt:yes = handlePromptYes\r\n    />\r\n\r\n<!--    <MDBIcon-->\r\n<!--        style=\"float:right; cursor: pointer;\"-->\r\n<!--        @click=\"canselResult\"-->\r\n<!--        size=\"3x\"-->\r\n<!--    >-->\r\n<!--      <i class=\"fas fa-undo\"></i>-->\r\n<!--    </MDBIcon>-->\r\n\r\n    <h2 class=\"client-result-header\">{{t('recipient_result_need_a_pro')}} - {{line}}</h2>\r\n\r\n    <h5 v-if=\"booking.created_ms - new Date().getTime() <= 0 && booking.offers.length < 1\" class=\"expired_date\">\r\n      {{t('recipient_result_order_is_expired')}}\r\n    </h5>\r\n    <successMessage\r\n        :message = orderMessage\r\n    />\r\n\r\n    <MDBRow style=\"margin-top: 50px;\">\r\n      <MDBCol class=\"client-result\">\r\n\r\n        <MDBTable border=\"primary\" style=\"font-size: 17px; color: #dddddd; text-align: left;\">\r\n          <tbody>\r\n          <tr>\r\n            <td v-if=\"!isEditDescription\">\r\n              {{booking.description}}\r\n\r\n\r\n            </td>\r\n            <td v-else>\r\n              <MDBRow>\r\n                <MDBCol >\r\n                  <MDBTextarea\r\n                      label=\"{{t('recipient_result_edit_description')}}\"\r\n                      white\r\n                      rows=\"4\" v-model=\"description\"\r\n                      style=\"font-size: 14px; padding: 20px;\"\r\n                  />\r\n                </MDBCol>\r\n                <MDBCol col=\"1\">\r\n                  <MDBBtnClose\r\n                      white\r\n                      @click=\"isEditDescription = false\"\r\n                      style=\"float: right; cursor: pointer\"\r\n\r\n                  />\r\n                </MDBCol>\r\n              </MDBRow>\r\n\r\n\r\n\r\n\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"booking.offers.length < 1\">\r\n            <td v-if=\"!isEditDescription\">\r\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"pressedEditDescription\">Muokkaa tehtävän kuvausta</MDBBtn>\r\n            </td>\r\n            <td v-else>\r\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"saveEditedDescription\">Tallenna tehtävän kuvaus</MDBBtn>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td v-if=\"!isEditDate\">\r\n              <h3 :class=\"{expired_date: booking.created_ms - new Date().getTime() <= 0 && booking.offers.length < 1}\">\r\n                {{bookingDateToDisplay}} &emsp;\r\n                klo &nbsp;\r\n                {{new Date(booking.created).getHours() < 10 ? \"0\" + new Date(booking.created).getHours() : new Date(booking.created).getHours()}}\r\n                :\r\n                {{new Date(booking.created).getMinutes() < 10 ? \"0\" + new Date(booking.created).getMinutes() : new Date(booking.created).getMinutes()}}\r\n\r\n              </h3>\r\n              <MDBBtn v-if=\"booking.offers.length < 1\" block size=\"lg\" outline=\"info\" @click=\"editDate\">\r\n                <span :class=\"{expired_warning: booking.created_ms - new Date().getTime() <= 0}\">{{t('recipient_result_edit_date')}}</span>\r\n              </MDBBtn>\r\n            </td>\r\n            <td v-else>\r\n              <MDBRow>\r\n                <MDBCol col=\"8\">\r\n                  <h4 :class=\"{expired_date: booking.created_ms - new Date().getTime() <= 0}\">\r\n                    {{bookingDateToDisplay}} &emsp;\r\n                    klo &nbsp;\r\n                    {{new Date(booking.created).getHours() < 10 ? \"0\" + new Date(booking.created).getHours() : new Date(booking.created).getHours()}}\r\n                    :\r\n                    {{new Date(booking.created).getMinutes() < 10 ? \"0\" + new Date(booking.created).getMinutes() : new Date(booking.created).getMinutes()}}\r\n                  </h4>\r\n\r\n                  <VueDatePicker\r\n                      style=\"margin-bottom: 20px;\"\r\n                      dark\r\n                      v-model=\"bookingDate\"\r\n                      :min-date=\"new Date()\"\r\n                      placeholder=\"{{t('recipient_result_select_date')}}\"\r\n                      @internal-model-change=\"handleInternalDate\"\r\n                      :state=\"isNoDate ? false : null\"\r\n                  >\r\n\r\n                  </VueDatePicker>\r\n                </MDBCol>\r\n                <MDBCol col=\"4\">\r\n                  <MDBBtnClose\r\n                      white\r\n                      @click=\"isEditDate = false\"\r\n                      style=\"float: right; cursor: pointer\"\r\n\r\n                  />\r\n                </MDBCol>\r\n              </MDBRow>\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          </tbody>\r\n        </MDBTable>\r\n<!--require(`/server/uploads/${im.name}`)        -->\r\n        <div v-for=\"(item, i) in images\" :key=\"i\">\r\n          <img\r\n              class=\"loading\"\r\n              style=\"width: 100%;\"\r\n              :src=\"item.blob ? im.blob : item.image\"\r\n              :alt=\"item.name\"\r\n          />\r\n\r\n          <MDBBtn v-if=\"!isEditPanel\" block outline=\"success\" @click=\"pressEditPanel(i)\">{{t('recipient_result_edit_picture')}}</MDBBtn>\r\n          <div class=\"edit-panel\" v-if=\"isEditPanel && imageIndex === i\">\r\n            <error-message :message = wrong_SizeType_Message />\r\n            <MDBRow v-if=\"booking.offers.length < 1\">\r\n              <MDBCol>\r\n                <MDBBtnClose\r\n                    v-if=\"!value\"\r\n                    white\r\n                    class=\"close-btn\"\r\n                    style=\"float: right;\"\r\n                    @click=\"closeEditPanel\"\r\n                />\r\n                <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\r\n                <label  for=\"file-upload\" class=\"custom-file-upload\">\r\n                  <span v-if=\"value\">\r\n                  {{t('recipient_result_edit_order_picture')}}: {{value.name}}\r\n\r\n                   </span>\r\n                  <span v-else>{{t('recipient_result_select_new_image')}}</span>\r\n                </label>\r\n                <MDBBtn v-if=\"isEditImage\" block color=\"success\" @click=\"uploadEditedImage(i)\">Upload edited image</MDBBtn>\r\n                <MDBBtn class=\"btn\" block size=\"lg\" color=\"danger\" @click=\"removeImg(i)\">Poista kuva</MDBBtn>\r\n              </MDBCol>\r\n              <MDBCol v-if=\"value\">\r\n                <MDBBtnClose\r\n                    white\r\n                    class=\"close-btn\"\r\n                    style=\"float: right;\"\r\n                    @click=\"closeEditPanel\"\r\n                />\r\n                <img\r\n                    style=\"width:100px; padding-top: 20px;\"\r\n                    :src=\"this.showImage\"\r\n                    alt=\"addEdit\"\r\n                />\r\n              </MDBCol>\r\n            </MDBRow>\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <MDBBtn v-if=\"!isPressedAddlmage & booking.offers.length < 1\" block color=\"primary\" @click=\"pressedAddImage\">Lisää uusi kuva tehtävästä</MDBBtn>\r\n        <div class=\"add-panel\" v-if=\"isPressedAddlmage && isAddImagePanel\">\r\n\r\n          <error-message :message = wrong_SizeType_Message />\r\n          <MDBRow>\r\n\r\n            <MDBCol>\r\n              <MDBBtnClose\r\n                  v-if=\"!value\"\r\n                  white\r\n                  class=\"close-btn\"\r\n                  @click=\"closeAddPanel\"\r\n              />\r\n              <input   id=\"file-upload-x\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\r\n              <label  for=\"file-upload-x\" class=\"custom-file-upload\">\r\n                  <span v-if=\"value\">\r\n                  Muokka tehtävän kuvausta: {{value.name}}\r\n+\r\n                   </span>\r\n                <span v-else>Valitse lisää kuva tehtävästä</span>\r\n              </label>\r\n              <MDBBtn v-if=\"isAddImage\" block outline=\"primary\" @click=\"addAdditionalImage\">Tallenna kuva</MDBBtn>\r\n            </MDBCol>\r\n            <MDBCol v-if=\"value\">\r\n              <MDBBtnClose\r\n                  class=\"close-btn\"\r\n                  white\r\n                  @click=\"closeAddPanel\"\r\n              />\r\n              <img\r\n                  style=\"width:100px\"\r\n                  :src=\"this.showImage\"\r\n                  alt=\"addShow\"\r\n              />\r\n            </MDBCol>\r\n          </MDBRow>\r\n\r\n        </div>\r\n\r\n      </MDBCol>\r\n\r\n      <MDBCol lg=\"6\">\r\n        <div v-if=\"booking_offers.length > 0\">\r\n          <div class=\"ui large form\">\r\n            <div class=\"field\">\r\n              <h3 style=\"margin-bottom: 20px;\">Tarjoukset</h3>\r\n              <select style=\"padding: 20px; background-color: #3c3535; color: lightgrey; font-size: 18px;\" id=\"listOfProviders\" v-model=\"filterResult\" @click=\"addFilter\">\r\n                <option value=\"\">Suodata...</option>\r\n                <option value=\"distance\">Etäisyyden mukaan - lähin ensin</option>\r\n                <option value=\"rating\">Positiivisen palauteen mukaan - enemmän ensin</option>\r\n                <option value=\"price\">Hinnan mukaan - halvin ensin</option>\r\n              </select>\r\n\r\n            </div>\r\n\r\n          </div>\r\n          <br>\r\n\r\n          <MDBTable  style=\"font-size: 18px; text-align: center; position: relative;\">\r\n            <tbody>\r\n            <tr v-for=\"offer in booking_offers\" :key=\"offer.id\">\r\n\r\n              <td>\r\n\r\n                <MDBBtn\r\n                    class=\"provider-selection\"\r\n                    outline=\"info\"\r\n                    size=\"lg\"\r\n                    @click=\"getProviderInfo(offer.provider, offer, 'orange')\"\r\n                >\r\n\r\n                  {{offer.provider.yritys}} <br>\r\n                  <span style=\"font-size: 14px;\">Etäisyys: {{offer.distance}} km</span><br>\r\n\r\n                </MDBBtn>\r\n\r\n\r\n\r\n                <MDBBadge\r\n                    v-if=\"offer.isNewOffer\"\r\n                    color=\"danger\"\r\n                    class=\"translate-middle p-3\"\r\n                    pill\r\n                    notification\r\n                >\r\n                  <span style=\" font-size: 14px; \">\r\n                    uusi! <br>{{offer.price}} eur\r\n                  </span>\r\n                </MDBBadge>\r\n                <MDBBadge\r\n                    v-else\r\n                    color=\"info\"\r\n                    class=\"translate-middle p-3\"\r\n                    pill\r\n                    notification\r\n                >\r\n                  <span style=\" font-size: 14px; \">\r\n                    {{offer.price}} eur\r\n                  </span>\r\n                </MDBBadge>\r\n\r\n              </td>\r\n\r\n            </tr>\r\n            </tbody>\r\n          </MDBTable>\r\n\r\n        </div>\r\n        <div v-else>\r\n          <h2 style=\"width: 100%; margin-top: 17px;\">Odotetaan tarjouksia...</h2>\r\n        </div>\r\n\r\n      </MDBCol>\r\n\r\n      <MDBBtn block color=\"danger\" size=\"lg\" @click=\"removeOfferedBookings\">Poista tilaus</MDBBtn>\r\n    </MDBRow>\r\n\r\n<!--    Booking offers {{booking_offers}}-->\r\n\r\n\r\n  </MDBContainer>\r\n\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport {\r\n  MDBBtn, MDBContainer, MDBTable, MDBRow,\r\n  MDBBtnClose,\r\n  MDBCol, MDBTextarea,\r\n  MDBIcon,\r\n  MDBBadge,\r\n}from \"mdb-vue-ui-kit\";\r\nimport dt from '../components/controllers/datetime'\r\nimport recipientFinal from '../pages/RecipientPanelFinal'\r\nimport successMessage from '../components/notifications/successMessage'\r\nimport errorMessage from '../components/notifications/errorMessage'\r\nimport dist from '../components/controllers/distance'\r\nimport providerService from '../service/providers'\r\nimport offerService from '../service/offers'\r\nimport imageService from '../service/image'\r\nimport promptPanel from '../components/PromptPanel'\r\nimport VueDatePicker from '@vuepic/vue-datepicker';\r\nimport '@/css/style.css';\r\nimport '@/css/notification.css'\r\n//import socket from \"@/socket\";\r\nimport {ref} from 'vue'\r\nimport recipientService from \"@/service/recipients\";\r\nimport socket from \"@/socket\";\r\nimport uploadService from \"@/service/image\";\r\nimport dateFormat from \"dateformat\";\r\n//import socket from \"@/socket\";\r\n\r\n\r\nexport default {\r\n  name: \"recipient-panel-result\",\r\n  props: {\r\n    test: Boolean,\r\n    chatusers: Array,\r\n    proRefSlides: Array,\r\n    selecteduser: null,\r\n    messages: Array,\r\n    loggedInUser: Object,\r\n    booking: null,\r\n    booking_offers: [],\r\n    images: Array,\r\n\r\n    bookingTime: null,\r\n    providers: Array,\r\n    confirmedBookings: Array,\r\n    line: String\r\n  },\r\n  data () {\r\n    return {\r\n      //image: [],\r\n      IMAGE_SIZE: 1000000,\r\n      offer: null,\r\n      chatUser: null,\r\n      //initializeChatRoom: {},\r\n      //chatRoomData: {},\r\n      count: 0,\r\n      //confirmPanel: null,\r\n      promptPanelContent: null,\r\n\r\n\r\n      wrong_SizeType_Message: null,\r\n\r\n      datetime: dt,\r\n      distance: dist,\r\n      selectedProvider: null,\r\n      proSlides: [],\r\n\r\n      isProviderSelected: false,\r\n      availability: \"\",\r\n      orderMessage: null,\r\n      isOrdered: false,\r\n      isEditDescription: false,\r\n      description: this.booking.description,\r\n\r\n      isEditDate: false,\r\n      bookingDate:  new Date(this.booking.created),        //null,\r\n      bookingDateToDisplay: this.booking.date,\r\n      //isAddImage: false,\r\n      isAddFirstImage: false,\r\n      isPressedAddlmage: false,\r\n      isAddImage: false,\r\n      isAddImagePanel: false,\r\n      isEditImage: false,\r\n\r\n\r\n      isUploadImage: false,\r\n      isUploaded: false,\r\n      isImageCreated: false,\r\n      isAddNewImage: false,\r\n      isEditPanel: false,\r\n\r\n      value: null,\r\n      imageIndex: 0,\r\n      file: null,\r\n      files: null,\r\n      isImageSelected: false,\r\n      isAdditionalImageSelected: false,\r\n      showImage: null,\r\n      tempImages: [],\r\n      imagesx: [],\r\n      imagesxxx: [],\r\n      room: \"\",\r\n      roomUserCount: 0,\r\n      filterResult: \"\",\r\n    }\r\n  },\r\n\r\n  components: {\r\n    successMessage,\r\n    errorMessage,\r\n    VueDatePicker,\r\n    promptPanel,\r\n    dist,\r\n    recipientFinal,\r\n    MDBBtn,\r\n    MDBBtnClose,\r\n    MDBContainer,\r\n    MDBTable,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBTextarea,\r\n    MDBIcon,\r\n    MDBBadge\r\n  },\r\n\r\n  methods: {\r\n    handlePromptNo () {\r\n      console.log(\"Said NO!\")\r\n      this.promptPanelContent = null;\r\n    },\r\n    handlePromptYes () {\r\n      console.log(\"Said YES!\");\r\n      this.promptPanelContent = null;\r\n      this.$emit(\"removeOfferedBooking\", this.booking, this.booking.offers);\r\n    },\r\n    editDate () {\r\n      this.isEditDate = true;\r\n\r\n\r\n    },\r\n    async handleInternalDate () {\r\n\r\n      if (this.bookingDate) {\r\n        console.log(\"new date: \" +  new Date(this.bookingDate).getTime());\r\n        this.bookingDateToDisplay = (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear();\r\n        console.log(\"eeeeee \" + (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear());\r\n        const dateInMs = new Date(this.bookingDate).getTime();\r\n        const renewCreated = new Date(this.bookingDate);\r\n        await recipientService.newDate(this.booking.id, {\r\n          year: this.bookingDate.getFullYear(),\r\n          month: this.bookingDate.getMonth(),\r\n          day: this.bookingDate.getDate(),\r\n          hours: this.bookingDate.getHours(),\r\n          minutes: this.bookingDate.getMinutes(),\r\n          date_ms: dateInMs\r\n        })\r\n\r\n        const updatedDate = {\r\n          year: this.bookingDate.getFullYear(),\r\n          month: this.bookingDate.getMonth(),\r\n          day: this.bookingDate.getDate(),\r\n          hours: this.bookingDate.getHours(),\r\n          minutes: this.bookingDate.getMinutes()\r\n        }\r\n\r\n        this.$emit(\"updateBookingDate\", this.booking, updatedDate);\r\n      }\r\n      //this.isEditDate = false;\r\n      console.log(\"Date is handled\")\r\n     // console.log(\"Selected date: \" + this.date)\r\n    },\r\n    handleFileChange(e, i) {\r\n      //this.$emit('input', e.target.client[0])\r\n      console.log(\"i in file change \" + i)\r\n      this.imageIndex = i;\r\n      try {\r\n\r\n        const files = e.target.files[0]\r\n        console.log('event target client ', e.target.files[0])\r\n\r\n        if (files) {\r\n          const tempImage = URL.createObjectURL(files)\r\n          this.tempImages.push(tempImage);\r\n          this.showImage = URL.createObjectURL(files)\r\n          this.file = e.target.files[0];\r\n          this.files = e.target.files[0];\r\n\r\n          this.isAddImage = true;\r\n          this.isEditImage = true;\r\n        }\r\n\r\n      } catch (err) {\r\n        console.log('Error:', err)\r\n      }\r\n\r\n      this.value = e.target.files[0]\r\n      // if (e.target.files[0]) {\r\n      //   this.isImageSelected = true;\r\n      // } else {\r\n      //   this.isImageSelected = false;\r\n      // }\r\n    },\r\n    pressedAddImage () {\r\n      this.isAddImage = false\r\n      this.isEditImage = false;\r\n      this.isEditPanel = false;\r\n      this.isPressedAddlmage = true;\r\n      this.isAddImagePanel = true;\r\n    },\r\n    async addImage () {\r\n\r\n\r\n    },\r\n    pressEditPanel (index) {\r\n      this.isEditImage = false;\r\n      this.value = null;\r\n      this.imageIndex = index;\r\n      this.isPressedAddlmage = false;\r\n      this.isEditPanel = true;\r\n      this.isAddImagePanel = false\r\n    },\r\n    closeEditPanel () {\r\n      this.isAddImagePanel = false\r\n      this.isEditPanel = false\r\n      this.isEditImage = false;\r\n      this.value = null;\r\n    },\r\n    closeAddPanel () {\r\n      this.isAddImagePanel = false\r\n      this.isPressedAddlmage = false;\r\n      this.value = null;\r\n    },\r\n    async uploadEditedImage (index, img) {\r\n\r\n      console.log(\"Edited image index is: \" + index);\r\n\r\n      this.isEditPanel = false;\r\n      this.isEditImage = false;\r\n\r\n      const data = new FormData();\r\n      data.append('file', this.file, this.file.name)\r\n\r\n      console.log(\"Image id \" + this.images[index]._id)\r\n      const editImgType = this.file.type;\r\n      if (editImgType ===\"image/jpeg\" || editImgType === \"image/jpg\" || editImgType === \"image/png\" || editImgType === \"image/gif\") {\r\n        if (this.file.size <= this.IMAGE_SIZE) {\r\n          const image = await imageService.updateImage(this.images[index]._id, data);\r\n\r\n          if (image) {\r\n            this.$emit(\"editImage\", index, image._id,  this.showImage);\r\n            // this.images[this.imageIndex] = {_id: this.images[index]._id, blob: this.showImage}\r\n            //\r\n            // this.images.forEach(img => {\r\n            //   console.log(\"Image name \" + img._id)\r\n            // })\r\n\r\n            console.log(\"ORDRED in EDIT pikkus \" + this.booking.ordered.length)\r\n            let ordered = [];\r\n            this.booking.ordered.forEach(b => {\r\n              console.log(\"CVCVCV \" + b.user.username);\r\n              ordered = ordered.concat(b.user.id);\r\n            })\r\n\r\n            const reader = new FileReader();\r\n\r\n            if (this.file) {\r\n              reader.onload = (e) => {\r\n                const bytes = new Uint8Array(e.target.result);\r\n                console.log(\"FILES.... \" + this.files)\r\n\r\n                const image_id = image._id;\r\n\r\n                socket.emit(\"display edited booking image\", image_id, bytes, this.booking.id, ordered)\r\n\r\n              };\r\n              reader.readAsArrayBuffer(this.files);\r\n            }\r\n\r\n            console.log(\"New image id is \" + image._id)\r\n            this.imgId = image._id;\r\n            this.file = null;\r\n\r\n            this.isEditPanel = false;\r\n\r\n\r\n            this.closeAddPanel();\r\n\r\n          }\r\n        } else {\r\n          this.isEditPanel = true;\r\n          this.closeAddPanel();\r\n          this.wrong_SizeType_Message = \"Väärä formaati. Kuva pitäisi olla jpeg, jpg, png tai gif formaatissa!\";\r\n          setTimeout(() => {\r\n            this.wrong_SizeType_Message = null;\r\n          }, 3000);\r\n        }\r\n\r\n      }else {\r\n        this.isEditPanel = true;\r\n        this.closeAddPanel();\r\n        this.wrong_SizeType_Message = \"Kuvan maximi koko on oltava 3 MB!\";\r\n        setTimeout(() => {\r\n          this.wrong_SizeType_Message = null;\r\n        }, 3000);\r\n      }\r\n\r\n\r\n    },\r\n\r\n    // Add booking image\r\n    async addAdditionalImage () {\r\n      this.value = null;\r\n      //this.file = null;\r\n      this.isAddImagePanel = false;\r\n      this.isAddImage = false;\r\n      this.isPressedAddlmage = false;\r\n      const data = new FormData();\r\n\r\n      data.append('file', this.file, this.file.name)\r\n      console.log(\"IMG size - \" + this.file.size);\r\n\r\n      console.log(\"Image type_ \" + this.file.type);\r\n\r\n      const type = this.file.type;\r\n      if (type ===\"image/jpeg\" || type === \"image/jpg\" || type === \"image/png\" || type === \"image/gif\") {\r\n        console.log(\"Pildi formaat on OK\")\r\n        if (this.file.size <= this.IMAGE_SIZE) {\r\n\r\n          const reader = new FileReader();\r\n\r\n          const img = await imageService.create(data);\r\n\r\n          if (img) {\r\n            await recipientService.addImage(this.booking.id, img.imgCreated._id)\r\n            // const new_image = {\r\n            //   _id: img.imgCreated._id,\r\n            //   image: img.imgCreated.image,\r\n            //   name: img.imgCreated.name\r\n            // }\r\n\r\n            const _image = {\r\n              _id: img.imgCreated._id,\r\n              blob: this.showImage\r\n            }\r\n            this.$emit(\"addImage\", _image, this.booking.id);\r\n            console.log(\"ORDRED pikkus \" + this.booking.ordered.length)\r\n            let ordered = [];\r\n            this.booking.ordered.forEach(b => {\r\n              console.log(\"CVCVCV \" + b.user.username);\r\n              ordered = ordered.concat(b.user.id);\r\n            })\r\n\r\n            reader.onload = (e) => {\r\n              const bytes = new Uint8Array(e.target.result);\r\n              console.log(\"FILES IN UPLOAD.... \" + this.files)\r\n\r\n              const image_bytes = {\r\n                id: img.imgCreated._id,\r\n                bytes: bytes\r\n              }\r\n              socket.emit(\"display booking image\", image_bytes, this.booking.id, ordered)\r\n\r\n            };\r\n            reader.readAsArrayBuffer(this.files);\r\n            // image_id, bytes, this.booking.id, ordered\r\n            //socket.emit(\"display booking image\", new_image, this.booking.id, ordered)\r\n          }\r\n        } else {\r\n\r\n          console.log(\"Pildi suurus peab olema väiksem kui 1 MB\");\r\n          this.isAddImagePanel = true\r\n          this.isPressedAddlmage = true;\r\n          this.wrong_SizeType_Message = \"Kuvan maximi koko on 3 MB.\";\r\n\r\n          setTimeout(() => {\r\n            this.wrong_SizeType_Message = null;\r\n          }, 3000);\r\n        }\r\n      } else {\r\n        console.log(\"Pildi formaat on FAKE\")\r\n        this.wrong_SizeType_Message = \"Väärä formaati. Kuva pitäisi olla jpeg, jpg, png tai gif formaatissa!\";\r\n        setTimeout(() => {\r\n          this.wrong_SizeType_Message = null;\r\n        }, 3000);\r\n      }\r\n\r\n    },\r\n    async removeImg (id) {\r\n      //this.value = null;\r\n      if (!this.images[id].blob) {\r\n        console.log(\"removed image is blob\")\r\n\r\n      }\r\n\r\n      console.log(\"removable image id is \" + this.images[id]._id)\r\n\r\n      await recipientService.removeImage(this.booking.id, this.images[id]._id);\r\n      await imageService.remove(this.images[id]._id, this.booking.id);\r\n      let bIDs = [];\r\n\r\n      this.booking.ordered.forEach(bo => {\r\n        bIDs = bIDs.concat(bo.user.id);\r\n      })\r\n\r\n      socket.emit(\"stop display booking image\", this.images[id]._id, this.booking, bIDs);\r\n\r\n      this.$emit(\"removeImage\", id);\r\n\r\n      this.isEditPanel = false;\r\n\r\n    },\r\n    getDistance () {\r\n      //console.log(\"Distance +++++??? \" + dist.distance())\r\n      console.log(\"sss \" + dist.test())\r\n    },\r\n    selectUser (user) {\r\n      this.$emit('select', user);\r\n    },\r\n    noSelectUser () {\r\n      this.$emit(\"noSelect\");\r\n    },\r\n    onMessage (content, date) {\r\n      this.$emit(\"message\", content, date);\r\n    },\r\n    // initializeChat () {\r\n    //   this.$emit(\"initializeChat\", {\r\n    //     initChatRoom: this.initializeChatRoom,\r\n    //     chatData: this.chatRoomData\r\n    //   });\r\n    // },\r\n    handleJoinChatPanel () {\r\n      console.log(\"Final info in result pressed \");\r\n\r\n      this.$emit(\"joinChatPanel\", this.room);\r\n    },\r\n\r\n    async pressAddFirstImage () {\r\n      this.isAddFirstImage = true;\r\n      this.imageIndex = 0;\r\n    },\r\n\r\n    pressAdditionalImage (index) {\r\n      //this.imageIndex = this.booking[0].image.length - 1;\r\n      this.isAddImage = true;\r\n      this.imageIndex = this.images.length;\r\n      //this.imageIndex = \"new\";\r\n      //this.isAddNewImage = true;\r\n\r\n      console.log(\"Images index = \" + this.imageIndex);\r\n      this.isAddImage = true;\r\n    },\r\n\r\n\r\n\r\n    // async uploadFirstImage (index) {\r\n    //   const data = new FormData();\r\n    //   this.isUploadImage = true;\r\n    //   this.imageIndex = 0;\r\n    //   //this.isUploaded = true;\r\n    //   //isUploaded && imageIndex === i\r\n    //   data.append('file', this.file, this.file.name)\r\n    //   console.log(\"IMG size - \" + this.file.size);\r\n    //   //const img = await imageService.create(data);\r\n    //   //console.log(\"ABOUT: \" + img);\r\n    //   //await recipientService.addImage(this.booking.id, img.imgCreated._id);\r\n    //\r\n    //   // if (img) {\r\n    //   //   this.file = null;\r\n    //   //\r\n    //   //   const image = {\r\n    //   //     _id: img.imgCreated._id,\r\n    //   //     image: img.imgCreated.image,\r\n    //   //     name: img.imgCreated.name\r\n    //   //   }\r\n    //   //\r\n    //   //   this.$emit(\"addImage\", image);\r\n    //   //\r\n    //   //   this.imageIndex = 0;\r\n    //   //\r\n    //   //   this.isImageSelected = false;\r\n    //   //   this.isUploaded = true;\r\n    //   //\r\n    //   //\r\n    //   // }\r\n    //\r\n    //\r\n    //\r\n    // },\r\n\r\n    // Ei toimi ilmselt!!!\r\n    async uploadAdditionalImage () {\r\n      this.isAdditionalImageSelected = false;\r\n      this.isAddImage = false;\r\n      this.value = null;\r\n      //this.isEditImage = false;\r\n      //this.imageIndex = null;\r\n      //this.imageIndex = this.booking[0].image.length - 1;\r\n      console.log(\"Image index index \" + this.imageIndex)\r\n      const data = new FormData();\r\n\r\n      this.isUploadImage = true;\r\n      //this.imageIndex = 0;\r\n      this.isUploaded = true;\r\n      //isUploaded && imageIndex === i\r\n      data.append('file', this.file, this.file.name)\r\n      const img = await imageService.create(data);\r\n      await recipientService.addImage(this.booking.id, img.imgCreated._id);\r\n\r\n      if (img) {\r\n        //this.imgId = img.imgCreated._id;\r\n        this.file = null;\r\n        //this.showImage = null;\r\n        //this.value = null;\r\n\r\n        //console.log(\"xxx \" + img.imgCreated._id)\r\n        //console.log(\"Image itself \" + img.imgCreated.image)\r\n        //await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\r\n        const image = {\r\n          _id: img.imgCreated._id,\r\n          image: img.imgCreated.image,\r\n          name: img.imgCreated.name,\r\n          blob: this.showImage,\r\n        }\r\n\r\n        //this.imagesxxx.push(image);\r\n\r\n        this.$emit(\"addImage\", image);\r\n\r\n        //this.images.push(image);\r\n\r\n        // const booking = await recipientService.getBookingById(this.booking[0].id);\r\n        //\r\n        // setTimeout( async () => {\r\n        //   booking[0].image.forEach(im=> {\r\n        //     this.images.push(im)\r\n        //   })\r\n        //   //this.images = this.images.concat(booking[0].image)\r\n        // }, 500)\r\n\r\n\r\n        /*const booking = await recipientService.getBookingById(this.booking[0].id);\r\n\r\n        this.imagesxxx = booking[0].image\r\n*/\r\n\r\n        this.isImageSelected = false;\r\n        this.isUploaded = true;\r\n\r\n\r\n\r\n        //this.imageIndex = null;\r\n      }\r\n\r\n\r\n\r\n    },\r\n\r\n    pressedEditDescription () {\r\n      this.isEditDescription = true\r\n      console.log(\"Descripton: \" + this.description);\r\n    },\r\n    saveEditedDescription () {\r\n      this.isEditDescription = false;\r\n      const description = {\r\n        description: this.description\r\n      }\r\n      this.$emit(\"editDescription\", this.description);\r\n      recipientService.editDescription(this.booking.id, description)\r\n      //this.description = \"\";\r\n    },\r\n    cancelEditDescription () {\r\n      console.log(\"Is here something happening??\")\r\n    },\r\n    providerGetBooking (id, booking) {\r\n      //const id = this.provider.user.id;\r\n      console.log(\"Sended to user id... \" + id)\r\n      socket.emit(\"accept provider\", {\r\n        id,\r\n        booking: booking\r\n      })\r\n    },\r\n\r\n    // For just confirm provider\r\n    async orderSuccess (prov) {\r\n      console.log(\"Include offers? \" + this.booking.isIncludeOffers)\r\n      if (this.booking.isIncludeOffers) {\r\n        this.canselResult();\r\n\r\n        // TODO teised offerid maha võtta\r\n\r\n        console.log(\"## bef \" + this.booking.ordered.length)\r\n\r\n\r\n\r\n        this.$emit(\"offer_confirmed\", this.booking , prov.id);\r\n        console.log(\"## aft \" + this.booking.ordered.length)\r\n        const pro = await providerService.getProvByProvId(prov.id);\r\n\r\n        console.log(\"Offer confirmation user id \" + pro.user.id);\r\n\r\n        const providerID = {\r\n          providerID: this.selectedProvider.id\r\n        };\r\n\r\n        await recipientService.updateRecipient(this.booking.id, {status: \"confirmed\"});\r\n\r\n        //const res = await recipientService.getBookingById(this.booking.id);\r\n\r\n        const recipientId = this.booking.id;\r\n\r\n\r\n        console.log(\"Username here???? \" + this.booking.user.username);\r\n\r\n\r\n        let bookingOffers = [];\r\n        let offerMakers = [];\r\n        let ampIDs = [];\r\n        let restProsNoOfferDone = [];\r\n\r\n        if (this.booking) {\r\n          bookingOffers = this.booking.offers;\r\n          const allMatchedPros = this.booking.ordered;\r\n          for (let id in allMatchedPros) {\r\n\r\n            if (allMatchedPros[id].user.id !== pro.user.id) {\r\n\r\n\r\n              ampIDs.push(allMatchedPros[id])\r\n\r\n              // console.log(\"Removing this pro from DB: \" + allMatchedPros[id].user.id)\r\n              // await providerService.removeProviderBooking(allMatchedPros[id].id, this.booking.id);\r\n              // await recipientService.removeProviderData(this.booking.id, allMatchedPros[id].id);\r\n\r\n\r\n\r\n            }\r\n          }\r\n          for (let i in bookingOffers) {\r\n            if (bookingOffers[i].room !== this.room) {\r\n              await offerService.removeBookingOffer(bookingOffers[i].id, this.booking.id);\r\n            }\r\n          }\r\n        }\r\n\r\n        let madeOffer = {};\r\n\r\n        for (let sender in bookingOffers) {\r\n\r\n          console.log(\"Offer maker id heeeeeere \" + bookingOffers[sender].provider.user.id);\r\n\r\n\r\n\r\n          if (bookingOffers[sender].provider.user.id !== pro.user.id) {\r\n            //offerMakers = offerMakers.concat(bookingOffers[sender].provider.user);\r\n\r\n            offerMakers = offerMakers.concat(bookingOffers[sender]);\r\n\r\n            //offerMakers = offerMakers.concat(bookingOffers[sender]);\r\n            console.log(\"eeeeeeeeeeeeeeeeeeeee \" + bookingOffers[sender].provider.user.id)\r\n\r\n            await providerService.removeProviderBooking(bookingOffers[sender].provider.id, this.booking.id);\r\n            await recipientService.removeProviderData(this.booking.id, bookingOffers[sender].provider.id);\r\n\r\n          } else {\r\n            madeOffer = bookingOffers[sender];\r\n          }\r\n\r\n        }\r\n        console.log(\"offerMakers length \" + offerMakers.length)\r\n        ampIDs.forEach(ai => {\r\n\r\n          if (!offerMakers.some(om => om.provider.id === ai.id)) {\r\n            restProsNoOfferDone.push(ai);\r\n          }\r\n          // offerMakers.forEach(om => {\r\n          //   if (ai !== om.provider.user.id) {\r\n          //     restProsNoOfferDone.push(ai);\r\n          //   }\r\n          // })\r\n        })\r\n\r\n        console.log(\"ampIDs \" + ampIDs.map(mi => mi.id))\r\n        console.log(\"REST OF PROS \" + restProsNoOfferDone.map(ma => ma));\r\n\r\n        for (let id in restProsNoOfferDone) {\r\n          console.log(\"Test id \" + restProsNoOfferDone[id].id)\r\n          await providerService.removeProviderBooking(restProsNoOfferDone[id].id, this.booking.id);\r\n          await recipientService.removeProviderData(this.booking.id, restProsNoOfferDone[id].id);\r\n        }\r\n\r\n        // TODO kui tellija tilab yrityse siis tellija peab teiste juures kustuma!! Ordered juures peavad kustuma teised id:d\r\n\r\n        socket.emit(\"confirm offer\", pro.user.id, this.booking, madeOffer);\r\n\r\n\r\n        socket.emit(\"deal done notification\", offerMakers, restProsNoOfferDone, this.booking, madeOffer);\r\n\r\n      } else {\r\n        this.isProviderSelected = false;\r\n\r\n        console.log(\"No booking with offers here!\")\r\n        // console.log(\"Provider id \" + prov.id)\r\n        // console.log(\"Recpient id: \" + this.booking.id);\r\n        //\r\n        // const providerID = {\r\n        //   providerID: this.selectedProvider.id\r\n        // };\r\n        //\r\n        // await recipientService.addProviderData(this.booking.id, this.selectedProvider.id);\r\n        //\r\n        // const createBookingStatus = await recipientService.updateRecipient(this.booking.id, {status: \"notSeen\"});\r\n        //\r\n        // const recipientId = this.booking.id;\r\n        //\r\n        // const booking = await providerService.addProviderBooking(prov.id, recipientId);\r\n        // if (booking === \"Recipient is added!\") {\r\n        //   const pro_data = {\r\n        //     status: \"\",\r\n        //     userID: prov.user.id,\r\n        //     name: prov.user.username,\r\n        //     room: this.room\r\n        //   };\r\n        //\r\n        //   console.log(\"#### HERE ##### \" + prov.user.username);\r\n        //   this.$emit('client:confirmed_provider', prov.id, this.booking, pro_data);\r\n        //\r\n        //   const id = prov.user.id;\r\n        //\r\n        //   socket.emit(\"accept provider\", {\r\n        //     id,\r\n        //     booking: this.booking,\r\n        //   })\r\n        //\r\n        // }\r\n        //\r\n        // this.handleJoinChatPanel();\r\n      }\r\n\r\n    },\r\n    // For price offers\r\n    async orderSuccess_standing (prov) {\r\n      this.isProviderSelected = false;\r\n\r\n      console.log(\"Provider id \" + prov.id)\r\n      console.log(\"Recpient id: \" + this.booking.id);\r\n\r\n      this.canselResult();\r\n\r\n      this.$emit(\"offer_confirmed\", this.booking);\r\n      const providerID = {\r\n        providerID: this.selectedProvider.id\r\n      };\r\n\r\n\r\n      //await recipientService.addProviderID(this.booking[0].id, providerID);\r\n\r\n      //await recipientService.addProviderData(this.booking.id, this.selectedProvider.id);\r\n\r\n      //socket.emit(\"send booking notification\", this.booking[0], this.selectedProvider.id);\r\n\r\n      //const providerName =\r\n      //const status = \"notSeen\";\r\n      const createBookingStatus = await recipientService.updateRecipient(this.booking.id, {status: \"confirmed\"});\r\n\r\n\r\n\r\n      const recipientId = this.booking.id;\r\n\r\n      //--------------- About need delete selected and confirmed provider ------------\r\n\r\n      //const booking = await providerServise.updateProvider(provId, {booking: [this.booking.id]})\r\n      // To ordered\r\n      //const booking = await providerService.addProviderBooking(prov.id, recipientId);\r\n      // if (booking === \"Recipient is added!\") {\r\n      //   const chatUserDataNavbar = {\r\n      //     status: \"\",\r\n      //     userID: prov.user.id,\r\n      //     name: prov.user.username,\r\n      //     room: this.room\r\n      //   };\r\n      //   this.$emit('client:confirmed_provider', prov.id, this.booking, chatUserDataNavbar);\r\n      //   //this.$emit('set:order:to:send', prov.id, this.booking, chatUserDataNavbar)\r\n      //\r\n      //   this.roomToDb(prov.id, {userID: this.booking.user.id, client: this.booking.user.username, room: this.room});\r\n      //   //this.providerGetBooking(prov.user.id, booking);\r\n      //   const id = prov.user.id;\r\n      //\r\n      //\r\n      //\r\n      // }\r\n\r\n      // socket.emit(\"accept provider\", {\r\n      //   id,\r\n      //   booking: this.booking,\r\n      // })\r\n\r\n      //this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\r\n\r\n\r\n\r\n      // this.isOrdered = true;\r\n      //\r\n      // setTimeout(() => {\r\n      //   this.orderMessage = null;\r\n      // }, 3000)\r\n\r\n      //this.initializeChat();\r\n\r\n    },\r\n    async getProviderInfo (provider, offer, marker) {\r\n      this.proSlides = [];\r\n      this.offer = offer;\r\n      this.selectedProvider = provider\r\n      if (this.booking.isIncludeOffers) {\r\n        if (offer.isNewOffer) {\r\n          this.$emit(\"editBookingOfferStatus\", offer)\r\n        }\r\n      }\r\n      provider.reference.forEach(slide => {\r\n        this.proSlides = [\r\n            ...this.proSlides,\r\n            slide\r\n        ]\r\n      })\r\n      // provider.reference.forEach(slide => {\r\n      //   this.proSlides = [\r\n      //       ...this.proSlides,\r\n      //     {\r\n      //       id: slide.id,\r\n      //       size: '1400-933',\r\n      //       src: require(`/server/uploads/pro/${slide.name}`),\r\n      //       thumb: require(`/server/uploads/pro/${slide.name}`),\r\n      //       subHtml: `<div class=\"lightGallery-captions\">\r\n      //           <h2>Terve</h2>\r\n      //\r\n      //       </div>\"`\r\n      //     }\r\n      //   ]\r\n      // })\r\n      this.availability = marker;\r\n      this.isProviderSelected = true;\r\n\r\n\r\n      let room = \"\";\r\n      let username = \"\";\r\n\r\n      if (this.chatUser) {\r\n        username = this.chatUser.username;\r\n        room = provider.yritys + username;\r\n        this.room = room;\r\n      }\r\n\r\n    },\r\n    async roomToDb (id, room) {\r\n      await providerService.addRoom(id, room)\r\n    },\r\n    addFilter () {\r\n      const filterListedProviders = document.getElementById(\"listOfProviders\")\r\n\r\n      filterListedProviders.addEventListener(\"change\", (event) => {\r\n        console.log(\"Filtered provider: \" + event.target.value);\r\n        this.$emit(\"filter_provider\", event.target.value);\r\n\r\n      })\r\n    },\r\n    handleCanselFinal (result) {\r\n      this.isProviderSelected = result;\r\n    },\r\n    canselResult () {\r\n      this.$emit('cansel:result', false)\r\n    },\r\n    async removeOfferedBookings () {\r\n      //this.confirmPanel = \"TEST CONFIRM\"\r\n\r\n\r\n      // this.promptPanelContent = null;\r\n      // this.promptPanelContent = \"Oletko varma, että haluat poistaa tilausken?\"\r\n\r\n\r\n\r\n\r\n      if (confirm(\"Oletko varmaa, että haluat poistaa tilauksen!?\") === true) {\r\n\r\n        this.$emit(\"removeOfferedBooking\", this.booking, this.booking.offers);\r\n\r\n      } else {\r\n        console.log(\"You canceled!\")\r\n      }\r\n    },\r\n  },\r\n\r\n  async mounted() {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      this.chatUser = user;\r\n\r\n    }\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.edit-panel {\r\n  border: solid grey;\r\n  padding: 20px;\r\n  margin: 20px 0 20px 0;\r\n}\r\n.add-panel {\r\n  border: solid grey;\r\n  padding: 20px;\r\n  margin: 20px 0 20px 0;\r\n}\r\n.add-additional-panel {\r\n  border: solid blue;\r\n}\r\n.btn {\r\n  padding: 20px;\r\n  margin: 20px 0 20px 0;\r\n}\r\n.close-btn {\r\n  float: right;\r\n  padding: 20px;\r\n}\r\nimg.loading {\r\n  width: 100%;\r\n  height: 400px;\r\n  background: transparent url(https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif) no-repeat scroll center center;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n  display: none;\r\n}\r\n.custom-file-upload {\r\n  width: 100%;\r\n\r\n  color: white;\r\n  font-size: 18px;\r\n  background-color: #87958e;\r\n  border: 1px solid #ccc;\r\n  display: inline-block;\r\n  padding: 20px 12px;\r\n  margin-bottom: 0;\r\n  cursor: pointer;\r\n}\r\n.imageSection {\r\n  margin-bottom: 20px;\r\n}\r\n.provider-selection {\r\n  width: 300px;\r\n  padding: 20px;\r\n  background-color: darkslategrey;\r\n  border: solid #4c4949;\r\n  color: #f0eeee;\r\n  font-size: 150%;\r\n}\r\n\r\n@media only screen and (max-width: 1000px) {\r\n  .provider-selection {\r\n    width: 250px;\r\n    padding: 20px;\r\n    background-color: darkslategrey;\r\n    border: solid #4c4949;\r\n    color: #f0eeee;\r\n    font-size: 150%;\r\n  }\r\n}\r\n\r\nselect option {\r\n  border: solid red;\r\n}\r\n.expired_warning {\r\n  color: palevioletred;\r\n}\r\n.expired_date {\r\n  color: palevioletred;\r\n  border: 1px solid #F05C5CFF;\r\n  margin-top: 17px;\r\n  padding: 7px;\r\n}\r\n\r\n.confirmation {\r\n  width: 80%;\r\n  height: 200px;\r\n  margin: auto;\r\n  color: white;\r\n  background: #a5a1a1;\r\n  font-size: 20px;\r\n  border: solid #6e716e;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  /*margin-bottom: 10px auto;*/\r\n}\r\n\r\n</style>","import { render } from \"./RecipientPanelResult.vue?vue&type=template&id=400646e5&scoped=true\"\nimport script from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanelResult.vue?vue&type=style&index=0&id=400646e5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-400646e5\"]])\n\nexport default __exports__"],"names":["compare","rec","prov","receiverDate","Date","y","m","d","hour","min","providerDate","providerMatchingForClient","re","pFrom","pTo","pFromDate","pToDate","ErrorMessage","message","_createVNode","require","style","class","key","for","$data","isProviderSelected","_createBlock","_component_MDBContainer","default","_withCtx","_component_recipientFinal","$options","handleCanselFinal","orderSuccess","proRefSlides","$props","test","provider","selectedProvider","offer","proSlides","_ctx","slides","room","available","availability","booking","chatusers","initialize_chat","handleInitializeChat","selecteduser","messages","onMessage","onSelect","selectUser","onNoSelect","noSelectUser","onJoin_chat_panel","handleJoinChatPanel","_","_createElementVNode","_hoisted_1","_component_MDBBtnClose","white","onClick","canselResult","_component_prompt_panel","promptPanelContent","handlePromptNo","handlePromptYes","_hoisted_2","_toDisplayString","t","line","created_ms","getTime","offers","length","_createElementBlock","_hoisted_3","_createCommentVNode","_component_successMessage","orderMessage","_component_MDBRow","_component_MDBCol","_component_MDBTable","border","isEditDescription","_hoisted_5","_component_MDBTextarea","label","rows","modelValue","description","_cache","$event","col","_hoisted_4","_hoisted_6","_hoisted_8","_component_MDBBtn","outline","block","size","saveEditedDescription","_createTextVNode","_hoisted_7","pressedEditDescription","isEditDate","_hoisted_10","_normalizeClass","expired_date","bookingDateToDisplay","created","getHours","getMinutes","_component_VueDatePicker","dark","bookingDate","placeholder","onInternalModelChange","handleInternalDate","state","isNoDate","_hoisted_9","editDate","expired_warning","_Fragment","_renderList","images","item","i","src","blob","im","image","alt","name","_hoisted_11","isEditPanel","pressEditPanel","imageIndex","_hoisted_12","_component_error_message","wrong_SizeType_Message","value","closeEditPanel","id","type","onChange","handleFileChange","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","isEditImage","color","uploadEditedImage","removeImg","showImage","_hoisted_17","isPressedAddlmage","pressedAddImage","isAddImagePanel","_hoisted_18","closeAddPanel","_hoisted_19","_hoisted_20","_hoisted_21","isAddImage","addAdditionalImage","_hoisted_22","lg","booking_offers","_hoisted_23","_hoisted_24","_hoisted_25","filterResult","args","addFilter","getProviderInfo","yritys","_hoisted_26","distance","isNewOffer","_component_MDBBadge","pill","notification","_hoisted_27","price","_hoisted_28","_hoisted_29","removeOfferedBookings","props","Boolean","Array","loggedInUser","Object","bookingTime","providers","confirmedBookings","String","data","IMAGE_SIZE","chatUser","count","datetime","dt","dist","isOrdered","this","date","isAddFirstImage","isUploadImage","isUploaded","isImageCreated","isAddNewImage","file","files","isImageSelected","isAdditionalImageSelected","tempImages","imagesx","imagesxxx","roomUserCount","components","successMessage","errorMessage","VueDatePicker","promptPanel","recipientFinal","MDBBtn","MDBBtnClose","MDBContainer","MDBTable","MDBRow","MDBCol","MDBTextarea","MDBIcon","MDBBadge","methods","console","log","$emit","getMonth","getDate","getFullYear","dateInMs","recipientService","newDate","year","month","day","hours","minutes","date_ms","updatedDate","e","target","tempImage","URL","createObjectURL","push","err","addImage","index","img","FormData","append","_id","editImgType","imageService","updateImage","ordered","forEach","b","user","username","concat","reader","FileReader","onload","bytes","Uint8Array","result","image_id","socket","emit","readAsArrayBuffer","imgId","setTimeout","create","imgCreated","_image","image_bytes","removeImage","remove","bIDs","bo","getDistance","content","pressAddFirstImage","pressAdditionalImage","uploadAdditionalImage","editDescription","cancelEditDescription","providerGetBooking","isIncludeOffers","pro","providerService","getProvByProvId","updateRecipient","status","bookingOffers","offerMakers","ampIDs","restProsNoOfferDone","allMatchedPros","offerService","removeBookingOffer","madeOffer","sender","removeProviderBooking","removeProviderData","ai","some","om","map","mi","ma","orderSuccess_standing","marker","reference","slide","roomToDb","addRoom","filterListedProviders","document","getElementById","addEventListener","event","confirm","mounted","loggedUserJSON","window","localStorage","getItem","JSON","parse","__exports__","render"],"sourceRoot":""}