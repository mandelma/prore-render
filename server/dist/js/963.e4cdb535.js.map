{"version":3,"file":"js/963.e4cdb535.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/controllers/datetime.js","webpack://prore-mongo/./src/components/controllers/distance.js","webpack://prore-mongo/./src/service/image.js","webpack://prore-mongo/./src/pages/RecipientPanelFinal.vue","webpack://prore-mongo/./src/components/PositiveFeedback.vue","webpack://prore-mongo/./src/components/PositiveFeedback.vue?22e3","webpack://prore-mongo/./src/components/NegativeFeedback.vue","webpack://prore-mongo/./src/components/NegativeFeedback.vue?a06f","webpack://prore-mongo/./src/pages/RecipientPanelFinal.vue?5797","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue?7f3a"],"sourcesContent":["\nconst compare = (rec, prov) => {\n    const receiverDate = new Date(rec.y, rec.m, rec.d, rec.hour, rec.min);\n    const providerDate = new Date(prov.y, prov.m, prov.d, prov.hour, prov.min)\n    return providerDate >= receiverDate;\n}\n\nconst providerMatchingForClient = (re, pFrom, pTo) => {\n    //const rDate = new Date(re.y, re.m, re.d, re.hour, re.min);\n    const pFromDate = new Date(pFrom.y, pFrom.m, pFrom.d, pFrom.hour, pFrom.min);\n    const pToDate = new Date(pTo.y, pTo.m, pTo.d, pTo.hour, pTo.min);\n    return re >= pFromDate && re < pToDate;\n}\nexport default { compare, providerMatchingForClient }","/*global google*/\nlet res = \"\";\nconst distance = () => {\n    //let text = \"\";\n    //let value = 0;\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\n    var service = new google.maps.DistanceMatrixService();\n    service.getDistanceMatrix(\n        {\n            origins: [origin],\n            destinations: [destination],\n            travelMode: 'DRIVING',\n            unitSystem: google.maps.UnitSystem.METRIC,\n            durationInTraffic: true,\n            avoidHighways: false,\n            avoidTolls: false\n        }, response_data);\n    //return response_data;\n}\n\nconst response_data = (responseDis, status) => {\n    //let result = \"\";\n    if (status !== google.maps.DistanceMatrixStatus.OK || status !== \"OK\"){\n        console.log('Error:', status);\n        // OR\n        alert(status);\n    }else{\n        //alert(responseDis.rows[0].elements[0].distance.text);\n        console.log(\"Distance \" + responseDis.rows[0].elements[0].distance.text)\n\n        res = responseDis.rows[0].elements[0].distance.text;\n        return \"aaaaaaaaaaaaa\"\n        //result = responseDis.rows[0].elements[0].distance.text;\n    }\n    //return  \"Hallo\"        //result.toString();\n}\n\nconst test = () => {\n    console.log(\"Is it working??\" + res)\n\n    return  <div>Hiiii</div>;\n}\n\nconst theDist = () => {\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\n    return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n}\n\n// function calcDistance() {\n//     // var origin = new google.maps.LatLng(60.233093,24.7531362);\n//     // var destination = new google.maps.LatLng(60.2767265,24.8575089);\n//     // return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n//\n//     var directionsService = new google.maps.DirectionsService();\n//\n//     var request = {\n//         origin      : 'Melbourne VIC', // a city, full address, landmark etc\n//         destination : 'Sydney NSW',\n//         travelMode  : google.maps.DirectionsTravelMode.DRIVING\n//     };\n//\n//     directionsService.route(request, function(response, status) {\n//         if ( status === google.maps.DirectionsStatus.OK ) {\n//             alert( response.routes[0].legs[0].distance.value ) ; // the distance in metres\n//         }\n//         else {\n//             // oops, there's no route between these two locations\n//             // every time this happens, a kitten dies\n//             // so please, ensure your address is formatted properly\n//         }\n//     });\n// }\n\nexport default { distance, test, theDist }","const axios = require('axios')\nconst baseUrl = '/api/upload'\n\nconst getAll = async () => {\n    const result = await axios.get(baseUrl)\n    return result.data\n}\n\nconst create = async (newImageData) => {\n    const result = await axios.post(baseUrl, newImageData, {})\n    return result.data\n}\n\n// Create image for avatar\nconst createProfileImage =  async (id, imageData) => {\n    const image = await axios.post(`${baseUrl}/${id}/avatar`, imageData);\n    return image.data;\n}\n\n// Update user avatar\nconst newAvatar = async (id, avatar) => {\n    const avt = await axios.post(`${baseUrl}/${id}/update_avatar`, avatar);\n    return avt.data;\n}\n\nconst updateImage = async (id, newImageData) => {\n    const result = await axios.put(`${baseUrl}/${id}`, newImageData)\n    return result.data\n}\n\nconst remove = async (id, recipientId) => {\n    await axios.delete(`${baseUrl}/${id}/${recipientId}`)\n}\n\nexport default { getAll, create, createProfileImage, newAvatar, updateImage, remove }","<template>\n  <div>\n    <!--\n    <MDBContainer style=\"margin-top: 30px;\">\n    -->\n<!--    users {{chatusers}}-->\n      <h2>- {{ provider.yritys }} -</h2>\n\n      <MDBTable style=\"font-size: 18px; text-align: center;\">\n        <tbody>\n        <tr>\n\n          <td>\n            <MDBRow >\n              <MDBCol>\n\n                <MDBIcon style=\"padding: 10px; cursor: pointer;\" i class=\"far fa-thumbs-up\" size=\"2x\"\n                @click=\"getPositiveFeedback\"></MDBIcon>\n\n\n                <MDBBadge color=\"success\" class=\"translate-middle p-1\"\n                          pill\n                          notification>{{provider.rating.positive}}</MDBBadge>\n                <div v-if=\"isPositive\">\n                  <PositiveFeedback\n\n                      :feedback = provider.feedback\n                      @close:comments = closeComments\n                  />\n                </div>\n\n\n              </MDBCol>\n              <MDBCol>\n\n                <MDBIcon\n                    style=\"padding: 10px; cursor: pointer;\" i\n                    class=\"far fa-thumbs-down\" size=\"2x\" @click=\"getNegativeFeedback\"></MDBIcon>\n\n\n                <MDBBadge color=\"danger\" class=\"translate-middle p-1\"\n                          pill\n                          size=\"lg\"\n                          notification>{{provider.rating.negative}}</MDBBadge>\n\n                <NegativeFeedback\n                    v-if=\"isNegative\"\n                    :feedback = provider.feedback\n                    @close:comments = closeComments\n                />\n\n              </MDBCol>\n            </MDBRow>\n\n          </td>\n        </tr>\n        </tbody>\n      </MDBTable>\n\n<!--    selecteduser in recipient panel final {{selecteduser}}-->\n<!--    Chat users on line: {{roomUserCount}}-->\n<!--    <MDBBtn-->\n<!--        v-if=\"!isPressedOpenChat\"-->\n<!--        type=\"submit\"-->\n<!--        size=\"lg\"-->\n<!--        color=\"success\"-->\n<!--        @click=\"openChat\"-->\n<!--    >-->\n<!--      Ava chat-->\n<!--    </MDBBtn>-->\n\n<!--    !isPressedOpenChat-->\n\n\n\n<!--    <MDBBtn-->\n<!--        v-if=\"!isPressedOpenChat\"-->\n<!--        style=\"margin-bottom: 20px;\"-->\n<!--        type=\"submit\"-->\n<!--        size=\"lg\"-->\n<!--        color=\"success\"-->\n<!--        @click=\"openChat\"-->\n<!--    >-->\n<!--      Vaata rohkem infot-->\n<!--    </MDBBtn>-->\n\n<!--    <MDBBtn-->\n<!--        v-if=\"!isPressedContactToUser\"-->\n<!--        style=\"margin-bottom: 20px;\"-->\n<!--        type=\"submit\"-->\n<!--        size=\"lg\"-->\n<!--        color=\"success\"-->\n<!--        @click=\"contactToUser\"-->\n<!--    >-->\n<!--      Saada kasutajale sõnum-->\n<!--    </MDBBtn>-->\n\n\n\n\n\n\n<!--    <MDBBtn-->\n<!--        v-if=\"!isPressedContactToUser\"-->\n<!--        type=\"submit\"-->\n<!--        size=\"lg\"-->\n<!--        color=\"success\"-->\n<!--        @click=\"contactToUser\"-->\n<!--    >-->\n<!--      contact to user-->\n<!--    </MDBBtn>-->\n\n<!--    !isPressedContactToUser-->\n\n<!--    <user-dialog-->\n<!--        v-if=\"isChat\"-->\n<!--        :key=\"count\"-->\n<!--        :chatusers = chatusers-->\n<!--    />-->\n\n    <live-chat\n        :chatusers = chatusers\n        :messages =messages\n        :selecteduser = selecteduser\n        @select:user = selectUser\n        @on:message = onMessage\n    />\n\n    \n\n<!--    <div v-for=\"user in chatusers\" :key=\"user.id\">-->\n<!--      <User-->\n<!--          :user = user-->\n<!--          :selected=\"selectedUser === user\"-->\n<!--          @select=\"selectUser(user)\"-->\n<!--      />-->\n<!--    </div>-->\n\n<!--    <MessagePanel-->\n<!--        v-if=\"selectedUser\"-->\n<!--        :user = selectedUser-->\n<!--        :messages = messages-->\n<!--        @new:message=\"onMessage\"-->\n<!--    />-->\n\n\n<!--    <form @submit.prevent=\"sendToApp\">-->\n<!--      <MDBBtn color=\"danger\" type=\"submit\">Info to App page</MDBBtn>-->\n<!--    </form>-->\n\n<!--    <form @submit.prevent=\"avajauuenda\">-->\n<!--      <MDBBtn-->\n\n<!--          type=\"submit\"-->\n<!--          size=\"lg\"-->\n<!--          color=\"success\"-->\n\n<!--      >-->\n<!--        uuenda ja ava-->\n<!--      </MDBBtn>-->\n<!--    </form>-->\n\n\n\n\n\n\n\n<!--    <liveChat-->\n\n<!--        style=\"margin-bottom: 20px;\"-->\n<!--        :un = booking[0].user.username-->\n<!--        :ri = room-->\n<!--        :key=\"count\"-->\n<!--        :room = room-->\n<!--        @test = test-->\n<!--    />-->\n\n\n\n\n\n\n<!--    <span v-if=\"!isChat\" @click=\"renderComponent\">Click to reload render-component</span>-->\n\n<!--    <MDBBtn v-if=\"!isChat\" size=\"lg\" color=\"success\" block @click=\"renderComponent\">-->\n<!--      Saada töö tegijale sõnum-->\n<!--    </MDBBtn>-->\n\n<!--    <MDBBtn color=\"info\" size=\"lg\" @click=\"makeDiil\">-->\n<!--      -&#45;&#45; Suhtle töö pakkujaga -&#45;&#45;-->\n<!--    </MDBBtn>-->\n    <MDBBtn outline=\"info\" block size=\"lg\" @click=\"handleOrder(provider.id)\">\n      Tilaa yritys\n    </MDBBtn>\n\n\n\n\n    <MDBBtn outline=\"secondary\" block size=\"lg\" @click=\"canselRecipientFinal\">\n      Poistu\n    </MDBBtn>\n    <!--\n    </MDBContainer>\n    -->\n<!--    BookingBB {{booking}}-->\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  MDBBtn,\n  //MDBContainer,\n  MDBTable,\n  MDBRow,\n  MDBCol,\n  MDBIcon, MDBBadge\n}from \"mdb-vue-ui-kit\";\nimport PositiveFeedback from \"@/components/PositiveFeedback\";\nimport NegativeFeedback from \"@/components/NegativeFeedback\"\nimport liveChat from '../pages/LiveChat'\n//import UserDialog from './LiveChat'\nimport socket from \"@/socket\";\nimport User from '../components/chatio/User'\nimport MessagePanel from '../components/chatio/MessagePanel.vue'\n//import DialogPanel from \"@/components/DialogPanel\";\n//import UserDialog from \"@/pages/UserDialog\";\n//import socket from \"@/socket\";\n//import socket from \"@/socket\";\n/*{{provider.timeoffer.map(to =>\n\ndatetime.providerMatchingForClient(\n    bookingTime,\n    {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\n    {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\n)\n)\n}}*/\nexport default {\n  name: \"recipient-final\",\n  props: {\n    chatusers: Array,\n    selecteduser: null,\n    messages: Array,\n    provider: Object,\n    room: String,\n    roomUserCount: Number,\n    available: String,\n    booking: Array\n  },\n  components: {\n    User,\n    MessagePanel,\n    //UserDialog,\n    //DialogPanel,\n    PositiveFeedback,\n    NegativeFeedback,\n    liveChat,\n    MDBBtn,\n    //MDBContainer,\n    MDBTable,\n    MDBRow,\n    MDBCol,\n    MDBIcon,\n    MDBBadge\n  },\n  data() {\n    return {\n      selectedUser: null,\n      isPositive: false,\n      isNegative: false,\n\n      isChat: false,\n      isPressedOpenChat: false,\n      isPressedContactToUser: false,\n      isConnection: false,\n      isTwoUsers: false,\n\n      feedback: this.provider.feedback,\n\n      //room: \"\",\n\n      isPressedFinal: false,\n\n      //isRoom: false,\n      count: 0,\n      userCount: 0\n    }\n  },\n  mounted () {\n\n  },\n  methods: {\n    chatCredentials () {\n\n    },\n\n    sendToApp () {\n      console.log(\"Pressed\")\n      this.$emit(\"finalinfo\", \"Tere siit finaalist\")\n\n    },\n\n    selectUser(user) {\n      this.$emit(\"select\", user)\n      //if (!user.self)\n      //this.selectedUser = user;\n    },\n\n    onMessage(content, date) {\n\n      this.$emit(\"message\", content, date)\n\n      // if (this.selectedUser) {\n      //   console.log(\"Selected user: \" + this.selectedUser.username);\n      //   socket.emit(\"private message\", {\n      //     content,\n      //     date,\n      //     to: this.selectedUser.userID,\n      //   });\n      //   this.selectedUser.messages.push({\n      //     content,\n      //     date,\n      //     fromSelf: true,\n      //   });\n      // }\n    },\n\n\n\n\n    test (state) {\n      console.log(\"From chat: \" + state)\n    },\n\n    openChat () {\n      this.isChat = true;\n      this.count++;\n      // socket.on('get updated room users', (data) => {\n      //   console.log(\"Data users length \" + data.users.length)\n      //\n      //   if (data.users.length > 1) {\n      //\n      //     this.isTwoUsers = true;\n      //\n      //   }\n      // })\n\n      //this.isChat = true;\n\n      console.log(\"this room is \" + this.room)\n    },\n\n    // Uus teema homseks valmis aretada!!!\n\n    contactToUser() {\n\n      this.isPressedContactToUser = true;\n      socket.emit('updateRoom', this.room);\n      socket.on('get updated room users', (data) => {\n        console.log(\"New users update \" + data.users.length)\n        if (data.users.length > 1) {\n          this.isConnection = true;\n          //this.isTwoUsers = true;\n        } else {\n          this.isConnection = false;\n        }\n\n      })\n      this.isPressedFinal = true;\n      this.isChat = true;\n\n      // socket.disconnect()\n      // socket.connect()\n    },\n\n\n\n\n\n\n\n    // openChat () {\n    //\n    //\n    //\n    //   socket.on('get room users', (data) => {\n    //     console.log(\"Data users length \" + data.users.length)\n    //\n    //     if (data.users.length > 1) {\n    //\n    //       this.isTwoUsers = true;\n    //\n    //     }\n    //   })\n    //\n    //   //this.isChat = true;\n    //\n    //   this.isPressedOpenChat = true;\n    //\n    //   for (let i = 0; i < 2; i++) {\n    //     this.count ++;\n    //   }\n    //   //this.count ++\n    //\n    //\n    // },\n    //\n    // // Uus teema homseks valmis aretada!!!\n    //\n    // contactToUser() {\n    //\n    //   this.isPressedContactToUser = true;\n    //   socket.emit('updateRoom', this.room);\n    //   socket.on('get updated room users', (data) => {\n    //     console.log(\"New users update \" + data.users.length)\n    //     if (data.users.length > 1) {\n    //       this.isConnection = true;\n    //       //this.isTwoUsers = true;\n    //     } else {\n    //       this.isConnection = false;\n    //     }\n    //\n    //   })\n    //   this.isPressedFinal = true;\n    //   this.isChat = true;\n    //\n    //   socket.disconnect()\n    //   socket.connect()\n    // },\n\n\n    handleOrder (id) {\n      this.$emit('provider:ordered', id)\n    },\n    getPositiveFeedback () {\n      this.isPositive = true;\n      this.isNegative = false;\n\n    },\n    getNegativeFeedback () {\n      this.isNegative = true;\n      this.isPositive = false;\n      //console.log(\"Feedback\")\n    },\n    closeComments (result) {\n      this.isPositive = this.isNegative = result;\n      console.log(\"result \" + result)\n    },\n    canselRecipientFinal () {\n      //this.$router.push(\"/recipient-result\");\n      //socket.emit('unsubscribe')\n      //window.localStorage.removeItem('sessionID')\n      //location.reload();\n\n      this.isChat = false;\n\n      this.$emit('cansel:final', false)\n\n    }\n  },\n\n}\n</script>\n\n<style scoped>\n\n</style>","<template>\n  <div>\n    <MDBListGroup\n        light small style=\"text-align: left;\"\n        v-for=\"data in feedback\" :key=\"data.id\"\n    >\n      <MDBListGroupItem >{{ data.pos }}</MDBListGroupItem>\n\n\n    </MDBListGroup>\n\n    <MDBBtn block outline=\"secondary\" size=\"lg\" @click=\"closeFeedback\">Poistu kommenteistä</MDBBtn>\n  </div>\n</template>\n\n<script>\nimport {\n  MDBListGroup,\n  MDBListGroupItem,\n  MDBBtn\n}from \"mdb-vue-ui-kit\";\n\nexport default {\n  name: \"positive-feedback\",\n  props: {\n    feedback: Array\n  },\n  components: {\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBBtn\n  },\n  data() {\n    return{\n\n    }\n  },\n  methods: {\n    closeFeedback () {\n      this.$emit('close:comments', false);\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./PositiveFeedback.vue?vue&type=template&id=8735e830\"\nimport script from \"./PositiveFeedback.vue?vue&type=script&lang=js\"\nexport * from \"./PositiveFeedback.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <MDBListGroup light small style=\"text-align: left;\" v-for=\"data in feedback\" :key=\"data.id\">\n      <MDBListGroupItem>{{ data.neg }}</MDBListGroupItem>\n\n\n    </MDBListGroup>\n    <MDBBtn block outline=\"secondary\" size=\"lg\" @click=\"closeFeedback\">Poistu kommenteistä</MDBBtn>\n  </div>\n</template>\n\n<script>\nimport {\n  MDBListGroup,\n  MDBListGroupItem,\n  MDBBtn\n}from \"mdb-vue-ui-kit\";\n\nexport default {\n  name: \"negative-feedback\",\n  props: {\n    feedback: Array\n  },\n  components: {\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBBtn\n  },\n  data() {\n    return{\n\n    }\n  },\n  methods: {\n    closeFeedback () {\n      this.$emit('close:comments', false)\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./NegativeFeedback.vue?vue&type=template&id=c924f122\"\nimport script from \"./NegativeFeedback.vue?vue&type=script&lang=js\"\nexport * from \"./NegativeFeedback.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./RecipientPanelFinal.vue?vue&type=template&id=e87500b0\"\nimport script from \"./RecipientPanelFinal.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelFinal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\n\n  <MDBContainer v-if=\"isProviderSelected\">\n    <recipientFinal\n      @cansel:final = handleCanselFinal\n      @provider:ordered = orderSuccess\n      :provider = selectedProvider\n      :room = room\n      :available = availability\n      :booking = booking\n\n      :chatusers = chatusers\n      :selecteduser = selecteduser\n      :messages = messages\n      @message = onMessage\n      @select = selectUser\n      @finalinfo = finalinfo\n\n    />\n\n  </MDBContainer>\n  <MDBContainer v-else>\n    <h3>Päivämäärä: {{booking[0].date}}</h3>\n\n    <h2>Tarvin tässä osaaja - {{line}}</h2>\n\n    <successMessage\n      :message = orderMessage\n    />\n\n    <MDBRow>\n      <MDBCol>\n        <MDBTable border=\"primary\" style=\"font-size: 18px; text-align: left;\">\n          <tbody>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              {{booking[0].description}}\n\n            </td>\n            <td v-else>\n              <MDBTextarea label=\"Uusi kuvaus\" rows=\"4\" v-model=\"description\" />\n            </td>\n          </tr>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"isEditDescription = true\">Muokkaa tehtävän kuvausta</MDBBtn>\n            </td>\n            <td v-else>\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"saveEditedDescription\">Tallenna tehtävän kuvaus</MDBBtn>\n            </td>\n          </tr>\n\n          </tbody>\n        </MDBTable>\n        <MDBRow v-if=\"booking[0].image === null || booking[0].image.length === 0\">\n          <MDBCol>\n\n            <MDBBtn v-if=\"!isAddImage\" block color=\"primary\" @click=\"pressAddFirstImage\">Add image</MDBBtn>\n            <label v-if=\"isAddImage\" for=\"file-upload\" class=\"custom-file-upload\">\n                    <span v-if=\"value\">\n                    Muokkaa kuva: {{value.name}}\n\n                     </span>\n              <span v-else>Valitse kuva tehtävästä</span>\n            </label>\n            <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>\n              <img v-if=\"showImage && !isUploaded\" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>\n            <MDBBtn v-if=\"isImageSelected\" block size=\"lg\" @click=\"uploadFirstImage(i)\">Upload image</MDBBtn>\n          </MDBCol>\n        </MDBRow>\n<!--        <div v-if=\"isUploadImage && images.length === 0\" class=\"spinner-border\" role=\"status\">\n          <span class=\"visually-hidden\">Loading...</span>\n        </div>-->\n        <div>\n\n          <MDBRow class=\"imageSection\" v-for=\"(image, i) in images\" :key=\"i\">\n\n            <MDBCol v-if=\"image.name\">\n              <img\n\n                  :src=\"showImage && isUploaded && (imageIndex === i) ? showImage : require(`@/assets/client/${image.name}`)\"\n                  class = \"loading\"\n                  style=\"width: 100%; margin-bottom: 20px;\"\n                  alt=\"kuva\"\n              />\n\n              <div >\n                <MDBBtn\n                    v-if=\"!isEditImage || imageIndex !== i\"\n                    outline=\"info\"\n                    block\n                    size=\"lg\"\n                    @click=\"pressEditImage(i)\"\n                >\n                  Muokkaa kuva tehtävästä\n                </MDBBtn>\n                <div v-if=\"imageIndex === i\" style=\"border: 1px solid grey; padding: 10px;\">\n                  <MDBBtnClose style=\"float: right;\" @click=\"closeEditImage\">\n\n                  </MDBBtnClose>\n                  <label for=\"file-upload\" class=\"custom-file-upload\">\n                    <span v-if=\"value\">\n                    Muokkaa kuva: {{value.name}}\n\n                     </span>\n                    <span v-else>Valitse uusi kuva tehtävästä</span>\n                  </label>\n\n\n                  <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>\n                  <MDBBtn v-if=\"isImageSelected\" block size=\"lg\" @click=\"uploadEditedImage(image, i)\">Change image</MDBBtn>\n                  <MDBBtn block color=\"danger\" size=\"lg\" @click=\"removeImg(image._id)\">Remove image</MDBBtn>'\n                  <img v-if=\"showImage && !isImageCreated \" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>\n\n<!--                  <MDBBtn v-if=\"isImageSelected\" block size=\"lg\" @click=\"uploadFirstImage(i)\">Upload image</MDBBtn>-->\n                </div>\n\n              </div>\n\n\n            </MDBCol>\n\n          </MDBRow>\n          <div v-if=\"booking[0].image !== null\">\n            <MDBBtn\n                v-if=\"booking[0].image.length > 0\"\n                style=\"margin-bottom: 20px;\"\n                block\n                size=\"lg\"\n                outline=\"success\"\n                @click=\"pressAdditionalImage\">\n              Lataa uusi kuva\n            </MDBBtn>\n\n          </div>\n\n\n          <label v-if=\"isAddImage\" for=\"file-upload\" class=\"custom-file-upload\">\n                    <span v-if=\"value\">\n                    Muokkaa kuva: {{value.name}}\n\n                     </span>\n            <span v-else>Valitse kuva tehtävästä</span>\n          </label>\n          <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>\n\n          <MDBBtn v-if=\"isImageSelected\" block size=\"lg\" @click=\"uploadAdditionalImage\">Lataa uusi kuva tehtävästä</MDBBtn>\n<!--          <MDBBtn block color=\"danger\" size=\"lg\" @click=\"removeImg(image._id)\">Remove image</MDBBtn>'-->\n          <img v-if=\"showImage && !isImageCreated \" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>\n\n        </div>\n\n<!--        images {{booking}}-->\n        <MDBRow>\n          <MDBCol>\n<!--            <div >\n              <MDBBtn v-if=\"!isEditImage\" outline=\"info\" block size=\"lg\" @click=\"isEditImage = true\">Muokkaa tehtävän kuvausta</MDBBtn>\n              <input v-else id=\"file-upload\" type=\"file\" @change=\"handleFileChange\"/>\n              <MDBBtn v-if=\"isImageSelected\" block size=\"lg\" @click=\"uploadEditedImage(image._id)\">Change image</MDBBtn>\n              <img v-if=\"showImage\" :src=\"showImage\" style=\"width: 200px; margin-bottom: 20px;\" alt=\"...\"/>\n            </div>-->\n          </MDBCol>\n        </MDBRow>\n\n\n\n\n\n      </MDBCol>\n      <MDBCol v-if=\"isOrdered\">\n        <h2>Ordered</h2>\n      </MDBCol>\n      <MDBCol v-else>\n        <div v-if=\"providers.length > 0\">\n          <div class=\"ui large form\">\n            <div class=\"field\">\n              <select id=\"listOfProviders\" v-model=\"filterResult\" @click=\"addFilter\">\n                <option disabled value=\"\">Suodatin...</option>\n                <option value=\"distance\">Etäisyyden mukaan</option>\n                <option value=\"rating\">positiivisen palauteen mukaan</option>\n<!--                <option>Rating</option>-->\n<!--                <option>Else more</option>-->\n              </select>\n            </div>\n\n          </div>\n          <br>\n\n          <MDBTable  style=\"font-size: 18px; text-align: center;\">\n            <tbody>\n            <tr v-for=\"provider in providers\" :key=\"provider.id\">\n              <td v-if=\"provider.timeoffer.map(to =>\n\n                datetime.providerMatchingForClient(\n                    bookingTime,\n                    {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\n                    {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\n                )\n              ).includes(true)\">\n                <MDBBtn style=\"width: 200px; padding: 20px; background-color: grey; border: solid #4c4949;color: #f0eeee; font-size: 150%;\"\n                        outline=\"info\"\n                        size=\"lg\"\n                        @click=\"getProviderInfo(provider,'green')\"\n                >\n                  {{provider.yritys}}\n                </MDBBtn>\n                <MDBBadge\n                    color=\"success\"\n                    class=\"translate-middle p-1\"\n                    pill\n                    notification\n                ><h4>Saatavilla sen aikaan</h4>\n                </MDBBadge>\n              </td>\n              <td v-else>\n\n                <MDBBtn\n                    style=\"width: 200px; padding: 20px; background-color: #827f7f; border: solid #5f5d5d;color: #f0eeee; font-size: 150%;\"\n                    size=\"lg\"\n                    @click=\"getProviderInfo(provider, 'orange')\"\n                >\n                  {{provider.yritys}} <br>\n                  <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span>\n                </MDBBtn>\n\n\n\n                <MDBBadge\n                    color=\"info\"\n                    class=\"translate-middle p-1\"\n                    pill\n                    notification\n                ><h4>Sovittaessa</h4></MDBBadge>\n\n              </td>\n\n            </tr>\n            <tr>\n            </tr>\n            </tbody>\n          </MDBTable>\n\n<!--          Booking {{booking}}-->\n\n        </div>\n        <div v-else>\n          <h2>Yrityksiä hetkellä ei löytyy</h2>\n        </div>\n\n\n\n      </MDBCol>\n      <MDBBtn block outline=\"danger\" size=\"lg\" @click=\"canselResult\">Takaisin</MDBBtn>\n    </MDBRow>\n\n  </MDBContainer>\n\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  MDBBtn, MDBContainer, MDBTable, MDBRow,\n  MDBBtnClose,\n  MDBCol, MDBTextarea,\n  //MDBIcon,\n  MDBBadge,\n}from \"mdb-vue-ui-kit\";\nimport dt from '../components/controllers/datetime'\nimport recipientFinal from '../pages/RecipientPanelFinal'\nimport successMessage from '../components/notifications/successMessage'\nimport dist from '../components/controllers/distance'\nimport providerService from '../service/providers'\nimport imageService from '../service/image'\n//import socket from \"@/socket\";\nimport {ref} from 'vue'\nimport recipientService from \"@/service/recipients\";\nimport socket from \"@/socket\";\nimport uploadService from \"@/service/image\";\n//import socket from \"@/socket\";\n\n\nexport default {\n  name: \"recipient-panel-result\",\n  props: {\n    chatusers: Array,\n    selecteduser: null,\n    messages: Array,\n    loggedInUser: Object,\n    booking: null,\n    images: Array,\n    bookingTime: null,\n    providers: Array,\n    confirmedBookings: Array,\n    line: String\n  },\n  data () {\n    return {\n      chatUser: {},\n      count: 0,\n      datetime: dt,\n      distance: dist,\n      selectedProvider: null,\n      isProviderSelected: false,\n      availability: \"\",\n      orderMessage: null,\n      isOrdered: false,\n      isEditDescription: false,\n      description: this.booking[0].description,\n      isAddImage: false,\n      isEditImage: false,\n      isUploadImage: false,\n      isUploaded: false,\n      isImageCreated: false,\n      isAddNewImage: false,\n\n      value: null,\n      imageIndex: null,\n      file: null,\n      isImageSelected: false,\n      showImage: null,\n      tempImages: [],\n      imagesx: [],\n      imagesxxx: [],\n      room: \"\",\n      roomUserCount: 0,\n      filterResult: \"\"\n    }\n  },\n\n  components: {\n    successMessage,\n    dist,\n    recipientFinal,\n    MDBBtn,\n    MDBBtnClose,\n    MDBContainer,\n    MDBTable,\n    MDBRow,\n    MDBCol,\n    MDBTextarea,\n    //MDBIcon,\n    MDBBadge\n  },\n  methods: {\n    getDistance () {\n      //console.log(\"Distance +++++??? \" + dist.distance())\n      console.log(\"sss \" + dist.test())\n    },\n    selectUser (user) {\n      this.$emit('select', user);\n    },\n    onMessage (content, date) {\n      this.$emit(\"message\", content, date);\n    },\n    finalinfo (data) {\n      console.log(\"Final info in result pressed \");\n      this.$emit(\"finalinfo\", data)\n\n    },\n    getChatCredentials () {\n\n    },\n    async pressAddFirstImage () {\n      this.isAddImage = true;\n      this.imageIndex = 0;\n    },\n    pressEditImage (index) {\n      this.isImageSelected = false;\n      this.imageIndex = index;\n      this.isEditImage = true;\n      this.isImageCreated = false;\n      this.isUploaded = false;\n\n      this.showImage = null;\n      this.value = null;\n    },\n    pressAdditionalImage (index) {\n      //this.imageIndex = this.booking[0].image.length - 1;\n      this.imageIndex = this.images.length;\n      //this.imageIndex = \"new\";\n      this.isAddNewImage = true;\n      console.log(\"Images index = \" + this.imageIndex);\n      this.isAddImage = true;\n    },\n    closeEditImage () {\n      this.imageIndex = null;\n    },\n    handleFileChange(e) {\n      //this.$emit('input', e.target.client[0])\n\n      try {\n\n        const files = e.target.files[0]\n        console.log('event target client ', e.target.files[0])\n        if (files) {\n          const tempImage = URL.createObjectURL(files)\n          this.tempImages.push(tempImage);\n          this.showImage = URL.createObjectURL(files)\n          this.file = e.target.files[0];\n        }\n\n      } catch (err) {\n        console.log('Error:', err)\n      }\n\n      this.value = e.target.files[0]\n      if (e.target.files[0]) {\n        this.isImageSelected = true;\n      } else {\n        this.isImageSelected = false;\n      }\n    },\n\n    async removeImg (id) {\n      //this.value = null;\n      this.$emit(\"removeImage\", id);\n\n      //this.imagesxxx= this.imagesxxx.filter(img => img._id !== id);\n      await recipientService.removeImage(this.booking[0].id, id);\n      await imageService.remove(id, this.booking[0].id);\n\n\n\n\n      this.isImageSelected = false;\n      this.showImage = null;\n    },\n    async uploadFirstImage (index) {\n      const data = new FormData();\n      this.isUploadImage = true;\n      //this.imageIndex = 0;\n      //this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n\n      if (img) {\n        //this.imgId = img.imgCreated._id;\n        this.file = null;\n        //this.showImage = null;\n        //this.value = null;\n\n        //console.log(\"xxx \" + img.imgCreated._id)\n        //console.log(\"Image itself \" + img.imgCreated.image)\n        //await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name\n        }\n\n        //this.imagesxxx.push(image);\n        this.$emit(\"addImage\", image);\n        // const booking = await recipientService.getBookingById(this.booking[0].id);\n        //\n        // setTimeout( async () => {\n        //   booking[0].image.forEach(im=> {\n        //     this.images.push(im)\n        //   })\n        //   //this.images = this.images.concat(booking[0].image)\n        // }, 500)\n\n\n        /*const booking = await recipientService.getBookingById(this.booking[0].id);\n\n        this.imagesxxx = booking[0].image\n*/\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n        this.imageIndex = null;\n      }\n\n\n\n    },\n    async uploadAdditionalImage () {\n\n      //this.imageIndex = this.booking[0].image.length - 1;\n      console.log(\"Image index index \" + this.imageIndex)\n      const data = new FormData();\n      this.isUploadImage = true;\n      //this.imageIndex = 0;\n      this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n\n      if (img) {\n        //this.imgId = img.imgCreated._id;\n        this.file = null;\n        //this.showImage = null;\n        //this.value = null;\n\n        //console.log(\"xxx \" + img.imgCreated._id)\n        //console.log(\"Image itself \" + img.imgCreated.image)\n        //await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name\n        }\n\n        //this.imagesxxx.push(image);\n\n        this.$emit(\"addImage\", image);\n\n        //this.images.push(image);\n\n        // const booking = await recipientService.getBookingById(this.booking[0].id);\n        //\n        // setTimeout( async () => {\n        //   booking[0].image.forEach(im=> {\n        //     this.images.push(im)\n        //   })\n        //   //this.images = this.images.concat(booking[0].image)\n        // }, 500)\n\n\n        /*const booking = await recipientService.getBookingById(this.booking[0].id);\n\n        this.imagesxxx = booking[0].image\n*/\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n       /* this.isAddImage = false;\n        this.isImageCreated = false;\n        this.isAddNewImage = false;*/\n\n        //this.imageIndex = null;\n      }\n\n\n\n    },\n    async uploadEditedImage (image, index) {\n\n      console.log(\"Edited image index is: \" + index);\n      //this.imageIndex = index;\n      this.isUploaded = true;\n      this.isImageCreated = true;\n      const data = new FormData();\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.updateImage(image._id, data);\n\n\n\n      if (img) {\n\n\n        //console.log(\"New image name is \" + img.name)\n        //this.imgId = img.imgCreated._id;\n        this.file = null;\n\n        this.$emit(\"editImage\", image, img)\n\n        setTimeout( async () => {\n\n          /*var index = this.images.indexOf(image);\n\n          if (index !== -1) {\n            this.images[index] = img;\n          }*/\n\n          //this.images.forEach((item, i) => { if (item.name === this.booking[0].image[i].name) this.images[i] = img; });\n\n        }, 2000)\n\n\n        this.isImageSelected = false;\n        this.isEditImage = false;\n        this.isUploaded = true;\n\n        this.imageIndex = null;\n      }\n\n    },\n    saveEditedDescription () {\n      this.isEditDescription = false;\n      const description = {\n        description: this.description\n      }\n      this.$emit(\"editDescription\", this.description);\n      recipientService.editDescription(this.booking[0].id, description)\n      this.description = \"\";\n    },\n    async orderSuccess (provId) {\n      //console.log(\"Ordered!!!\")\n\n      this.isProviderSelected = false;\n\n      //this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n      console.log(\"Provider id \" + provId)\n      console.log(\"Recpient id: \" + this.booking[0].id);\n\n      const providerID = {\n        providerID: this.selectedProvider.id\n      };\n\n\n      //await recipientService.addProviderID(this.booking[0].id, providerID);\n\n      await recipientService.addProviderData(this.booking[0].id, this.selectedProvider.id);\n\n      //socket.emit(\"send booking notification\", this.booking[0], this.selectedProvider.id);\n\n      //const providerName =\n      //const status = \"notSeen\";\n      const createBookingStatus = await recipientService.updateRecipient(this.booking[0].id, {status: \"notSeen\"});\n      console.log(\"Is status updated: \" + createBookingStatus.status);\n      this.$emit('remove:confirmed:provider', provId);\n      this.$emit('set:order:to:send', this.booking[0].id)\n\n      const recipientId = this.booking[0].id;\n\n      //--------------- About need delete selected and confirmed provider ------------\n\n      //const booking = await providerServise.updateProvider(provId, {booking: [this.booking.id]})\n\n      const booking = await providerService.addProviderBooking(provId, recipientId);\n      if (booking === \"Recipient is added!\") {\n        this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n\n        console.log(\"Booking made - id: \" + booking.id);\n\n        this.isOrdered = true;\n\n        setTimeout(() => {\n          this.orderMessage = null;\n        }, 3000)\n      } else {\n        this.orderMessage = \"Olet lähetänyt tilauksen!\"\n        setTimeout(() => {\n          this.orderMessage = null;\n        }, 3000)\n        //console.log(\"Yritys on jo tilattu!\")\n      }\n\n\n\n    },\n    getProviderInfo (provider, marker) {\n\n      this.selectedProvider = provider;\n      this.availability = marker;\n      this.isProviderSelected = true;\n\n      //console.log(\"Booking username \" + this.booking[0].user.username)\n      //console.log(\"Recipient room: \" + (provider.yritys + this.booking[0].user.username))\n      this.room = provider.yritys + this.booking[0].user.username\n\n      socket.emit(\"room users count\")\n      socket.on('get room users count', (data) => {\n        console.log(\"Can we get users data from backend in recipient final??? \" + data.users.length)\n        this.roomUserCount = data.users.length;\n      })\n\n      const username = this.booking[0].user.username;\n      const room = provider.yritys + this.booking[0].user.username;\n\n\n\n      const chatCredentials = {\n        room: room,\n        userID: this.chatUser.id,\n        username: username,\n      }\n\n      const providerDatax = {\n        userID: provider.user.id,\n        username: provider.user.username,\n        room: room\n      }\n\n      this.$emit(\"provider\", providerDatax);\n\n      const providerData = \"Allu\"\n\n      const id = provider.user.id;\n      const name = provider.user.username;\n\n\n      this.$emit(\"chatCredentials\", chatCredentials)\n\n      socket.emit(\"online\", (room));\n\n      // socket.emit(\"create new room user\", {\n      //   room: room,\n      //   username: username\n      // })\n      socket.emit(\"create room users\", {\n        room: room,\n        username: username,\n        providerUsername: provider.user.username,\n        providerID: provider.user.id\n      })\n\n      //socket.emit(\"update room\", room, id, name)\n      // let rooms = [\"Oopersama\", \"tvsama\"]\n      // socket.emit(\"join all room\", rooms);\n      // iolrhjwefiogäqhj\n    },\n    addFilter () {\n      const filterListedProviders = document.getElementById(\"listOfProviders\")\n\n      filterListedProviders.addEventListener(\"change\", (event) => {\n        console.log(\"Filtered provider: \" + event.target.value);\n        this.$emit(\"filter_provider\", event.target.value);\n        // if (event.target.value === \"distance\") {\n        //   this.$emit(\"filter_provider\", event.target.value);\n        // } else if (event.target.value === \"feedback\") {\n        //\n        //   this.$emit(\"filter_feedback\")\n        // }\n\n\n\n      })\n    },\n    handleCanselFinal (result) {\n      this.isProviderSelected = result;\n    },\n    canselResult () {\n      this.$emit('cansel:result', false)\n    }\n  },\n  async mounted() {\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      this.chatUser = user;\n\n      /*const booking = await recipientService.getBookingById(this.booking[0].id);\n      this.imagesxxx = booking[0].image*/\n      /*booking[0].image.forEach(bi => {\n        this.tempImages.push(bi.name)\n      })*/\n\n\n\n\n\n      //this.joinServer(username, userID);\n    }\n\n\n  }\n}\n</script>\n\n\n<style scoped>\nimg.loading {\n  width: 100%;\n  height: 400px;\n  background: transparent url(https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif) no-repeat scroll center center;\n}\n.success {\n  color: white;\n  background: #7bc47b;\n  font-size: 20px;\n  border: solid #0e920e;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\ninput[type=\"file\"] {\n  display: none;\n}\n.custom-file-upload {\n  width: 100%;\n\n  color: white;\n  background-color: #87958e;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 10px 12px;\n  margin-bottom: 10px;\n  cursor: pointer;\n}\n.imageSection {\n  margin-bottom: 20px;\n}\n</style>","import { render } from \"./RecipientPanelResult.vue?vue&type=template&id=342e11b3&scoped=true\"\nimport script from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanelResult.vue?vue&type=style&index=0&id=342e11b3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-342e11b3\"]])\n\nexport default __exports__"],"names":["compare","rec","prov","receiverDate","Date","y","m","d","hour","min","providerDate","providerMatchingForClient","re","pFrom","pTo","pFromDate","pToDate","res","distance","origin","google","maps","LatLng","destination","service","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","unitSystem","UnitSystem","METRIC","durationInTraffic","avoidHighways","avoidTolls","response_data","responseDis","status","DistanceMatrixStatus","OK","console","log","rows","elements","text","alert","test","_createVNode","_createTextVNode","theDist","geometry","spherical","computeDistanceBetween","toFixed","axios","require","baseUrl","getAll","async","result","get","data","create","post","newImageData","createProfileImage","id","imageData","image","newAvatar","avatar","avt","updateImage","put","remove","recipientId","delete","_createElementBlock","_createElementVNode","_toDisplayString","$props","provider","yritys","_component_MDBTable","style","_component_MDBRow","_component_MDBCol","_component_MDBIcon","i","class","size","onClick","$options","getPositiveFeedback","_component_MDBBadge","color","pill","notification","rating","positive","$data","isPositive","_hoisted_1","_component_PositiveFeedback","feedback","closeComments","getNegativeFeedback","negative","isNegative","_createBlock","_component_NegativeFeedback","_component_live_chat","chatusers","messages","selecteduser","selectUser","onMessage","_component_MDBBtn","outline","block","_cache","$event","handleOrder","canselRecipientFinal","_Fragment","_renderList","_component_MDBListGroup","light","small","key","_component_MDBListGroupItem","pos","closeFeedback","name","props","Array","components","MDBListGroup","MDBListGroupItem","MDBBtn","methods","this","$emit","__exports__","neg","Object","room","String","roomUserCount","Number","available","booking","User","MessagePanel","PositiveFeedback","NegativeFeedback","liveChat","MDBTable","MDBRow","MDBCol","MDBIcon","MDBBadge","selectedUser","isChat","isPressedOpenChat","isPressedContactToUser","isConnection","isTwoUsers","isPressedFinal","count","userCount","mounted","chatCredentials","sendToApp","user","content","date","state","openChat","contactToUser","socket","emit","on","users","length","render","for","disabled","value","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_37","isProviderSelected","_component_MDBContainer","_component_recipientFinal","handleCanselFinal","orderSuccess","selectedProvider","availability","onSelect","onFinalinfo","finalinfo","line","_component_successMessage","message","orderMessage","border","isEditDescription","_hoisted_2","_component_MDBTextarea","label","description","_hoisted_4","saveEditedDescription","_hoisted_3","isAddImage","pressAddFirstImage","_hoisted_5","_hoisted_6","_hoisted_7","type","onChange","args","handleFileChange","showImage","isUploaded","src","alt","isImageSelected","uploadFirstImage","_ctx","images","imageIndex","isEditImage","pressEditImage","_hoisted_10","_component_MDBBtnClose","closeEditImage","_hoisted_11","_hoisted_12","_hoisted_13","uploadEditedImage","removeImg","_id","isImageCreated","_hoisted_15","pressAdditionalImage","_hoisted_16","_hoisted_17","_hoisted_18","uploadAdditionalImage","isOrdered","_hoisted_20","providers","_hoisted_21","_hoisted_22","_hoisted_23","filterResult","addFilter","_hoisted_28","timeoffer","map","to","datetime","bookingTime","yearFrom","monthFrom","dayFrom","hoursFrom","minutesFrom","yearTo","monthTo","dayTo","hoursTo","minutesTo","includes","_hoisted_29","getProviderInfo","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_38","canselResult","loggedInUser","confirmedBookings","chatUser","dt","dist","isUploadImage","isAddNewImage","file","tempImages","imagesx","imagesxxx","successMessage","recipientFinal","MDBBtnClose","MDBContainer","MDBTextarea","getDistance","getChatCredentials","index","e","files","target","tempImage","URL","createObjectURL","push","err","recipientService","removeImage","imageService","FormData","append","img","addImage","imgCreated","setTimeout","editDescription","provId","addProviderData","createBookingStatus","updateRecipient","providerService","addProviderBooking","marker","username","userID","providerDatax","providerUsername","providerID","filterListedProviders","document","getElementById","addEventListener","event","loggedUserJSON","window","localStorage","getItem","JSON","parse"],"sourceRoot":""}