{"version":3,"file":"js/113.ac435af3.js","mappings":"mMACOA,MAAA,wB,8FAALC,EAAAA,EAAAA,IAwBM,MAxBNC,EAwBM,gBAjBJD,EAAAA,EAAAA,IAMME,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IANmBC,EAAAC,WAAS,CAArBC,EAAMC,M,WAAnBP,EAAAA,EAAAA,IAMM,OAN+BQ,IAAKD,GAAC,EACzCE,EAAAA,EAAAA,IAIEC,EAAA,CAHGJ,KAAOA,EACPK,SAAUC,EAAAC,eAAiBP,EAC3BQ,SAAMC,GAAEC,EAAAC,WAAWX,I,2DAEpB,cACGY,EAAAA,EAAAA,IAAEd,EAAAe,UAAU,IAGrB,GACUP,EAAAC,eAAY,WADtBO,EAAAA,EAAAA,IAKEC,EAAA,C,MAHGf,KAAMM,EAAAC,aACNM,SAAWf,EAAAe,SACX,gBAAaH,EAAAM,W,iGAsBtB,GACEC,KAAM,YACNC,MAAO,CAELC,KAAMC,OACNrB,UAAWsB,MACXR,SAAUQ,MACVC,aAAcC,OACdC,SAAUH,MACVI,gBAAiBJ,MACjBK,GAAIN,OACJO,GAAIP,QAENQ,WAAY,CACVC,KAAI,IACJC,aAAYA,EAAAA,GAOdC,OACE,MAAO,CACL/B,KAAM,CAAC,EACPO,aAAc,KACdyB,MAAO,GACPC,IAAK,GAELC,OAAQ,KACRC,SAAU,GACVC,KAAM,GACNC,MAAO,EAEX,EAIAC,QAAS,CAWPC,OAAQ,WAsCN,EAGFC,YAAa,WACM,KAAbC,KAAKR,MACPS,EAAAA,EAAOC,KAAK,MAAOF,KAAKR,KACxBQ,KAAKR,IAAM,GAEf,EACAW,YACE,IAAIR,EAAO,aACPD,EAAW,MACfO,EAAAA,EAAOC,KAAK,cAAe,CACzBE,OAAQJ,KAAKK,WAAWC,GACxBZ,SAAUA,EACVC,KAAMA,GAEV,EACAY,SAKA,EAGArC,WAAWX,GACTyC,KAAKQ,MAAM,cAAejD,GAC1ByC,KAAKlC,aAAeP,CAItB,EAGAgB,UAAUkC,EAASC,GACjBV,KAAKQ,MAAM,aAAcC,EAASC,EAepC,EAMAC,aACEX,KAAKJ,OACP,EACAgB,UACEC,QAAQC,IAAI,YACZ,IAAIpB,EAAW,OACXC,EAAO,OAEXK,KAAKe,yBAA0B,EAC/Bd,EAAAA,EAAOe,KAAO,CAAEtB,WAAUC,QAC1BM,EAAAA,EAAOgB,SACT,EAEAC,oBAAoBxB,EAAUC,GAG5BkB,QAAQC,IAAI,YACZd,KAAKN,SAAWA,EAChBM,KAAKL,KAAOA,EAEZK,KAAKe,yBAA0B,EAC/Bd,EAAAA,EAAOe,KAAO,CAAEtB,WAAUC,QAC1BM,EAAAA,EAAOgB,SACT,EAEAE,aAGElB,EAAAA,EAAOC,KAAK,aAAc,YAE1BD,EAAAA,EAAOmB,GAAG,kBAAmB7B,IAC3BS,KAAKT,MAAQA,CAAI,IAEnBS,KAAKqB,iBAGP,EACAC,iBACET,QAAQC,IAAI,oBAEZb,EAAAA,EAAOC,KAAK,eACZqB,OAAOC,aAAaC,WAAW,aAE/BxB,EAAAA,EAAOmB,GAAG,kBAAmB7B,IAC3BS,KAAKT,MAAQA,CAAI,IAGnBmC,SAASC,QAEX,GAGFC,SAAU,CACRC,UACE,OAAO7B,KAAKR,IAAIsC,OAAS,CAC3B,GAIFC,UACE,EAGFC,YAEE,G,QCtPJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://prore-mongo/./src/pages/LiveChat.vue","webpack://prore-mongo/./src/pages/LiveChat.vue?3b29"],"sourcesContent":["<template>\r\n  <div style=\"margin-top: 200px;\">\r\n<!--    Test between app {{test}}-->\r\n<!--    users{{chatusers}}-->\r\n<!--    <form @submit.prevent=\"submit\">-->\r\n<!--      <button type=\"submit\">KÃ¤ivita dialog server</button>-->\r\n<!--    </form>-->\r\n\r\n    <div v-for=\"(user, i) in chatusers\" :key=\"i\">\r\n      <User\r\n          :user = user\r\n          :selected=\"selectedUser === user\"\r\n          @select=\"selectUser(user)\"\r\n      />\r\n    </div>\r\n    messages {{messages}}\r\n\r\n\r\n    <MessagePanel\r\n        v-if=\"selectedUser\"\r\n        :user=\"selectedUser\"\r\n        :messages = messages\r\n        @new:message=\"onMessage\"\r\n    />\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\n\r\n// v-if=\"!usernameAlreadySelected\"\r\n\r\n//import { MDBContainer, MDBBtn} from 'mdb-vue-ui-kit';\r\n\r\n//import SelectUser from '../components/chatio/SelectUser.vue'\r\n//import chat from '../components/chatio/Chat.vue'\r\n\r\n//import providerPanel from'./ProviderPanel.vue'\r\nimport User from \"../components/chatio/User.vue\"\r\nimport MessagePanel from \"../components/chatio/MessagePanel.vue\"\r\nimport socket from '../socket'\r\n\r\n\r\nexport default {\r\n  name: \"live-chat\",\r\n  props: {\r\n    //selectedUser: Object,\r\n    test: String,\r\n    chatusers: Array,\r\n    messages: Array,\r\n    loggedInUser: Object,\r\n    bookings: Array,\r\n    bookingsHistory: Array,\r\n    un: String,\r\n    ri: String\r\n  },\r\n  components: {\r\n    User,\r\n    MessagePanel\r\n    //providerPanel,\r\n    //MDBContainer,\r\n    //MDBBtn,\r\n    //SelectUser,\r\n    //chat\r\n  },\r\n  data() {\r\n    return {\r\n      user: {},\r\n      selectedUser: null,\r\n      users: [],\r\n      msg: \"\",\r\n      //messages: [],\r\n      userId: null,\r\n      username: \"\",\r\n      room: \"\",\r\n      count: 0\r\n    };\r\n  },\r\n\r\n\r\n\r\n  methods: {\r\n    // joinServer: function () {\r\n    //\r\n    //   socket.on(\"loggedIn\", (data) => {\r\n    //     this.messages = data.messages;\r\n    //     console.log(\"Users \" + data.users.map(u => u.username))\r\n    //\r\n    //     this.users = data.users;\r\n    //   });\r\n    //   this.listen();\r\n    // },\r\n    listen: function () {\r\n      // socket.on(\"userOnline\", (data) => {\r\n      //   this.users = []\r\n      //\r\n      //   this.users = data.users;\r\n      //\r\n      // });\r\n      //\r\n      // socket.on(\"userLeft\", (user) => {\r\n      //   this.users.splice(this.users.indexOf(user), 1);\r\n      //   console.log(\"User left \" + user)\r\n      //\r\n      // });\r\n      // socket.on(\"msg\", (message) => {\r\n      //   this.messages.push(message);\r\n      // });\r\n\r\n      // socket.on(\"private message\", ({ content, date, from, to }) => {\r\n      //   console.log(\"Saan teate listenis\")\r\n      //   for (let i = 0; i < this.users.length; i++) {\r\n      //     const user = this.users[i];\r\n      //     console.log(\"Socket user id xxxx \" + socket.userID)\r\n      //     const fromSelf = this.userSocketID === from;\r\n      //     if (user.userID === (fromSelf ? to : from)) {\r\n      //       user.messages.push({\r\n      //         content,\r\n      //         date,\r\n      //         fromSelf,\r\n      //       });\r\n      //       if (user !== this.selectedUser) {\r\n      //         user.hasNewMessages = true;\r\n      //         console.log(\"Users length \" + this.users.length)\r\n      //         //if (this.users.length > 1)\r\n      //         socket.emit(\"new message\")\r\n      //       }\r\n      //       break;\r\n      //     }\r\n      //   }\r\n      // });\r\n\r\n    },\r\n    sendMessage: function () {\r\n      if (this.msg !== \"\") {\r\n        socket.emit(\"msg\", this.msg);\r\n        this.msg = \"\";\r\n      }\r\n    },\r\n    startChat () {\r\n      let room = \"userdialog\";\r\n      let username = \"eka\"\r\n      socket.emit('credentials', {\r\n        userID: this.loggedUser.id,\r\n        username: username,\r\n        room: room\r\n      })\r\n    },\r\n    submit() {\r\n      let username = \"toka\"\r\n      let id = \"3333333--33333\"\r\n      let room = \"room-dialog\"\r\n      //socket.emit(\"newUser\", username, id, room);\r\n    },\r\n\r\n\r\n    selectUser(user) {\r\n      this.$emit(\"select:user\", user)\r\n      this.selectedUser = user;\r\n      //this.isNewMessage = false;\r\n      //user.hasNewMessages = false;\r\n\r\n    },\r\n\r\n\r\n    onMessage(content, date) {\r\n      this.$emit(\"on:message\", content, date);\r\n      // console.log(\"Saadan teate\")\r\n      // if (this.selectedUser) {\r\n      //   console.log(\"Selected user: \" + this.selectedUser.username);\r\n      //   socket.emit(\"private message\", {\r\n      //     content,\r\n      //     date,\r\n      //     to: this.selectedUser.userID,\r\n      //   });\r\n      //   this.selectedUser.messages.push({\r\n      //     content,\r\n      //     date,\r\n      //     fromSelf: true,\r\n      //   });\r\n      // }\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n    renderChat () {\r\n      this.count ++\r\n    },\r\n    newChat () {\r\n      console.log(\"Aaaaaaaa\")\r\n      let username = \"alla\";\r\n      let room = \"tuba\";\r\n\r\n      this.usernameAlreadySelected = true;\r\n      socket.auth = { username, room };\r\n      socket.connect();\r\n    },\r\n\r\n    onUsernameSelection(username, room) {\r\n\r\n\r\n      console.log(\"Aaaaaaaa\")\r\n      this.username = username;\r\n      this.room = room;\r\n\r\n      this.usernameAlreadySelected = true;\r\n      socket.auth = { username, room };\r\n      socket.connect();\r\n    },\r\n\r\n    updateRoom() {\r\n      //this.removeChatUser();\r\n\r\n      socket.emit('updateRoom', \"uus-tuba\");\r\n      //socket.emit('joinAllRooms')\r\n      socket.on(\"get room users\", (users) => {\r\n        this.users = users\r\n      })\r\n      this.socketResetTest();\r\n      //location.reload();\r\n\r\n    },\r\n    removeChatUser () {\r\n      console.log(\"Remove chat user\")\r\n\r\n      socket.emit('unsubscribe')\r\n      window.localStorage.removeItem('sessionID')\r\n      //this.isUserRemoved = true;\r\n      socket.on(\"get room users\", (users) => {\r\n        this.users = users\r\n      })\r\n\r\n      location.reload()\r\n\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    isValid() {\r\n      return this.msg.length > 0;\r\n    },\r\n  },\r\n\r\n\r\n  mounted() {\r\n    //this.joinServer();\r\n  },\r\n\r\n  unmounted() {\r\n    //socket.off('connect_error');\r\n    //socket.off(\"disconnect\");\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/*body {*/\r\n/*  margin: 0;*/\r\n/*}*/\r\n\r\n\r\n/*@font-face {*/\r\n/*  font-family: Lato;*/\r\n/*  //src: url(\"/fonts/Lato-Regular.ttf\");*/\r\n/*  src: \"~/public/fonts/Lato-Regular.ttf\";*/\r\n/*}*/\r\n\r\n\r\n.chatPanel {\r\n\r\n  font-family: Lato, Arial, sans-serif;\r\n  font-size: 14px;\r\n  margin-top: 200px;\r\n}\r\n</style>","import { render } from \"./LiveChat.vue?vue&type=template&id=6dd53ca8&scoped=true\"\nimport script from \"./LiveChat.vue?vue&type=script&lang=js\"\nexport * from \"./LiveChat.vue?vue&type=script&lang=js\"\n\nimport \"./LiveChat.vue?vue&type=style&index=0&id=6dd53ca8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6dd53ca8\"]])\n\nexport default __exports__"],"names":["style","_createElementBlock","_hoisted_1","_Fragment","_renderList","$props","chatusers","user","i","key","_createVNode","_component_User","selected","$data","selectedUser","onSelect","$event","$options","selectUser","_toDisplayString","messages","_createBlock","_component_MessagePanel","onMessage","name","props","test","String","Array","loggedInUser","Object","bookings","bookingsHistory","un","ri","components","User","MessagePanel","data","users","msg","userId","username","room","count","methods","listen","sendMessage","this","socket","emit","startChat","userID","loggedUser","id","submit","$emit","content","date","renderChat","newChat","console","log","usernameAlreadySelected","auth","connect","onUsernameSelection","updateRoom","on","socketResetTest","removeChatUser","window","localStorage","removeItem","location","reload","computed","isValid","length","mounted","unmounted","__exports__","render"],"sourceRoot":""}