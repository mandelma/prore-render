{"version":3,"file":"js/566.1396cbd0.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/controllers/datetime.js","webpack://prore-mongo/./src/components/controllers/distance.js","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue?7f3a"],"sourcesContent":["\nconst compare = (rec, prov) => {\n    const receiverDate = new Date(rec.y, rec.m, rec.d, rec.hour, rec.min);\n    const providerDate = new Date(prov.y, prov.m, prov.d, prov.hour, prov.min)\n    return providerDate >= receiverDate;\n}\n\nconst providerMatchingForClient = (re, pFrom, pTo) => {\n    //const rDate = new Date(re.y, re.m, re.d, re.hour, re.min);\n    const pFromDate = new Date(pFrom.y, pFrom.m, pFrom.d, pFrom.hour, pFrom.min);\n    const pToDate = new Date(pTo.y, pTo.m, pTo.d, pTo.hour, pTo.min);\n    return re >= pFromDate && re < pToDate;\n}\nexport default { compare, providerMatchingForClient }","/*global google*/\nlet res = \"\";\nconst distance = () => {\n    //let text = \"\";\n    //let value = 0;\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\n    var service = new google.maps.DistanceMatrixService();\n    service.getDistanceMatrix(\n        {\n            origins: [origin],\n            destinations: [destination],\n            travelMode: 'DRIVING',\n            unitSystem: google.maps.UnitSystem.METRIC,\n            durationInTraffic: true,\n            avoidHighways: false,\n            avoidTolls: false\n        }, response_data);\n    //return response_data;\n}\n\nconst response_data = (responseDis, status) => {\n    //let result = \"\";\n    if (status !== google.maps.DistanceMatrixStatus.OK || status !== \"OK\"){\n        console.log('Error:', status);\n        // OR\n        alert(status);\n    }else{\n        //alert(responseDis.rows[0].elements[0].distance.text);\n        console.log(\"Distance \" + responseDis.rows[0].elements[0].distance.text)\n\n        res = responseDis.rows[0].elements[0].distance.text;\n        return \"aaaaaaaaaaaaa\"\n        //result = responseDis.rows[0].elements[0].distance.text;\n    }\n    //return  \"Hallo\"        //result.toString();\n}\n\nconst test = () => {\n    console.log(\"Is it working??\" + res)\n\n    return  <div>Hiiii</div>;\n}\n\nconst theDist = () => {\n    var origin = new google.maps.LatLng(60.233093,24.7531362);\n    var destination = new google.maps.LatLng(60.2767265,24.8575089);\n    return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n}\n\n// function calcDistance() {\n//     // var origin = new google.maps.LatLng(60.233093,24.7531362);\n//     // var destination = new google.maps.LatLng(60.2767265,24.8575089);\n//     // return (google.maps.geometry.spherical.computeDistanceBetween(origin, destination) / 1000).toFixed(2);\n//\n//     var directionsService = new google.maps.DirectionsService();\n//\n//     var request = {\n//         origin      : 'Melbourne VIC', // a city, full address, landmark etc\n//         destination : 'Sydney NSW',\n//         travelMode  : google.maps.DirectionsTravelMode.DRIVING\n//     };\n//\n//     directionsService.route(request, function(response, status) {\n//         if ( status === google.maps.DirectionsStatus.OK ) {\n//             alert( response.routes[0].legs[0].distance.value ) ; // the distance in metres\n//         }\n//         else {\n//             // oops, there's no route between these two locations\n//             // every time this happens, a kitten dies\n//             // so please, ensure your address is formatted properly\n//         }\n//     });\n// }\n\nexport default { distance, test, theDist }","<template>\n\n\n  <MDBContainer v-if=\"isProviderSelected\">\n    <recipientFinal\n        @cansel:final = handleCanselFinal\n        @provider:ordered = orderSuccess\n        :test = test\n        :provider = selectedProvider\n        :proSlides = proSlides\n        :room = room\n        :available = availability\n        :booking = booking\n\n        :chatusers = chatusers\n\n        :initialize_chat = handleInitializeChat\n\n        :selecteduser = selecteduser\n        :messages = messages\n        @message = onMessage\n        @select = selectUser\n        @noSelect = noSelectUser\n        @create_chat_panel = handleCreateChatPanel\n\n    />\n\n  </MDBContainer>\n  <MDBContainer v-else>\n    <div style=\"display: flex; justify-content: right; padding: 20px;\">\n      <MDBBtnClose\n          white\n          style=\"cursor: pointer;\"\n          @click=\"canselResult\"\n      />\n    </div>\n\n<!--    <MDBIcon-->\n<!--        style=\"float:right; cursor: pointer;\"-->\n<!--        @click=\"canselResult\"-->\n<!--        size=\"3x\"-->\n<!--    >-->\n<!--      <i class=\"fas fa-undo\"></i>-->\n<!--    </MDBIcon>-->\n\n    <h2>Tarvin tässä osaaja - {{line}}</h2>\n\n\n    <successMessage\n        :message = orderMessage\n    />\n    <MDBRow style=\"margin-top: 50px;\">\n      <MDBCol>\n\n        <MDBTable border=\"primary\" style=\"font-size: 18px; color: #dddddd; text-align: left;\">\n          <tbody>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              {{booking.description}}\n\n\n            </td>\n            <td v-else>\n              <MDBRow>\n                <MDBCol >\n                  <MDBTextarea\n                      label=\"Muokkaa tehtävän kuvausta...\"\n                      white\n                      rows=\"4\" v-model=\"description\"\n                      style=\"font-size: 14px; padding: 20px;\"\n                  />\n                </MDBCol>\n                <MDBCol col=\"1\">\n                  <MDBBtnClose\n                      white\n                      @click=\"isEditDescription = false\"\n                      style=\"float: right; cursor: pointer\"\n\n                  />\n                </MDBCol>\n              </MDBRow>\n\n\n\n\n            </td>\n          </tr>\n          <tr>\n            <td v-if=\"!isEditDescription\">\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"pressedEditDescription\">Muokkaa tehtävän kuvausta</MDBBtn>\n            </td>\n            <td v-else>\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"saveEditedDescription\">Tallenna tehtävän kuvaus</MDBBtn>\n            </td>\n          </tr>\n          <tr>\n            <td v-if=\"!isEditDate\">\n              <h3>{{bookingDateToDisplay}}</h3>\n              <MDBBtn block size=\"lg\" outline=\"info\" @click=\"editDate\">Muokkaa päivämäärä</MDBBtn>\n            </td>\n            <td v-else>\n              <MDBRow>\n                <MDBCol col=\"8\">\n                  <h3>{{bookingDateToDisplay}}</h3>\n\n                  <VueDatePicker\n                      style=\"margin-bottom: 20px;\"\n                      dark\n                      v-model=\"bookingDate\"\n                      :min-date=\"new Date()\"\n                      placeholder=\"Valitse sopivaa aika...\"\n                      @internal-model-change=\"handleInternalDate\"\n                      :state=\"isNoDate ? false : null\"\n                  >\n\n                  </VueDatePicker>\n                </MDBCol>\n                <MDBCol col=\"4\">\n                  <MDBBtnClose\n                      white\n                      @click=\"isEditDate = false\"\n                      style=\"float: right; cursor: pointer\"\n\n                  />\n                </MDBCol>\n              </MDBRow>\n\n            </td>\n\n          </tr>\n\n          </tbody>\n        </MDBTable>\n\n\n        <div v-for=\"(im, i) in images\" :key=\"i\">\n          <img\n              class=\"loading\"\n              style=\"width: 100%;\"\n              :src=\"im.blob ? im.blob : require(`/server/uploads/${im.name}`)\"\n              :alt=\"im.name\"\n          />\n\n          <MDBBtn v-if=\"!isEditPanel\" block outline=\"success\" @click=\"pressEditPanel(i)\">Muokkaa kuva</MDBBtn>\n          <div class=\"edit-panel\" v-if=\"isEditPanel && imageIndex === i\">\n\n            <MDBRow>\n              <MDBCol>\n                <MDBBtnClose\n                    v-if=\"!value\"\n                    white\n                    class=\"close-btn\"\n                    style=\"float: right;\"\n                    @click=\"closeEditPanel\"\n                />\n                <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\n                <label  for=\"file-upload\" class=\"custom-file-upload\">\n                  <span v-if=\"value\">\n                  Muokka tehtävän kuvausta: {{value.name}}\n\n                   </span>\n                  <span v-else>Valitse uusi kuva tehtävästä</span>\n                </label>\n                <MDBBtn v-if=\"isEditImage\" block color=\"success\" @click=\"uploadEditedImage(i)\">Upload edited image</MDBBtn>\n                <MDBBtn class=\"btn\" block size=\"lg\" color=\"danger\" @click=\"removeImg(i)\">Poista kuva</MDBBtn>\n              </MDBCol>\n              <MDBCol v-if=\"value\">\n                <MDBBtnClose\n                    white\n                    class=\"close-btn\"\n                    style=\"float: right;\"\n                    @click=\"closeEditPanel\"\n                />\n                <img\n                    style=\"width:100px; padding-top: 20px;\"\n                    :src=\"this.showImage\"\n                    alt=\"addEdit\"\n                />\n              </MDBCol>\n            </MDBRow>\n\n          </div>\n\n\n\n\n        </div>\n\n        <MDBBtn v-if=\"!isPressedAddlmage\" block color=\"info\" @click=\"pressedAddImage\">Lisää uusi kuva tehtävästä</MDBBtn>\n        <div class=\"add-panel\" v-if=\"isPressedAddlmage && isAddImagePanel\">\n\n\n          <MDBRow>\n\n            <MDBCol>\n              <MDBBtnClose\n                  v-if=\"!value\"\n                  white\n                  class=\"close-btn\"\n                  @click=\"closeAddPanel\"\n              />\n              <input   id=\"file-upload-x\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\n              <label  for=\"file-upload-x\" class=\"custom-file-upload\">\n                  <span v-if=\"value\">\n                  Muokka tehtävän kuvausta: {{value.name}}\n+\n                   </span>\n                <span v-else>Valitse lisää kuva tehtävästä</span>\n              </label>\n              <MDBBtn v-if=\"isAddImage\" block outline=\"primary\" @click=\"addAdditionalImage\">Tallenna kuva</MDBBtn>\n            </MDBCol>\n            <MDBCol v-if=\"value\">\n              <MDBBtnClose\n                  class=\"close-btn\"\n                  white\n                  @click=\"closeAddPanel\"\n              />\n              <img\n                  style=\"width:100px\"\n                  :src=\"this.showImage\"\n                  alt=\"addShow\"\n              />\n            </MDBCol>\n          </MDBRow>\n\n        </div>\n\n\n      </MDBCol>\n      <MDBCol v-if=\"isOrdered\">\n\n      </MDBCol>\n      <MDBCol lg=\"6\" v-else>\n        <div v-if=\"providers.length > 0\">\n          <div class=\"ui large form\">\n            <div class=\"field\">\n              <h3 style=\"margin-bottom: 20px;\">Palveluntarjoajat</h3>\n              <select style=\"padding: 20px; background-color: #3c3535; color: lightgrey; font-size: 18px;\" id=\"listOfProviders\" v-model=\"filterResult\" @click=\"addFilter\">\n                <option value=\"\">Suodata...</option>\n                <option value=\"distance\">Etäisyyden mukaan - lähin ensin</option>\n                <option value=\"rating\">positiivisen palauteen mukaan</option>\n                <!--                <option>Rating</option>-->\n                <!--                <option>Else more</option>-->\n              </select>\n            </div>\n\n          </div>\n          <br>\n\n          <MDBTable  style=\"font-size: 18px; text-align: center; position: relative;\">\n            <tbody>\n            <tr v-for=\"provider in providers\" :key=\"provider.id\">\n\n\n              <td v-if=\"provider.timeoffer.map(to =>\n\n                datetime.providerMatchingForClient(\n                    bookingTime,\n                    {y: to.yearFrom, m: to.monthFrom, d: to.dayFrom, hour: to.hoursFrom, min: to.minutesFrom},\n                    {y: to.yearTo, m: to.monthTo, d: to.dayTo, hour: to.hoursTo, min: to.minutesTo}\n                )\n              ).includes(true)\">\n                <MDBBtn class=\"provider-selection\"\n                        outline=\"info\"\n                        size=\"lg\"\n                        @click=\"getProviderInfo(provider,'green')\"\n                >\n\n                  {{provider.yritys}}<br>\n\n                  <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span>\n                </MDBBtn>\n                <MDBBadge\n\n                    color=\"success\"\n                    class=\"translate-middle p-1\"\n                    pill\n                    notification\n                ><h4 style=\"padding: 12px;\">\n                  Saatavilla &nbsp;\n                  <img\n                      style=\"width: 50px;\"\n                      :src=\"require(`@/assets/ok.png`)\"\n                      alt=\"ok\"\n                  />\n                </h4>\n                </MDBBadge>\n\n\n\n\n\n              </td>\n              <td v-else>\n\n                <MDBBtn\n                    class=\"provider-selection\"\n                    size=\"lg\"\n                    @click=\"getProviderInfo(provider, 'orange')\"\n                >\n\n                  {{provider.yritys}} <br>\n                  <span style=\"font-size: 14px;\">Etäisyys: {{provider.distance}} km</span><br>\n                  <span style=\"font-size: 17px;\">{{provider.priceByHour}} Eur</span>\n                </MDBBtn>\n\n\n\n                <MDBBadge\n\n                    color=\"dark\"\n                    class=\"translate-middle p-1\"\n                    pill\n                    notification\n                ><h5 style=\"padding: 4px;\">Sovittaessa</h5></MDBBadge>\n\n              </td>\n\n            </tr>\n            <tr>\n            </tr>\n            </tbody>\n          </MDBTable>\n\n\n\n          <!--          Booking {{booking}}-->\n\n        </div>\n        <div v-else>\n          <h2 style=\"width: 100%;\">Yrityksiä hetkellä ei löytyy</h2>\n        </div>\n\n\n\n      </MDBCol>\n      <MDBBtn block outline=\"danger\" size=\"lg\" @click=\"removeBooking\">Poista tilaus</MDBBtn>\n    </MDBRow>\n\n  </MDBContainer>\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  MDBBtn, MDBContainer, MDBTable, MDBRow,\n  MDBBtnClose,\n  MDBCol, MDBTextarea,\n  MDBIcon,\n  MDBBadge,\n}from \"mdb-vue-ui-kit\";\nimport dt from '../components/controllers/datetime'\nimport recipientFinal from '../pages/RecipientPanelFinal'\nimport successMessage from '../components/notifications/successMessage'\nimport dist from '../components/controllers/distance'\nimport providerService from '../service/providers'\nimport imageService from '../service/image'\nimport VueDatePicker from '@vuepic/vue-datepicker';\n//import socket from \"@/socket\";\nimport {ref} from 'vue'\nimport recipientService from \"@/service/recipients\";\nimport socket from \"@/socket\";\nimport uploadService from \"@/service/image\";\n//import socket from \"@/socket\";\n\n\nexport default {\n  name: \"recipient-panel-result\",\n  props: {\n    test: Boolean,\n    chatusers: Array,\n\n    selecteduser: null,\n    messages: Array,\n    loggedInUser: Object,\n    booking: null,\n    images: Array,\n    bookingTime: null,\n    providers: Array,\n    confirmedBookings: Array,\n    line: String\n  },\n  data () {\n    return {\n      //image: [],\n      chatUser: null,\n      initializeChatRoom: {},\n      chatRoomData: {},\n      count: 0,\n      datetime: dt,\n      distance: dist,\n      selectedProvider: null,\n      proSlides: [],\n      isProviderSelected: false,\n      availability: \"\",\n      orderMessage: null,\n      isOrdered: false,\n      isEditDescription: false,\n      description: this.booking.description,\n\n      isEditDate: false,\n      bookingDate: null,\n      bookingDateToDisplay: this.booking.date,\n      //isAddImage: false,\n      isAddFirstImage: false,\n      isPressedAddlmage: false,\n      isAddImage: false,\n      isAddImagePanel: false,\n      isEditImage: false,\n\n\n      isUploadImage: false,\n      isUploaded: false,\n      isImageCreated: false,\n      isAddNewImage: false,\n      isEditPanel: false,\n\n      value: null,\n      imageIndex: 0,\n      file: null,\n      isImageSelected: false,\n      isAdditionalImageSelected: false,\n      showImage: null,\n      tempImages: [],\n      imagesx: [],\n      imagesxxx: [],\n      room: \"\",\n      roomUserCount: 0,\n      filterResult: \"\",\n    }\n  },\n\n  components: {\n    successMessage,\n    VueDatePicker,\n    dist,\n    recipientFinal,\n    MDBBtn,\n    MDBBtnClose,\n    MDBContainer,\n    MDBTable,\n    MDBRow,\n    MDBCol,\n    MDBTextarea,\n    MDBIcon,\n    MDBBadge\n  },\n\n  methods: {\n\n    editDate () {\n      this.isEditDate = true;\n    },\n    async handleInternalDate () {\n\n      if (this.bookingDate) {\n        this.bookingDateToDisplay = (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear();\n        console.log(\"eeeeee \" + (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear());\n        await recipientService.newDate(this.booking.id, {\n          year: this.bookingDate.getFullYear(),\n          month: this.bookingDate.getMonth(),\n          day: this.bookingDate.getDate(),\n          hours: this.bookingDate.getHours(),\n          minutes: this.bookingDate.getMinutes()\n        })\n\n        const updatedDate = {\n          year: this.bookingDate.getFullYear(),\n          month: this.bookingDate.getMonth(),\n          day: this.bookingDate.getDate(),\n          hours: this.bookingDate.getHours(),\n          minutes: this.bookingDate.getMinutes()\n        }\n\n        this.$emit(\"updateBookingDate\", updatedDate);\n      }\n      console.log(\"Date is handled\")\n     // console.log(\"Selected date: \" + this.date)\n    },\n    handleFileChange(e, i) {\n      //this.$emit('input', e.target.client[0])\n      console.log(\"i in file change \" + i)\n      this.imageIndex = i;\n      try {\n\n        const files = e.target.files[0]\n        console.log('event target client ', e.target.files[0])\n\n        if (files) {\n          const tempImage = URL.createObjectURL(files)\n          this.tempImages.push(tempImage);\n          this.showImage = URL.createObjectURL(files)\n          this.file = e.target.files[0]\n\n          this.isAddImage = true;\n          this.isEditImage = true;\n        }\n\n      } catch (err) {\n        console.log('Error:', err)\n      }\n\n      this.value = e.target.files[0]\n      // if (e.target.files[0]) {\n      //   this.isImageSelected = true;\n      // } else {\n      //   this.isImageSelected = false;\n      // }\n    },\n    pressedAddImage () {\n      this.isAddImage = false\n      this.isEditImage = false;\n      this.isEditPanel = false;\n      this.isPressedAddlmage = true;\n      this.isAddImagePanel = true;\n    },\n    async addImage () {\n\n\n    },\n    pressEditPanel (index) {\n      //this.isImageSelected = false;\n      this.isEditImage = false;\n      this.value = null;\n      this.imageIndex = index;\n      //this.isEditImage = true;\n\n      this.isEditPanel = true;\n      this.isAddImagePanel = false\n      //this.isImageCreated = false;\n      //this.isUploaded = false;\n\n      //this.showImage = null;\n      //this.value = null;\n    },\n    closeEditPanel () {\n      //this.imageIndex = index;\n      //this.isEditImage = true;\n      this.isAddImagePanel = false\n      this.isEditPanel = false\n      this.isEditImage = false;\n      this.value = null;\n    },\n    closeAddPanel () {\n      this.isAddImagePanel = false\n      this.isPressedAddlmage = false;\n      this.value = null;\n    },\n    async uploadEditedImage (index, img) {\n\n      console.log(\"Edited image index is: \" + index);\n\n      this.isEditPanel = false;\n      this.isEditImage = false;\n\n      // this.images.push({\n      //   blob: this.showImage\n      // })\n\n\n\n\n\n      const data = new FormData();\n      data.append('file', this.file, this.file.name)\n\n      //this.$emit(\"editImage\", index, image.imgCreated._id,  this.showImage);\n      console.log(\"Image id \" + this.images[index]._id)\n\n      //this.images[this.imageIndex] = {_id: image._id, blob: this.showImage}\n\n\n\n      const image = await imageService.updateImage(this.images[index]._id, data);\n\n      if (image) {\n        this.images[this.imageIndex] = {_id: this.images[index]._id, blob: this.showImage}\n\n        this.images.forEach(img => {\n          console.log(\"Image name \" + img._id)\n        })\n\n\n        //this.$emit(\"editImage\", index, image.imgCreated._id,  this.showImage);\n        console.log(\"New image id is \" + image._id)\n        this.imgId = image._id;\n        this.file = null;\n\n        //this.$emit(\"editImage\", image, img)\n\n\n\n        this.isEditPanel = false;\n\n      }\n\n      //this.imageIndex = null;\n\n    },\n    async addAdditionalImage () {\n      this.value = null;\n      this.isAddImagePanel = false;\n      this.isAddImage = false;\n      this.isPressedAddlmage = false;\n      const data = new FormData();\n\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking.id, img.imgCreated._id)\n      if (img) {\n        const image = {\n          _id: img.imgCreated._id,\n          blob: this.showImage\n        }\n        this.$emit(\"addImage\", image, this.booking.id);\n      }\n\n\n      // this.images.push({\n      //   _id: img.imgCreated._id,\n      //   blob: this.showImage\n      // })\n\n\n    },\n    async removeImg (id) {\n      //this.value = null;\n      if (!this.images[id].blob) {\n        console.log(\"removed image is blob\")\n\n      }\n\n      console.log(\"removable image id is \" + this.images[id]._id)\n\n      await recipientService.removeImage(this.booking.id, this.images[id]._id);\n      await imageService.remove(this.images[id]._id, this.booking.id);\n\n      this.$emit(\"removeImage\", id);\n\n      this.isEditPanel = false;\n\n\n      //this.imageIndex = null\n      //this.isEditDescription = false;\n\n      //this.isImageSelected = false;\n      //this.showImage = null;\n    },\n    getDistance () {\n      //console.log(\"Distance +++++??? \" + dist.distance())\n      console.log(\"sss \" + dist.test())\n    },\n    selectUser (user) {\n      this.$emit('select', user);\n    },\n    noSelectUser () {\n      this.$emit(\"noSelect\");\n    },\n    onMessage (content, date) {\n      this.$emit(\"message\", content, date);\n    },\n    initializeChat () {\n      this.$emit(\"initializeChat\", {\n        initChatRoom: this.initializeChatRoom,\n        chatData: this.chatRoomData\n      });\n    },\n    handleCreateChatPanel () {\n      console.log(\"Final info in result pressed \");\n      //this.$emit(\"finalinfo\", data)\n\n      console.log(\"recipient result xxxxx \" + this.chatRoomData.username)\n      this.initializeChat();\n    },\n    // Chat data to App\n    // handleInitializeChat () {\n    //   //socket.emit(\"create room users\", this.initializeChatRoom)\n    //\n    //   console.log(\"recipient result xxxxx---------xxx----------xxxxxxxxxx \")\n    //   this.$emit(\"initializeChat\", {\n    //     initChatRoom: this.initializeChatRoom,\n    //     chatData: this.chatRoomData\n    //   });\n    // },\n\n    async pressAddFirstImage () {\n      this.isAddFirstImage = true;\n      this.imageIndex = 0;\n    },\n\n    pressAdditionalImage (index) {\n      //this.imageIndex = this.booking[0].image.length - 1;\n      this.isAddImage = true;\n      this.imageIndex = this.images.length;\n      //this.imageIndex = \"new\";\n      //this.isAddNewImage = true;\n\n      console.log(\"Images index = \" + this.imageIndex);\n      this.isAddImage = true;\n    },\n\n\n\n    async uploadFirstImage (index) {\n      const data = new FormData();\n      this.isUploadImage = true;\n      this.imageIndex = 0;\n      //this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking.id, img.imgCreated._id);\n\n      if (img) {\n        this.file = null;\n\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name\n        }\n\n        this.$emit(\"addImage\", image);\n\n        this.imageIndex = 0;\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n\n      }\n\n\n\n    },\n    async uploadAdditionalImage () {\n      this.isAdditionalImageSelected = false;\n      this.isAddImage = false;\n      this.value = null;\n      //this.isEditImage = false;\n      //this.imageIndex = null;\n      //this.imageIndex = this.booking[0].image.length - 1;\n      console.log(\"Image index index \" + this.imageIndex)\n      const data = new FormData();\n\n      this.isUploadImage = true;\n      //this.imageIndex = 0;\n      this.isUploaded = true;\n      //isUploaded && imageIndex === i\n      data.append('file', this.file, this.file.name)\n      const img = await imageService.create(data);\n      await recipientService.addImage(this.booking.id, img.imgCreated._id);\n\n      if (img) {\n        //this.imgId = img.imgCreated._id;\n        this.file = null;\n        //this.showImage = null;\n        //this.value = null;\n\n        //console.log(\"xxx \" + img.imgCreated._id)\n        //console.log(\"Image itself \" + img.imgCreated.image)\n        //await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\n        const image = {\n          _id: img.imgCreated._id,\n          image: img.imgCreated.image,\n          name: img.imgCreated.name\n        }\n\n        //this.imagesxxx.push(image);\n\n        this.$emit(\"addImage\", image);\n\n        //this.images.push(image);\n\n        // const booking = await recipientService.getBookingById(this.booking[0].id);\n        //\n        // setTimeout( async () => {\n        //   booking[0].image.forEach(im=> {\n        //     this.images.push(im)\n        //   })\n        //   //this.images = this.images.concat(booking[0].image)\n        // }, 500)\n\n\n        /*const booking = await recipientService.getBookingById(this.booking[0].id);\n\n        this.imagesxxx = booking[0].image\n*/\n\n        this.isImageSelected = false;\n        this.isUploaded = true;\n\n\n\n        //this.imageIndex = null;\n      }\n\n\n\n    },\n\n    pressedEditDescription () {\n      this.isEditDescription = true\n      console.log(\"Descripton: \" + this.description);\n    },\n    saveEditedDescription () {\n      this.isEditDescription = false;\n      const description = {\n        description: this.description\n      }\n      this.$emit(\"editDescription\", this.description);\n      recipientService.editDescription(this.booking.id, description)\n      //this.description = \"\";\n    },\n    cancelEditDescription () {\n      console.log(\"Is here something happening??\")\n    },\n    providerGetBooking (id, booking) {\n      //const id = this.provider.user.id;\n      console.log(\"Sended to user id... \" + id)\n      socket.emit(\"accept provider\", {\n        id,\n        booking: booking\n      })\n    },\n    async orderSuccess (prov) {\n      //console.log(\"Ordered!!!\")\n\n      this.isProviderSelected = false;\n\n      //this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n      console.log(\"Provider id \" + prov.id)\n      console.log(\"Recpient id: \" + this.booking.id);\n\n      const providerID = {\n        providerID: this.selectedProvider.id\n      };\n\n\n      //await recipientService.addProviderID(this.booking[0].id, providerID);\n\n      await recipientService.addProviderData(this.booking.id, this.selectedProvider.id);\n\n      //socket.emit(\"send booking notification\", this.booking[0], this.selectedProvider.id);\n\n      //const providerName =\n      //const status = \"notSeen\";\n      const createBookingStatus = await recipientService.updateRecipient(this.booking.id, {status: \"notSeen\"});\n      //console.log(\"Is status updated: \" + createBookingStatus.status);\n\n\n      const recipientId = this.booking.id;\n\n      //--------------- About need delete selected and confirmed provider ------------\n\n      //const booking = await providerServise.updateProvider(provId, {booking: [this.booking.id]})\n      // To ordered\n      const booking = await providerService.addProviderBooking(prov.id, recipientId);\n      if (booking === \"Recipient is added!\") {\n        const chatUserDataNavbar = {\n          status: \"\",\n          userID: prov.user.id,\n          name: prov.user.username,\n          room: this.room\n        };\n        this.$emit('client:confirmed_provider', prov.id, this.booking, chatUserDataNavbar);\n        //this.$emit('set:order:to:send', prov.id, this.booking, chatUserDataNavbar)\n\n        this.roomToDb(prov.id, {userID: this.booking.user.id, client: this.booking.user.username, room: this.room});\n        //this.providerGetBooking(prov.user.id, booking);\n        const id = prov.user.id;\n\n        socket.emit(\"accept provider\", {\n          id,\n          booking: this.booking,\n        })\n\n        this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\n\n        console.log(\"Booking made - id: \" + booking.id);\n\n        this.isOrdered = true;\n\n        setTimeout(() => {\n          this.orderMessage = null;\n        }, 3000)\n\n      }\n      // else {\n      //   this.orderMessage = \"Olet lähetänyt jo tilauksen!\"\n      //   setTimeout(() => {\n      //     this.orderMessage = null;\n      //   }, 3000)\n      //   //console.log(\"Yritys on jo tilattu!\")\n      // }\n\n      this.initializeChat();\n\n    },\n    getProviderInfo (provider, marker) {\n      this.proSlides = [];\n      this.selectedProvider = provider;\n      provider.reference.forEach(slide => {\n        this.proSlides = [\n            ...this.proSlides,\n          {\n            id: slide.id,\n            size: '1400-933',\n            src: require(`/server/uploads/pro/${slide.name}`),\n            thumb: require(`/server/uploads/pro/${slide.name}`),\n            subHtml: `<div class=\"lightGallery-captions\">\n                <h2>Terve</h2>\n\n            </div>\"`\n          }\n        ]\n      })\n      this.availability = marker;\n      this.isProviderSelected = true;\n\n      this.room = provider.yritys + this.chatUser.username\n\n      let room = \"\";\n      let username = \"\";\n\n      if (this.chatUser) {\n        username = this.chatUser.username;\n        room = provider.yritys + username;\n      }\n\n      const chatCredentials = {\n        room: room,\n        proID: provider.user.id,\n        pro: provider.yritys,\n        userID: provider.user.id,\n        username: provider.user.username,\n      }\n\n\n\n      // const providerDatax = {\n      //   userID: provider.user.id,\n      //   username: provider.user.username,\n      //   room: room\n      // }\n      //\n      // this.$emit(\"provider\", providerDatax);\n\n      //const providerData = \"Allu\"\n\n      const id = provider.user.id;\n      const name = provider.user.username;\n\n      // socket.emit(\"create room users\", {\n      //   room: room,\n      //   pro: provider.yritys,\n      //   status: \"booking panel\",\n      //   username: username,\n      //   providerUsername: provider.user.username,\n      //   providerID: provider.user.id\n      // })\n\n      this.initializeChatRoom = {\n        room: room,\n        pro: provider.yritys,\n        status: \"booking panel\",\n        username: username,\n        providerUsername: provider.user.username,\n        providerID: provider.user.id\n      }\n\n      this.chatRoomData = chatCredentials;\n\n      //this.$emit(\"chatCredentials\", chatCredentials)\n\n\n    },\n    async roomToDb (id, room) {\n      await providerService.addRoom(id, room)\n    },\n    addFilter () {\n      const filterListedProviders = document.getElementById(\"listOfProviders\")\n\n      filterListedProviders.addEventListener(\"change\", (event) => {\n        console.log(\"Filtered provider: \" + event.target.value);\n        this.$emit(\"filter_provider\", event.target.value);\n\n      })\n    },\n    handleCanselFinal (result) {\n      this.isProviderSelected = result;\n    },\n    canselResult () {\n      this.$emit('cansel:result', false)\n    },\n    async removeBooking () {\n      console.log(\"In start booking id \" + this.booking.id)\n      if (confirm(\"Oletko varmaa, että haluat poistaa tilauksen!?\") === true) {\n        console.log(\"You pressed OK!\")\n\n\n        this.$emit(\"removeBooking\", this.booking.id);\n\n      } else {\n        console.log(\"You canceled!\")\n      }\n      //await recipientService.removeBooking(this.booking[0].id);\n\n      this.images.forEach(img => {\n        console.log(\"Images ## \" + img._id);\n        imageService.cleanAllRecipientImages(img._id)\n      })\n\n    },\n  },\n\n  async mounted() {\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      this.chatUser = user;\n\n    }\n\n\n  }\n}\n</script>\n\n\n<style scoped>\n.edit-panel {\n  border: solid grey;\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.add-panel {\n  border: solid grey;\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.add-additional-panel {\n  border: solid blue;\n}\n.btn {\n  padding: 20px;\n  margin: 20px 0 20px 0;\n}\n.close-btn {\n  float: right;\n  padding: 20px;\n}\nimg.loading {\n  width: 100%;\n  height: 400px;\n  background: transparent url(https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif) no-repeat scroll center center;\n}\n.success {\n  color: white;\n  background: #7bc47b;\n  font-size: 20px;\n  border: solid #0e920e;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\ninput[type=\"file\"] {\n  display: none;\n}\n.custom-file-upload {\n  width: 100%;\n\n  color: white;\n  font-size: 18px;\n  background-color: #87958e;\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 20px 12px;\n  margin-bottom: 0;\n  cursor: pointer;\n}\n.imageSection {\n  margin-bottom: 20px;\n}\n.provider-selection {\n  width: 300px;\n  padding: 20px;\n  background-color: grey;\n  border: solid #4c4949;\n  color: #f0eeee;\n  font-size: 150%;\n}\n\nselect option {\n  border: solid red;\n}\n\n</style>","import { render } from \"./RecipientPanelResult.vue?vue&type=template&id=0733c06e&scoped=true\"\nimport script from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanelResult.vue?vue&type=style&index=0&id=0733c06e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0733c06e\"]])\n\nexport default __exports__"],"names":["compare","rec","prov","receiverDate","Date","y","m","d","hour","min","providerDate","providerMatchingForClient","re","pFrom","pTo","pFromDate","pToDate","res","distance","origin","google","maps","LatLng","destination","service","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","unitSystem","UnitSystem","METRIC","durationInTraffic","avoidHighways","avoidTolls","response_data","responseDis","status","DistanceMatrixStatus","OK","console","log","rows","elements","text","alert","test","_createVNode","_createTextVNode","theDist","geometry","spherical","computeDistanceBetween","toFixed","style","class","for","_createElementVNode","value","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_42","$data","isProviderSelected","_createBlock","_component_MDBContainer","key","_component_recipientFinal","$options","handleCanselFinal","orderSuccess","$props","provider","selectedProvider","proSlides","room","available","availability","booking","chatusers","initialize_chat","_ctx","handleInitializeChat","selecteduser","messages","onMessage","onSelect","selectUser","onNoSelect","noSelectUser","onCreate_chat_panel","handleCreateChatPanel","_hoisted_1","_component_MDBBtnClose","white","onClick","canselResult","_toDisplayString","line","_component_successMessage","message","orderMessage","_component_MDBRow","_component_MDBCol","_component_MDBTable","border","isEditDescription","_createElementBlock","_hoisted_3","_component_MDBTextarea","label","description","$event","col","_cache","_hoisted_2","_hoisted_5","_component_MDBBtn","outline","block","size","saveEditedDescription","_hoisted_4","pressedEditDescription","isEditDate","_hoisted_7","bookingDateToDisplay","_component_VueDatePicker","dark","bookingDate","placeholder","onInternalModelChange","handleInternalDate","state","isNoDate","_hoisted_6","editDate","_Fragment","_renderList","images","im","i","src","blob","require","name","alt","isEditPanel","pressEditPanel","imageIndex","_hoisted_9","closeEditPanel","id","type","onChange","handleFileChange","_hoisted_11","_hoisted_12","_hoisted_13","isEditImage","color","uploadEditedImage","removeImg","showImage","isPressedAddlmage","pressedAddImage","isAddImagePanel","_hoisted_15","closeAddPanel","_hoisted_16","_hoisted_17","_hoisted_18","isAddImage","addAdditionalImage","isOrdered","lg","providers","length","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","filterResult","args","addFilter","_hoisted_28","timeoffer","map","to","datetime","bookingTime","yearFrom","monthFrom","dayFrom","hoursFrom","minutesFrom","yearTo","monthTo","dayTo","hoursTo","minutesTo","includes","_hoisted_29","getProviderInfo","yritys","_hoisted_30","_hoisted_31","_component_MDBBadge","pill","notification","_hoisted_32","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","priceByHour","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_43","removeBooking","props","Boolean","Array","loggedInUser","Object","confirmedBookings","String","data","chatUser","initializeChatRoom","chatRoomData","count","dt","dist","this","date","isAddFirstImage","isUploadImage","isUploaded","isImageCreated","isAddNewImage","file","isImageSelected","isAdditionalImageSelected","tempImages","imagesx","imagesxxx","roomUserCount","components","successMessage","VueDatePicker","recipientFinal","MDBBtn","MDBBtnClose","MDBContainer","MDBTable","MDBRow","MDBCol","MDBTextarea","MDBIcon","MDBBadge","methods","async","getMonth","getDate","getFullYear","recipientService","newDate","year","month","day","hours","getHours","minutes","getMinutes","updatedDate","$emit","e","files","target","tempImage","URL","createObjectURL","push","err","index","img","FormData","append","_id","image","imageService","updateImage","forEach","imgId","create","addImage","imgCreated","removeImage","remove","getDistance","user","content","initializeChat","initChatRoom","chatData","username","pressAdditionalImage","editDescription","cancelEditDescription","providerGetBooking","socket","emit","addProviderData","updateRecipient","recipientId","providerService","addProviderBooking","chatUserDataNavbar","userID","roomToDb","client","setTimeout","marker","reference","slide","thumb","subHtml","chatCredentials","proID","pro","providerUsername","providerID","addRoom","filterListedProviders","document","getElementById","addEventListener","event","result","confirm","cleanAllRecipientImages","loggedUserJSON","window","localStorage","getItem","JSON","parse","__exports__","render"],"sourceRoot":""}