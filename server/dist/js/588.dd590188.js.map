{"version":3,"file":"js/588.dd590188.js","mappings":"0PAESA,MAAQ,gB,UAEGC,EAAAA,EAAAA,GAAI,qB,UAC2EA,EAAAA,EAAAA,GAAI,qB,UAC1CA,EAAAA,EAAAA,GAAI,qB,iCAYxDD,MAAM,Y,GAQJE,MAAA,iB,UAC0FD,EAAAA,EAAAA,GAAI,qB,UAS7FA,EAAAA,EAAAA,GAEK,UAFD,cAEJ,K,UAMAA,EAAAA,EAAAA,GAEK,UAFD,aAEJ,K,uBASIE,QAAQ,K,SAC2BD,MAAA,uB,SAG3BA,MAAA,uB,6GA1DA,kBAAXE,EAAAC,SAAM,WAAjBC,EAAAA,EAAAA,IAcM,MAAAC,EAAA,EAbJN,EAAAA,EAAAA,GAWM,MAXNO,EAWM,UAXsB,QACxBP,EAAAA,EAAAA,GAAgC,UAAAQ,EAAAA,EAAAA,IAA3BL,EAAAM,IAAIC,QAAQ,GAAGC,QAAM,YAAM,SAClCH,EAAAA,EAAAA,IAAEL,EAAAM,IAAIG,QAAM,GAAEC,GACdC,EAAAA,EAAAA,IAA8CC,EAAA,CAA7BC,IAAMb,EAAAM,IAAIQ,OAAO,GAAGC,O,yBAAS,KAACV,EAAAA,EAAAA,IAAEL,EAAAM,IAAIQ,OAAO,GAAGE,KAAK,OAAGX,EAAAA,EAAAA,IAAEL,EAAAM,IAAIQ,OAAO,GAAGG,MAAI,GAAEC,GAAI,iBAC7Fb,EAAAA,EAAAA,IAAEL,EAAAM,IAAIQ,OAAO,GAAGK,OAAO,OAAGd,EAAAA,EAAAA,IAAEL,EAAAM,IAAIQ,OAAO,GAAGM,SAAO,GAAEC,EACrB,IAAzBrB,EAAAM,IAAIC,QAAQ,GAAGe,QAAK,WAA7BpB,EAAAA,EAAAA,IAAwH,IAAAqB,GAAAlB,EAAAA,EAAAA,IAAjFL,EAAAM,IAAIC,QAAQ,GAAGC,QAAQ,gCAA4BH,EAAAA,EAAAA,IAAEL,EAAAM,IAAIC,QAAQ,GAAGiB,SAAO,iBAClHtB,EAAAA,EAAAA,IAAuE,IAAAuB,GAAApB,EAAAA,EAAAA,IAA3DL,EAAAM,IAAIC,QAAQ,GAAGC,QAAQ,mCAAgC,KACnEG,EAAAA,EAAAA,IAESe,EAAA,CAFDC,MAAA,GAAMC,QAAQ,UAAWC,QAAKC,EAAA,KAAAA,EAAA,GAAAC,GAAEC,EAAAC,4BAA4BjC,EAAAM,O,mBAAM,IAE1E,UAF0E,kF,wBAQ9EJ,EAAAA,EAAAA,IAmEM,MAAAgC,EAAA,EAlEJrC,EAAAA,EAAAA,GAyDI,MAzDJsC,EAyDI,EAjDFtC,EAAAA,EAAAA,GAKM,MALNuC,EAKM,EAJJzB,EAAAA,EAAAA,IAA8CC,EAAA,CAA7BC,IAAMb,EAAAM,IAAIQ,OAAO,GAAGC,O,yBAAS,KAACV,EAAAA,EAAAA,IAAEL,EAAAM,IAAIQ,OAAO,GAAGE,KAAK,OAAGX,EAAAA,EAAAA,IAAEL,EAAAM,IAAIQ,OAAO,GAAGG,MAAI,GAAEoB,GAAI,iBAEjGhC,EAAAA,EAAAA,IAAEL,EAAAM,IAAIQ,OAAO,GAAGK,OAAS,GAAKnB,EAAAM,IAAIQ,OAAO,GAAGK,MAAQ,IAAMnB,EAAAM,IAAIQ,OAAO,GAAGK,OAAQ,OAChFd,EAAAA,EAAAA,IAAGL,EAAAM,IAAIQ,OAAO,GAAGM,SAAO,GAAUpB,EAAAM,IAAIQ,OAAO,GAAGM,QAAU,IAAMpB,EAAAM,IAAIQ,OAAO,GAAGM,SAAO,KAG1D,iBAAXpB,EAAAC,SAAM,WAAtBqC,EAAAA,EAAAA,IAgCWC,EAAA,C,MAhCgCC,WAAA,GAAW1C,MAAA,mF,mBACpD,IA8BQ,EA9BRD,EAAAA,EAAAA,GA8BQ,eA7BRA,EAAAA,EAAAA,GAOK,WANH4C,GAGA5C,EAAAA,EAAAA,GAEK,WAAAQ,EAAAA,EAAAA,IADDL,EAAAM,IAAIG,QAAM,MAGhBZ,EAAAA,EAAAA,GAUK,WATH6C,EAGmC,IAAzB1C,EAAAM,IAAIC,QAAQ,GAAGe,QAAK,WAA9BpB,EAAAA,EAAAA,IAEK,KAAAyC,GAAAtC,EAAAA,EAAAA,IADDL,EAAAM,IAAIC,QAAQ,GAAGiB,SAAO,iBAE1BtB,EAAAA,EAAAA,IAEK,KAAA0C,GAAAvC,EAAAA,EAAAA,IADDL,EAAAM,IAAIkB,SAAO,OAGjB3B,EAAAA,EAAAA,GASK,YARHA,EAAAA,EAAAA,GAOK,KAPLgD,EAOK,CAN+B,IAAzB7C,EAAAM,IAAIC,QAAQ,GAAGe,QAAK,WAA7BpB,EAAAA,EAAAA,IAEI,IAFJ4C,EAAiE,yBAEjE,WACA5C,EAAAA,EAAAA,IAEI,IAFJ6C,EAAsC,sC,oDAmCpD,GACEC,KAAM,OACNC,MAAO,CACLhD,OAAQiD,OACR5C,IAAK6C,QAEPC,WAAY,CAEVC,OAAM,KACNC,SAAQ,KACRC,eAAcA,EAAAA,GAEhBC,QAAS,CACPC,0BAA2BC,GACzBC,KAAKC,MAAM,sBAAuBF,EACpC,EACAzB,4BAA6ByB,GAC3BC,KAAKC,MAAM,+BAAgCF,EAC7C,I,QCzGJ,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O,qLCiC8BlE,MAAM,iBAAiBmE,KAAK,U,UAChDlE,EAAAA,EAAAA,GAA+C,QAAzCD,MAAM,mBAAkB,cAAU,K,GAAxCsB,G,mBAOyD8C,GAAG,c,GAC7CpE,MAAM,e,UAEXC,EAAAA,EAAAA,GAEM,OAFDD,MAAM,aAAY,4BAEvB,K,GACKA,MAAM,gB,GACJA,MAAM,4D,GACHA,MAAM,uH,SAqCmDoE,GAAG,wB,GACnEpE,MAAM,e,GAENA,MAAM,uB,GAGNA,MAAM,0B,GAKFA,MAAM,gB,aA4DZA,MAAM,gB,kMArKzBM,EAAAA,EAAAA,IAqMM,aAnMJS,EAAAA,EAAAA,IAgMesD,EAAA,CAhMDnE,MAAA,uBAAwB,C,kBAEpC,IAkCM,CAlCKoE,EAAAC,YAAS,WAApBjE,EAAAA,EAAAA,IAkCM,MAAAC,EAAA,EAjCJQ,EAAAA,EAAAA,IAgCEyD,EAAA,CA/BGC,KAAOrE,EAAAqE,KACPX,QAAUQ,EAAAR,QACVY,OAASJ,EAAAI,OACTC,YAAcL,EAAAM,kBAEdC,UAAYP,EAAAQ,0BACZC,kBAAoBT,EAAAS,kBACpBC,KAAOV,EAAAU,KACPC,oBAAoB7C,EAAA8C,wBACpB,sBAAoB9C,EAAA+C,kBACpB,8BAA4B/C,EAAAgD,wBAC5BC,gBAAgBjD,EAAAkD,oBAChB,kBAAgBlD,EAAAmD,mBAEhBC,kBAAkBpD,EAAAqD,sBAElBC,WAAWtD,EAAAuD,eACXC,YAAYxD,EAAAyD,gBACZC,cAAc1D,EAAA2D,kBAEdC,YAAYC,EAAAC,UACZC,UAAY/F,EAAA+F,UACZC,aAAehG,EAAAgG,aACfC,SAAWjG,EAAAiG,SACXC,SAASlE,EAAAmE,WACTC,WAAWpE,EAAAqE,aACXC,UAAUtE,EAAAsE,UACVC,iBAAiBvE,EAAAwE,qBACjBC,kBAAkBzE,EAAA0E,qBAElBC,YAAY3E,EAAA4E,W,maAGnB1G,EAAAA,EAAAA,IAuJM,MAAAE,EAAA,CArJO8D,EAAA2C,YAAS,WAApB3G,EAAAA,EAAAA,IAEM,MAFNQ,EAEMW,MAAA,WACNnB,EAAAA,EAAAA,IAgJM,MAAAqB,EAAA,EA9IJZ,EAAAA,EAAAA,IAqCSmG,EAAA,M,kBAnCP,IA+BS,EA/BTnG,EAAAA,EAAAA,IA+BSoG,EAAA,CA/BDC,GAAG,KAAG,C,kBACZ,IA6BQ,CA7BKhH,EAAAiH,4BAA4BC,OAAS,IAAH,WAA/ChH,EAAAA,EAAAA,IA6BQ,QA7BRuB,EA6BQ,EA5BN5B,EAAAA,EAAAA,GA2BU,UA3BVqC,EA2BU,EA1BRrC,EAAAA,EAAAA,GAyBM,YAxBJsC,GAGAtC,EAAAA,EAAAA,GAoBM,MApBNuC,EAoBM,EAnBJvC,EAAAA,EAAAA,GAUM,MAVNwC,EAUM,EATJxC,EAAAA,EAAAA,GAQM,MARN4C,EAQM,gBANJvC,EAAAA,EAAAA,IAKEiH,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAJiBpH,EAAAiH,6BAARI,K,WADX/E,EAAAA,EAAAA,IAKEgF,EAAA,CAJ+CC,IAAKF,EAAKrD,GACvD/D,OAAS,gBACRK,IAAM+G,EACN,iCAA+BrF,EAAAwF,mC,iGAiBlD7G,EAAAA,EAAAA,IAESoG,EAAA,CAFDjH,MAAA,8BAAmCkH,GAAG,K,mBAC5C,IAA+E,EAA/EnH,EAAAA,EAAAA,GAA+E,UAA3E,0BAAsBQ,EAAAA,EAAAA,IAAEL,EAAAyH,kBAAkBP,QAAQ,uBAAoB,M,8BAW9EhH,EAAAA,EAAAA,IA6FSiH,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IA7F0BpH,EAAAyH,mBAAiB,CAApC/D,EAASgE,M,WAAzBpF,EAAAA,EAAAA,IA6FSwE,EAAA,CA7F8CS,IAAKG,EAAO9H,MAAM,Y,mBAEvE,IA4DQ,CA5DKI,EAAA2H,0BAA0BC,MAAKC,GAAOA,EAAI7D,KAAON,EAAQM,OAAE,WAAxE9D,EAAAA,EAAAA,IA4DQ,QA5DRwC,EA4DQ,EA3DN7C,EAAAA,EAAAA,GA0DU,UA1DV8C,EA0DU,EAzDR9C,EAAAA,EAAAA,GAwDM,aAvDJA,EAAAA,EAAAA,GAEM,MAFN+C,GAEMvC,EAAAA,EAAAA,IADDqD,EAAQoE,gBAAqEpE,EAAQqE,OAAOb,OAAS,EAAIxD,EAAQqE,OAAOb,OAAS,aAAe,sBAAtH,iDAAoG,IAEnIrH,EAAAA,EAAAA,GAmDM,MAnDNgD,EAmDM,EAjDJlC,EAAAA,EAAAA,IA2BSmG,EAAA,M,kBA1BP,IAOS,EAPTnG,EAAAA,EAAAA,IAOSoG,EAAA,M,kBANP,IAAgB,mBAAdrD,EAAQsE,MAAM,IAChB,IAAAnI,EAAAA,EAAAA,GAII,IAJJiD,EAAwB,SAEtBzC,EAAAA,EAAAA,IAAEqD,EAAQ5C,OAAO,GAAGK,OAAS,GAAKuC,EAAQ5C,OAAO,GAAGK,MAAQ,IAAMuC,EAAQ5C,OAAO,GAAGK,OAAQ,OAC5Fd,EAAAA,EAAAA,IAAGqD,EAAQ5C,OAAO,GAAGM,SAAO,GAAUsC,EAAQ5C,OAAO,GAAGM,QAAU,IAAMsC,EAAQ5C,OAAO,GAAGM,SAAO,M,YAGrGT,EAAAA,EAAAA,IAESoG,EAAA,M,kBADP,IAAkB,mBAAhBrD,EAAQjD,QAAM,M,YAGlBE,EAAAA,EAAAA,IAaSoG,EAAA,M,kBAVP,IAAuG,EAAvGpG,EAAAA,EAAAA,IAAuGe,EAAA,CAA/FE,QAAQ,UAAUqG,KAAK,KAAMpG,QAAKE,GAAEC,EAAAkG,sBAAsBxE,EAAQM,GAAIN,I,mBAAU,IAAM,UAAN,a,yEAwCpGxD,EAAAA,EAAAA,IAuBQ,QAAA6C,EAAA,EAtBNpC,EAAAA,EAAAA,IAoBSmG,EAAA,CApBAlH,OAAKuI,EAAAA,EAAAA,IAAA,CAAAC,cAAkB1E,EAAQ2E,YAAa,IAAIC,MAAOC,WAAa,K,mBAC3E,IAUS,EAVT5H,EAAAA,EAAAA,IAUSoG,EAAA,M,kBATP,IAEO,EAFPlH,EAAAA,EAAAA,GAEO,QAFAD,OAAKuI,EAAAA,EAAAA,IAAA,CAAAK,aAAiB9E,EAAQ2E,YAAa,IAAIC,MAAOC,WAAa,M,QACtE7E,EAAQsE,MAAI,IAGhBnI,EAAAA,EAAAA,GAII,IAJJ4I,EAAwB,SAEtBpI,EAAAA,EAAAA,IAAEqD,EAAQ5C,OAAO,GAAGK,OAAS,GAAKuC,EAAQ5C,OAAO,GAAGK,MAAQ,IAAMuC,EAAQ5C,OAAO,GAAGK,OAAQ,OAC5Fd,EAAAA,EAAAA,IAAGqD,EAAQ5C,OAAO,GAAGM,SAAO,GAAUsC,EAAQ5C,OAAO,GAAGM,QAAU,IAAMsC,EAAQ5C,OAAO,GAAGM,SAAO,M,YAIrGT,EAAAA,EAAAA,IAESoG,EAAA,M,kBADP,IAAkB,mBAAhBrD,EAAQjD,QAAM,M,YAElBE,EAAAA,EAAAA,IAGSoG,EAAA,M,kBAFP,IAA+J,CAAjJrD,EAAQ2E,YAAa,IAAIC,MAAOC,UAAY,IAAL,WAArDjG,EAAAA,EAAAA,IAA+JZ,EAAA,C,MAAlGE,QAAQ,OAAOD,MAAA,GAAMsG,KAAK,KAAMpG,QAAKE,GAAEC,EAAAkG,sBAAsBxE,EAAQM,GAAIN,I,mBAAU,IAAM,UAAN,a,qCAChJpB,EAAAA,EAAAA,IAAwHZ,EAAA,C,MAAzGE,QAAQ,SAASD,MAAA,GAAMsG,KAAK,KAAMpG,QAAKE,GAAEC,EAAAkG,sBAAsBxE,EAAQM,GAAIN,I,mBAAU,IAAW,UAAX,kB,yFAS5G/C,EAAAA,EAAAA,IAAwFe,EAAA,CAAhFE,QAAQ,OAAOD,MAAA,GAAMsG,KAAK,KAAMpG,QAAOG,EAAA0G,Y,mBAAY,IAAoB,UAApB,2B,qJA8CrE,GACE1F,KAAM,kBACNC,MAAO,CACLoB,KAAMsE,QACN5C,UAAW6C,MAEX5C,aAAc,KACdC,SAAU2C,MACVC,cAAe,KACfpB,kBAAmBmB,MAEnBjB,0BAA2BiB,MAC3B3B,4BAA6B2B,OAG/BE,OACE,MAAO,CACL9E,GAAI,GACJ6C,WAAW,EACXvC,OAAQ,GACRyE,OAAQ,KAGRC,SAAUrF,KAAK8D,kBACfwB,SAAU,CAAC,EACXvF,QAAS,KACTwF,eAAe,EACfC,YAAa,GACbC,cAAe,KACfC,eAAe,EACfC,wBAAyB,GACzBC,EAAG,KAEH5E,kBAAmB,GAEnB6E,wBAAyB,GAEzBrF,WAAW,EAEXO,0BAA2B,GAC3B+E,6BAA8B,KAC9B7E,KAAM,GACNJ,kBAAmB,KACnBkF,mBAAoB,GACpBC,cAAe,GAEnB,EACAC,QACE,MAAMC,GAAcC,EAAAA,EAAAA,KAAI,GACxB,MAAO,CACLD,cAEJ,EACAzG,WAAY,CAKV2G,SAAQ,aACRC,YAAW,IACXC,gBAAe,aAEf5G,OAAM,KACN6G,aAAY,KACZC,OAAM,KACNC,OAAM,KACNC,YAAW,KACXC,SAAQA,EAAAA,IAEVC,gBAcE,MAAMC,EAAiBC,OAAOC,aAAaC,QAAQ,iBACnD,GAAKH,EAEE,CACL,MAAMI,EAAOC,KAAKC,MAAMN,GACxB7G,KAAKoF,OAAS6B,EAAK5G,GAEnBL,KAAKsF,eAAiB8B,EAAAA,EAAgBC,YAAYJ,EAAK5G,IAEvDL,KAAKsH,yBAEP,MATEtH,KAAKuH,QAAQC,KAAK,IAWtB,EACA3H,QAAS,CAEP+G,0BAA2B7G,GACzB,MAAM0H,QAAwBC,EAAAA,EAAiBC,eAAe5H,EAAQM,IACtEuH,QAAQC,IAAI,cAAgB9H,EAAQM,IACpCuH,QAAQC,IAAI,kCAAoCJ,EAAgB7K,QAAQ,GAAGqK,KAAK5G,IAChF,MAAMyH,EAAOL,EAAgB7K,QAAQ,GAAGC,OAASkD,EAAQkH,KAAKc,SAExDC,EAAa,CACjB1L,OAAQ,WAEJ2L,QAA6BP,EAAAA,EAAiBQ,gBAAgBnI,EAAQM,GAAI2H,GAChFJ,QAAQC,IAAI,8BAAgCI,EAAqB3L,QAEjE0D,KAAKC,MAAM,yBAA0BwH,EAAiBA,EAAgB7K,QAAQ,GAAGyD,GAAIyH,GAErFK,EAAAA,EAAOC,KAAK,2BAA4B,CACtC/H,GAAIoH,EAAgB7K,QAAQ,GAAGqK,KAAK5G,GACpCyH,KAAMA,EACN/H,QAASA,EACTsI,OAAQrI,KAAK2F,0BAGf3F,KAAKuF,eAAgB,CAiBvB,EACApE,wBAAyBpB,EAASuI,GAChCtI,KAAKa,kBAAoB,IAAI8D,KAAK2D,EAAGhL,KAAMgL,EAAGlL,MAAOkL,EAAGjL,IAAKiL,EAAG9K,MAAO8K,EAAG7K,SAC1EuC,KAAKC,MAAM,oBAAqBF,EAAS,IAAI4E,KAAK2D,EAAGhL,KAAMgL,EAAGlL,MAAOkL,EAAGjL,IAAKiL,EAAG9K,MAAO8K,EAAG7K,SAASmH,WACnGgD,QAAQC,IAAI,uBAAyB7H,KAAKa,kBAE5C,EACA0H,0BAA2BxE,GACzB/D,KAAKyF,cAAgB1B,EACrB6D,QAAQC,IAAI,SAAW9D,GACvB6D,QAAQC,IAAI,kBAAoB7H,KAAKyF,eACrCzF,KAAKuF,eAAgB,CACvB,EACAiD,4BACExI,KAAKuF,eAAgB,EACrBvF,KAAKyF,cAAgB,IACvB,EACAjD,WAAYyE,GACVjH,KAAKC,MAAM,cAAegH,EAC5B,EACAvE,eACE1C,KAAKC,MAAM,aACb,EACA0C,UAAW8F,EAASpE,GAClBrE,KAAKC,MAAM,aAAcwI,EAASpE,EACpC,EAwBApB,UAAWkC,GACTnF,KAAKC,MAAM,YAAakF,EAC1B,EAKAtC,qBAAsBsC,GACpBnF,KAAKC,MAAM,iBAAkBkF,EAC/B,EACAyB,gCACE,IAAIvB,QAAiBqC,EAAAA,EAAiBgB,eAAe1I,KAAKoF,QAM1DpF,KAAKgB,kBAAoBqE,EAASsD,QAAO5I,GAA8B,cAAnBA,EAAQzD,SAG5D0D,KAAK6F,wBAA0BR,EAASsD,QAAOC,GAAoB,YAAdA,EAAGtM,QAAsC,SAAdsM,EAAGtM,SAO/E0D,KAAK8D,kBAAoB,IACtB9D,KAAK8D,kBAAkB,GAAG3G,OAAOC,QACpC4C,KAAKkD,WAAY,GAQvB,EAEA0D,4BAA6BvG,EAAIN,GAK/BC,KAAKD,QAAUA,EAIXC,KAAKD,QAAQ8I,QACf7I,KAAKW,OAASX,KAAKD,QAAQ8I,OAU7BjB,QAAQC,IAAI,eAAiB7H,KAAKD,QAAQ+I,cAC1C,IAAIC,EAAO,GAGXA,EAAO/I,KAAKD,QAAQ+I,aACpBlB,QAAQC,IAAI,uBAAyB7H,KAAKD,QAAQ+I,aAAavF,QAO/DvD,KAAKa,kBAAoB,IAAI8D,KAAK5E,EAAQ5C,OAAO,GAAGG,KAAMyC,EAAQ5C,OAAO,GAAGC,MAAO2C,EAAQ5C,OAAO,GAAGE,IAAK0C,EAAQ5C,OAAO,GAAGK,MAAOuC,EAAQ5C,OAAO,GAAGM,SACrJmK,QAAQC,IAAI,uBAAyB9H,EAAQ5C,OAAO,GAAGE,KAEvDuK,QAAQC,IAAI,OAAS7H,KAAKa,kBAAkB+D,WAE5C5E,KAAKiB,KAAO8H,EAAK,GAGjB/I,KAAKe,gCAAkCqG,EAAAA,EAAgB4B,iCACnD,CAACC,OAAQF,IAIb/I,KAAKe,0BAA4Bf,KAAKe,0BAA0B4H,QAAOO,GAAOA,EAAIjC,KAAK5G,KAAOL,KAAKoF,SAGnG,MAAM+D,EAAoBA,CAACC,EAASjE,IAAS,IAAIkE,SAAQ,CAACC,EAASC,KACjEH,EAAQD,kBAAkBhE,GAAM,CAACqE,EAAUlN,KAC3B,OAAXA,EACDgN,EAAQE,GAERD,EAAOC,EACT,GACA,IAIJ,IAAIC,EAAQ,GACRC,EAAM,GAINC,EAAY5J,EAAQ6J,SACpBC,EAAY9J,EAAQ+J,UACxBL,EAAQ,CAACE,EAAWE,GACpB7J,KAAKe,0BAA0BgJ,SAAQb,IACrC,IAAIc,EAAiBd,EAAIU,SAErBK,EAAiBf,EAAIY,UACzBJ,EAAM,CAACM,EAAgBC,GAGvB,MAAMC,EAActD,MAAO6C,EAAOC,KAChC,MAAMS,EAAS,IAAIC,OAAOC,KAAKC,OAAOb,EAAM,GAAIA,EAAM,IAChDc,EAAQ,IAAIH,OAAOC,KAAKC,OAAOZ,EAAI,GAAIA,EAAI,IAC3CN,EAAU,IAAIgB,OAAOC,KAAKG,sBAC1BvB,QAAeE,EACjBC,EACA,CACEqB,QAAS,CAACN,GACVO,aAAc,CAACH,GACfI,WAAY,YAGlB,MAAO,CACLC,UAAW3B,EAAO4B,KAAK,GAAGC,SAAS,GAAGF,SAASG,MAAQ,KAAMC,QAAQ,GACrEC,SAAUhC,EAAO4B,KAAK,GAAGC,SAAS,GAAGG,SAASC,KAC/C,EAGHhB,EAAYT,EAAOC,GAAKyB,MAAKC,IAE3BlC,EAAI0B,SAAWQ,EAAIR,SACnB1B,EAAI+B,SAAWG,EAAIH,QAAQ,GAC3B,IAKJjL,KAAKQ,WAAY,CACnB,EACAuC,qBAAsB0F,GACpBb,QAAQC,IAAI,yBAA2BY,GACvB,aAAZA,EACFzI,KAAKe,0BAA0BsK,MAAK,CAACC,EAAGC,IAAMD,EAAEV,SAAWW,EAAEX,WACxC,WAAZnC,GACTzI,KAAKe,0BAA0BsK,MAAK,CAACC,EAAGC,IAAMD,EAAEE,OAAOC,SAAWF,EAAEC,OAAOC,WAI7EzL,KAAK0L,0BAGP,EACAC,yBACE/D,QAAQC,IAAI,cACd,EACA6D,2BACE9D,QAAQC,IAAI,aAEZ7H,KAAKe,0BAA0BgJ,SAAQb,IACrCtB,QAAQC,IAAI,kBAAoB7H,KAAKa,mBACjCqI,EAAI0C,UACN1C,EAAI0C,UAAU7B,SAAQ8B,IAEhBC,EAAAA,EAAYC,0BACR/L,KAAKa,kBACL,CAACmL,EAAGH,EAAKI,SAAUC,EAAGL,EAAKM,UAAWvG,EAAGiG,EAAKO,QAASC,KAAMR,EAAKS,UAAWC,IAAKV,EAAKW,aACvF,CAACR,EAAGH,EAAKY,OAAQP,EAAGL,EAAKa,QAAS9G,EAAGiG,EAAKc,MAAON,KAAMR,EAAKe,QAASL,IAAKV,EAAKgB,aAGrFjF,QAAQC,IAAI,gBAAkBqB,EAAIrM,QAClCmD,KAAK+F,mBAAmByB,KAAK0B,KAE7BtB,QAAQC,IAAI,oCAAsCqB,EAAIrM,QACtDmD,KAAKgG,cAAcwB,KAAK0B,GAC1B,IAGFtB,QAAQC,IAAI,uBACd,IAIFD,QAAQC,IAAI,oBAAsB7H,KAAK+F,mBAAmBxC,QAC1DqE,QAAQC,IAAI,wBAA0B7H,KAAKgG,cAAczC,OAE3D,EACAnC,kBAAmB0L,EAAQ/M,EAASgN,GAClCnF,QAAQC,IAAI,mBAAqB9H,EAAQM,IAEzCL,KAAKC,MAAM,iBAAkBF,EAAQM,IAErCL,KAAK6F,wBAA0B7F,KAAK6F,wBAAwBmH,OAAOhN,KAAKD,QAE1E,EACAgF,aAEE/E,KAAKuH,QAAQC,KAAK,MAGpB,EACAnG,wBAAyByL,EAAQ/M,EAASgN,GACxC/M,KAAKwF,YAAcuH,EAAejF,KAClC9H,KAAKe,0BAA4Bf,KAAKe,0BAA0B4H,QAAOsE,GAAQA,EAAK5M,KAAOyM,IAC3F9M,KAAKC,MAAM,oBAAqBF,EAAUgN,GAC1CnF,QAAQC,IAAI,sBAAwBkF,EAAe1N,MACnDW,KAAKQ,WAAY,CACnB,EACA0M,UACE,MAAMxM,EAAO,sBACbV,KAAKuH,QAAQC,KAAK,oBAAqB,CAAC2F,OAAQzM,GAElD,EACA0M,cACExF,QAAQC,IAAI,aAAejI,EAAAA,EAAexC,MAAM,GAIlD,EACAiQ,iCAEA,EACA3L,sBAAuB4L,GACrBtN,KAAKD,QAAQuN,YAAcA,CAC7B,EACA1G,qBAAsBiC,EAAO0E,GAC3B3F,QAAQC,IAAI,sBAAwBgB,EAAM2E,KAC1C5F,QAAQC,IAAI,yBAA2BgB,EAAMA,OAC7CjB,QAAQC,IAAI,wBAA0BgB,EAAMxJ,MAC5CW,KAAKC,MAAM,8BAA+B4I,EAAO0E,GACjDvN,KAAKW,OAAS,IACPX,KAAKW,OACRkI,EAON,EACA/G,gBAAiBiC,EAAO1D,EAAIoN,IAEX,IAAX1J,IACF/D,KAAKW,OAAOoD,GAAS,CAACyJ,IAAKnN,EAAIoN,KAAMA,GAGzC,EAaA7G,wBAAyB8G,GAGvB1N,KAAKW,OAAOgN,OAAOD,EAAS,GAC5B9F,QAAQC,IAAI,2BACd,EACArG,mBAAoBoM,GAClBhG,QAAQC,IAAI,aAAe+F,GAC3B5N,KAAKQ,UAAYoN,CACnB,EACAhH,wCAAyC7G,GAEvCC,KAAKC,MAAM,4BAA6BF,GAGxCoI,EAAAA,EAAOC,KAAK,kBAAmB,CAC7B/H,GAAIN,EAAQnD,QAAQ,GAAGqK,KAAK5G,GAC5ByH,KAAM/H,EAAQnD,QAAQ,GAAGC,OAASkD,EAAQkH,KAAKc,iBAG3CL,EAAAA,EAAiBQ,gBAAgBnI,EAAQM,GAAI,CAAC/D,OAAQ,aAC9D,EAGAsK,0BAA2BvG,GACzBuH,QAAQC,IAAI,uBAAyBxH,GACrCL,KAAKQ,WAAY,EAEjBR,KAAKC,MAAM,kBAAmBI,EAKhC,I,QClsBJ,MAAMH,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://prore-mongo/./src/components/CompletedBookingPanel.vue","webpack://prore-mongo/./src/components/CompletedBookingPanel.vue?ee6e","webpack://prore-mongo/./src/pages/RecipientPanel.vue","webpack://prore-mongo/./src/pages/RecipientPanel.vue?32f9"],"sourcesContent":["<template>\n  <div v-if=\"status === 'for-recipient'\">\n    <div class = \"waiting-info\">\n      ( <b>{{msg.ordered[0].yritys}}</b> )  -\n      {{msg.header}}<br>\n      <monthConverter :num=\" msg.onTime[0].month\" /> {{msg.onTime[0].day}} / {{msg.onTime[0].year}}<br>\n      klo {{msg.onTime[0].hours}} : {{msg.onTime[0].minutes}}<br>\n      <p v-if=\"msg.ordered[0].range === 0\">{{msg.ordered[0].yritys}} odottaa sinua osoitteseen: {{msg.ordered[0].address}}</p>\n      <p v-else>{{msg.ordered[0].yritys}} tulossa sovittuun osoitteeseen!</p>\n      <MDBBtn block outline=\"warning\" @click=\"removeComplitedBookingPanel(msg)\">\n        (Kustub muidu kui aeg läbi saab) - Saab eemaldada kohe (ajutine lahendus)\n      </MDBBtn>\n\n    </div>\n\n  </div>\n\n  <div v-else>\n    <div class=\"pro-info\">\n<!--      <MDBBtnClose-->\n<!--          white-->\n<!--          class=\"closeConfirmedBooking\"-->\n<!--          @click=\"removeCompletedBookingPro(msg)\"-->\n<!--      />-->\n<!--      <div  >-->\n\n      <div style=\"float: right;\">\n        <monthConverter :num=\" msg.onTime[0].month\" /> {{msg.onTime[0].day}} / {{msg.onTime[0].year}}<br>\n        klo\n        {{msg.onTime[0].hours >= 10 ? msg.onTime[0].hours : \"0\" + msg.onTime[0].hours }} :\n        {{(msg.onTime[0].minutes) >= 10 ? msg.onTime[0].minutes : \"0\" + msg.onTime[0].minutes}}\n      </div>\n\n        <MDBTable v-if=\"status === 'for-provider'\" borderless style=\"font-size: 18px; color: #ddd; text-align: left; padding: 10px; width: 100%;\">\n          <tbody>\n          <tr>\n            <td>\n              Sovittu:\n            </td>\n            <td>\n              {{msg.header}}\n            </td>\n          </tr>\n          <tr>\n            <td>\n              Paikka:\n            </td>\n            <td v-if=\"msg.ordered[0].range === 0\">\n              {{msg.ordered[0].address}}\n            </td>\n            <td v-else>\n              {{msg.address}}\n            </td>\n          </tr>\n          <tr>\n            <td colspan=\"2\">\n              <p v-if=\"msg.ordered[0].range === 0\" style=\"color: deepskyblue;\">\n                Asiakas tulossa!\n              </p>\n              <p v-else style=\"color: deepskyblue;\">\n                Meno asiakkaan luonna!\n              </p>\n            </td>\n          </tr>\n          </tbody>\n        </MDBTable>\n\n<!--      </div>-->\n<!--      <div v-else-if=\"status === 'recipient'\">-->\n<!--        <b>{{msg.provider}}</b> - -->\n<!--        {{msg.header}}-->\n<!--        <monthConverter :num=\" msg.onTime[0].month\" />, {{msg.onTime[0].day}}, {{msg.onTime[0].year}}-->\n<!--        kello-->\n<!--        {{msg.onTime[0].hours}} : {{msg.onTime[0].minutes}}-->\n<!--      </div>-->\n  </div>\n\n\n\n\n\n\n\n\n  </div>\n</template>\n\n<script>\nimport {\n  //MDBBtnClose,\n  MDBBtn,\n  MDBTable\n} from 'mdb-vue-ui-kit'\nimport monthConverter from './controllers/month-converter'\nexport default {\n  name: \"Info\",\n  props: {\n    status: String,\n    msg: Object,\n  },\n  components: {\n    //MDBBtnClose,\n    MDBBtn,\n    MDBTable,\n    monthConverter\n  },\n  methods: {\n    removeCompletedBookingPro (booking) {\n      this.$emit('remove:proConfirmed', booking);\n    },\n    removeComplitedBookingPanel (booking) {\n      this.$emit('remove:complitedBookingPanel', booking)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.pro-info {\n  width: 100%;\n  color: #f5f532;\n  background: #141414;\n  font-size: 20px;\n  border: 1px solid #f0f022;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n\n}\n.waiting-info {\n  width: 100%;\n  color: #f5f532;\n  /*background: #f5f532;*/\n  font-size: 20px;\n  border: 1px solid #acbbbc;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n.waiting-info b {\n  color: #db8932;\n}\n.waiting-info p {\n  color: deepskyblue;\n}\n.closeConfirmedBooking {\n  float: right;\n}\n</style>","import { render } from \"./CompletedBookingPanel.vue?vue&type=template&id=adbda04c&scoped=true\"\nimport script from \"./CompletedBookingPanel.vue?vue&type=script&lang=js\"\nexport * from \"./CompletedBookingPanel.vue?vue&type=script&lang=js\"\n\nimport \"./CompletedBookingPanel.vue?vue&type=style&index=0&id=adbda04c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-adbda04c\"]])\n\nexport default __exports__","<template>\n  <div>\n\n    <MDBContainer style=\"margin-top: 50px\">\n\n      <div v-if=\"isBooking\">\n        <recipientResult\n            :test = test\n            :booking = booking\n            :images = images\n            :bookingTime = recipientDateTime\n\n            :providers = providerMatchByProfession\n            :confirmedBookings = confirmedBookings\n            :line = line\n            @updateBookingDate = handleUpdateBookingDate\n            @set:order:to:send = handleOrderToSend\n            @client:confirmed_provider = handleConfirmedProvider\n            @removeBooking = handleRemoveBooking\n            @cansel:result = handleCanselResult\n\n            @editDescription = handleEditDescription\n\n            @addImage = handleAddImage\n            @editImage = handleEditImage\n            @removeImage = handleRemoveImage\n\n            @finalinfo = finalinfo\n            :chatusers = chatusers\n            :selecteduser = selecteduser\n            :messages = messages\n            @select = selectUser\n            @noSelect = noSelectUser\n            @message = onMessage\n            @initializeChat = handleInitializeChat\n            @filter_provider = handleFilterProvider\n\n            @otherUser = otherUser\n        />\n      </div>\n      <div v-else>\n\n        <div v-if=\"isSpinner\" class=\"spinner-border\" role=\"status\">\n          <span class=\"visually-hidden\">Loading...</span>\n        </div>\n        <div v-else>\n\n          <MDBRow>\n\n            <MDBCol md=\"8\" >\n              <aside v-if=\"confirmedBookingsByProvider.length > 0\" id=\"info-block\" >\n                <section class=\"file-marker\">\n                  <div>\n                    <div class=\"box-title\">\n                      Vahvistetut varaukset!\n                    </div>\n                    <div class=\"box-contents\">\n                      <div class=\"flex flex-wrap align-items-center justify-content-center\">\n                        <div  class=\"scalein animation-duration-3000 animation-iteration flex align-items-center justify-content-center\n                          font-bold   w-full \">\n                          <bookingInfo\n                              v-for=\"item in confirmedBookingsByProvider\" :key=\"item.id\"\n                              status = \"for-recipient\"\n                              :msg = item\n                              @remove:complitedBookingPanel = handleRemoveComplitedBookingPanel\n                          />\n                        </div>\n                      </div>\n\n<!--                      <bookingInfo-->\n<!--                          v-for=\"item in confirmedBookingsByProvider\" :key=\"item.id\"-->\n<!--                          status = \"for-recipient\"-->\n<!--                          :msg = item-->\n<!--                          @remove:complitedBookingPanel = handleRemoveComplitedBookingPanel-->\n<!--                      />-->\n\n                    </div>\n                  </div>\n                </section>\n              </aside>\n            </MDBCol>\n            <MDBCol style=\"padding: 20px 5px 20px 5px\" md=\"4\">\n              <h3>Sinulla on hetkellä - {{recipientBookings.length}} - avointa tilausta:</h3>\n            </MDBCol>\n          </MDBRow>\n\n\n\n\n\n\n\n\n          <MDBRow v-for=\"(booking, index) in recipientBookings\" :key=\"index\" class=\"bookings\">\n\n            <aside v-if=\"confirmedBookingsByClient.some(ccb => ccb.id === booking.id)\" id=\"info-block-confirmed\" >\n              <section class=\"file-marker\">\n                <div>\n                  <div class=\"box-title-confirmed\">\n                    {{!booking.isIncludeOffers ? \"Varaus on vierellä kun tarjoajaa vahvista sen\" : (booking.offers.length > 0 ? booking.offers.length + ' tarjousta' : \"Ei vielä varauksia!\")}}\n                  </div>\n                  <div class=\"box-contents-confirmed\">\n\n                    <MDBRow>\n                      <MDBCol>\n                        {{booking.date}}\n                        <p class=\"booking_time\">\n                          klo\n                          {{booking.onTime[0].hours >= 10 ? booking.onTime[0].hours : \"0\" + booking.onTime[0].hours }} :\n                          {{(booking.onTime[0].minutes) >= 10 ? booking.onTime[0].minutes : \"0\" + booking.onTime[0].minutes}}\n                        </p>\n                      </MDBCol>\n                      <MDBCol>\n                        {{booking.header}}\n                      </MDBCol>\n\n                      <MDBCol >\n<!--                        <MDBBtn v-if=\"index === selectedIndex\" outline=\"danger\" block size=\"lg\" @click=\"canselQuitSelectedBooking\">Poistu</MDBBtn>-->\n<!--                        <MDBBtn v-else color=\"danger\" @click=\"handleQuitSelectedBooking(index)\" >Lopettaa tilaus</MDBBtn>-->\n                        <MDBBtn outline=\"success\" size=\"lg\" @click=\"handleRecipientResult(booking.id, booking)\">Varaus</MDBBtn>\n<!--                        <MDBBadge-->\n\n<!--                            color=\"success\"-->\n<!--                            class=\"translate-middle p-2\"-->\n<!--                            pill-->\n<!--                            notification-->\n<!--                        >-->\n<!--                          13-->\n<!--                        </MDBBadge>-->\n                      </MDBCol>\n                    </MDBRow>\n<!--                    <MDBRow v-if=\"selectedIndex === index\">-->\n\n<!--                      <MDBCol lg=\"8\" style=\"text-align: center;\">-->\n<!--                        <MDBTextarea-->\n<!--                            v-if=\"isQuitBooking\"-->\n<!--                            white-->\n<!--                            style=\"\"-->\n<!--                            v-model=\"clientQuitBookingReason\"-->\n<!--                            label=\"Anna syy...\"-->\n<!--                            rows=\"3\"-->\n<!--                        >-->\n\n<!--                        </MDBTextarea>-->\n\n<!--                      </MDBCol>-->\n<!--                      <MDBCol lg=\"4\">-->\n<!--                        <MDBBtn v-if=\"isQuitBooking && clientQuitBookingReason.length > 3\" block color=\"success\" size=\"lg>\" style=\"margin-top: 10px;\" @click=\"clientRejectBooking(booking)\">Varmista</MDBBtn>-->\n<!--                      </MDBCol>-->\n\n<!--                    </MDBRow>-->\n\n                  </div>\n                </div>\n              </section>\n            </aside>\n\n\n\n            <aside v-else>\n              <MDBRow :class=\"{order_expired: booking.created_ms - new Date().getTime() <= 0}\">\n                <MDBCol>\n                  <span :class=\"{date_expired: booking.created_ms - new Date().getTime() <= 0}\">\n                    {{booking.date}}\n                  </span>\n\n                  <p class=\"booking_time\">\n                    klo\n                    {{booking.onTime[0].hours >= 10 ? booking.onTime[0].hours : \"0\" + booking.onTime[0].hours }} :\n                    {{(booking.onTime[0].minutes) >= 10 ? booking.onTime[0].minutes : \"0\" + booking.onTime[0].minutes}}\n                  </p>\n                </MDBCol>\n\n                <MDBCol>\n                  {{booking.header}}\n                </MDBCol>\n                <MDBCol>\n                  <MDBBtn v-if=\"booking.created_ms - new Date().getTime() > 0\" outline=\"info\" block size=\"lg\" @click=\"handleRecipientResult(booking.id, booking)\">Tilaus</MDBBtn>\n                  <MDBBtn v-else outline=\"danger\" block size=\"lg\" @click=\"handleRecipientResult(booking.id, booking)\">vanhentunut</MDBBtn>\n                </MDBCol>\n              </MDBRow>\n\n            </aside>\n\n\n\n          </MDBRow>\n          <MDBBtn outline=\"info\" block size=\"lg\" @click=\"newBooking\">Teen uuden tilauksen</MDBBtn>\n\n        </div>\n\n      </div>\n\n<!--      client confirmed bookings {{confirmedBookingsByClient}}-->\n<!--      RecipientBookings {{recipientBookings}}-->\n    </MDBContainer>\n\n\n  </div>\n</template>\n\n<script>\n/*global google*/\n\nimport {\n  //MDBTable,\n  MDBBtn,\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBTextarea,\n    MDBBadge\n}from \"mdb-vue-ui-kit\";\nimport {ref} from \"vue\";\nimport liveChat from './LiveChat'\nimport providerFit from '../components/controllers/datetime'\n/* eslint-disable */\n//import dist from '../components/controllers/distance'\n//import validateToken from \"@/components/validateToken\";\n//import Fieldset from 'primevue/fieldset';\n\n//import RecipientSuccess from '../components/RecipientSuccess'\nimport recipientResult from '../pages/RecipientPanelResult'\nimport providerService from '../service/providers'\nimport recipientService from '../service/recipients'\nimport bookingInfo from '../components/CompletedBookingPanel'\n//import RecipientBookingChatPanel from './RecipientBookingChatPanel'\n//import axios from \"axios\";\n//import driving from '../components/controllers/distance'\n\nimport monthConverter from '../components/controllers/month-converter'\nimport socket from \"@/socket\";\n//import axios from \"axios\";\nexport default {\n  name: \"recipient-panel\",\n  props: {\n    test: Boolean,\n    chatusers: Array,\n\n    selecteduser: null,\n    messages: Array,\n    recipientTest: null,\n    recipientBookings: Array, // bookings from app\n\n    confirmedBookingsByClient: Array,\n    confirmedBookingsByProvider: Array,\n\n  },\n  data () {\n    return {\n      id: \"\",\n      isSpinner: false,\n      images: [],\n      userId: null,\n      //bookings: [],\n      //recipientBookings: [],\n      bookings: this.recipientBookings,\n      provider: {},\n      booking: null,\n      isQuitBooking: false,\n      currentRoom: \"\",\n      selectedIndex: null,\n      isPressedQuit: false,\n      clientQuitBookingReason: \"\",\n      d: null,\n      //confirmedBookings: [],\n      confirmedBookings: [] ,\n      //confirmedBookings: this.recipientBookings.filter(booking => booking.status === \"confirmed\"),\n      clientConfirmedBookings: [],\n      //clientConfirmedBookings: this.recipientBookings.filter(cb => cb.status === \"notSeen\" || cb.status === \"seen\"),\n      isBooking: false,\n      //providerMatchByProfession: null,\n      providerMatchByProfession: [],\n      providerMatchingRequirements: null,\n      line: \"\",\n      recipientDateTime: null,\n      providersAvailable: [],\n      providersBusy: []\n    }\n  },\n  setup () {\n    const isAvailable = ref(false)\n    return {\n      isAvailable\n    }\n  },\n  components: {\n    //RecipientSuccess,\n    //Fieldset,\n    //validateToken,\n    //RecipientBookingChatPanel,\n    liveChat,\n    bookingInfo,\n    recipientResult,\n    //MDBTable,\n    MDBBtn,\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBTextarea,\n    MDBBadge\n  },\n  async mounted () {\n\n    /*const validated = await validateToken()\n    if (!validated) {\n      //console.log(\"user is no validated\")\n      this.$router.push('/login');\n    } else {\n      //console.log(\"User is validated\")\n      this.userId = validated.id\n      this.provider = await providerService.getProvider(validated.id);\n\n      this.handleRecipientBookings();\n    }*/\n\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\n    if (!loggedUserJSON) {\n      this.$router.push('/')\n    } else {\n      const user = JSON.parse(loggedUserJSON)\n      this.userId = user.id\n\n      this.provider = await providerService.getProvider(user.id);\n\n      this.handleRecipientBookings();\n\n    }\n\n  },\n  methods: {\n\n    async clientRejectBooking (booking) {\n      const rejectedBooking = await recipientService.getBookingById(booking.id)\n      console.log(\"Booking id \" + booking.id)\n      console.log(\"Client reject booking send id: \" + rejectedBooking.ordered[0].user.id);\n      const room = rejectedBooking.ordered[0].yritys + booking.user.username;\n\n      const new_status = {\n        status: \"waiting\"\n      }\n      const updatedBookingStatus = await recipientService.updateRecipient(booking.id, new_status);\n      console.log(\"Is booking status updated: \" + updatedBookingStatus.status);\n\n      this.$emit(\"reject:bookingByClient\", rejectedBooking, rejectedBooking.ordered[0].id, room)\n\n      socket.emit(\"reject booking by client\", {\n        id: rejectedBooking.ordered[0].user.id,\n        room: room,\n        booking: booking,\n        reason: this.clientQuitBookingReason\n      })\n\n      this.isQuitBooking = false;\n      // const userIdToSend = rejBooking.user.id;\n      // this.editStatus (booking.id, \"waiting\")\n      // this.$emit(\"reject:booking\", rejBooking, this.room, this.providerID);\n      // socket.emit(\"reject recipient booking\", {\n      //   id: userIdToSend,\n      //   room: this.room,\n      //   pro: this.selectedPro,\n      //   booking: booking,\n      //   reason: reason\n      // })\n      // console.log(\"Test pro id \" + userIdToSend)\n      // this.bookings = this.bookings.filter(b => b.id !== booking.id);\n      // if (this.bookings.length < 1) {\n      //   //this.$router.push('/');\n      //   this.$router.go(-1);\n      // }\n    },\n    handleUpdateBookingDate (booking, nd) {\n      this.recipientDateTime = new Date(nd.year, nd.month, nd.day, nd.hours, nd.minutes);\n      this.$emit(\"recipient:date_ms\", booking, new Date(nd.year, nd.month, nd.day, nd.hours, nd.minutes).getTime())\n      console.log(\"recipient date time \" + this.recipientDateTime);\n\n    },\n    handleQuitSelectedBooking (index) {\n      this.selectedIndex = index;\n      console.log(\"Index \" + index)\n      console.log(\"Selected index \" + this.selectedIndex)\n      this.isQuitBooking = true\n    },\n    canselQuitSelectedBooking () {\n      this.isQuitBooking = false;\n      this.selectedIndex = null;\n    },\n    selectUser (user) {\n      this.$emit('select:user', user);\n    },\n    noSelectUser () {\n      this.$emit(\"noSelected\");\n    },\n    onMessage (content, date) {\n      this.$emit(\"on:message\", content, date);\n    },\n    // bookingWaitingProBackBtn () {\n    //   this.$emit(\"bookingWaitingProBack\");\n    //   this.noSelectUser();\n    //\n    // },\n    // async contactToProvider (booking, index) {\n    //   let bookings = await recipientService.getOwnBookings(this.userId);\n    //   //this.handleRecipientBookings ();\n    //   // console.log(\"Contact \" + index);\n    //   let room = \"\";\n    //   if (booking.ordered.length > 0) {\n    //     room = booking.ordered[0].yritys + booking.user.username;\n    //   } else {\n    //     room = this.currentRoom;\n    //   }\n    //   console.log(\"room xxx \" + room);\n    //   //this.$router.push('/chat');\n    //   //const room = booking.ordered[0].yritys + booking.user.username;\n    //   //console.log(\"Room in recipient panel \" + room)\n    //   socket.emit(\"update room\", room);\n    //   this.selectedIndex = index;\n    //   this.isChat = true;\n    // },\n    otherUser (data) {\n      this.$emit(\"otherUser\", data)\n    },\n    // finalinfo (data) {\n    //   console.log(\"Data in recipient panel \" + data)\n    //   this.$emit(\"finalinfo\", data)\n    // },\n    handleInitializeChat (data) {\n      this.$emit(\"initializeChat\", data);\n    },\n    async handleRecipientBookings () {\n      let bookings = await recipientService.getOwnBookings(this.userId);\n\n\n\n      //this.confirmedBookings = bookings.filter(booking => booking.status === \"confirmed\");\n\n      this.confirmedBookings = bookings.filter(booking => booking.status === \"confirmed\");\n\n\n      this.clientConfirmedBookings = bookings.filter(cb => cb.status === \"notSeen\" || cb.status === \"seen\");\n\n\n      //this.bookings = bookings.filter(b => b.status !== \"confirmed\" && b.status !== \"completed\");\n\n      //this.recipientBookings = bookings.filter(b => b.status !== \"confirmed\" && b.status !== \"completed\");\n\n      if (this.recipientBookings > 0) {\n        if (!this.recipientBookings[0].onTime.month)\n          this.isSpinner = true;\n      }\n\n\n\n\n      //this.bookings = bookings.filter(booking => booking.status === \"waiting\")\n\n    },\n\n    async handleRecipientResult (id, booking) {\n      //this.isAvailable = true\n      //console.log(\"Provider id is: \" + id)\n\n      //this.booking = await recipientService.getBookingById(id);\n      this.booking = booking\n      //this.images = this.booking[0].image;\n\n\n      if (this.booking.image)\n        this.images = this.booking.image;\n\n\n\n      /*this.booking[0].image.forEach(img => {\n        console.log(\"x-x-x- \" + img.name)\n        this.images.push(img)\n      })*/\n\n      //console.log(\"Profession: \" + this.booking.map(b => b.professional))\n      console.log(\"Profession: \" + this.booking.professional)\n      let temp = []\n      //const profession = this.booking.map(b => b.professional)\n      //temp = this.booking[0].professional;\n      temp = this.booking.professional;\n      console.log(\"Professional length \" + this.booking.professional.length);\n      // this.booking.map(b => {\n      //\n      //   this.recipientDateTime = new Date(b.onTime[0].year, b.onTime[0].month, b.onTime[0].day, b.onTime[0].hours, b.onTime[0].minutes)\n      //   console.log(\"Recipient datetime: \" + b.onTime[0].day)\n      // })\n\n      this.recipientDateTime = new Date(booking.onTime[0].year, booking.onTime[0].month, booking.onTime[0].day, booking.onTime[0].hours, booking.onTime[0].minutes)\n      console.log(\"Recipient datetime: \" + booking.onTime[0].day)\n\n      console.log(\"xxx \" + this.recipientDateTime.getTime())\n      // TODO siia veel mitmuse vorm elukutse sobivuse kohalt otsingus\n      this.line = temp[0]\n\n\n      this.providerMatchByProfession = await providerService.getProvidersMatchingByProfession(\n          {result: temp}\n      )\n\n      // User's own company do not included\n      this.providerMatchByProfession = this.providerMatchByProfession.filter(pro => pro.user.id !== this.userId);\n\n\n      const getDistanceMatrix = (service, data) => new Promise((resolve, reject) => {\n        service.getDistanceMatrix(data, (response, status) => {\n          if(status === 'OK') {\n            resolve(response)\n          } else {\n            reject(response);\n          }\n        })\n      });\n\n\n      let start = []\n      let end = [];\n\n\n      //console.log(\"Booking lat on \" + this.booking[0].latitude)\n      let originLat = booking.latitude;\n      let originLng = booking.longitude;\n      start = [originLat, originLng];\n      this.providerMatchByProfession.forEach(pro => {\n        let destinationLat = pro.latitude;\n        //console.log(\"Dest latitude \" + destinationLat )\n        let destinationLng = pro.longitude;\n        end = [destinationLat, destinationLng];\n        //console.log(\"Dest longitude \" + destinationLng )\n\n        const getDistance = async (start, end) => {\n          const origin = new google.maps.LatLng(start[0], start[1]);\n          const final = new google.maps.LatLng(end[0], end[1]);\n          const service = new google.maps.DistanceMatrixService();\n          const result = await getDistanceMatrix(\n              service,\n              {\n                origins: [origin],\n                destinations: [final],\n                travelMode: 'DRIVING'\n              }\n          )\n          return {\n            distance: (result.rows[0].elements[0].distance.value / 1000).toFixed(1),\n            duration: result.rows[0].elements[0].duration.text\n          };\n        };\n\n        getDistance(start, end).then(res => {\n          //console.log(\"DDxxiist \" + res.distance)\n          pro.distance = res.distance;\n          pro.duration = res.duration;\n        });\n      })\n\n      //console.log(\"xxxxxx \" + this.providerMatchByProfession.length)\n\n      this.isBooking = true;\n    },\n    handleFilterProvider (content) {\n      console.log(\"Filtering is working! \" + content)\n      if (content === \"distance\") {\n        this.providerMatchByProfession.sort((a, b) => a.distance - b.distance);\n      } else if (content === \"rating\") {\n        this.providerMatchByProfession.sort((a, b) => a.rating.positive - b.rating.positive);\n        //this.providerMatchByProfession = this.providersAvailable + this.providersBusy;\n      }\n      // -------------- teha vaja siin -------------------\n      this.handleFilterAvailability();\n\n      //console.log(\"Filtering: \" + this.providerMatchByProfession.map(pm => pm.distance))\n    },\n    handleFilterByFeedback () {\n      console.log(\"By feedback\")\n    },\n    handleFilterAvailability () {\n      console.log(\"Heyy here\")\n\n      this.providerMatchByProfession.forEach(pro => {\n        console.log(\"Recipient time \" + this.recipientDateTime)\n        if (pro.timeoffer) {\n          pro.timeoffer.forEach(time => {\n            if (\n                providerFit.providerMatchingForClient(\n                    this.recipientDateTime,\n                    {y: time.yearFrom, m: time.monthFrom, d: time.dayFrom, hour: time.hoursFrom, min: time.minutesFrom},\n                    {y: time.yearTo, m: time.monthTo, d: time.dayTo, hour: time.hoursTo, min: time.minutesTo}\n                )\n            ) {\n              console.log(\"Is available \" + pro.yritys)\n              this.providersAvailable.push(pro)\n            } else {\n              console.log(\"Is not available provider yritys \" + pro.yritys)\n              this.providersBusy.push(pro);\n            }\n          })\n        } else {\n          console.log(\"Not timeoffer setted\")\n        }\n\n      })\n\n      console.log(\"Available length \" + this.providersAvailable.length)\n      console.log(\"Not available length \" + this.providersBusy.length)\n\n    },\n    handleOrderToSend (provId, booking, navbarChatUser) {\n      console.log(\"Order is sended \" + booking.id)\n      //prov.id, this.booking, chatUserDataNavbar\n      this.$emit(\"update:booking\", booking.id);\n\n      this.clientConfirmedBookings = this.clientConfirmedBookings.concat(this.booking);\n\n    },\n    newBooking () {\n\n      this.$router.push('/rf')\n\n\n    },\n    handleConfirmedProvider (provId, booking, navbarChatUser) {\n      this.currentRoom = navbarChatUser.room;\n      this.providerMatchByProfession = this.providerMatchByProfession.filter(prov => prov.id !== provId);\n      this.$emit(\"setNavbarChatUser\", booking,  navbarChatUser);\n      console.log(\"nb chat user start \" + navbarChatUser.name);\n      this.isBooking = false;\n    },\n    openMap () {\n      const test = \"Tehnika 1-5, Antsla\"\n      this.$router.push('/recipient-public', {params: test});\n\n    },\n    compareTime () {\n      console.log(\"Month is: \" + monthConverter.month(4))\n\n      // console.log(\"Time comparison: \" + (new Date(2023,3, 20, 10, 20).getTime()\n      //     < new Date(2023, 3, 20, 11, 11).getTime()))\n    },\n    removeConfirmationNotification () {\n\n    },\n    handleEditDescription (description) {\n      this.booking.description = description;\n    },\n    async handleAddImage (image, bookingID) {\n      console.log(\"Image id in upload \" + image._id)\n      console.log(\"Image image in upload \" + image.image)\n      console.log(\"Image name in upload \" + image.name)\n      this.$emit(\"addImageToRecipientBookings\", image, bookingID)\n      this.images = [\n          ...this.images,\n          image\n      ]\n\n\n      //this.images.push(image);\n      // this.$router.go()\n      // this.isBooking = true;\n    },\n    handleEditImage (index, id, blob) {\n\n      if (index !== -1) {\n        this.images[index] = {_id: id, blob: blob};\n      }\n\n    },\n    // handleEditImage (previous_image, current_image) {\n    //   if (this.booking) {\n    //     console.log(\"Image enne \" + previous_image.name)\n    //     console.log(\"Image pärast \" + current_image.name)\n    //     //this.booking= this.booking[0].image.filter(f => f.name === img.name);\n    //\n    //     var index = this.images.indexOf(previous_image);\n    //     if (index !== -1) {\n    //       this.images[index] = current_image;\n    //     }\n    //   }\n    // },\n    async handleRemoveImage (imageID) {\n      //await recipientService.removeImage(this.booking[0].id, imageID);\n      //this.images = this.images.filter(img => img._id !== imageID);\n      this.images.splice(imageID, 1);\n      console.log(\"Image removed from array\")\n    },\n    handleCanselResult (back) {\n      console.log(\"Canseled: \" + back)\n      this.isBooking = back;\n    },\n    async handleRemoveComplitedBookingPanel (booking) {\n\n      this.$emit('setNavbarAboutSetFeedback', booking)\n      // setNavbarAboutSetFeedback\n\n      socket.emit(\"archive booking\", {\n        id: booking.ordered[0].user.id,\n        room: booking.ordered[0].yritys + booking.user.username\n      })\n\n      await recipientService.updateRecipient(booking.id, {status: \"completed\"});\n    },\n\n\n    async handleRemoveBooking (id) {\n      console.log(\"Removing booking id \" + id);\n      this.isBooking = false;\n\n      this.$emit(\"removeRecipient\", id)\n      //await recipientService.removeBooking(id);\n\n      //await recipientService.removeBooking(id);\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n.bookings {\n  font-size: 16px;\n  text-align: left;\n  padding: 20px;\n}\n.booking_time {\n  color: #817d7d;\n}\n\n\n#info-block section {\n  border: 1px solid #a0dde0;\n  margin-bottom: 20px;\n}\n\n#info-block-confirmed section {\n  border: 2px solid #d5b13c;\n  margin-bottom: 20px;\n}\n\n.file-marker > div {\n  padding: 0 3px;\n  /*height: 130px;*/\n  /*margin-top: -0.8em;*/\n  margin-top: -1em;\n}\n\n.box-title {\n  background: #141414 none repeat scroll 0 0;\n  display: inline-block;\n  /*padding: 0 2px;*/\n  font-size: 16px;\n  padding: 0 10px;\n\n  margin-left: 8em;\n}\n.box-title-confirmed {\n  background: #141414 none repeat scroll 0 0;\n  display: inline-block;\n  color: #f18080;\n  /*padding: 0 2px;*/\n  font-size: 16px;\n  padding: 0 10px;\n\n  margin-left: 8em;\n}\n.box-contents {\n  /*border: solid red;*/\n  padding: 20px;\n  overflow-y: auto;\n}\n.box-contents-confirmed {\n\n  padding: 10px;\n}\n.date_expired {\n  color: #f24141;\n}\n.order_expired {\n  border: 1px solid #eb5454;\n}\n</style>","import { render } from \"./RecipientPanel.vue?vue&type=template&id=dc2ac63a&scoped=true\"\nimport script from \"./RecipientPanel.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanel.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanel.vue?vue&type=style&index=0&id=dc2ac63a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-dc2ac63a\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","style","colspan","$props","status","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","msg","ordered","yritys","header","_hoisted_3","_createVNode","_component_monthConverter","num","onTime","month","day","year","_hoisted_4","hours","minutes","_hoisted_5","range","_hoisted_6","address","_hoisted_7","_component_MDBBtn","block","outline","onClick","_cache","$event","$options","removeComplitedBookingPanel","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_createBlock","_component_MDBTable","borderless","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","name","props","String","Object","components","MDBBtn","MDBTable","monthConverter","methods","removeCompletedBookingPro","booking","this","$emit","__exports__","render","role","id","_component_MDBContainer","$data","isBooking","_component_recipientResult","test","images","bookingTime","recipientDateTime","providers","providerMatchByProfession","confirmedBookings","line","onUpdateBookingDate","handleUpdateBookingDate","handleOrderToSend","handleConfirmedProvider","onRemoveBooking","handleRemoveBooking","handleCanselResult","onEditDescription","handleEditDescription","onAddImage","handleAddImage","onEditImage","handleEditImage","onRemoveImage","handleRemoveImage","onFinalinfo","_ctx","finalinfo","chatusers","selecteduser","messages","onSelect","selectUser","onNoSelect","noSelectUser","onMessage","onInitializeChat","handleInitializeChat","onFilter_provider","handleFilterProvider","onOtherUser","otherUser","isSpinner","_component_MDBRow","_component_MDBCol","md","confirmedBookingsByProvider","length","_Fragment","_renderList","item","_component_bookingInfo","key","handleRemoveComplitedBookingPanel","recipientBookings","index","confirmedBookingsByClient","some","ccb","isIncludeOffers","offers","date","size","handleRecipientResult","_normalizeClass","order_expired","created_ms","Date","getTime","date_expired","_hoisted_19","newBooking","Boolean","Array","recipientTest","data","userId","bookings","provider","isQuitBooking","currentRoom","selectedIndex","isPressedQuit","clientQuitBookingReason","d","clientConfirmedBookings","providerMatchingRequirements","providersAvailable","providersBusy","setup","isAvailable","ref","liveChat","bookingInfo","recipientResult","MDBContainer","MDBRow","MDBCol","MDBTextarea","MDBBadge","async","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","providerService","getProvider","handleRecipientBookings","$router","push","rejectedBooking","recipientService","getBookingById","console","log","room","username","new_status","updatedBookingStatus","updateRecipient","socket","emit","reason","nd","handleQuitSelectedBooking","canselQuitSelectedBooking","content","getOwnBookings","filter","cb","image","professional","temp","getProvidersMatchingByProfession","result","pro","getDistanceMatrix","service","Promise","resolve","reject","response","start","end","originLat","latitude","originLng","longitude","forEach","destinationLat","destinationLng","getDistance","origin","google","maps","LatLng","final","DistanceMatrixService","origins","destinations","travelMode","distance","rows","elements","value","toFixed","duration","text","then","res","sort","a","b","rating","positive","handleFilterAvailability","handleFilterByFeedback","timeoffer","time","providerFit","providerMatchingForClient","y","yearFrom","m","monthFrom","dayFrom","hour","hoursFrom","min","minutesFrom","yearTo","monthTo","dayTo","hoursTo","minutesTo","provId","navbarChatUser","concat","prov","openMap","params","compareTime","removeConfirmationNotification","description","bookingID","_id","blob","imageID","splice","back"],"sourceRoot":""}