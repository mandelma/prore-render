{"version":3,"file":"js/675.b0c39062.js","mappings":"mHACA,MAAMA,EAAUA,CAACC,EAAKC,KAClB,MAAMC,EAAe,IAAIC,KAAKH,EAAII,EAAGJ,EAAIK,EAAGL,EAAIM,EAAGN,EAAIO,KAAMP,EAAIQ,KAC3DC,EAAe,IAAIN,KAAKF,EAAKG,EAAGH,EAAKI,EAAGJ,EAAKK,EAAGL,EAAKM,KAAMN,EAAKO,KACtE,OAAOC,GAAgBP,CAAY,EAGjCQ,EAA4BA,CAACC,EAAIC,EAAOC,KAE1C,MAAMC,EAAY,IAAIX,KAAKS,EAAMR,EAAGQ,EAAMP,EAAGO,EAAMN,EAAGM,EAAML,KAAMK,EAAMJ,KAClEO,EAAU,IAAIZ,KAAKU,EAAIT,EAAGS,EAAIR,EAAGQ,EAAIP,EAAGO,EAAIN,KAAMM,EAAIL,KAC5D,OAAOG,GAAMG,GAAaH,EAAKI,CAAO,EAE1C,KAAiBhB,UAASW,4B,qCCb1B,MAAMM,EAAeA,EAAGC,aACJ,OAAZA,EACO,MAGXC,EAAAA,EAAAA,IAAA,2BAGSD,GAAOC,EAAAA,EAAAA,IAAA,iBACQ,WAAU,IAAO,QAAO,IAAOC,EAAQ,OAAqB,QAOxF,K,gHCeSC,MAAA,2D,GAsBDC,MAAM,wB,GArDdC,IAAA,EAuD2FD,MAAM,gB,GAvDjGC,IAAA,G,GAAAA,IAAA,G,GAqFuBF,MAAA,6D,GArFvBE,IAAA,G,GAAAA,IAAA,G,GAAAA,IAAA,G,GAAAA,IAAA,G,GAAAA,IAAA,G,EAAA,c,GAAAA,IAAA,EA2KeD,MAAM,c,EA3KrB,a,GAuLwBE,IAAI,cAAcF,MAAM,sB,GAvLhDC,IAAA,G,GAAAA,IAAA,G,EAAA,Q,GAAAA,IAAA,EAwNaD,MAAM,a,GAaGE,IAAI,gBAAgBF,MAAM,sB,GArOhDC,IAAA,G,GAAAA,IAAA,G,EAAA,Q,GAAAA,IAAA,G,GAkQeD,MAAM,iB,GACJA,MAAM,S,GACLD,MAAA,0B,GAEMI,MAAM,I,GACNA,MAAM,Y,GACNA,MAAM,U,GACNA,MAAM,S,GAsBNJ,MAAA,sB,GAaAA,MAAA,sB,GAWAA,MAAA,sB,GAvTxBE,IAAA,G,GAoUcF,MAAA,oC,kXAjUQK,EAAAC,qBAAkB,WAAtCC,EAAAA,EAAAA,IA0BeC,EAAA,CA7BjBN,IAAA,IAAAO,SAAAC,EAAAA,EAAAA,KAII,IAuBE,EAvBFZ,EAAAA,EAAAA,IAuBEa,EAAA,CAtBG,iBAAeC,EAAAC,kBACf,qBAAmBD,EAAAE,aACnBC,aAAeC,EAAAD,aACfE,KAAOD,EAAAC,KACPC,SAAWb,EAAAc,iBACXC,MAAQf,EAAAe,MACRC,UAAYC,EAAAC,OACZC,KAAOnB,EAAAmB,KACPC,UAAYpB,EAAAqB,aACZC,QAAUX,EAAAW,QAEVC,UAAYZ,EAAAY,UAEZC,gBAAkBP,EAAAQ,qBAElBC,aAAef,EAAAe,aACfC,SAAWhB,EAAAgB,SACXC,UAAUrB,EAAAqB,UACVC,SAAStB,EAAAuB,WACTC,WAAWxB,EAAAyB,aACXC,kBAAkB1B,EAAA2B,qB,qPAzB3BC,EAAA,O,WA8BEjC,EAAAA,EAAAA,IAiTeC,EAAA,CA/UjBN,IAAA,IAAAO,SAAAC,EAAAA,EAAAA,KA+BI,IAMM,EANN+B,EAAAA,EAAAA,IAMM,MANNC,EAMM,EALJ5C,EAAAA,EAAAA,IAIE6C,EAAA,CAHEC,MAAA,GACA5C,MAAA,mBACC6C,QAAOjC,EAAAkC,c,uBAIdhD,EAAAA,EAAAA,IAIEiD,EAAA,CAHGC,mBAAqB3C,EAAA2C,mBACrB,cAAYpC,EAAAqC,eACZ,eAAarC,EAAAsC,iB,6DAWlBT,EAAAA,EAAAA,IAAqF,KAArFU,GAAqFC,EAAAA,EAAAA,IAAlD/C,EAAAgD,EAAE,gCAAgC,OAAGD,EAAAA,EAAAA,IAAEpC,EAAAsC,MAAI,GAEpEtC,EAAAW,QAAQ4B,YAAa,IAAIxE,MAAOyE,WAAa,GAAKxC,EAAAW,QAAQ8B,OAAOC,OAAS,IAAH,WAAjFC,EAAAA,EAAAA,IAEK,KAFLC,GAEKR,EAAAA,EAAAA,IADD/C,EAAAgD,EAAE,sCAAD,KAxDTQ,EAAAA,EAAAA,IAAA,QA0DI/D,EAAAA,EAAAA,IAEEgE,EAAA,CADGjE,QAAUQ,EAAA0D,cAAY,qBAG3BjE,EAAAA,EAAAA,IA4QSkE,EAAA,CA5QDhE,MAAA,uBAAyB,CA9DrCS,SAAAC,EAAAA,EAAAA,KA+DM,IA+LS,EA/LTZ,EAAAA,EAAAA,IA+LSmE,EAAA,CA/LDhE,MAAM,iBAAe,CA/DnCQ,SAAAC,EAAAA,EAAAA,KAiEQ,IA+FW,EA/FXZ,EAAAA,EAAAA,IA+FWoE,GAAA,CA/FDC,WAAA,GAAWnE,MAAA,0D,CAjE7BS,SAAAC,EAAAA,EAAAA,KAkEU,IA6FQ,EA7FR+B,EAAAA,EAAAA,IA6FQ,eA5FRA,EAAAA,EAAAA,IAgCK,WA/BQpC,EAAA+D,oBACe,WAI1BT,EAAAA,EAAAA,IAyBK,KAlGjBU,EAAA,EA0EcvE,EAAAA,EAAAA,IAmBSkE,EAAA,MA7FvBvD,SAAAC,EAAAA,EAAAA,KA4EgB,IAOS,EAPTZ,EAAAA,EAAAA,IAOSmE,EAAA,MAnFzBxD,SAAAC,EAAAA,EAAAA,KA6EkB,IAKE,EALFZ,EAAAA,EAAAA,IAKEwE,EAAA,CAJGC,MAAOlE,EAAAgD,EAAE,qCACVT,MAAA,GACA4B,KAAK,IAhF3BC,WAgFwCpE,EAAAqE,YAhFxC,sBAAAC,EAAA,KAAAA,EAAA,GAAAC,GAgFwCvE,EAAAqE,YAAWE,GAC7B5E,MAAA,qC,kCAjFtBwC,EAAA,KAoFgB1C,EAAAA,EAAAA,IAQSmE,EAAA,CARDY,IAAI,KAAG,CApF/BpE,SAAAC,EAAAA,EAAAA,KAqFkB,IAKM,EALN+B,EAAAA,EAAAA,IAKM,MALNqC,EAKM,EAJJhF,EAAAA,EAAAA,IAGE6C,EAAA,CAFEC,MAAA,GACCC,QAAK8B,EAAA,KAAAA,EAAA,GAAAC,GAAEvE,EAAA+D,mBAAoB,UAxFpD5B,EAAA,OAAAA,EAAA,SAoEwC,WAA5BmB,EAAAA,EAAAA,IAIK,KAxEjBoB,EAAA,EAqEctC,EAAAA,EAAAA,IAA8B,UAAAW,EAAAA,EAAAA,IAAzBpC,EAAAW,QAAQ+C,aAAW,QA+BlB1D,EAAAW,QAAQ8B,OAAOC,OAAS,IAAH,WAA/BC,EAAAA,EAAAA,IAOK,KA3GfqB,EAAA,CAqGuB3E,EAAA+D,oB,WAGXT,EAAAA,EAAAA,IAEK,KA1GjBsB,EAAA,EAyGcnF,EAAAA,EAAAA,IAAuGoF,EAAA,CAA/FC,QAAQ,OAAOC,MAAA,GAAMC,KAAK,KAAMxC,QAAOjC,EAAA0E,uB,CAzG7D7E,SAAAC,EAAAA,EAAAA,KAyGoF,IAAwBiE,EAAA,KAAAA,EAAA,KAzG5GY,EAAAA,EAAAA,IAyGoF,gCAzGpF/C,EAAA,G,oBAqGwC,WAA5BmB,EAAAA,EAAAA,IAEK,KAvGjB6B,EAAA,EAsGc1F,EAAAA,EAAAA,IAAyGoF,EAAA,CAAjGC,QAAQ,OAAOC,MAAA,GAAMC,KAAK,KAAMxC,QAAOjC,EAAA6E,wB,CAtG7DhF,SAAAC,EAAAA,EAAAA,KAsGqF,IAAyBiE,EAAA,KAAAA,EAAA,KAtG9GY,EAAAA,EAAAA,IAsGqF,iCAtGrF/C,EAAA,G,sBAAAqB,EAAAA,EAAAA,IAAA,QA4GUpB,EAAAA,EAAAA,IAiDK,WAhDQpC,EAAAqF,aA7GvB,WA0HY/B,EAAAA,EAAAA,IAiCK,KA3JjBgC,EAAA,EA2Hc7F,EAAAA,EAAAA,IA8BSkE,EAAA,MAzJvBvD,SAAAC,EAAAA,EAAAA,KA4HgB,IAoBS,EApBTZ,EAAAA,EAAAA,IAoBSmE,EAAA,CApBDY,IAAI,KAAG,CA5H/BpE,SAAAC,EAAAA,EAAAA,KA6HkB,IAMK,EANL+B,EAAAA,EAAAA,IAMK,MANAxC,OA7HvB2F,EAAAA,EAAAA,IAAA,CAAAC,aA6H6C7E,EAAAW,QAAQ4B,YAAa,IAAIxE,MAAOyE,WAAa,K,EA7H1F+B,EAAAA,EAAAA,KAAAnC,EAAAA,EAAAA,IA8HsB/C,EAAAyF,sBAAoB,gBAAErD,EAAAA,EAAAA,IAAI,qBA9HhD8C,EAAAA,EAAAA,IA8HgD,WAE5BnC,EAAAA,EAAAA,IAAA,IAAMrE,KAAKiC,EAAAW,QAAQoE,SAASC,WAAa,GAAK,IAAM,IAAIjH,KAAKiC,EAAAW,QAAQoE,SAASC,WAAa,IAAIjH,KAAKiC,EAAAW,QAAQoE,SAASC,YAAY,OAEjI5C,EAAAA,EAAAA,IAAA,IAAMrE,KAAKiC,EAAAW,QAAQoE,SAASE,aAAe,GAAK,IAAM,IAAIlH,KAAKiC,EAAAW,QAAQoE,SAASE,aAAe,IAAIlH,KAAKiC,EAAAW,QAAQoE,SAASE,cAAU,QAGrInG,EAAAA,EAAAA,IAUgBoG,GAAA,CATZlG,MAAA,yBACAmG,KAAA,GAvItB1B,WAwI+BpE,EAAA+F,YAxI/B,sBAAAzB,EAAA,KAAAA,EAAA,GAAAC,GAwI+BvE,EAAA+F,YAAWxB,GACnB,WAAQ,IAAM7F,KACdsH,YAAahG,EAAAgD,EAAE,gCACfiD,sBAAuB1F,EAAA2F,mBACvBC,OAAOlF,EAAAmF,UAAmB,M,mFA5IjDjE,EAAA,KAiJgB1C,EAAAA,EAAAA,IAOSmE,EAAA,CAPDY,IAAI,KAAG,CAjJ/BpE,SAAAC,EAAAA,EAAAA,KAkJkB,IAKE,EALFZ,EAAAA,EAAAA,IAKE6C,EAAA,CAJEC,MAAA,GACCC,QAAK8B,EAAA,KAAAA,EAAA,GAAAC,GAAEvE,EAAAqF,YAAa,GACrB1F,MAAA,sCArJtBwC,EAAA,OAAAA,EAAA,SA6GiC,WAArBmB,EAAAA,EAAAA,IAYK,KAzHjB+C,EAAA,EA8GcjE,EAAAA,EAAAA,IAOI,KAPAxC,OA9GlB2F,EAAAA,EAAAA,IAAA,CAAAC,aA8GwC7E,EAAAW,QAAQ4B,YAAa,IAAIxE,MAAOyE,WAAa,GAAKxC,EAAAW,QAAQ8B,OAAOC,OAAS,M,QAChGrD,EAAAyF,sBAAsB,aAExB1C,EAAAA,EAAAA,IAAA,IAAMrE,KAAKiC,EAAAW,QAAQoE,SAASC,WAAa,GAAK,IAAM,IAAIjH,KAAKiC,EAAAW,QAAQoE,SAASC,WAAa,IAAIjH,KAAKiC,EAAAW,QAAQoE,SAASC,YAAY,OAEjI5C,EAAAA,EAAAA,IAAA,IAAMrE,KAAKiC,EAAAW,QAAQoE,SAASE,aAAe,GAAK,IAAM,IAAIlH,KAAKiC,EAAAW,QAAQoE,SAASE,aAAe,IAAIlH,KAAKiC,EAAAW,QAAQoE,SAASE,cAAU,GAGvHjF,EAAAW,QAAQ8B,OAAOC,OAAS,IAAH,WAAnCnD,EAAAA,EAAAA,IAES2E,EAAA,CAxHvBhF,IAAA,EAsHuDkF,MAAA,GAAMC,KAAK,KAAKF,QAAQ,OAAQtC,QAAOjC,EAAA+F,U,CAtH9FlG,SAAAC,EAAAA,EAAAA,KAuHgB,IAA2H,EAA3H+B,EAAAA,EAAAA,IAA2H,QAApHxC,OAvHvB2F,EAAAA,EAAAA,IAAA,CAAAgB,gBAuHgD5F,EAAAW,QAAQ4B,YAAa,IAAIxE,MAAOyE,WAAa,M,QAAMnD,EAAAgD,EAAE,+BAAD,MAvHpGb,EAAA,G,iBAAAqB,EAAAA,EAAAA,IAAA,iBAAArB,EAAA,M,aAkKQmB,EAAAA,EAAAA,IAmDMkD,EAAAA,GAAA,MArNdC,EAAAA,EAAAA,IAkKiC9F,EAAA+F,QAlKjC,CAkKqBC,EAAMC,M,WAAnBtD,EAAAA,EAAAA,IAmDM,OAnD4BzD,IAAK+G,GAAC,EACtCxE,EAAAA,EAAAA,IAKE,OAJExC,MAAM,UACND,MAAA,eACCkH,IAAKF,EAAKG,KAAO7F,EAAA8F,GAAGD,KAAOH,EAAKK,MAChCC,IAAKN,EAAKO,M,OAvKzBC,GA0KyBnH,EAAAoH,aA1KzB5D,EAAAA,EAAAA,IAAA,SA0KoC,WAA1BtD,EAAAA,EAAAA,IAA8H2E,EAAA,CA1KxIhF,IAAA,EA0KsCkF,MAAA,GAAMD,QAAQ,UAAWtC,QAAK+B,GAAEhE,EAAA8G,eAAeT,I,CA1KrFxG,SAAAC,EAAAA,EAAAA,KA0KyF,IAAsC,EA1K/H6E,EAAAA,EAAAA,KAAAnC,EAAAA,EAAAA,IA0K2F/C,EAAAgD,EAAE,kCAAD,MA1K5Fb,EAAA,G,mBA2KwCnC,EAAAoH,aAAepH,EAAAsH,aAAeV,IAAC,WAA7DtD,EAAAA,EAAAA,IAqCM,MArCNiE,EAqCM,EApCJ9H,EAAAA,EAAAA,IAAmD+H,GAAA,CAAnChI,QAAUQ,EAAAyH,wBAAsB,oBAClC9G,EAAAW,QAAQ8B,OAAOC,OAAS,IAAH,WAAnCnD,EAAAA,EAAAA,IAiCSyD,EAAA,CA9MrB9D,IAAA,IAAAO,SAAAC,EAAAA,EAAAA,KA8Kc,IAkBS,EAlBTZ,EAAAA,EAAAA,IAkBSmE,EAAA,MAhMvBxD,SAAAC,EAAAA,EAAAA,KA+KgB,IAME,CALSL,EAAAD,OAhL3ByD,EAAAA,EAAAA,IAAA,SAgLgC,WADhBtD,EAAAA,EAAAA,IAMEoC,EAAA,CArLlBzC,IAAA,EAiLoB0C,MAAA,GACA3C,MAAM,YACND,MAAA,gBACC6C,QAAOjC,EAAAmH,gB,sBAEZtF,EAAAA,EAAAA,IAA4E,SAApEuF,GAAG,cAAcC,KAAK,OAAQC,SAAMtD,GAAEhE,EAAAuH,iBAAiBvD,EAAQqC,I,QAtLvFmB,IAuLgB3F,EAAAA,EAAAA,IAMQ,QANR4F,EAMQ,CALMhI,EAAAD,QAAK,WAAjBuD,EAAAA,EAAAA,IAGQ,OA3L1B2E,GAAAlF,EAAAA,EAAAA,IAyLoB/C,EAAAgD,EAAE,wCAAwC,MAAED,EAAAA,EAAAA,IAAE/C,EAAAD,MAAMmH,MAAI,iBAG1D5D,EAAAA,EAAAA,IAA8D,OA5LhF4E,GAAAnF,EAAAA,EAAAA,IA4LiC/C,EAAAgD,EAAE,sCAAD,MAEJhD,EAAAmI,cAAW,WAAzBjI,EAAAA,EAAAA,IAAuI2E,EAAA,CA9LvJhF,IAAA,EA8L2CkF,MAAA,GAAMqD,MAAM,UAAW5F,QAAK+B,GAAEhE,EAAA8H,kBAAkBzB,I,CA9L3FxG,SAAAC,EAAAA,EAAAA,KA8L+F,IAA+C,EA9L9I6E,EAAAA,EAAAA,KAAAnC,EAAAA,EAAAA,IA8LkG/C,EAAAgD,EAAE,yCAAD,MA9LnGb,EAAA,G,oBAAAqB,EAAAA,EAAAA,IAAA,QA+LgB/D,EAAAA,EAAAA,IAA0HoF,EAAA,CAAlHjF,MAAM,MAAMmF,MAAA,GAAMC,KAAK,KAAKoD,MAAM,SAAU5F,QAAK+B,GAAEhE,EAAA+H,UAAU1B,I,CA/LrFxG,SAAAC,EAAAA,EAAAA,KA+LyF,IAAwC,EA/LjI6E,EAAAA,EAAAA,KAAAnC,EAAAA,EAAAA,IA+L4F/C,EAAAgD,EAAE,kCAAD,MA/L7Fb,EAAA,G,qBAAAA,EAAA,G,MAiM4BnC,EAAAD,QAAK,WAAnBG,EAAAA,EAAAA,IAYS0D,EAAA,CA7MvB/D,IAAA,IAAAO,SAAAC,EAAAA,EAAAA,KAkMgB,IAKE,EALFZ,EAAAA,EAAAA,IAKE6C,EAAA,CAJEC,MAAA,GACA3C,MAAM,YACND,MAAA,gBACC6C,QAAOjC,EAAAmH,gB,qBAEZtF,EAAAA,EAAAA,IAIE,OAHEzC,MAAA,qCACCkH,IAAG,KAAO0B,UACXtB,IAAI,W,OA3MxBuB,MAAArG,EAAA,MAAAqB,EAAAA,EAAAA,IAAA,UAAArB,EAAA,G,QAAAqB,EAAAA,EAAAA,IAAA,WAAAA,EAAAA,EAAAA,IAAA,Y,OAuNuBxD,EAAAyI,kBAAoB9H,EAAAW,QAAQ8B,OAAOC,OAAS,IAAH,WAAxDnD,EAAAA,EAAAA,IAA2J2E,EAAA,CAvNnKhF,IAAA,EAuNsEkF,MAAA,GAAMqD,MAAM,UAAW5F,QAAOjC,EAAAmI,iB,CAvNpGtI,SAAAC,EAAAA,EAAAA,KAuNqH,IAAqC,EAvN1J6E,EAAAA,EAAAA,KAAAnC,EAAAA,EAAAA,IAuNwH/C,EAAAgD,EAAE,+BAAD,MAvNzHb,EAAA,G,iBAAAqB,EAAAA,EAAAA,IAAA,OAwNqCxD,EAAAyI,mBAAqBzI,EAAA2I,kBAAe,WAAjErF,EAAAA,EAAAA,IAoCM,MApCNsF,EAoCM,EAlCJnJ,EAAAA,EAAAA,IAAmD+H,GAAA,CAAnChI,QAAUQ,EAAAyH,wBAAsB,qBAChDhI,EAAAA,EAAAA,IA+BSkE,EAAA,MA1PnBvD,SAAAC,EAAAA,EAAAA,KA6NY,IAgBS,EAhBTZ,EAAAA,EAAAA,IAgBSmE,EAAA,MA7OrBxD,SAAAC,EAAAA,EAAAA,KA8Nc,IAKE,CAJSL,EAAAD,OA/NzByD,EAAAA,EAAAA,IAAA,SA+N8B,WADhBtD,EAAAA,EAAAA,IAKEoC,EAAA,CAnOhBzC,IAAA,EAgOkB0C,MAAA,GACA3C,MAAM,YACL4C,QAAOjC,EAAAsI,e,sBAEZzG,EAAAA,EAAAA,IAA+E,SAAtEuF,GAAG,gBAAgBC,KAAK,OAAQC,SAAMvD,EAAA,KAAAA,EAAA,GAAAC,GAAEhE,EAAAuH,iBAAiBvD,EAAQtD,EAAA2F,K,UAC1ExE,EAAAA,EAAAA,IAMQ,QANR0G,EAMQ,CALQ9I,EAAAD,QAAK,WAAjBuD,EAAAA,EAAAA,IAGQ,OAzO1ByF,EAsOqC,+BACOhG,EAAAA,EAAAA,IAAE/C,EAAAD,MAAMmH,MAAM,MAEvC,iBACH5D,EAAAA,EAAAA,IAAiD,OA1OjE0F,EA0O6B,oCAEDhJ,EAAAiJ,aAAU,WAAxB/I,EAAAA,EAAAA,IAAoG2E,EAAA,CA5OlHhF,IAAA,EA4OwCkF,MAAA,GAAMD,QAAQ,UAAWtC,QAAOjC,EAAA2I,oB,CA5OxE9I,SAAAC,EAAAA,EAAAA,KA4O4F,IAAaiE,EAAA,MAAAA,EAAA,MA5OzGY,EAAAA,EAAAA,IA4O4F,qBA5O5F/C,EAAA,G,iBAAAqB,EAAAA,EAAAA,IAAA,UAAArB,EAAA,IA8O0BnC,EAAAD,QAAK,WAAnBG,EAAAA,EAAAA,IAWS0D,EAAA,CAzPrB/D,IAAA,IAAAO,SAAAC,EAAAA,EAAAA,KA+Oc,IAIE,EAJFZ,EAAAA,EAAAA,IAIE6C,EAAA,CAHE1C,MAAM,YACN2C,MAAA,GACCC,QAAOjC,EAAAsI,e,qBAEZzG,EAAAA,EAAAA,IAIE,OAHEzC,MAAA,gBACCkH,IAAG,KAAO0B,UACXtB,IAAI,W,OAvPtBkC,MAAAhH,EAAA,MAAAqB,EAAAA,EAAAA,IAAA,UAAArB,EAAA,QAAAqB,EAAAA,EAAAA,IAAA,UAAArB,EAAA,KAgQM1C,EAAAA,EAAAA,IAuESmE,EAAA,CAvEDwF,GAAG,KAAG,CAhQpBhJ,SAAAC,EAAAA,EAAAA,KAiQQ,IAiEM,CAjEKM,EAAA0I,eAAehG,OAAS,IAAH,WAAhCC,EAAAA,EAAAA,IAiEM,MAlUdgG,EAAA,EAkQUlH,EAAAA,EAAAA,IAYM,MAZNmH,EAYM,EAXJnH,EAAAA,EAAAA,IASM,MATNoH,EASM,EARJpH,EAAAA,EAAAA,IAAwE,KAAxEqH,GAAwE1G,EAAAA,EAAAA,IAApC/C,EAAAgD,EAAE,4BAAD,aACrCZ,EAAAA,EAAAA,IAKS,UALDzC,MAAA,mFAAqFgI,GAAG,kBArQ9G,sBAAArD,EAAA,KAAAA,EAAA,GAAAC,GAqQyIvE,EAAA0J,aAAYnF,GAAG/B,QAAK8B,EAAA,KAAAA,EAAA,OAAAqF,IAAEpJ,EAAAqJ,WAAArJ,EAAAqJ,aAAAD,K,EAC/IvH,EAAAA,EAAAA,IAA4D,SAA5DyH,GAA4D9G,EAAAA,EAAAA,IAAxC/C,EAAAgD,EAAE,4BAAD,IACrBZ,EAAAA,EAAAA,IAAgF,SAAhF0H,GAAgF/G,EAAAA,EAAAA,IAApD/C,EAAAgD,EAAE,wCAAD,IAC7BZ,EAAAA,EAAAA,IAA4E,SAA5E2H,GAA4EhH,EAAAA,EAAAA,IAAlD/C,EAAAgD,EAAE,sCAAD,IAC3BZ,EAAAA,EAAAA,IAA0E,SAA1E4H,GAA0EjH,EAAAA,EAAAA,IAAjD/C,EAAAgD,EAAE,qCAAD,gBAJ+FhD,EAAA0J,oBAAY,eAU3ItH,EAAAA,EAAAA,IAAI,qBAEJ3C,EAAAA,EAAAA,IA+CWoE,GAAA,CA/CAlE,MAAA,gEAAgE,CAjRrFS,SAAAC,EAAAA,EAAAA,KAkRY,IA6CQ,EA7CR+B,EAAAA,EAAAA,IA6CQ,6BA5CRkB,EAAAA,EAAAA,IA2CKkD,EAAAA,GAAA,MA9TjBC,EAAAA,EAAAA,IAmRgC9F,EAAA0I,gBAATtI,K,WAAXuC,EAAAA,EAAAA,IA2CK,MA3CgCzD,IAAKkB,EAAM4G,I,EAE9CvF,EAAAA,EAAAA,IAuCK,YArCH3C,EAAAA,EAAAA,IAUSoF,EAAA,CATLjF,MAAM,qBACNkF,QAAQ,OACRE,KAAK,KACJxC,QAAK+B,GAAEhE,EAAA0J,gBAAgBlJ,EAAMF,SAAUE,EAAO,W,CA3RnEX,SAAAC,EAAAA,EAAAA,KA8RkB,IAAyB,EA9R3C6E,EAAAA,EAAAA,KAAAnC,EAAAA,EAAAA,IA8RoBhC,EAAMF,SAASqJ,QAAQ,IAAC,kBAAA9H,EAAAA,EAAAA,IAAI,qBAC9BA,EAAAA,EAAAA,IAAgG,OAAhG+H,GAAgGpH,EAAAA,EAAAA,IAA9D/C,EAAAgD,EAAE,8BAA+B,KAACD,EAAAA,EAAAA,IAAEhC,EAAMqJ,UAAU,MAAG,kBAAOhI,EAAAA,EAAAA,IAAI,uBA/RtHD,EAAA,G,kBAsS0BpB,EAAMsJ,aAAU,WAD1BnK,EAAAA,EAAAA,IAUWoK,GAAA,CA/S3BzK,IAAA,EAuSoBuI,MAAM,SACNxI,MAAM,uBACN2K,KAAA,GACAC,aAAA,I,CA1SpBpK,SAAAC,EAAAA,EAAAA,KA4SkB,IAEO,EAFP+B,EAAAA,EAAAA,IAEO,OAFPqI,EAEO,EA9SzBvF,EAAAA,EAAAA,KAAAnC,EAAAA,EAAAA,IA6SsB/C,EAAAgD,EAAE,yBAAyB,IAAC,kBAAAZ,EAAAA,EAAAA,IAAI,qBA7StD8C,EAAAA,EAAAA,KAAAnC,EAAAA,EAAAA,IA6SwDhC,EAAM2J,OAAO,QACnD,QA9SlBvI,EAAA,G,oBAgTgBjC,EAAAA,EAAAA,IAUWoK,GAAA,CA1T3BzK,IAAA,EAkToBuI,MAAM,OACNxI,MAAM,uBACN2K,KAAA,GACAC,aAAA,I,CArTpBpK,SAAAC,EAAAA,EAAAA,KAuTkB,IAEO,EAFP+B,EAAAA,EAAAA,IAEO,OAFPuI,GAEO5H,EAAAA,EAAAA,IADHhC,EAAM2J,OAAO,QACjB,MAzTlBvI,EAAA,G,yBAAAA,EAAA,S,WAmUQmB,EAAAA,EAAAA,IAEM,MArUdsH,EAAA,EAoUUxI,EAAAA,EAAAA,IAA0F,KAA1FyI,GAA0F9H,EAAAA,EAAAA,IAA5C/C,EAAAgD,EAAE,oCAAD,SApUzDb,EAAA,KAyUM1C,EAAAA,EAAAA,IAAuHoF,EAAA,CAA/GE,MAAA,GAAMqD,MAAM,SAASpD,KAAK,KAAMxC,QAAOjC,EAAAuK,uB,CAzUrD1K,SAAAC,EAAAA,EAAAA,KAyU4E,IAAwC,EAzUpH6E,EAAAA,EAAAA,KAAAnC,EAAAA,EAAAA,IAyU+E/C,EAAAgD,EAAE,kCAAD,MAzUhFb,EAAA,G,kBAAAA,EAAA,OAAAA,EAAA,I,2PAkXA,I,QAAA,CACE+E,KAAM,yBACN6D,MAAO,CACLnK,KAAMoK,QACNzJ,UAAW0J,MACXvK,aAAcuK,MACdvJ,aAAc,KACdC,SAAUsJ,MACVC,aAAcC,OACd7J,QAAS,KACT+H,eAAgB,GAChB3C,OAAQuE,MAERG,YAAa,KACbC,UAAWJ,MACXK,kBAAmBL,MACnBhI,KAAMsI,QAERC,IAAAA,GACE,MAAM,EAAExI,IAAMyI,EAAAA,GAAAA,MACd,MAAO,CACLzI,IAEA0I,WAAY,IACZ3K,MAAO,KACP4K,SAAU,KAGVC,MAAO,EAEPjJ,mBAAoB,KAGpB8E,uBAAwB,KAExBoE,SAAUC,EAAAA,EACV1B,SAAU2B,EAAAA,EACVjL,iBAAkB,KAClBE,UAAW,GAEXf,oBAAoB,EACpBoB,aAAc,GACdqC,aAAc,KACdsI,WAAW,EACXjI,mBAAmB,EACnBM,YAAa4H,KAAK3K,QAAQ+C,YAE1BgB,YAAY,EACZU,YAAc,IAAIrH,KAAKuN,KAAK3K,QAAQoE,SACpCD,qBAAsBwG,KAAK3K,QAAQ4K,KAEnCC,iBAAiB,EACjB1D,mBAAmB,EACnBQ,YAAY,EACZN,iBAAiB,EACjBR,aAAa,EAGbiE,eAAe,EACfC,YAAY,EACZC,gBAAgB,EAChBC,eAAe,EACfnF,aAAa,EAEbrH,MAAO,KACPuH,WAAY,EACZkF,KAAM,KACNC,MAAO,KACPC,iBAAiB,EACjBC,2BAA2B,EAC3BpE,UAAW,KACXqE,WAAY,GACZC,QAAS,GACTC,UAAW,GACX3L,KAAM,GACN4L,cAAe,EACfrD,aAAc,GAElB,EAEAsD,WAAY,CACVC,eAAc,IACdC,aAAY,IACZC,cAAa,IACbC,YAAW,aACXrB,KAAI,IACJsB,eAAc,aACdC,OAAM,KACNC,YAAW,KACXC,aAAY,KACZC,SAAQ,KACRC,OAAM,KACNC,OAAM,KACNC,YAAW,KACXC,QAAO,KACPC,SAAQA,EAAAA,IAGVC,QAAS,CACPnL,cAAAA,GACEoL,QAAQC,IAAI,YACZhC,KAAKtJ,mBAAqB,IAC5B,EACAE,eAAAA,GACEmL,QAAQC,IAAI,aACZhC,KAAKtJ,mBAAqB,KAC1BsJ,KAAKiC,MAAM,uBAAwBjC,KAAK3K,QAAS2K,KAAK3K,QAAQ8B,OAChE,EACAkD,QAAAA,GACE2F,KAAK5G,YAAa,CAGpB,EACA,wBAAMa,GAEJ,GAAI+F,KAAKlG,YAAa,CACpBiI,QAAQC,IAAI,aAAgB,IAAIvP,KAAKuN,KAAKlG,aAAa5C,WACvD8I,KAAKxG,qBAAwBwG,KAAKlG,YAAYoI,WAAa,EAAK,IAAMlC,KAAKlG,YAAYqI,UAAY,IAAOnC,KAAKlG,YAAYsI,cAC3HL,QAAQC,IAAI,WAAahC,KAAKlG,YAAYoI,WAAa,GAAK,IAAMlC,KAAKlG,YAAYqI,UAAY,IAAOnC,KAAKlG,YAAYsI,eACvH,MAAMC,EAAW,IAAI5P,KAAKuN,KAAKlG,aAAa5C,UACvB,IAAIzE,KAAKuN,KAAKlG,mBAC7BwI,GAAAA,EAAiBC,QAAQvC,KAAK3K,QAAQqG,GAAI,CAC9C8G,KAAMxC,KAAKlG,YAAYsI,cACvBK,MAAOzC,KAAKlG,YAAYoI,WACxBQ,IAAK1C,KAAKlG,YAAYqI,UACtBQ,MAAO3C,KAAKlG,YAAYJ,WACxBkJ,QAAS5C,KAAKlG,YAAYH,aAC1BkJ,QAASR,IAGX,MAAMS,EAAc,CAClBN,KAAMxC,KAAKlG,YAAYsI,cACvBK,MAAOzC,KAAKlG,YAAYoI,WACxBQ,IAAK1C,KAAKlG,YAAYqI,UACtBQ,MAAO3C,KAAKlG,YAAYJ,WACxBkJ,QAAS5C,KAAKlG,YAAYH,cAG5BqG,KAAKiC,MAAM,oBAAqBjC,KAAK3K,QAASyN,EAChD,CAEAf,QAAQC,IAAI,kBAEd,EACAnG,gBAAAA,CAAiBkH,EAAGpI,GAElBoH,QAAQC,IAAI,oBAAsBrH,GAClCqF,KAAK3E,WAAaV,EAClB,IAEE,MAAM6F,EAAQuC,EAAEC,OAAOxC,MAAM,GAG7B,GAFAuB,QAAQC,IAAI,uBAAwBe,EAAEC,OAAOxC,MAAM,IAE/CA,EAAO,CACT,MAAMyC,EAAYC,IAAIC,gBAAgB3C,GACtCR,KAAKW,WAAWyC,KAAKH,GACrBjD,KAAK1D,UAAY4G,IAAIC,gBAAgB3C,GACrCR,KAAKO,KAAOwC,EAAEC,OAAOxC,MAAM,GAC3BR,KAAKQ,MAAQuC,EAAEC,OAAOxC,MAAM,GAE5BR,KAAKhD,YAAa,EAClBgD,KAAK9D,aAAc,CACrB,CAEF,CAAE,MAAOmH,GACPtB,QAAQC,IAAI,SAAUqB,EACxB,CAEArD,KAAKlM,MAAQiP,EAAEC,OAAOxC,MAAM,EAM9B,EACA/D,eAAAA,GACEuD,KAAKhD,YAAa,EAClBgD,KAAK9D,aAAc,EACnB8D,KAAK7E,aAAc,EACnB6E,KAAKxD,mBAAoB,EACzBwD,KAAKtD,iBAAkB,CACzB,EACA,cAAM4G,GAGN,EACAlI,cAAAA,CAAgBmI,GACdvD,KAAK9D,aAAc,EACnB8D,KAAKlM,MAAQ,KACbkM,KAAK3E,WAAakI,EAClBvD,KAAKxD,mBAAoB,EACzBwD,KAAK7E,aAAc,EACnB6E,KAAKtD,iBAAkB,CACzB,EACAjB,cAAAA,GACEuE,KAAKtD,iBAAkB,EACvBsD,KAAK7E,aAAc,EACnB6E,KAAK9D,aAAc,EACnB8D,KAAKlM,MAAQ,IACf,EACA8I,aAAAA,GACEoD,KAAKtD,iBAAkB,EACvBsD,KAAKxD,mBAAoB,EACzBwD,KAAKlM,MAAQ,IACf,EACA,uBAAMsI,CAAmBmH,EAAOC,GAE9BzB,QAAQC,IAAI,0BAA4BuB,GAExCvD,KAAK7E,aAAc,EACnB6E,KAAK9D,aAAc,EAEnB,MAAMqD,EAAO,IAAIkE,SACjBlE,EAAKmE,OAAO,OAAQ1D,KAAKO,KAAMP,KAAKO,KAAKtF,MAEzC8G,QAAQC,IAAI,YAAchC,KAAKvF,OAAO8I,GAAOI,KAC7C,MAAMC,EAAc5D,KAAKO,KAAK5E,KAC9B,GAAmB,eAAfiI,GAA+C,cAAhBA,GAA+C,cAAhBA,GAA+C,cAAhBA,EAC/F,GAAI5D,KAAKO,KAAKxH,MAAQiH,KAAKP,WAAY,CACrC,MAAM1E,QAAc8I,EAAAA,EAAaC,YAAY9D,KAAKvF,OAAO8I,GAAOI,IAAKpE,GAErE,GAAIxE,EAAO,CACTiF,KAAKiC,MAAM,YAAasB,EAAOxI,EAAM4I,IAAM3D,KAAK1D,WAOhDyF,QAAQC,IAAI,yBAA2BhC,KAAK3K,QAAQ0O,QAAQ3M,QAC5D,IAAI2M,EAAU,GACd/D,KAAK3K,QAAQ0O,QAAQC,SAAQC,IAC3BlC,QAAQC,IAAI,UAAYiC,EAAEC,KAAKC,UAC/BJ,EAAUA,EAAQK,OAAOH,EAAEC,KAAKxI,GAAG,IAGrC,MAAM2I,EAAS,IAAIC,WAEftE,KAAKO,OACP8D,EAAOE,OAAUxB,IACf,MAAMyB,EAAQ,IAAIC,WAAW1B,EAAEC,OAAO0B,QACtC3C,QAAQC,IAAI,aAAehC,KAAKQ,OAEhC,MAAMmE,EAAW5J,EAAM4I,IAEvBiB,GAAAA,EAAOC,KAAK,+BAAgCF,EAAUH,EAAOxE,KAAK3K,QAAQqG,GAAIqI,EAAQ,EAGxFM,EAAOS,kBAAkB9E,KAAKQ,QAGhCuB,QAAQC,IAAI,mBAAqBjH,EAAM4I,KACvC3D,KAAK+E,MAAQhK,EAAM4I,IACnB3D,KAAKO,KAAO,KAEZP,KAAK7E,aAAc,EAGnB6E,KAAKpD,eAEP,CACF,MACEoD,KAAK7E,aAAc,EACnB6E,KAAKpD,gBACLoD,KAAKxE,uBAAyB,wEAC9BwJ,YAAW,KACThF,KAAKxE,uBAAyB,IAAI,GACjC,UAILwE,KAAK7E,aAAc,EACnB6E,KAAKpD,gBACLoD,KAAKxE,uBAAyB,oCAC9BwJ,YAAW,KACThF,KAAKxE,uBAAyB,IAAI,GACjC,IAIP,EAGA,wBAAMyB,GACJ+C,KAAKlM,MAAQ,KAEbkM,KAAKtD,iBAAkB,EACvBsD,KAAKhD,YAAa,EAClBgD,KAAKxD,mBAAoB,EACzB,MAAM+C,EAAO,IAAIkE,SAEjBlE,EAAKmE,OAAO,OAAQ1D,KAAKO,KAAMP,KAAKO,KAAKtF,MACzC8G,QAAQC,IAAI,cAAgBhC,KAAKO,KAAKxH,MAEtCgJ,QAAQC,IAAI,eAAiBhC,KAAKO,KAAK5E,MAEvC,MAAMA,EAAOqE,KAAKO,KAAK5E,KACvB,GAAY,eAARA,GAAiC,cAATA,GAAiC,cAATA,GAAiC,cAATA,EAE1E,GADAoG,QAAQC,IAAI,uBACRhC,KAAKO,KAAKxH,MAAQiH,KAAKP,WAAY,CAErC,MAAM4E,EAAS,IAAIC,WAEbd,QAAYK,EAAAA,EAAaoB,OAAO1F,GAEtC,GAAIiE,EAAK,OACDlB,GAAAA,EAAiBgB,SAAStD,KAAK3K,QAAQqG,GAAI8H,EAAI0B,WAAWvB,KAOhE,MAAMwB,EAAS,CACbxB,IAAKH,EAAI0B,WAAWvB,IACpB9I,KAAMmF,KAAK1D,WAEb0D,KAAKiC,MAAM,WAAYkD,EAAQnF,KAAK3K,QAAQqG,IAC5CqG,QAAQC,IAAI,iBAAmBhC,KAAK3K,QAAQ0O,QAAQ3M,QACpD,IAAI2M,EAAU,GACd/D,KAAK3K,QAAQ0O,QAAQC,SAAQC,IAC3BlC,QAAQC,IAAI,UAAYiC,EAAEC,KAAKC,UAC/BJ,EAAUA,EAAQK,OAAOH,EAAEC,KAAKxI,GAAG,IAGrC2I,EAAOE,OAAUxB,IACf,MAAMyB,EAAQ,IAAIC,WAAW1B,EAAEC,OAAO0B,QACtC3C,QAAQC,IAAI,uBAAyBhC,KAAKQ,OAE1C,MAAM4E,EAAc,CAClB1J,GAAI8H,EAAI0B,WAAWvB,IACnBa,MAAOA,GAETI,GAAAA,EAAOC,KAAK,wBAAyBO,EAAapF,KAAK3K,QAAQqG,GAAIqI,EAAQ,EAG7EM,EAAOS,kBAAkB9E,KAAKQ,MAGhC,CACF,MAEEuB,QAAQC,IAAI,4CACZhC,KAAKtD,iBAAkB,EACvBsD,KAAKxD,mBAAoB,EACzBwD,KAAKxE,uBAAyB,6BAE9BwJ,YAAW,KACThF,KAAKxE,uBAAyB,IAAI,GACjC,UAGLuG,QAAQC,IAAI,yBACZhC,KAAKxE,uBAAyB,wEAC9BwJ,YAAW,KACThF,KAAKxE,uBAAyB,IAAI,GACjC,IAGP,EACA,eAAMa,CAAWX,GAEVsE,KAAKvF,OAAOiB,GAAIb,MACnBkH,QAAQC,IAAI,yBAIdD,QAAQC,IAAI,yBAA2BhC,KAAKvF,OAAOiB,GAAIiI,WAEjDrB,GAAAA,EAAiB+C,YAAYrF,KAAK3K,QAAQqG,GAAIsE,KAAKvF,OAAOiB,GAAIiI,WAC9DE,EAAAA,EAAayB,OAAOtF,KAAKvF,OAAOiB,GAAIiI,IAAK3D,KAAK3K,QAAQqG,IAC5D,IAAI6J,EAAO,GAEXvF,KAAK3K,QAAQ0O,QAAQC,SAAQwB,IAC3BD,EAAOA,EAAKnB,OAAOoB,EAAGtB,KAAKxI,GAAG,IAGhCkJ,GAAAA,EAAOC,KAAK,6BAA8B7E,KAAKvF,OAAOiB,GAAIiI,IAAK3D,KAAK3K,QAASkQ,GAE7EvF,KAAKiC,MAAM,cAAevG,GAE1BsE,KAAK7E,aAAc,CAErB,EACAsK,WAAAA,GAEE1D,QAAQC,IAAI,OAASlC,EAAAA,EAAKnL,OAC5B,EACAkB,UAAAA,CAAYqO,GACVlE,KAAKiC,MAAM,SAAUiC,EACvB,EACAnO,YAAAA,GACEiK,KAAKiC,MAAM,WACb,EACAtM,SAAAA,CAAW+P,EAASzF,GAClBD,KAAKiC,MAAM,UAAWyD,EAASzF,EACjC,EAOAhK,mBAAAA,GACE8L,QAAQC,IAAI,iCAEZhC,KAAKiC,MAAM,gBAAiBjC,KAAK9K,KACnC,EAEA,wBAAMyQ,GACJ3F,KAAKE,iBAAkB,EACvBF,KAAK3E,WAAa,CACpB,EAEAuK,oBAAAA,CAAsBrC,GAEpBvD,KAAKhD,YAAa,EAClBgD,KAAK3E,WAAa2E,KAAKvF,OAAOrD,OAI9B2K,QAAQC,IAAI,kBAAoBhC,KAAK3E,YACrC2E,KAAKhD,YAAa,CACpB,EAwCA,2BAAM6I,GACJ7F,KAAKU,2BAA4B,EACjCV,KAAKhD,YAAa,EAClBgD,KAAKlM,MAAQ,KAIbiO,QAAQC,IAAI,qBAAuBhC,KAAK3E,YACxC,MAAMkE,EAAO,IAAIkE,SAEjBzD,KAAKG,eAAgB,EAErBH,KAAKI,YAAa,EAElBb,EAAKmE,OAAO,OAAQ1D,KAAKO,KAAMP,KAAKO,KAAKtF,MACzC,MAAMuI,QAAYK,EAAAA,EAAaoB,OAAO1F,GAGtC,SAFM+C,GAAAA,EAAiBgB,SAAStD,KAAK3K,QAAQqG,GAAI8H,EAAI0B,WAAWvB,KAE5DH,EAAK,CAEPxD,KAAKO,KAAO,KAOZ,MAAMxF,EAAQ,CACZ4I,IAAKH,EAAI0B,WAAWvB,IACpB5I,MAAOyI,EAAI0B,WAAWnK,MACtBE,KAAMuI,EAAI0B,WAAWjK,KACrBJ,KAAMmF,KAAK1D,WAKb0D,KAAKiC,MAAM,WAAYlH,GAmBvBiF,KAAKS,iBAAkB,EACvBT,KAAKI,YAAa,CAKpB,CAIF,EAEAjH,sBAAAA,GACE6G,KAAKlI,mBAAoB,EACzBiK,QAAQC,IAAI,eAAiBhC,KAAK5H,YACpC,EACAY,qBAAAA,GACEgH,KAAKlI,mBAAoB,EACzB,MAAMM,EAAc,CAClBA,YAAa4H,KAAK5H,aAEpB4H,KAAKiC,MAAM,kBAAmBjC,KAAK5H,aACnCkK,GAAAA,EAAiBwD,gBAAgB9F,KAAK3K,QAAQqG,GAAItD,EAEpD,EACA2N,qBAAAA,GACEhE,QAAQC,IAAI,gCACd,EACAgE,kBAAAA,CAAoBtK,EAAIrG,GAEtB0M,QAAQC,IAAI,wBAA0BtG,GACtCkJ,GAAAA,EAAOC,KAAK,kBAAmB,CAC7BnJ,KACArG,QAASA,GAEb,EAGA,kBAAMb,CAAcjC,GAElB,GADAwP,QAAQC,IAAI,mBAAqBhC,KAAK3K,QAAQ4Q,iBAC1CjG,KAAK3K,QAAQ4Q,gBAAiB,CAChCjG,KAAKxJ,eAILuL,QAAQC,IAAI,UAAYhC,KAAK3K,QAAQ0O,QAAQ3M,QAI7C4I,KAAKiC,MAAM,kBAAmBjC,KAAK3K,QAAU9C,EAAKmJ,IAClDqG,QAAQC,IAAI,UAAYhC,KAAK3K,QAAQ0O,QAAQ3M,QAC7C,MAAM8O,QAAYC,EAAAA,EAAgBC,gBAAgB7T,EAAKmJ,IAEvDqG,QAAQC,IAAI,8BAAgCkE,EAAIhC,KAAKxI,IAGvCsE,KAAKnL,iBAAiB6G,SAG9B4G,GAAAA,EAAiB+D,gBAAgBrG,KAAK3K,QAAQqG,GAAI,CAAC4K,OAAQ,cAI7CtG,KAAK3K,QAAQqG,GAGjCqG,QAAQC,IAAI,qBAAuBhC,KAAK3K,QAAQ6O,KAAKC,UAGrD,IAAIoC,EAAgB,GAChBC,EAAc,GACdC,EAAS,GACTC,EAAsB,GAE1B,GAAI1G,KAAK3K,QAAS,CAChBkR,EAAgBvG,KAAK3K,QAAQ8B,OAC7B,MAAMwP,EAAiB3G,KAAK3K,QAAQ0O,QACpC,IAAK,IAAIrI,KAAMiL,EAETA,EAAejL,GAAIwI,KAAKxI,KAAOwK,EAAIhC,KAAKxI,IAG1C+K,EAAOrD,KAAKuD,EAAejL,IAU/B,IAAK,IAAIf,KAAK4L,EACRA,EAAc5L,GAAGzF,OAAS8K,KAAK9K,YAC3B0R,EAAAA,EAAaC,mBAAmBN,EAAc5L,GAAGe,GAAIsE,KAAK3K,QAAQqG,GAG9E,CAEA,IAAIoL,EAAY,CAAC,EAEjB,IAAK,IAAIC,KAAUR,EAEjBxE,QAAQC,IAAI,4BAA8BuE,EAAcQ,GAAQnS,SAASsP,KAAKxI,IAI1E6K,EAAcQ,GAAQnS,SAASsP,KAAKxI,KAAOwK,EAAIhC,KAAKxI,IAGtD8K,EAAcA,EAAYpC,OAAOmC,EAAcQ,IAG/ChF,QAAQC,IAAI,yBAA2BuE,EAAcQ,GAAQnS,SAASsP,KAAKxI,UAErEyK,EAAAA,EAAgBa,sBAAsBT,EAAcQ,GAAQnS,SAAS8G,GAAIsE,KAAK3K,QAAQqG,UACtF4G,GAAAA,EAAiB2E,mBAAmBjH,KAAK3K,QAAQqG,GAAI6K,EAAcQ,GAAQnS,SAAS8G,KAG1FoL,EAAYP,EAAcQ,GAI9BhF,QAAQC,IAAI,sBAAwBwE,EAAYpP,QAChDqP,EAAOzC,SAAQkD,IAERV,EAAYW,MAAKC,GAAMA,EAAGxS,SAAS8G,KAAOwL,EAAGxL,MAChDgL,EAAoBtD,KAAK8D,EAC3B,IAQFnF,QAAQC,IAAI,UAAYyE,EAAOY,KAAIC,GAAMA,EAAG5L,MAC5CqG,QAAQC,IAAI,gBAAkB0E,EAAoBW,KAAIE,GAAMA,KAE5D,IAAK,IAAI7L,KAAMgL,EACb3E,QAAQC,IAAI,WAAa0E,EAAoBhL,GAAIA,UAC3CyK,EAAAA,EAAgBa,sBAAsBN,EAAoBhL,GAAIA,GAAIsE,KAAK3K,QAAQqG,UAC/E4G,GAAAA,EAAiB2E,mBAAmBjH,KAAK3K,QAAQqG,GAAIgL,EAAoBhL,GAAIA,IAKrFkJ,GAAAA,EAAOC,KAAK,gBAAiBqB,EAAIhC,KAAKxI,GAAIsE,KAAK3K,QAASyR,GAGxDlC,GAAAA,EAAOC,KAAK,yBAA0B2B,EAAaE,EAAqB1G,KAAK3K,QAASyR,EAExF,MACE9G,KAAKhM,oBAAqB,EAE1B+N,QAAQC,IAAI,+BAsChB,EAEA,2BAAMwF,CAAuBjV,GAC3ByN,KAAKhM,oBAAqB,EAE1B+N,QAAQC,IAAI,eAAiBzP,EAAKmJ,IAClCqG,QAAQC,IAAI,gBAAkBhC,KAAK3K,QAAQqG,IAE3CsE,KAAKxJ,eAELwJ,KAAKiC,MAAM,kBAAmBjC,KAAK3K,SAErB2K,KAAKnL,iBAAiB6G,SAYF4G,GAAAA,EAAiB+D,gBAAgBrG,KAAK3K,QAAQqG,GAAI,CAAC4K,OAAQ,cAIzEtG,KAAK3K,QAAQqG,EA0CnC,EACA,qBAAMsC,CAAiBpJ,EAAUE,EAAO2S,GACtCzH,KAAKjL,UAAY,GACjBiL,KAAKlL,MAAQA,EACbkL,KAAKnL,iBAAmBD,EACpBoL,KAAK3K,QAAQ4Q,iBACXnR,EAAMsJ,YACR4B,KAAKiC,MAAM,yBAA0BnN,GAGzCF,EAAS8S,UAAU1D,SAAQ2D,IACzB3H,KAAKjL,UAAY,IACViL,KAAKjL,UACR4S,EACJ,IAiBF3H,KAAK5K,aAAeqS,EACpBzH,KAAKhM,oBAAqB,EAG1B,IAAIkB,EAAO,GACPiP,EAAW,GAEXnE,KAAKN,WACPyE,EAAWnE,KAAKN,SAASyE,SACzBjP,EAAON,EAASqJ,OAASkG,EACzBnE,KAAK9K,KAAOA,EAGhB,EACA,cAAM0S,CAAUlM,EAAIxG,SACZiR,EAAAA,EAAgB0B,QAAQnM,EAAIxG,EACpC,EACAyI,SAAAA,GACE,MAAMmK,EAAwBC,SAASC,eAAe,mBAEtDF,EAAsBG,iBAAiB,UAAWC,IAChDnG,QAAQC,IAAI,sBAAwBkG,EAAMlF,OAAOlP,OACjDkM,KAAKiC,MAAM,kBAAmBiG,EAAMlF,OAAOlP,MAAM,GAGrD,EACAS,iBAAAA,CAAmBmQ,GACjB1E,KAAKhM,mBAAqB0Q,CAC5B,EACAlO,YAAAA,GACEwJ,KAAKiC,MAAM,iBAAiB,EAC9B,EACA,2BAAMpD,IAU8D,IAA9DsJ,QAAQ,kDAEVnI,KAAKiC,MAAM,uBAAwBjC,KAAK3K,QAAS2K,KAAK3K,QAAQ8B,QAG9D4K,QAAQC,IAAI,gBAEhB,GAGF,aAAMoG,GACJ,MAAMC,EAAiBC,OAAOC,aAAaC,QAAQ,iBACnD,GAAIH,EAAgB,CAClB,MAAMnE,EAAOuE,KAAKC,MAAML,GACxBrI,KAAKN,SAAWwE,CAElB,CAGF,I,WCptCF,MAAMyE,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,S","sources":["webpack://prore-mongo/./src/components/controllers/datetime.js","webpack://prore-mongo/./src/components/notifications/errorMessage.js","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue","webpack://prore-mongo/./src/pages/RecipientPanelResult.vue?7f3a"],"sourcesContent":["\nconst compare = (rec, prov) => {\n    const receiverDate = new Date(rec.y, rec.m, rec.d, rec.hour, rec.min);\n    const providerDate = new Date(prov.y, prov.m, prov.d, prov.hour, prov.min)\n    return providerDate >= receiverDate;\n}\n\nconst providerMatchingForClient = (re, pFrom, pTo) => {\n    //const rDate = new Date(re.y, re.m, re.d, re.hour, re.min);\n    const pFromDate = new Date(pFrom.y, pFrom.m, pFrom.d, pFrom.hour, pFrom.min);\n    const pToDate = new Date(pTo.y, pTo.m, pTo.d, pTo.hour, pTo.min);\n    return re >= pFromDate && re < pToDate;\n}\nexport default { compare, providerMatchingForClient }","const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n            <img className={'errorImg'} alt={'error'} src={require('@/assets/error.png')}/>\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage","<template>\r\n\r\n\r\n  <MDBContainer v-if=\"isProviderSelected\">\r\n    <recipientFinal\r\n        @cansel:final = handleCanselFinal\r\n        @provider:ordered = orderSuccess\r\n        :proRefSlides = proRefSlides\r\n        :test = test\r\n        :provider = selectedProvider\r\n        :offer = offer\r\n        :proSlides = slides\r\n        :room = room\r\n        :available = availability\r\n        :booking = booking\r\n\r\n        :chatusers = chatusers\r\n\r\n        :initialize_chat = handleInitializeChat\r\n\r\n        :selecteduser = selecteduser\r\n        :messages = messages\r\n        @message = onMessage\r\n        @select = selectUser\r\n        @noSelect = noSelectUser\r\n        @join_chat_panel = handleJoinChatPanel\r\n\r\n    />\r\n\r\n  </MDBContainer>\r\n  <MDBContainer v-else>\r\n    <div style=\"display: flex; justify-content: right; padding: 20px;\">\r\n      <MDBBtnClose\r\n          white\r\n          style=\"cursor: pointer;\"\r\n          @click=\"canselResult\"\r\n      />\r\n    </div>\r\n\r\n    <prompt-panel\r\n        :promptPanelContent = promptPanelContent\r\n        @prompt:no = handlePromptNo\r\n        @prompt:yes = handlePromptYes\r\n    />\r\n\r\n<!--    <MDBIcon-->\r\n<!--        style=\"float:right; cursor: pointer;\"-->\r\n<!--        @click=\"canselResult\"-->\r\n<!--        size=\"3x\"-->\r\n<!--    >-->\r\n<!--      <i class=\"fas fa-undo\"></i>-->\r\n<!--    </MDBIcon>-->\r\n\r\n    <h2 class=\"client-result-header\">{{t('recipient_result_need_a_pro')}} - {{line}}</h2>\r\n\r\n    <h5 v-if=\"booking.created_ms - new Date().getTime() <= 0 && booking.offers.length < 1\" class=\"expired_date\">\r\n      {{t('recipient_result_order_is_expired')}}\r\n    </h5>\r\n    <successMessage\r\n        :message = orderMessage\r\n    />\r\n\r\n    <MDBRow style=\"margin-top: 50px;\">\r\n      <MDBCol class=\"client-result\">\r\n\r\n        <MDBTable borderless style=\"font-size: 17px; color: #dddddd; text-align: left;\">\r\n          <tbody>\r\n          <tr>\r\n            <td v-if=\"!isEditDescription\">\r\n              <p>{{booking.description}}</p>\r\n\r\n\r\n            </td>\r\n            <td v-else>\r\n              <MDBRow>\r\n\r\n                <MDBCol >\r\n                  <MDBTextarea\r\n                      :label=\"t('recipient_result_edit_description')\"\r\n                      white\r\n                      rows=\"4\" v-model=\"description\"\r\n                      style=\"font-size: 14px; padding: 20px;\"\r\n                  />\r\n                </MDBCol>\r\n                <MDBCol col=\"1\">\r\n                  <div style=\"display: flex; justify-content: right; cursor: pointer\">\r\n                    <MDBBtnClose\r\n                        white\r\n                        @click=\"isEditDescription = false\"\r\n                    />\r\n                  </div>\r\n\r\n                </MDBCol>\r\n              </MDBRow>\r\n\r\n\r\n\r\n\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"booking.offers.length < 1\">\r\n            <td v-if=\"!isEditDescription\">\r\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"pressedEditDescription\">Muokkaa tehtävän kuvausta</MDBBtn>\r\n            </td>\r\n            <td v-else>\r\n              <MDBBtn outline=\"info\" block size=\"lg\" @click=\"saveEditedDescription\">Tallenna tehtävän kuvaus</MDBBtn>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td v-if=\"!isEditDate\">\r\n              <p :class=\"{expired_date: booking.created_ms - new Date().getTime() <= 0 && booking.offers.length < 1}\">\r\n                {{bookingDateToDisplay}} &emsp;\r\n                klo &nbsp;\r\n                {{new Date(booking.created).getHours() < 10 ? \"0\" + new Date(booking.created).getHours() : new Date(booking.created).getHours()}}\r\n                :\r\n                {{new Date(booking.created).getMinutes() < 10 ? \"0\" + new Date(booking.created).getMinutes() : new Date(booking.created).getMinutes()}}\r\n\r\n              </p>\r\n              <MDBBtn v-if=\"booking.offers.length < 1\" block size=\"lg\" outline=\"info\" @click=\"editDate\">\r\n                <span :class=\"{expired_warning: booking.created_ms - new Date().getTime() <= 0}\">{{t('recipient_result_edit_date')}}</span>\r\n              </MDBBtn>\r\n            </td>\r\n            <td v-else>\r\n              <MDBRow>\r\n                <MDBCol col=\"8\">\r\n                  <h4 :class=\"{expired_date: booking.created_ms - new Date().getTime() <= 0}\">\r\n                    {{bookingDateToDisplay}}<br>\r\n                    klo &nbsp;\r\n                    {{new Date(booking.created).getHours() < 10 ? \"0\" + new Date(booking.created).getHours() : new Date(booking.created).getHours()}}\r\n                    :\r\n                    {{new Date(booking.created).getMinutes() < 10 ? \"0\" + new Date(booking.created).getMinutes() : new Date(booking.created).getMinutes()}}\r\n                  </h4>\r\n\r\n                  <VueDatePicker\r\n                      style=\"margin-bottom: 20px;\"\r\n                      dark\r\n                      v-model=\"bookingDate\"\r\n                      :min-date=\"new Date()\"\r\n                      :placeholder=\"t('recipient_result_select_date')\"\r\n                      @internal-model-change=\"handleInternalDate\"\r\n                      :state=\"isNoDate ? false : null\"\r\n                  >\r\n\r\n                  </VueDatePicker>\r\n                </MDBCol>\r\n                <MDBCol col=\"4\">\r\n                  <MDBBtnClose\r\n                      white\r\n                      @click=\"isEditDate = false\"\r\n                      style=\"float: right; cursor: pointer\"\r\n\r\n                  />\r\n                </MDBCol>\r\n              </MDBRow>\r\n\r\n            </td>\r\n\r\n          </tr>\r\n\r\n          </tbody>\r\n        </MDBTable>\r\n<!--require(`/server/uploads/${im.name}`)        -->\r\n        <div v-for=\"(item, i) in images\" :key=\"i\">\r\n          <img\r\n              class=\"loading\"\r\n              style=\"width: 100%;\"\r\n              :src=\"item.blob ? im.blob : item.image\"\r\n              :alt=\"item.name\"\r\n          />\r\n\r\n          <MDBBtn v-if=\"!isEditPanel\" block outline=\"success\" @click=\"pressEditPanel(i)\">{{t('recipient_result_edit_picture')}}</MDBBtn>\r\n          <div class=\"edit-panel\" v-if=\"isEditPanel && imageIndex === i\">\r\n            <error-message :message = wrong_SizeType_Message />\r\n            <MDBRow v-if=\"booking.offers.length < 1\">\r\n              <MDBCol>\r\n                <MDBBtnClose\r\n                    v-if=\"!value\"\r\n                    white\r\n                    class=\"close-btn\"\r\n                    style=\"float: right;\"\r\n                    @click=\"closeEditPanel\"\r\n                />\r\n                <input  id=\"file-upload\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\r\n                <label  for=\"file-upload\" class=\"custom-file-upload\">\r\n                  <span v-if=\"value\">\r\n                  {{t('recipient_result_edit_order_picture')}}: {{value.name}}\r\n\r\n                   </span>\r\n                  <span v-else>{{t('recipient_result_select_new_image')}}</span>\r\n                </label>\r\n                <MDBBtn v-if=\"isEditImage\" block color=\"success\" @click=\"uploadEditedImage(i)\">{{ t('recipient_result_upload_edited_image') }}</MDBBtn>\r\n                <MDBBtn class=\"btn\" block size=\"lg\" color=\"danger\" @click=\"removeImg(i)\">{{ t('recipient_result_remove_image') }}</MDBBtn>\r\n              </MDBCol>\r\n              <MDBCol v-if=\"value\">\r\n                <MDBBtnClose\r\n                    white\r\n                    class=\"close-btn\"\r\n                    style=\"float: right;\"\r\n                    @click=\"closeEditPanel\"\r\n                />\r\n                <img\r\n                    style=\"width:100px; padding-top: 20px;\"\r\n                    :src=\"this.showImage\"\r\n                    alt=\"addEdit\"\r\n                />\r\n              </MDBCol>\r\n            </MDBRow>\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n        <!--New image-->\r\n        <MDBBtn v-if=\"!isPressedAddlmage & booking.offers.length < 1\" block color=\"primary\" @click=\"pressedAddImage\">{{ t('recipient_result_add_image') }}</MDBBtn>\r\n        <div class=\"add-panel\" v-if=\"isPressedAddlmage && isAddImagePanel\">\r\n\r\n          <error-message :message = wrong_SizeType_Message />\r\n          <MDBRow>\r\n\r\n            <MDBCol>\r\n              <MDBBtnClose\r\n                  v-if=\"!value\"\r\n                  white\r\n                  class=\"close-btn\"\r\n                  @click=\"closeAddPanel\"\r\n              />\r\n              <input   id=\"file-upload-x\" type=\"file\" @change=\"handleFileChange($event, i)\"/>\r\n              <label  for=\"file-upload-x\" class=\"custom-file-upload\">\r\n                  <span v-if=\"value\">\r\n                  Muokka tehtävän kuvausta: {{value.name}}\r\n+\r\n                   </span>\r\n                <span v-else>Valitse lisää kuva tehtävästä</span>\r\n              </label>\r\n              <MDBBtn v-if=\"isAddImage\" block outline=\"primary\" @click=\"addAdditionalImage\">Tallenna kuva</MDBBtn>\r\n            </MDBCol>\r\n            <MDBCol v-if=\"value\">\r\n              <MDBBtnClose\r\n                  class=\"close-btn\"\r\n                  white\r\n                  @click=\"closeAddPanel\"\r\n              />\r\n              <img\r\n                  style=\"width:100px\"\r\n                  :src=\"this.showImage\"\r\n                  alt=\"addShow\"\r\n              />\r\n            </MDBCol>\r\n          </MDBRow>\r\n\r\n        </div>\r\n\r\n      </MDBCol>\r\n\r\n      <MDBCol lg=\"6\">\r\n        <div v-if=\"booking_offers.length > 0\">\r\n          <div class=\"ui large form\">\r\n            <div class=\"field\">\r\n              <h3 style=\"margin-bottom: 20px;\">{{ t('recipient_result_offers') }}</h3>\r\n              <select style=\"padding: 20px; background-color: #3c3535; color: lightgrey; font-size: 18px;\" id=\"listOfProviders\" v-model=\"filterResult\" @click=\"addFilter\">\r\n                <option value=\"\">{{ t('recipient_result_filter') }}</option>\r\n                <option value=\"distance\">{{ t('recipient_result_filter_by_distance') }}</option>\r\n                <option value=\"rating\">{{ t('recipient_result_filter_by_rating') }}</option>\r\n                <option value=\"price\">{{ t('recipient_result_filter_by_price') }}</option>\r\n              </select>\r\n\r\n            </div>\r\n\r\n          </div>\r\n          <br>\r\n\r\n          <MDBTable  style=\"font-size: 18px; text-align: center; position: relative;\">\r\n            <tbody>\r\n            <tr v-for=\"offer in booking_offers\" :key=\"offer.id\">\r\n\r\n              <td>\r\n\r\n                <MDBBtn\r\n                    class=\"provider-selection\"\r\n                    outline=\"info\"\r\n                    size=\"lg\"\r\n                    @click=\"getProviderInfo(offer.provider, offer, 'orange')\"\r\n                >\r\n\r\n                  {{offer.provider.yritys}} <br>\r\n                  <span style=\"font-size: 14px;\">{{ t('recipient_result_distance') }} {{offer.distance}} km</span><br>\r\n\r\n                </MDBBtn>\r\n\r\n\r\n\r\n                <MDBBadge\r\n                    v-if=\"offer.isNewOffer\"\r\n                    color=\"danger\"\r\n                    class=\"translate-middle p-3\"\r\n                    pill\r\n                    notification\r\n                >\r\n                  <span style=\" font-size: 14px; \">\r\n                    {{t('recipient_result_new')}} <br>{{offer.price}} eur\r\n                  </span>\r\n                </MDBBadge>\r\n                <MDBBadge\r\n                    v-else\r\n                    color=\"info\"\r\n                    class=\"translate-middle p-3\"\r\n                    pill\r\n                    notification\r\n                >\r\n                  <span style=\" font-size: 14px; \">\r\n                    {{offer.price}} eur\r\n                  </span>\r\n                </MDBBadge>\r\n\r\n              </td>\r\n\r\n            </tr>\r\n            </tbody>\r\n          </MDBTable>\r\n\r\n        </div>\r\n        <div v-else>\r\n          <h2 style=\"width: 100%; margin-top: 17px;\">{{ t('recipient_result_waiting_offers') }}</h2>\r\n        </div>\r\n\r\n      </MDBCol>\r\n\r\n      <MDBBtn block color=\"danger\" size=\"sm\" @click=\"removeOfferedBookings\">{{ t('recipient_result_remove_order') }}</MDBBtn>\r\n    </MDBRow>\r\n\r\n<!--    Booking offers {{booking_offers}}-->\r\n\r\n\r\n  </MDBContainer>\r\n\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport {\r\n  MDBBtn, MDBContainer, MDBTable, MDBRow,\r\n  MDBBtnClose,\r\n  MDBCol, MDBTextarea,\r\n  MDBIcon,\r\n  MDBBadge,\r\n}from \"mdb-vue-ui-kit\";\r\nimport dt from '../components/controllers/datetime'\r\nimport recipientFinal from '../pages/RecipientPanelFinal'\r\nimport successMessage from '../components/notifications/successMessage'\r\nimport errorMessage from '../components/notifications/errorMessage'\r\nimport dist from '../components/controllers/distance'\r\nimport providerService from '../service/providers'\r\nimport offerService from '../service/offers'\r\nimport imageService from '../service/image'\r\nimport promptPanel from '../components/PromptPanel'\r\nimport VueDatePicker from '@vuepic/vue-datepicker';\r\nimport '@/css/style.css';\r\nimport '@/css/notification.css'\r\n//import socket from \"@/socket\";\r\nimport {ref} from 'vue'\r\nimport recipientService from \"@/service/recipients\";\r\nimport { useI18n } from 'vue-i18n';\r\nimport socket from \"@/socket\";\r\nimport uploadService from \"@/service/image\";\r\nimport dateFormat from \"dateformat\";\r\n//import socket from \"@/socket\";\r\n\r\n\r\nexport default {\r\n  name: \"recipient-panel-result\",\r\n  props: {\r\n    test: Boolean,\r\n    chatusers: Array,\r\n    proRefSlides: Array,\r\n    selecteduser: null,\r\n    messages: Array,\r\n    loggedInUser: Object,\r\n    booking: null,\r\n    booking_offers: [],\r\n    images: Array,\r\n\r\n    bookingTime: null,\r\n    providers: Array,\r\n    confirmedBookings: Array,\r\n    line: String\r\n  },\r\n  data () {\r\n    const { t } = useI18n();\r\n    return {\r\n      t,\r\n      //image: [],\r\n      IMAGE_SIZE: 1000000,\r\n      offer: null,\r\n      chatUser: null,\r\n      //initializeChatRoom: {},\r\n      //chatRoomData: {},\r\n      count: 0,\r\n      //confirmPanel: null,\r\n      promptPanelContent: null,\r\n\r\n\r\n      wrong_SizeType_Message: null,\r\n\r\n      datetime: dt,\r\n      distance: dist,\r\n      selectedProvider: null,\r\n      proSlides: [],\r\n\r\n      isProviderSelected: false,\r\n      availability: \"\",\r\n      orderMessage: null,\r\n      isOrdered: false,\r\n      isEditDescription: false,\r\n      description: this.booking.description,\r\n\r\n      isEditDate: false,\r\n      bookingDate:  new Date(this.booking.created),        //null,\r\n      bookingDateToDisplay: this.booking.date,\r\n      //isAddImage: false,\r\n      isAddFirstImage: false,\r\n      isPressedAddlmage: false,\r\n      isAddImage: false,\r\n      isAddImagePanel: false,\r\n      isEditImage: false,\r\n\r\n\r\n      isUploadImage: false,\r\n      isUploaded: false,\r\n      isImageCreated: false,\r\n      isAddNewImage: false,\r\n      isEditPanel: false,\r\n\r\n      value: null,\r\n      imageIndex: 0,\r\n      file: null,\r\n      files: null,\r\n      isImageSelected: false,\r\n      isAdditionalImageSelected: false,\r\n      showImage: null,\r\n      tempImages: [],\r\n      imagesx: [],\r\n      imagesxxx: [],\r\n      room: \"\",\r\n      roomUserCount: 0,\r\n      filterResult: \"\",\r\n    }\r\n  },\r\n\r\n  components: {\r\n    successMessage,\r\n    errorMessage,\r\n    VueDatePicker,\r\n    promptPanel,\r\n    dist,\r\n    recipientFinal,\r\n    MDBBtn,\r\n    MDBBtnClose,\r\n    MDBContainer,\r\n    MDBTable,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBTextarea,\r\n    MDBIcon,\r\n    MDBBadge\r\n  },\r\n\r\n  methods: {\r\n    handlePromptNo () {\r\n      console.log(\"Said NO!\")\r\n      this.promptPanelContent = null;\r\n    },\r\n    handlePromptYes () {\r\n      console.log(\"Said YES!\");\r\n      this.promptPanelContent = null;\r\n      this.$emit(\"removeOfferedBooking\", this.booking, this.booking.offers);\r\n    },\r\n    editDate () {\r\n      this.isEditDate = true;\r\n\r\n\r\n    },\r\n    async handleInternalDate () {\r\n\r\n      if (this.bookingDate) {\r\n        console.log(\"new date: \" +  new Date(this.bookingDate).getTime());\r\n        this.bookingDateToDisplay = (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear();\r\n        console.log(\"eeeeee \" + (this.bookingDate.getMonth() + 1) + \"/\" + this.bookingDate.getDate() + \"/\" +  this.bookingDate.getFullYear());\r\n        const dateInMs = new Date(this.bookingDate).getTime();\r\n        const renewCreated = new Date(this.bookingDate);\r\n        await recipientService.newDate(this.booking.id, {\r\n          year: this.bookingDate.getFullYear(),\r\n          month: this.bookingDate.getMonth(),\r\n          day: this.bookingDate.getDate(),\r\n          hours: this.bookingDate.getHours(),\r\n          minutes: this.bookingDate.getMinutes(),\r\n          date_ms: dateInMs\r\n        })\r\n\r\n        const updatedDate = {\r\n          year: this.bookingDate.getFullYear(),\r\n          month: this.bookingDate.getMonth(),\r\n          day: this.bookingDate.getDate(),\r\n          hours: this.bookingDate.getHours(),\r\n          minutes: this.bookingDate.getMinutes()\r\n        }\r\n        //this.isEditDate = false;\r\n        this.$emit(\"updateBookingDate\", this.booking, updatedDate);\r\n      }\r\n      //this.isEditDate = false;\r\n      console.log(\"Date is handled\")\r\n     // console.log(\"Selected date: \" + this.date)\r\n    },\r\n    handleFileChange(e, i) {\r\n      //this.$emit('input', e.target.client[0])\r\n      console.log(\"i in file change \" + i)\r\n      this.imageIndex = i;\r\n      try {\r\n\r\n        const files = e.target.files[0]\r\n        console.log('event target client ', e.target.files[0])\r\n\r\n        if (files) {\r\n          const tempImage = URL.createObjectURL(files)\r\n          this.tempImages.push(tempImage);\r\n          this.showImage = URL.createObjectURL(files)\r\n          this.file = e.target.files[0];\r\n          this.files = e.target.files[0];\r\n\r\n          this.isAddImage = true;\r\n          this.isEditImage = true;\r\n        }\r\n\r\n      } catch (err) {\r\n        console.log('Error:', err)\r\n      }\r\n\r\n      this.value = e.target.files[0]\r\n      // if (e.target.files[0]) {\r\n      //   this.isImageSelected = true;\r\n      // } else {\r\n      //   this.isImageSelected = false;\r\n      // }\r\n    },\r\n    pressedAddImage () {\r\n      this.isAddImage = false\r\n      this.isEditImage = false;\r\n      this.isEditPanel = false;\r\n      this.isPressedAddlmage = true;\r\n      this.isAddImagePanel = true;\r\n    },\r\n    async addImage () {\r\n\r\n\r\n    },\r\n    pressEditPanel (index) {\r\n      this.isEditImage = false;\r\n      this.value = null;\r\n      this.imageIndex = index;\r\n      this.isPressedAddlmage = false;\r\n      this.isEditPanel = true;\r\n      this.isAddImagePanel = false\r\n    },\r\n    closeEditPanel () {\r\n      this.isAddImagePanel = false\r\n      this.isEditPanel = false\r\n      this.isEditImage = false;\r\n      this.value = null;\r\n    },\r\n    closeAddPanel () {\r\n      this.isAddImagePanel = false\r\n      this.isPressedAddlmage = false;\r\n      this.value = null;\r\n    },\r\n    async uploadEditedImage (index, img) {\r\n\r\n      console.log(\"Edited image index is: \" + index);\r\n\r\n      this.isEditPanel = false;\r\n      this.isEditImage = false;\r\n\r\n      const data = new FormData();\r\n      data.append('file', this.file, this.file.name)\r\n\r\n      console.log(\"Image id \" + this.images[index]._id)\r\n      const editImgType = this.file.type;\r\n      if (editImgType ===\"image/jpeg\" || editImgType === \"image/jpg\" || editImgType === \"image/png\" || editImgType === \"image/gif\") {\r\n        if (this.file.size <= this.IMAGE_SIZE) {\r\n          const image = await imageService.updateImage(this.images[index]._id, data);\r\n\r\n          if (image) {\r\n            this.$emit(\"editImage\", index, image._id,  this.showImage);\r\n            // this.images[this.imageIndex] = {_id: this.images[index]._id, blob: this.showImage}\r\n            //\r\n            // this.images.forEach(img => {\r\n            //   console.log(\"Image name \" + img._id)\r\n            // })\r\n\r\n            console.log(\"ORDRED in EDIT pikkus \" + this.booking.ordered.length)\r\n            let ordered = [];\r\n            this.booking.ordered.forEach(b => {\r\n              console.log(\"CVCVCV \" + b.user.username);\r\n              ordered = ordered.concat(b.user.id);\r\n            })\r\n\r\n            const reader = new FileReader();\r\n\r\n            if (this.file) {\r\n              reader.onload = (e) => {\r\n                const bytes = new Uint8Array(e.target.result);\r\n                console.log(\"FILES.... \" + this.files)\r\n\r\n                const image_id = image._id;\r\n\r\n                socket.emit(\"display edited booking image\", image_id, bytes, this.booking.id, ordered)\r\n\r\n              };\r\n              reader.readAsArrayBuffer(this.files);\r\n            }\r\n\r\n            console.log(\"New image id is \" + image._id)\r\n            this.imgId = image._id;\r\n            this.file = null;\r\n\r\n            this.isEditPanel = false;\r\n\r\n\r\n            this.closeAddPanel();\r\n\r\n          }\r\n        } else {\r\n          this.isEditPanel = true;\r\n          this.closeAddPanel();\r\n          this.wrong_SizeType_Message = \"Väärä formaati. Kuva pitäisi olla jpeg, jpg, png tai gif formaatissa!\";\r\n          setTimeout(() => {\r\n            this.wrong_SizeType_Message = null;\r\n          }, 3000);\r\n        }\r\n\r\n      }else {\r\n        this.isEditPanel = true;\r\n        this.closeAddPanel();\r\n        this.wrong_SizeType_Message = \"Kuvan maximi koko on oltava 3 MB!\";\r\n        setTimeout(() => {\r\n          this.wrong_SizeType_Message = null;\r\n        }, 3000);\r\n      }\r\n\r\n\r\n    },\r\n\r\n    // Add booking image\r\n    async addAdditionalImage () {\r\n      this.value = null;\r\n      //this.file = null;\r\n      this.isAddImagePanel = false;\r\n      this.isAddImage = false;\r\n      this.isPressedAddlmage = false;\r\n      const data = new FormData();\r\n\r\n      data.append('file', this.file, this.file.name)\r\n      console.log(\"IMG size - \" + this.file.size);\r\n\r\n      console.log(\"Image type_ \" + this.file.type);\r\n\r\n      const type = this.file.type;\r\n      if (type ===\"image/jpeg\" || type === \"image/jpg\" || type === \"image/png\" || type === \"image/gif\") {\r\n        console.log(\"Pildi formaat on OK\")\r\n        if (this.file.size <= this.IMAGE_SIZE) {\r\n\r\n          const reader = new FileReader();\r\n\r\n          const img = await imageService.create(data);\r\n\r\n          if (img) {\r\n            await recipientService.addImage(this.booking.id, img.imgCreated._id)\r\n            // const new_image = {\r\n            //   _id: img.imgCreated._id,\r\n            //   image: img.imgCreated.image,\r\n            //   name: img.imgCreated.name\r\n            // }\r\n\r\n            const _image = {\r\n              _id: img.imgCreated._id,\r\n              blob: this.showImage\r\n            }\r\n            this.$emit(\"addImage\", _image, this.booking.id);\r\n            console.log(\"ORDRED pikkus \" + this.booking.ordered.length)\r\n            let ordered = [];\r\n            this.booking.ordered.forEach(b => {\r\n              console.log(\"CVCVCV \" + b.user.username);\r\n              ordered = ordered.concat(b.user.id);\r\n            })\r\n\r\n            reader.onload = (e) => {\r\n              const bytes = new Uint8Array(e.target.result);\r\n              console.log(\"FILES IN UPLOAD.... \" + this.files)\r\n\r\n              const image_bytes = {\r\n                id: img.imgCreated._id,\r\n                bytes: bytes\r\n              }\r\n              socket.emit(\"display booking image\", image_bytes, this.booking.id, ordered)\r\n\r\n            };\r\n            reader.readAsArrayBuffer(this.files);\r\n            // image_id, bytes, this.booking.id, ordered\r\n            //socket.emit(\"display booking image\", new_image, this.booking.id, ordered)\r\n          }\r\n        } else {\r\n\r\n          console.log(\"Pildi suurus peab olema väiksem kui 1 MB\");\r\n          this.isAddImagePanel = true\r\n          this.isPressedAddlmage = true;\r\n          this.wrong_SizeType_Message = \"Kuvan maximi koko on 3 MB.\";\r\n\r\n          setTimeout(() => {\r\n            this.wrong_SizeType_Message = null;\r\n          }, 3000);\r\n        }\r\n      } else {\r\n        console.log(\"Pildi formaat on FAKE\")\r\n        this.wrong_SizeType_Message = \"Väärä formaati. Kuva pitäisi olla jpeg, jpg, png tai gif formaatissa!\";\r\n        setTimeout(() => {\r\n          this.wrong_SizeType_Message = null;\r\n        }, 3000);\r\n      }\r\n\r\n    },\r\n    async removeImg (id) {\r\n      //this.value = null;\r\n      if (!this.images[id].blob) {\r\n        console.log(\"removed image is blob\")\r\n\r\n      }\r\n\r\n      console.log(\"removable image id is \" + this.images[id]._id)\r\n\r\n      await recipientService.removeImage(this.booking.id, this.images[id]._id);\r\n      await imageService.remove(this.images[id]._id, this.booking.id);\r\n      let bIDs = [];\r\n\r\n      this.booking.ordered.forEach(bo => {\r\n        bIDs = bIDs.concat(bo.user.id);\r\n      })\r\n\r\n      socket.emit(\"stop display booking image\", this.images[id]._id, this.booking, bIDs);\r\n\r\n      this.$emit(\"removeImage\", id);\r\n\r\n      this.isEditPanel = false;\r\n\r\n    },\r\n    getDistance () {\r\n      //console.log(\"Distance +++++??? \" + dist.distance())\r\n      console.log(\"sss \" + dist.test())\r\n    },\r\n    selectUser (user) {\r\n      this.$emit('select', user);\r\n    },\r\n    noSelectUser () {\r\n      this.$emit(\"noSelect\");\r\n    },\r\n    onMessage (content, date) {\r\n      this.$emit(\"message\", content, date);\r\n    },\r\n    // initializeChat () {\r\n    //   this.$emit(\"initializeChat\", {\r\n    //     initChatRoom: this.initializeChatRoom,\r\n    //     chatData: this.chatRoomData\r\n    //   });\r\n    // },\r\n    handleJoinChatPanel () {\r\n      console.log(\"Final info in result pressed \");\r\n\r\n      this.$emit(\"joinChatPanel\", this.room);\r\n    },\r\n\r\n    async pressAddFirstImage () {\r\n      this.isAddFirstImage = true;\r\n      this.imageIndex = 0;\r\n    },\r\n\r\n    pressAdditionalImage (index) {\r\n      //this.imageIndex = this.booking[0].image.length - 1;\r\n      this.isAddImage = true;\r\n      this.imageIndex = this.images.length;\r\n      //this.imageIndex = \"new\";\r\n      //this.isAddNewImage = true;\r\n\r\n      console.log(\"Images index = \" + this.imageIndex);\r\n      this.isAddImage = true;\r\n    },\r\n\r\n\r\n\r\n    // async uploadFirstImage (index) {\r\n    //   const data = new FormData();\r\n    //   this.isUploadImage = true;\r\n    //   this.imageIndex = 0;\r\n    //   //this.isUploaded = true;\r\n    //   //isUploaded && imageIndex === i\r\n    //   data.append('file', this.file, this.file.name)\r\n    //   console.log(\"IMG size - \" + this.file.size);\r\n    //   //const img = await imageService.create(data);\r\n    //   //console.log(\"ABOUT: \" + img);\r\n    //   //await recipientService.addImage(this.booking.id, img.imgCreated._id);\r\n    //\r\n    //   // if (img) {\r\n    //   //   this.file = null;\r\n    //   //\r\n    //   //   const image = {\r\n    //   //     _id: img.imgCreated._id,\r\n    //   //     image: img.imgCreated.image,\r\n    //   //     name: img.imgCreated.name\r\n    //   //   }\r\n    //   //\r\n    //   //   this.$emit(\"addImage\", image);\r\n    //   //\r\n    //   //   this.imageIndex = 0;\r\n    //   //\r\n    //   //   this.isImageSelected = false;\r\n    //   //   this.isUploaded = true;\r\n    //   //\r\n    //   //\r\n    //   // }\r\n    //\r\n    //\r\n    //\r\n    // },\r\n\r\n    // Ei toimi ilmselt!!!\r\n    async uploadAdditionalImage () {\r\n      this.isAdditionalImageSelected = false;\r\n      this.isAddImage = false;\r\n      this.value = null;\r\n      //this.isEditImage = false;\r\n      //this.imageIndex = null;\r\n      //this.imageIndex = this.booking[0].image.length - 1;\r\n      console.log(\"Image index index \" + this.imageIndex)\r\n      const data = new FormData();\r\n\r\n      this.isUploadImage = true;\r\n      //this.imageIndex = 0;\r\n      this.isUploaded = true;\r\n      //isUploaded && imageIndex === i\r\n      data.append('file', this.file, this.file.name)\r\n      const img = await imageService.create(data);\r\n      await recipientService.addImage(this.booking.id, img.imgCreated._id);\r\n\r\n      if (img) {\r\n        //this.imgId = img.imgCreated._id;\r\n        this.file = null;\r\n        //this.showImage = null;\r\n        //this.value = null;\r\n\r\n        //console.log(\"xxx \" + img.imgCreated._id)\r\n        //console.log(\"Image itself \" + img.imgCreated.image)\r\n        //await recipientService.addImage(this.booking[0].id, img.imgCreated._id);\r\n        const image = {\r\n          _id: img.imgCreated._id,\r\n          image: img.imgCreated.image,\r\n          name: img.imgCreated.name,\r\n          blob: this.showImage,\r\n        }\r\n\r\n        //this.imagesxxx.push(image);\r\n\r\n        this.$emit(\"addImage\", image);\r\n\r\n        //this.images.push(image);\r\n\r\n        // const booking = await recipientService.getBookingById(this.booking[0].id);\r\n        //\r\n        // setTimeout( async () => {\r\n        //   booking[0].image.forEach(im=> {\r\n        //     this.images.push(im)\r\n        //   })\r\n        //   //this.images = this.images.concat(booking[0].image)\r\n        // }, 500)\r\n\r\n\r\n        /*const booking = await recipientService.getBookingById(this.booking[0].id);\r\n\r\n        this.imagesxxx = booking[0].image\r\n*/\r\n\r\n        this.isImageSelected = false;\r\n        this.isUploaded = true;\r\n\r\n\r\n\r\n        //this.imageIndex = null;\r\n      }\r\n\r\n\r\n\r\n    },\r\n\r\n    pressedEditDescription () {\r\n      this.isEditDescription = true\r\n      console.log(\"Descripton: \" + this.description);\r\n    },\r\n    saveEditedDescription () {\r\n      this.isEditDescription = false;\r\n      const description = {\r\n        description: this.description\r\n      }\r\n      this.$emit(\"editDescription\", this.description);\r\n      recipientService.editDescription(this.booking.id, description)\r\n      //this.description = \"\";\r\n    },\r\n    cancelEditDescription () {\r\n      console.log(\"Is here something happening??\")\r\n    },\r\n    providerGetBooking (id, booking) {\r\n      //const id = this.provider.user.id;\r\n      console.log(\"Sended to user id... \" + id)\r\n      socket.emit(\"accept provider\", {\r\n        id,\r\n        booking: booking\r\n      })\r\n    },\r\n\r\n    // For just confirm provider\r\n    async orderSuccess (prov) {\r\n      console.log(\"Include offers? \" + this.booking.isIncludeOffers)\r\n      if (this.booking.isIncludeOffers) {\r\n        this.canselResult();\r\n\r\n        // TODO teised offerid maha võtta\r\n\r\n        console.log(\"## bef \" + this.booking.ordered.length)\r\n\r\n\r\n\r\n        this.$emit(\"offer_confirmed\", this.booking , prov.id);\r\n        console.log(\"## aft \" + this.booking.ordered.length)\r\n        const pro = await providerService.getProvByProvId(prov.id);\r\n\r\n        console.log(\"Offer confirmation user id \" + pro.user.id);\r\n\r\n        const providerID = {\r\n          providerID: this.selectedProvider.id\r\n        };\r\n\r\n        await recipientService.updateRecipient(this.booking.id, {status: \"confirmed\"});\r\n\r\n        //const res = await recipientService.getBookingById(this.booking.id);\r\n\r\n        const recipientId = this.booking.id;\r\n\r\n\r\n        console.log(\"Username here???? \" + this.booking.user.username);\r\n\r\n\r\n        let bookingOffers = [];\r\n        let offerMakers = [];\r\n        let ampIDs = [];\r\n        let restProsNoOfferDone = [];\r\n\r\n        if (this.booking) {\r\n          bookingOffers = this.booking.offers;\r\n          const allMatchedPros = this.booking.ordered;\r\n          for (let id in allMatchedPros) {\r\n\r\n            if (allMatchedPros[id].user.id !== pro.user.id) {\r\n\r\n\r\n              ampIDs.push(allMatchedPros[id])\r\n\r\n              // console.log(\"Removing this pro from DB: \" + allMatchedPros[id].user.id)\r\n              // await providerService.removeProviderBooking(allMatchedPros[id].id, this.booking.id);\r\n              // await recipientService.removeProviderData(this.booking.id, allMatchedPros[id].id);\r\n\r\n\r\n\r\n            }\r\n          }\r\n          for (let i in bookingOffers) {\r\n            if (bookingOffers[i].room !== this.room) {\r\n              await offerService.removeBookingOffer(bookingOffers[i].id, this.booking.id);\r\n            }\r\n          }\r\n        }\r\n\r\n        let madeOffer = {};\r\n\r\n        for (let sender in bookingOffers) {\r\n\r\n          console.log(\"Offer maker id heeeeeere \" + bookingOffers[sender].provider.user.id);\r\n\r\n\r\n\r\n          if (bookingOffers[sender].provider.user.id !== pro.user.id) {\r\n            //offerMakers = offerMakers.concat(bookingOffers[sender].provider.user);\r\n\r\n            offerMakers = offerMakers.concat(bookingOffers[sender]);\r\n\r\n            //offerMakers = offerMakers.concat(bookingOffers[sender]);\r\n            console.log(\"eeeeeeeeeeeeeeeeeeeee \" + bookingOffers[sender].provider.user.id)\r\n\r\n            await providerService.removeProviderBooking(bookingOffers[sender].provider.id, this.booking.id);\r\n            await recipientService.removeProviderData(this.booking.id, bookingOffers[sender].provider.id);\r\n\r\n          } else {\r\n            madeOffer = bookingOffers[sender];\r\n          }\r\n\r\n        }\r\n        console.log(\"offerMakers length \" + offerMakers.length)\r\n        ampIDs.forEach(ai => {\r\n\r\n          if (!offerMakers.some(om => om.provider.id === ai.id)) {\r\n            restProsNoOfferDone.push(ai);\r\n          }\r\n          // offerMakers.forEach(om => {\r\n          //   if (ai !== om.provider.user.id) {\r\n          //     restProsNoOfferDone.push(ai);\r\n          //   }\r\n          // })\r\n        })\r\n\r\n        console.log(\"ampIDs \" + ampIDs.map(mi => mi.id))\r\n        console.log(\"REST OF PROS \" + restProsNoOfferDone.map(ma => ma));\r\n\r\n        for (let id in restProsNoOfferDone) {\r\n          console.log(\"Test id \" + restProsNoOfferDone[id].id)\r\n          await providerService.removeProviderBooking(restProsNoOfferDone[id].id, this.booking.id);\r\n          await recipientService.removeProviderData(this.booking.id, restProsNoOfferDone[id].id);\r\n        }\r\n\r\n        // TODO kui tellija tilab yrityse siis tellija peab teiste juures kustuma!! Ordered juures peavad kustuma teised id:d\r\n\r\n        socket.emit(\"confirm offer\", pro.user.id, this.booking, madeOffer);\r\n\r\n\r\n        socket.emit(\"deal done notification\", offerMakers, restProsNoOfferDone, this.booking, madeOffer);\r\n\r\n      } else {\r\n        this.isProviderSelected = false;\r\n\r\n        console.log(\"No booking with offers here!\")\r\n        // console.log(\"Provider id \" + prov.id)\r\n        // console.log(\"Recpient id: \" + this.booking.id);\r\n        //\r\n        // const providerID = {\r\n        //   providerID: this.selectedProvider.id\r\n        // };\r\n        //\r\n        // await recipientService.addProviderData(this.booking.id, this.selectedProvider.id);\r\n        //\r\n        // const createBookingStatus = await recipientService.updateRecipient(this.booking.id, {status: \"notSeen\"});\r\n        //\r\n        // const recipientId = this.booking.id;\r\n        //\r\n        // const booking = await providerService.addProviderBooking(prov.id, recipientId);\r\n        // if (booking === \"Recipient is added!\") {\r\n        //   const pro_data = {\r\n        //     status: \"\",\r\n        //     userID: prov.user.id,\r\n        //     name: prov.user.username,\r\n        //     room: this.room\r\n        //   };\r\n        //\r\n        //   console.log(\"#### HERE ##### \" + prov.user.username);\r\n        //   this.$emit('client:confirmed_provider', prov.id, this.booking, pro_data);\r\n        //\r\n        //   const id = prov.user.id;\r\n        //\r\n        //   socket.emit(\"accept provider\", {\r\n        //     id,\r\n        //     booking: this.booking,\r\n        //   })\r\n        //\r\n        // }\r\n        //\r\n        // this.handleJoinChatPanel();\r\n      }\r\n\r\n    },\r\n    // For price offers\r\n    async orderSuccess_standing (prov) {\r\n      this.isProviderSelected = false;\r\n\r\n      console.log(\"Provider id \" + prov.id)\r\n      console.log(\"Recpient id: \" + this.booking.id);\r\n\r\n      this.canselResult();\r\n\r\n      this.$emit(\"offer_confirmed\", this.booking);\r\n      const providerID = {\r\n        providerID: this.selectedProvider.id\r\n      };\r\n\r\n\r\n      //await recipientService.addProviderID(this.booking[0].id, providerID);\r\n\r\n      //await recipientService.addProviderData(this.booking.id, this.selectedProvider.id);\r\n\r\n      //socket.emit(\"send booking notification\", this.booking[0], this.selectedProvider.id);\r\n\r\n      //const providerName =\r\n      //const status = \"notSeen\";\r\n      const createBookingStatus = await recipientService.updateRecipient(this.booking.id, {status: \"confirmed\"});\r\n\r\n\r\n\r\n      const recipientId = this.booking.id;\r\n\r\n      //--------------- About need delete selected and confirmed provider ------------\r\n\r\n      //const booking = await providerServise.updateProvider(provId, {booking: [this.booking.id]})\r\n      // To ordered\r\n      //const booking = await providerService.addProviderBooking(prov.id, recipientId);\r\n      // if (booking === \"Recipient is added!\") {\r\n      //   const chatUserDataNavbar = {\r\n      //     status: \"\",\r\n      //     userID: prov.user.id,\r\n      //     name: prov.user.username,\r\n      //     room: this.room\r\n      //   };\r\n      //   this.$emit('client:confirmed_provider', prov.id, this.booking, chatUserDataNavbar);\r\n      //   //this.$emit('set:order:to:send', prov.id, this.booking, chatUserDataNavbar)\r\n      //\r\n      //   this.roomToDb(prov.id, {userID: this.booking.user.id, client: this.booking.user.username, room: this.room});\r\n      //   //this.providerGetBooking(prov.user.id, booking);\r\n      //   const id = prov.user.id;\r\n      //\r\n      //\r\n      //\r\n      // }\r\n\r\n      // socket.emit(\"accept provider\", {\r\n      //   id,\r\n      //   booking: this.booking,\r\n      // })\r\n\r\n      //this.orderMessage = \"Tilaus on lähetetty vahvistettavaksi! Kiitos!\";\r\n\r\n\r\n\r\n      // this.isOrdered = true;\r\n      //\r\n      // setTimeout(() => {\r\n      //   this.orderMessage = null;\r\n      // }, 3000)\r\n\r\n      //this.initializeChat();\r\n\r\n    },\r\n    async getProviderInfo (provider, offer, marker) {\r\n      this.proSlides = [];\r\n      this.offer = offer;\r\n      this.selectedProvider = provider\r\n      if (this.booking.isIncludeOffers) {\r\n        if (offer.isNewOffer) {\r\n          this.$emit(\"editBookingOfferStatus\", offer)\r\n        }\r\n      }\r\n      provider.reference.forEach(slide => {\r\n        this.proSlides = [\r\n            ...this.proSlides,\r\n            slide\r\n        ]\r\n      })\r\n      // provider.reference.forEach(slide => {\r\n      //   this.proSlides = [\r\n      //       ...this.proSlides,\r\n      //     {\r\n      //       id: slide.id,\r\n      //       size: '1400-933',\r\n      //       src: require(`/server/uploads/pro/${slide.name}`),\r\n      //       thumb: require(`/server/uploads/pro/${slide.name}`),\r\n      //       subHtml: `<div class=\"lightGallery-captions\">\r\n      //           <h2>Terve</h2>\r\n      //\r\n      //       </div>\"`\r\n      //     }\r\n      //   ]\r\n      // })\r\n      this.availability = marker;\r\n      this.isProviderSelected = true;\r\n\r\n\r\n      let room = \"\";\r\n      let username = \"\";\r\n\r\n      if (this.chatUser) {\r\n        username = this.chatUser.username;\r\n        room = provider.yritys + username;\r\n        this.room = room;\r\n      }\r\n\r\n    },\r\n    async roomToDb (id, room) {\r\n      await providerService.addRoom(id, room)\r\n    },\r\n    addFilter () {\r\n      const filterListedProviders = document.getElementById(\"listOfProviders\")\r\n\r\n      filterListedProviders.addEventListener(\"change\", (event) => {\r\n        console.log(\"Filtered provider: \" + event.target.value);\r\n        this.$emit(\"filter_provider\", event.target.value);\r\n\r\n      })\r\n    },\r\n    handleCanselFinal (result) {\r\n      this.isProviderSelected = result;\r\n    },\r\n    canselResult () {\r\n      this.$emit('cansel:result', false)\r\n    },\r\n    async removeOfferedBookings () {\r\n      //this.confirmPanel = \"TEST CONFIRM\"\r\n\r\n\r\n      // this.promptPanelContent = null;\r\n      // this.promptPanelContent = \"Oletko varma, että haluat poistaa tilausken?\"\r\n\r\n\r\n\r\n\r\n      if (confirm(\"Oletko varmaa, että haluat poistaa tilauksen!?\") === true) {\r\n\r\n        this.$emit(\"removeOfferedBooking\", this.booking, this.booking.offers);\r\n\r\n      } else {\r\n        console.log(\"You canceled!\")\r\n      }\r\n    },\r\n  },\r\n\r\n  async mounted() {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      this.chatUser = user;\r\n\r\n    }\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.edit-panel {\r\n  border: solid grey;\r\n  padding: 20px;\r\n  margin: 20px 0 20px 0;\r\n}\r\n.add-panel {\r\n  border: solid grey;\r\n  padding: 20px;\r\n  margin: 20px 0 20px 0;\r\n}\r\n.add-additional-panel {\r\n  border: solid blue;\r\n}\r\n.btn {\r\n  padding: 20px;\r\n  margin: 20px 0 20px 0;\r\n}\r\n.close-btn {\r\n  float: right;\r\n  padding: 20px;\r\n}\r\nimg.loading {\r\n  width: 100%;\r\n  height: 400px;\r\n  background: transparent url(https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif) no-repeat scroll center center;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n  display: none;\r\n}\r\n.custom-file-upload {\r\n  width: 100%;\r\n\r\n  color: white;\r\n  font-size: 18px;\r\n  background-color: #87958e;\r\n  border: 1px solid #ccc;\r\n  display: inline-block;\r\n  padding: 20px 12px;\r\n  margin-bottom: 0;\r\n  cursor: pointer;\r\n}\r\n.imageSection {\r\n  margin-bottom: 20px;\r\n}\r\n.provider-selection {\r\n  width: 300px;\r\n  padding: 20px;\r\n  background-color: darkslategrey;\r\n  border: solid #4c4949;\r\n  color: #f0eeee;\r\n  font-size: 150%;\r\n}\r\n\r\n@media only screen and (max-width: 1000px) {\r\n  .provider-selection {\r\n    width: 250px;\r\n    padding: 20px;\r\n    background-color: darkslategrey;\r\n    border: solid #4c4949;\r\n    color: #f0eeee;\r\n    font-size: 150%;\r\n  }\r\n}\r\n\r\nselect option {\r\n  border: solid red;\r\n}\r\n.expired_warning {\r\n  color: palevioletred;\r\n}\r\n.expired_date {\r\n  color: palevioletred;\r\n  border: 1px solid #F05C5CFF;\r\n  margin-top: 17px;\r\n  padding: 7px;\r\n}\r\n\r\n.confirmation {\r\n  width: 80%;\r\n  height: 200px;\r\n  margin: auto;\r\n  color: white;\r\n  background: #a5a1a1;\r\n  font-size: 20px;\r\n  border: solid #6e716e;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  /*margin-bottom: 10px auto;*/\r\n}\r\n\r\n</style>","import { render } from \"./RecipientPanelResult.vue?vue&type=template&id=5ee75a98&scoped=true\"\nimport script from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\nexport * from \"./RecipientPanelResult.vue?vue&type=script&lang=js\"\n\nimport \"./RecipientPanelResult.vue?vue&type=style&index=0&id=5ee75a98&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5ee75a98\"]])\n\nexport default __exports__"],"names":["compare","rec","prov","receiverDate","Date","y","m","d","hour","min","providerDate","providerMatchingForClient","re","pFrom","pTo","pFromDate","pToDate","ErrorMessage","message","_createVNode","require","style","class","key","for","value","$data","isProviderSelected","_createBlock","_component_MDBContainer","default","_withCtx","_component_recipientFinal","$options","handleCanselFinal","orderSuccess","proRefSlides","$props","test","provider","selectedProvider","offer","proSlides","_ctx","slides","room","available","availability","booking","chatusers","initialize_chat","handleInitializeChat","selecteduser","messages","onMessage","onSelect","selectUser","onNoSelect","noSelectUser","onJoin_chat_panel","handleJoinChatPanel","_","_createElementVNode","_hoisted_1","_component_MDBBtnClose","white","onClick","canselResult","_component_prompt_panel","promptPanelContent","handlePromptNo","handlePromptYes","_hoisted_2","_toDisplayString","t","line","created_ms","getTime","offers","length","_createElementBlock","_hoisted_3","_createCommentVNode","_component_successMessage","orderMessage","_component_MDBRow","_component_MDBCol","_component_MDBTable","borderless","isEditDescription","_hoisted_5","_component_MDBTextarea","label","rows","modelValue","description","_cache","$event","col","_hoisted_6","_hoisted_4","_hoisted_7","_hoisted_9","_component_MDBBtn","outline","block","size","saveEditedDescription","_createTextVNode","_hoisted_8","pressedEditDescription","isEditDate","_hoisted_11","_normalizeClass","expired_date","bookingDateToDisplay","created","getHours","getMinutes","_component_VueDatePicker","dark","bookingDate","placeholder","onInternalModelChange","handleInternalDate","state","isNoDate","_hoisted_10","editDate","expired_warning","_Fragment","_renderList","images","item","i","src","blob","im","image","alt","name","_hoisted_12","isEditPanel","pressEditPanel","imageIndex","_hoisted_13","_component_error_message","wrong_SizeType_Message","closeEditPanel","id","type","onChange","handleFileChange","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","isEditImage","color","uploadEditedImage","removeImg","showImage","_hoisted_18","isPressedAddlmage","pressedAddImage","isAddImagePanel","_hoisted_19","closeAddPanel","_hoisted_20","_hoisted_21","_hoisted_22","isAddImage","addAdditionalImage","_hoisted_23","lg","booking_offers","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","filterResult","args","addFilter","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","getProviderInfo","yritys","_hoisted_32","distance","isNewOffer","_component_MDBBadge","pill","notification","_hoisted_33","price","_hoisted_34","_hoisted_35","_hoisted_36","removeOfferedBookings","props","Boolean","Array","loggedInUser","Object","bookingTime","providers","confirmedBookings","String","data","useI18n","IMAGE_SIZE","chatUser","count","datetime","dt","dist","isOrdered","this","date","isAddFirstImage","isUploadImage","isUploaded","isImageCreated","isAddNewImage","file","files","isImageSelected","isAdditionalImageSelected","tempImages","imagesx","imagesxxx","roomUserCount","components","successMessage","errorMessage","VueDatePicker","promptPanel","recipientFinal","MDBBtn","MDBBtnClose","MDBContainer","MDBTable","MDBRow","MDBCol","MDBTextarea","MDBIcon","MDBBadge","methods","console","log","$emit","getMonth","getDate","getFullYear","dateInMs","recipientService","newDate","year","month","day","hours","minutes","date_ms","updatedDate","e","target","tempImage","URL","createObjectURL","push","err","addImage","index","img","FormData","append","_id","editImgType","imageService","updateImage","ordered","forEach","b","user","username","concat","reader","FileReader","onload","bytes","Uint8Array","result","image_id","socket","emit","readAsArrayBuffer","imgId","setTimeout","create","imgCreated","_image","image_bytes","removeImage","remove","bIDs","bo","getDistance","content","pressAddFirstImage","pressAdditionalImage","uploadAdditionalImage","editDescription","cancelEditDescription","providerGetBooking","isIncludeOffers","pro","providerService","getProvByProvId","updateRecipient","status","bookingOffers","offerMakers","ampIDs","restProsNoOfferDone","allMatchedPros","offerService","removeBookingOffer","madeOffer","sender","removeProviderBooking","removeProviderData","ai","some","om","map","mi","ma","orderSuccess_standing","marker","reference","slide","roomToDb","addRoom","filterListedProviders","document","getElementById","addEventListener","event","confirm","mounted","loggedUserJSON","window","localStorage","getItem","JSON","parse","__exports__","render"],"sourceRoot":""}