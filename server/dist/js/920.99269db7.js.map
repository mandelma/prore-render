{"version":3,"file":"js/920.99269db7.js","mappings":"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","sources":["webpack://prore-mongo/./src/components/RegisterForm.vue","webpack://prore-mongo/./src/service/googleAuth.js","webpack://prore-mongo/./src/components/RegisterForm.vue?33ca","webpack://prore-mongo/./src/components/notifications/errorMessage.js"],"sourcesContent":["<template>\n  <div>\n<!--    <h2 style=\"margin-top: 50px; text-align: center\">- Rekisteröintilomake -</h2>-->\n    <MDBContainer style=\"margin-top: 50px;\">\n\n      <registerError\n          :message = registerErrorMessage\n      />\n      <registerError\n          :message = usernameExisting\n      />\n      <registerError\n          :message = registerEmailErrorMessage\n      />\n      <register-error\n        :message = registerPwRepeatErrorMessage\n      />\n      <form class=\"register\" @submit.prevent=\"userData\" autocomplete=\"off\">\n        <!-- 2 column grid layout with text inputs for the first and last names -->\n        <!-- First name input -->\n\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Etunimi\"\n            white\n            id=\"registerFirstName\"\n            v-model=\"registerFirstName\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Last name input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Sukunimi\"\n            white\n            id=\"registerLastName\"\n            v-model=\"registerLastName\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Username input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"käyttäjätunnus\"\n            white\n            id=\"registerUsername\"\n            v-model=\"registerUsername\"\n            wrapperClass=\"mb-4\"\n        />\n        <!-- Email input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Email\"\n            white\n            id=\"registerEmail\"\n            v-model=\"registerEmail\"\n            wrapperClass=\"mb-4\"\n        />\n<!--        <div>-->\n<!--          Email is {{isValidEmail ? 'valid' : 'invalid'}}-->\n<!--        </div>-->\n        <!-- Password input -->\n        <i class=\"far fa-eye\"></i>\n        <i class=\"far fa-eye-slash\"></i>\n\n        <MDBInput\n\n            :type=\"showPassword ? 'text' : 'password'\"\n            size=\"lg\"\n            label=\"Salasana\"\n            white\n            id=\"registerPassword\"\n            v-model=\"registerPassword\"\n            @input=\"validatePassword\"\n            wrapperClass=\"mb-4\"\n        >\n\n        </MDBInput>\n        <button type=\"button\" @click=\"togglePassword\">Toggle password</button>\n<!--        <MDBInput-->\n<!--            type=\"password\"-->\n<!--            size=\"lg\"-->\n<!--            label=\"Salasana\"-->\n<!--            white-->\n<!--            id=\"registerPassword\"-->\n<!--            v-model=\"registerPassword\"-->\n<!--            @input=\"validatePassword\"-->\n<!--            wrapperClass=\"mb-4\"-->\n<!--        />-->\n\n        <p v-if=\"pwValidateError\" style=\"color: palevioletred\" >{{pwValidateError}}</p>\n\n        <!-- Repeat Password input -->\n        <MDBInput\n            type=\"password\"\n            size=\"lg\"\n            label=\"Toista salasana\"\n            white\n            id=\"registerPasswordRepeat\"\n            v-model=\"registerPasswordRepeat\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Checkbox -->\n        <MDBCheckbox\n            label=\"Muista minut\"\n            white\n            size=\"lg\"\n            id=\"registerSubscribeCheck\"\n            v-model=\"registerSubscribeCheck\"\n            wrapperClass=\"d-flex justify-content-center mb-4\"\n        />\n\n<!--        <input required=\"required\" v-model=\"registerEmail\" :error-messages=\"emailErrors\"-->\n<!--               @input=\"$v.registerEmail.$touch()\" @blur=\"$v.registerEmail.$touch()\" label=\"Email\"-->\n<!--               />-->\n\n        <!-- Submit button -->\n        <MDBBtn outline=\"primary\" size=\"lg\" type=\"submit\"  block class=\"mb-4\" :disabled=\"!!pwValidateError\"> Luo tili </MDBBtn>\n\n        <!-- Register buttons -->\n<!--        <div class=\"text-center\">-->\n<!--          <p>Tai registeröidy käyttämällä:</p>-->\n<!--          <MDBBtn color=\"secondary\" floating class=\"mx-1\">-->\n<!--            <MDBIcon iconStyle=\"fab\" icon=\"facebook-f\" />>-->\n<!--          </MDBBtn>-->\n\n<!--          <MDBBtn color=\"secondary\" floating class=\"mx-1\" @click=\"handleGoogleAuth\">-->\n<!--            <MDBIcon iconStyle=\"fab\" icon=\"google\" />-->\n<!--          </MDBBtn>-->\n\n<!--          <MDBBtn color=\"secondary\" floating class=\"mx-1\">-->\n<!--            <MDBIcon iconStyle=\"fab\" icon=\"twitter\" />-->\n<!--          </MDBBtn>-->\n\n<!--        </div>-->\n      </form>\n    </MDBContainer>\n\n  </div>\n\n</template>\n\n<script >\n/* eslint-disable */\n// import { validationMixin } from 'vuelidate'\n// import { required, email} from 'vuelidate/lib/validators'\nimport {\n  MDBContainer,\n  MDBInput,\n  MDBCheckbox,\n  MDBBtn,\n  MDBIcon\n} from \"mdb-vue-ui-kit\";\nimport { ref, watch } from \"vue\";\nimport userService from \"@/service/users\";\nimport googleService from '@/service/googleAuth'\nimport loginService from \"@/service/login\";\nimport registerError from '../components/notifications/errorMessage'\nimport '@/css/style.css';\nimport '@/css/notification.css'\n\n\nexport default {\n  name: \"app-register\",\n  components: {\n    registerError,\n    MDBContainer,\n    MDBInput,\n    MDBCheckbox,\n    MDBBtn,\n    MDBIcon\n  },\n  // mixins: [validationMixin],\n  // validations: {\n  //\n  //   email: { required, email },\n  //\n  // },\n  data () {\n    return {\n      registerErrorMessage: null,\n      registerEmailErrorMessage: null,\n      registerPwRepeatErrorMessage: null,\n      usernameExisting: null,\n    }\n  },\n\n  //  'YOUR_APP_CLIENT_ID.apps.googleusercontent.com'\n\n  setup() {\n    const registerFirstName = ref(\"\");\n    const registerLastName = ref(\"\");\n    const registerUsername = ref(\"\");\n    const registerEmail = ref(\"\");\n    const registerPassword = ref(\"\");\n    const registerPasswordRepeat = ref(\"\");\n    const registerSubscribeCheck = ref(true);\n    const showPassword = ref(false)\n    const pwValidateError = ref(\"\")\n    const togglePassword = () => {\n      console.log(\"Password is toggled\")\n      showPassword.value = !showPassword.value\n    }\n    const validatePassword = () => {\n      const regex =\n          /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_\\-+=\\[\\]{};':\"\\\\|,.<>/?]).{8,}$/;\n      if (!regex.test(registerPassword.value)) {\n        pwValidateError.value = \"Salasanan on oltava vähintään 8 merkkiä pitkä ja sen on sisällettävä iso kirjain, numero ja erikoismerkki.\";\n      } else {\n        pwValidateError.value = \"\";\n      }\n    }\n\n    watch(registerPassword, (newValue) => {\n      validatePassword(newValue)\n    })\n\n    return {\n      registerLastName,\n      registerFirstName,\n      registerUsername,\n      registerEmail,\n      registerPassword,\n      registerPasswordRepeat,\n      registerSubscribeCheck,\n      pwValidateError,\n      showPassword,\n      togglePassword,\n      validatePassword\n    };\n  },\n  computed: {\n    isValidEmail() {\n      return /^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.registerEmail);\n    }\n  },\n  // computed: {\n  //   emailErrors () {\n  //     const errors = []\n  //     if (!this.$v.email.$dirty) return errors\n  //     !this.$v.email.email && errors.push('Must be valid e-mail')\n  //     !this.$v.email.required && errors.push('E-mail is required')\n  //     return errors\n  //   },\n  // },\n  methods: {\n    // validatePassword () {\n    //\n    // },\n    emailValidation () {\n  //     Vue.createApp({\n  //       data: () => ({ email: '', password: '', errors: null }),\n  //       methods: {\n  //         async submitForm() {\n  //           const errors = {};\n  //           if (!this.email) {\n  //             errors.email = 'Email is required';\n  //           } else if (!/^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.email)) {\n  //             errors.email = 'Invalid email';\n  //           }\n  //\n  //           if (Object.keys(errors).length > 0) {\n  //             this.errors = errors;\n  //             return;\n  //           } else {\n  //             this.errors = null;\n  //           }\n  //\n  //           // Handle submitting form\n  //         }\n  //       },\n  //       template: `\n  // <div>\n  //   <form @submit.prevent=\"submitForm\">\n  //     <div>\n  //       <input v-model=\"email\" placeholder=\"email\" />\n  //       <div v-if=\"errors && errors.email\">\n  //         {{errors.email}}\n  //       </div>\n  //     </div>\n  //     <div>\n  //       <input type=\"password\" v-model=\"password\" />\n  //     </div>\n  //     <div>\n  //       <button type=\"submit\">Register</button>\n  //     </div>\n  //   </form>\n  // </div>\n  // `\n  //     }).mount('#example2');\n    },\n    validateEmail() {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.email)) {\n        this.msg['email'] = 'Please enter a valid email address';\n      } else {\n        this.msg['email'] = '';\n      }\n    },\n    // New user data to send forward\n    async userData () {\n      const newUser = {\n        firstName: this.registerFirstName,\n        lastName: this.registerLastName,\n        username: this.registerUsername,\n        email: this.registerEmail,\n        password: this.registerPassword\n      }\n      if (this.registerFirstName !== \"\"\n          && this.registerLastName !== \"\"\n          && this.registerUsername !== \"\"\n          && this.registerPassword !== \"\"\n          && this.registerEmail !== \"\"\n      ) {\n\n        if (this.registerUsername.length < 4) {\n          this.registerErrorMessage = \"Username must be longer than 4 characters!\"\n          setTimeout(() => {\n            this.registerErrorMessage = null;\n          }, 2000);\n        } else if (!/^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.registerEmail)) {\n          this.registerEmailErrorMessage = \"Anna kelvollinen sähköpostiosoite!\";\n          setTimeout(() => {\n            this.registerEmailErrorMessage = null;\n          }, 2000);\n        } else if (this.registerPassword !== this.registerPasswordRepeat) {\n          this.registerPwRepeatErrorMessage = \"Salasana on oltava sama!\";\n          setTimeout(() => {\n            this.registerPwRepeatErrorMessage = null;\n          }, 2000);\n        }\n        else {\n          console.log(\"Uus kasutaja\")\n          const userExisting = await userService.addUser(newUser);\n          if (userExisting.error === \"username existing\") {\n            this.usernameExisting = \"Käyttäjätunnus on jo olemassa! Vaihda käyttäjätunnus\";\n            setTimeout(() => {\n              this.usernameExisting = null;\n            }, 2000);\n          } else if (userExisting.error === \"email existing\") {\n            this.registerEmailErrorMessage = \"Antamasi sähköpostiosoite on jo olemassa!\";\n            setTimeout(() => {\n              this.registerEmailErrorMessage = null;\n            }, 2000);\n          }\n          else {\n            const loggedInUser = await loginService.login({username: this.registerUsername, password: this.registerPassword});\n            if (loggedInUser.error !== \"login error\") {\n              this.$emit('register:data', loggedInUser)\n            } else {\n              console.log(\"Error with login! \" + loggedInUser.error)\n            }\n          }\n\n        }\n      } else {\n        this.registerErrorMessage = \"Kaikki kentät ovat täytettävä!!\"\n        setTimeout(() => {\n          this.registerErrorMessage = null;\n        }, 2000);\n      }\n      //await userService.addUser(newUser);\n\n      //const loggedInUser = await loginService.login({username: this.registerUsername, password: this.registerPassword});\n\n      //this.$emit('register:data', newUser)\n    }\n  }\n}\n</script>\n\n<style>\n.g-signin-button {\n  /* This is where you control how the button looks. Be creative! */\n  display: inline-block;\n  padding: 4px 8px;\n  border-radius: 3px;\n  background-color: #3c82f7;\n  color: #fff;\n  box-shadow: 0 3px 0 #0f69ff;\n}\n/*#app {*/\n/*  font-family: Roboto, Helvetica, Arial, sans-serif;*/\n\n/*  -webkit-font-smoothing: antialiased;*/\n/*  -moz-osx-font-smoothing: grayscale;*/\n/*  text-align: center;*/\n/*  !*color: #2c3e50;*!*/\n/*  color: red;*/\n/*}*/\n/*.error {*/\n/*  color: white;*/\n/*  background: #f5839c;*/\n/*  font-size: 20px;*/\n/*  border: solid #f75959;*/\n/*  border-radius: 5px;*/\n/*  padding: 10px;*/\n/*  margin-bottom: 10px;*/\n/*}*/\n/*.errorImg {*/\n/*  width: 50px;*/\n/*  margin-left: 20px;*/\n/*}*/\n</style>","const axios = require('axios')\r\n//import axios from 'axios'\r\nconst baseUrl = \"/auth/google\"\r\n// http://localhost:3001s\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data\r\n}\r\n\r\nconst getUser = async () => {\r\n    const res = await axios.get('/api/current_user');\r\n    return res.data;\r\n}\r\n\r\nexport default { getAll, getUser }","import { render } from \"./RegisterForm.vue?vue&type=template&id=a295f184\"\nimport script from \"./RegisterForm.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterForm.vue?vue&type=script&lang=js\"\n\nimport \"./RegisterForm.vue?vue&type=style&index=0&id=a295f184&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n            <img className={'errorImg'} alt={'error'} src={require('@/assets/error.png')}/>\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage"],"names":["key","style","_createElementBlock","_createVNode","_component_MDBContainer","default","_withCtx","_component_registerError","message","$data","registerErrorMessage","usernameExisting","registerEmailErrorMessage","_component_register_error","registerPwRepeatErrorMessage","_createElementVNode","class","onSubmit","_cache","_withModifiers","args","$options","userData","autocomplete","_component_MDBInput","type","size","label","white","id","modelValue","$setup","registerFirstName","$event","wrapperClass","registerLastName","registerUsername","registerEmail","showPassword","registerPassword","onInput","validatePassword","onClick","togglePassword","pwValidateError","_hoisted_1","_toDisplayString","_createCommentVNode","registerPasswordRepeat","_component_MDBCheckbox","registerSubscribeCheck","_component_MDBBtn","outline","block","disabled","_createTextVNode","_","require","name","components","registerError","MDBContainer","MDBInput","MDBCheckbox","MDBBtn","MDBIcon","data","setup","ref","console","log","value","regex","test","watch","newValue","computed","isValidEmail","this","methods","emailValidation","validateEmail","email","msg","newUser","firstName","lastName","username","password","length","setTimeout","userExisting","userService","addUser","error","loggedInUser","loginService","login","$emit","__exports__","render","ErrorMessage"],"sourceRoot":""}