{"version":3,"file":"js/537.9b2b63cb.js","mappings":"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","sources":["webpack://prore-render/./src/components/notifications/errorMessage.js","webpack://prore-render/./src/components/RegisterForm.vue","webpack://prore-render/./src/service/googleAuth.js","webpack://prore-render/./src/components/RegisterForm.vue?33ca","webpack://prore-render/./src/pages/LoginRegister.vue","webpack://prore-render/./src/components/LoginForm.vue","webpack://prore-render/./src/components/LoginForm.vue?dcb9","webpack://prore-render/./src/pages/LoginRegister.vue?ad87"],"sourcesContent":["const ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n\n        <div className=\"error\">\n            {message}\n            <img className={'errorImg'} alt={'error'} src={require('@/assets/error.png')}/>\n\n        </div>\n\n    )\n}\n\nexport default ErrorMessage","<template>\n  <div>\n<!--    <h2 style=\"margin-top: 50px; text-align: center\">- Rekisteröintilomake -</h2>-->\n    <MDBContainer style=\"margin-top: 50px;\">\n\n      <registerError\n          :message = registerErrorMessage\n      />\n      <registerError\n          :message = usernameExisting\n      />\n      <registerError\n          :message = registerEmailErrorMessage\n      />\n      <register-error\n        :message = registerPwRepeatErrorMessage\n      />\n      <form class=\"register\" @submit.prevent=\"userData\" autocomplete=\"off\">\n        <!-- 2 column grid layout with text inputs for the first and last names -->\n        <!-- First name input -->\n\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Etunimi\"\n            white\n            id=\"registerFirstName\"\n            v-model=\"registerFirstName\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Last name input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Sukunimi\"\n            white\n            id=\"registerLastName\"\n            v-model=\"registerLastName\"\n            wrapperClass=\"mb-4\"\n        />\n\n        <!-- Username input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"käyttäjätunnus\"\n            white\n            id=\"registerUsername\"\n            v-model=\"registerUsername\"\n            wrapperClass=\"mb-4\"\n        />\n        <!-- Email input -->\n        <MDBInput\n            type=\"text\"\n            size=\"lg\"\n            label=\"Email\"\n            white\n            id=\"registerEmail\"\n            v-model=\"registerEmail\"\n            wrapperClass=\"mb-4\"\n        />\n<!--        <div>-->\n<!--          Email is {{isValidEmail ? 'valid' : 'invalid'}}-->\n<!--        </div>-->\n        <!-- Password input -->\n\n        <MDBInput\n            white\n            inputGroup\n            :type=\"showPassword ? 'text' : 'password'\"\n            :formOutline=\"true\"\n            wrapperClass=\"mb-3\"\n            v-model=\"registerPassword\"\n            label=\"Anna salasana\"\n            aria-describedby=\"button-addon2\"\n        >\n\n          <MDBBtn  id=\"button-addon2\" :ripple=\"{ color: 'dark' }\">\n\n            <i :class=\"!showPassword ? 'far fa-eye' : 'far fa-eye-slash'\" style=\"color: #dddddd;\" @click=\"togglePassword\"></i>\n          </MDBBtn>\n        </MDBInput>\n\n\n        <p v-if=\"pwValidateError && registerPassword\" style=\"color: palevioletred\" >{{pwValidateError}}</p>\n\n\n        <MDBInput\n            white\n            inputGroup\n            :type=\"showConfirmPassword ? 'text' : 'password'\"\n            :formOutline=\"true\"\n            wrapperClass=\"mb-3\"\n            v-model=\"registerPasswordRepeat\"\n            label=\"Toista salasana\"\n            aria-describedby=\"button-addon2\"\n        >\n\n          <MDBBtn  id=\"icon-addon2\" :ripple=\"{ color: 'dark' }\">\n\n            <i :class=\"!showConfirmPassword ? 'far fa-eye' : 'far fa-eye-slash'\" style=\"color: #dddddd;\" @click=\"toggleConfirmPassword\"></i>\n          </MDBBtn>\n        </MDBInput>\n\n        <p v-if=\"pwConfirmValidateError && registerPasswordRepeat\" style=\"color: palevioletred\" >{{pwConfirmValidateError}}</p>\n\n        <!-- Repeat Password input -->\n\n<!--        <MDBInput-->\n<!--            type=\"password\"-->\n<!--            size=\"lg\"-->\n<!--            label=\"Toista salasana\"-->\n<!--            white-->\n<!--            id=\"registerPasswordRepeat\"-->\n<!--            v-model=\"registerPasswordRepeat\"-->\n<!--            wrapperClass=\"mb-4\"-->\n<!--        />-->\n\n        <!-- Checkbox -->\n        <MDBCheckbox\n            label=\"Muista minut\"\n            white\n            size=\"lg\"\n            id=\"registerSubscribeCheck\"\n            v-model=\"registerSubscribeCheck\"\n            wrapperClass=\"d-flex justify-content-center mb-4\"\n        />\n\n<!--        <input required=\"required\" v-model=\"registerEmail\" :error-messages=\"emailErrors\"-->\n<!--               @input=\"$v.registerEmail.$touch()\" @blur=\"$v.registerEmail.$touch()\" label=\"Email\"-->\n<!--               />-->\n\n        <!-- Submit button -->\n        <MDBBtn outline=\"primary\" size=\"lg\" type=\"submit\"  block class=\"mb-4\" :disabled=\"!!pwValidateError\"> Luo tili </MDBBtn>\n\n      </form>\n    </MDBContainer>\n\n  </div>\n\n</template>\n\n<script >\n/* eslint-disable */\n// import { validationMixin } from 'vuelidate'\n// import { required, email} from 'vuelidate/lib/validators'\nimport {\n  MDBContainer,\n  MDBInput,\n  MDBCheckbox,\n  MDBBtn,\n  MDBIcon\n} from \"mdb-vue-ui-kit\";\nimport { ref, watch } from \"vue\";\nimport userService from \"@/service/users\";\nimport googleService from '@/service/googleAuth'\nimport loginService from \"@/service/login\";\nimport registerError from '../components/notifications/errorMessage'\nimport '@/css/style.css';\nimport '@/css/notification.css'\n\n\nexport default {\n  name: \"app-register\",\n  components: {\n    registerError,\n    MDBContainer,\n    MDBInput,\n    MDBCheckbox,\n    MDBBtn,\n    MDBIcon\n  },\n  // mixins: [validationMixin],\n  // validations: {\n  //\n  //   email: { required, email },\n  //\n  // },\n  data () {\n    return {\n      registerErrorMessage: null,\n      registerEmailErrorMessage: null,\n      registerPwRepeatErrorMessage: null,\n      usernameExisting: null,\n    }\n  },\n\n  //  'YOUR_APP_CLIENT_ID.apps.googleusercontent.com'\n\n  setup() {\n    const registerFirstName = ref(\"\");\n    const registerLastName = ref(\"\");\n    const registerUsername = ref(\"\");\n    const registerEmail = ref(\"\");\n    const registerPassword = ref(\"\");\n    const registerPasswordRepeat = ref(\"\");\n    const registerSubscribeCheck = ref(true);\n    const showPassword = ref(false)\n    const showConfirmPassword = ref(false)\n    const pwValidateError = ref(\"\")\n    const pwConfirmValidateError = ref(\"\")\n    const togglePassword = () => {\n      console.log(\"Password is toggled\")\n      showPassword.value = !showPassword.value\n    }\n    const toggleConfirmPassword = () => {\n      console.log(\"Password confirm is toggled!\");\n      showConfirmPassword.value = !showConfirmPassword.value;\n    }\n    const validatePassword = () => {\n      const regex =\n          /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_\\-+=\\[\\]{};':\"\\\\|,.<>/?]).{8,}$/;\n      if (!regex.test(registerPassword.value)) {\n        pwValidateError.value = \"Salasanan on oltava vähintään 8 merkkiä pitkä ja sen on sisällettävä iso kirjain, numero ja erikoismerkki.\";\n      } else {\n        pwValidateError.value = \"\";\n      }\n    }\n\n    const validateConfirmPassword = () => {\n      const regex =\n          /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_\\-+=\\[\\]{};':\"\\\\|,.<>/?]).{8,}$/;\n      if (!regex.test(registerPasswordRepeat.value)) {\n        pwConfirmValidateError.value = \"Salasanan on oltava vähintään 8 merkkiä pitkä ja sen on sisällettävä iso kirjain, numero ja erikoismerkki.\";\n      } else {\n        pwConfirmValidateError.value = \"\";\n      }\n    }\n\n    watch(registerPassword, (newValue) => {\n      validatePassword(newValue);\n    })\n\n    watch(registerPasswordRepeat, (newValue) => {\n      validateConfirmPassword(newValue);\n    })\n\n    return {\n      registerLastName,\n      registerFirstName,\n      registerUsername,\n      registerEmail,\n      registerPassword,\n      registerPasswordRepeat,\n      registerSubscribeCheck,\n      pwValidateError,\n      pwConfirmValidateError,\n      showPassword,\n      showConfirmPassword,\n      togglePassword,\n      toggleConfirmPassword,\n      validatePassword\n    };\n  },\n  computed: {\n    isValidEmail() {\n      return /^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.registerEmail);\n    }\n  },\n  // computed: {\n  //   emailErrors () {\n  //     const errors = []\n  //     if (!this.$v.email.$dirty) return errors\n  //     !this.$v.email.email && errors.push('Must be valid e-mail')\n  //     !this.$v.email.required && errors.push('E-mail is required')\n  //     return errors\n  //   },\n  // },\n  methods: {\n    // validatePassword () {\n    //\n    // },\n    emailValidation () {\n  //     Vue.createApp({\n  //       data: () => ({ email: '', password: '', errors: null }),\n  //       methods: {\n  //         async submitForm() {\n  //           const errors = {};\n  //           if (!this.email) {\n  //             errors.email = 'Email is required';\n  //           } else if (!/^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.email)) {\n  //             errors.email = 'Invalid email';\n  //           }\n  //\n  //           if (Object.keys(errors).length > 0) {\n  //             this.errors = errors;\n  //             return;\n  //           } else {\n  //             this.errors = null;\n  //           }\n  //\n  //           // Handle submitting form\n  //         }\n  //       },\n  //       template: `\n  // <div>\n  //   <form @submit.prevent=\"submitForm\">\n  //     <div>\n  //       <input v-model=\"email\" placeholder=\"email\" />\n  //       <div v-if=\"errors && errors.email\">\n  //         {{errors.email}}\n  //       </div>\n  //     </div>\n  //     <div>\n  //       <input type=\"password\" v-model=\"password\" />\n  //     </div>\n  //     <div>\n  //       <button type=\"submit\">Register</button>\n  //     </div>\n  //   </form>\n  // </div>\n  // `\n  //     }).mount('#example2');\n    },\n    // validateEmail() {\n    //   if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.email)) {\n    //     this.msg['email'] = 'Please enter a valid email address';\n    //   } else {\n    //     this.msg['email'] = '';\n    //   }\n    // },\n    // New user data to send forward\n    async userData () {\n      const newUser = {\n        firstName: this.registerFirstName,\n        lastName: this.registerLastName,\n        username: this.registerUsername,\n        email: this.registerEmail,\n        password: this.registerPassword\n      }\n      if (this.registerFirstName !== \"\"\n          && this.registerLastName !== \"\"\n          && this.registerUsername !== \"\"\n          && this.registerPassword !== \"\"\n          && this.registerEmail !== \"\"\n      ) {\n\n        if (this.registerUsername.length < 4) {\n          this.registerErrorMessage = \"Username must be longer than 4 characters!\"\n          setTimeout(() => {\n            this.registerErrorMessage = null;\n          }, 2000);\n        } else if (!/^[^@]+@\\w+(\\.\\w+)+\\w$/.test(this.registerEmail)) {\n          this.registerEmailErrorMessage = \"Anna kelvollinen sähköpostiosoite!\";\n          setTimeout(() => {\n            this.registerEmailErrorMessage = null;\n          }, 2000);\n        } else if (this.registerPassword !== this.registerPasswordRepeat) {\n          this.registerPwRepeatErrorMessage = \"Salasana on oltava sama!\";\n          setTimeout(() => {\n            this.registerPwRepeatErrorMessage = null;\n          }, 2000);\n        }\n        else {\n          console.log(\"Uus kasutaja\")\n          const userExisting = await userService.addUser(newUser);\n          if (userExisting.error === \"username existing\") {\n            this.usernameExisting = \"Käyttäjätunnus on jo olemassa! Vaihda käyttäjätunnus\";\n            setTimeout(() => {\n              this.usernameExisting = null;\n            }, 2000);\n          } else if (userExisting.error === \"email existing\") {\n            this.registerEmailErrorMessage = \"Antamasi sähköpostiosoite on jo olemassa!\";\n            setTimeout(() => {\n              this.registerEmailErrorMessage = null;\n            }, 2000);\n          }\n          else {\n            const loggedInUser = await loginService.login({username: this.registerUsername, password: this.registerPassword});\n            if (loggedInUser.error !== \"login error\") {\n              this.$emit('register:data', loggedInUser)\n            } else {\n              console.log(\"Error with login! \" + loggedInUser.error)\n            }\n          }\n\n        }\n      } else {\n        this.registerErrorMessage = \"Kaikki kentät ovat täytettävä!!\"\n        setTimeout(() => {\n          this.registerErrorMessage = null;\n        }, 2000);\n      }\n      //await userService.addUser(newUser);\n\n      //const loggedInUser = await loginService.login({username: this.registerUsername, password: this.registerPassword});\n\n      //this.$emit('register:data', newUser)\n    }\n  }\n}\n</script>\n\n<style>\n.g-signin-button {\n  /* This is where you control how the button looks. Be creative! */\n  display: inline-block;\n  padding: 4px 8px;\n  border-radius: 3px;\n  background-color: #3c82f7;\n  color: #fff;\n  box-shadow: 0 3px 0 #0f69ff;\n}\n/*#app {*/\n/*  font-family: Roboto, Helvetica, Arial, sans-serif;*/\n\n/*  -webkit-font-smoothing: antialiased;*/\n/*  -moz-osx-font-smoothing: grayscale;*/\n/*  text-align: center;*/\n/*  !*color: #2c3e50;*!*/\n/*  color: red;*/\n/*}*/\n/*.error {*/\n/*  color: white;*/\n/*  background: #f5839c;*/\n/*  font-size: 20px;*/\n/*  border: solid #f75959;*/\n/*  border-radius: 5px;*/\n/*  padding: 10px;*/\n/*  margin-bottom: 10px;*/\n/*}*/\n/*.errorImg {*/\n/*  width: 50px;*/\n/*  margin-left: 20px;*/\n/*}*/\n</style>","const axios = require('axios')\r\n//import axios from 'axios'\r\nconst baseUrl = \"/auth/google\"\r\n// http://localhost:3001s\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data\r\n}\r\n\r\nconst getUser = async () => {\r\n    const res = await axios.get('/api/current_user');\r\n    return res.data;\r\n}\r\n\r\nexport default { getAll, getUser }","import { render } from \"./RegisterForm.vue?vue&type=template&id=14162ffc\"\nimport script from \"./RegisterForm.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterForm.vue?vue&type=script&lang=js\"\n\nimport \"./RegisterForm.vue?vue&type=style&index=0&id=14162ffc&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <MDBContainer style=\"margin-top: 50px;\">\n      <MDBTabs v-model=\"form7ActiveTab\">\n        <MDBTabNav pills justify tabsClasses=\"mb-3\" style=\"margin: auto;\">\n          <MDBTabItem style=\"background-color: #37546a; color: #ddd;\" @click=\"pressLoginTab\" tabId=\"ex3-1\" href=\"ex3-1\"\n          >Kirjaudu</MDBTabItem\n          >\n          <MDBTabItem style=\"background-color: #223340; color: #ddd;\" @click=\"pressRegisterTab\" tabId=\"ex3-2\" href=\"ex3-2\"\n          >Registeröidy</MDBTabItem\n          >\n        </MDBTabNav>\n\n\n      </MDBTabs>\n\n      <div v-if=\"isRegister\">\n        <Register\n          @register:data = handleRegister\n        />\n      </div>\n\n      <div v-else>\n        <Login\n            @login:data = userControl\n        />\n      </div>\n\n    </MDBContainer>\n\n  </div>\n\n</template>\n\n<script>\nimport Login from '../components/LoginForm.vue'\nimport Register from '../components/RegisterForm'\nimport {\n  MDBContainer,\n  MDBTabs,\n  MDBTabNav,\n  MDBTabItem,\n\n} from \"mdb-vue-ui-kit\";\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"login-register\",\n  components: {\n    Login,\n    Register,\n    MDBContainer,\n    MDBTabs,\n    MDBTabNav,\n\n\n\n    MDBTabItem,\n\n  },\n  setup() {\n    const form7ActiveTab = ref(\"ex3-1\");\n    const form2Username = ref(\"\");\n    const form2Password = ref(\"\");\n    const form7LoginCheck = ref(true);\n    const form7RegisterName = ref(\"\");\n    const form7RegisterUsername = ref(\"\");\n    const form7RegisterEmail = ref(\"\");\n    const form7RegisterPassword = ref(\"\");\n    const form7RegisterPasswordRepeat = ref(\"\");\n    const form7RegisterTermsCheck = ref(true);\n\n    return {\n      form7ActiveTab,\n      form2Username,\n      form2Password,\n      form7LoginCheck,\n      form7RegisterName,\n      form7RegisterUsername,\n      form7RegisterEmail,\n      form7RegisterPassword,\n      form7RegisterPasswordRepeat,\n      form7RegisterTermsCheck\n    };\n  },\n  data () {\n    return {\n      isLogin: true,\n      isRegister: false\n    }\n  },\n  mounted () {\n    this.isLogin = true\n  },\n  methods: {\n    pressLoginTab () {\n      this.isRegister = false\n      this.islogin = true\n    },\n    pressRegisterTab () {\n      this.isLogin = false\n      this.isRegister = true\n    },\n    handleRegister (data) {\n      console.log(\"xxxxx-xxxxx\")\n      this.$emit('register:data', data)\n    },\n    userControl (userCredentials) {\n      this.$emit('login:data', userCredentials)\n\n    }\n  }\n}\n</script>\n\n<style >\n#app {\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  /*color: #2c3e50;*/\n}\n\n</style>","<template>\n  <div>\n    <loginError\n        :message = loginErrorMessage\n    />\n    <form class=\"login\" @submit.prevent=\"userLoginData\" autocomplete=\"off\">\n      <MDBInput\n          type=\"text\"\n          size=\"lg\"\n          label=\"Käyttäjätunnus\"\n          white\n          id=\"loginUsername\"\n          v-model=\"loginUsername\"\n          wrapperClass=\"mb-4\"\n      />\n\n      <!-- Password input -->\n      <MDBInput\n\n          type=\"password\"\n          size=\"lg\"\n          label=\"Salasana\"\n          white\n          id=\"loginPassword\"\n          v-model=\"loginPassword\"\n          wrapperClass=\"mb-4\"\n      />\n\n      <!-- 2 column grid layout for inline styling -->\n      <MDBRow class=\"mb-4\">\n        <MDBCol class=\"d-flex justify-content-center\">\n          <!-- Checkbox -->\n          <MDBCheckbox\n              label=\"Muista minut\"\n              white\n              id=\"loginCheck\"\n              v-model=\"loginCheck\"\n              wrapperClass=\"mb-3 mb-md-0\"\n          />\n        </MDBCol>\n\n        <MDBCol>\n          <!-- Simple link -->\n          <router-link to=\"/forgot_auth\">Forgot password</router-link>\n<!--          <a href=\"/recipients\">Unohtuiko salasana?</a>-->\n        </MDBCol>\n      </MDBRow>\n\n      <!-- Submit button -->\n      <MDBBtn white color=\"primary\" size=\"lg\" type=\"submit\" block class=\"mb-4\"> Kirjaudu </MDBBtn>\n\n      <!-- Register buttons -->\n      <div class=\"text-center\">\n        <p>Ei jäsen? <span id=\"reg\" @click=\"this.$router.push('/register')\" style=\"cursor: pointer;\">rekisteröidy</span></p>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\n// @click=\"userLoginData\"\nimport {\n  MDBInput,\n  MDBCheckbox,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBIcon\n} from \"mdb-vue-ui-kit\";\nimport { ref } from \"vue\";\nimport loginService from \"@/service/login\";\nimport loginError from '../components/notifications/errorMessage'\nimport '@/css/style.css';\nimport '@/css/notification.css'\nexport default {\n  name: \"login-form\",\n  components: {\n    loginError,\n    MDBInput,\n    MDBCheckbox,\n    MDBBtn,\n    MDBRow,\n    MDBCol,\n    MDBIcon\n  },\n  setup() {\n\n    const loginUsername = ref(\"\");\n    const loginPassword = ref(\"\");\n    const loginCheck = ref(true);\n    const loginErrorMessage = ref(null);\n\n    return {\n\n      loginUsername,\n      loginPassword,\n      loginCheck,\n      loginErrorMessage\n    };\n  },\n  methods: {\n    // Data from login fields forward\n    async userLoginData () {\n      let user;\n      const userLogin = {\n        username: this.loginUsername,\n        password: this.loginPassword\n      }\n\n\n      if (this.loginUsername !== \"\" && this.loginPassword !== \"\") {\n        user = await loginService.login(userLogin)\n        if (user.error !== \"login error\") {\n          console.log(\"User logged in\")\n          this.$emit('login:data', user)\n        } else {\n          console.log(\"No user logged in\")\n          this.loginError = \"Väärä Käyttäjätunnus tai salasana!\"\n          this.loginErrorMessage = \"Väärä Käyttäjätunnus tai salasana!\";\n          setTimeout(() => {\n            this.loginErrorMessage = null;\n          }, 2000);\n        }\n      } else {\n        this.loginErrorMessage = \"kaikki kentät on täytettävä!\"\n        setTimeout(() => {\n          this.loginErrorMessage = null\n        }, 2000);\n      }\n\n      //this.$emit('login:data', userLogin)\n      this.emptyLoginFields()\n    },\n    // empty login form fields after login\n    emptyLoginFields () {\n      this.loginUsername = \"\"\n      this.loginPassword = \"\"\n      this.loginCheck = false\n    }\n  }\n}\n</script>\n\n<style >\n#reg {\n  padding: 10px;\n  color: deepskyblue;\n}\n/*.mdb.input {*/\n/*  background-color: grey;*/\n/*}*/\n\n/*.mdb.input-control {*/\n/*  color: red;*/\n/*}*/\n\n\n\n\n/*input:-webkit-autofill { -webkit-box-shadow: 0 0 0 1000px green inset !important; } input:-webkit-autofill:focus { -webkit-box-shadow: 0 0 0 1000px blue inset !important; }*/\n\n/*.mdb.input-control:focus {*/\n/*  color: red;*/\n/*}*/\n</style>","import { render } from \"./LoginForm.vue?vue&type=template&id=52c8c945\"\nimport script from \"./LoginForm.vue?vue&type=script&lang=js\"\nexport * from \"./LoginForm.vue?vue&type=script&lang=js\"\n\nimport \"./LoginForm.vue?vue&type=style&index=0&id=52c8c945&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./LoginRegister.vue?vue&type=template&id=1ba22529\"\nimport script from \"./LoginRegister.vue?vue&type=script&lang=js\"\nexport * from \"./LoginRegister.vue?vue&type=script&lang=js\"\n\nimport \"./LoginRegister.vue?vue&type=style&index=0&id=1ba22529&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["ErrorMessage","message","_createVNode","require","key","style","_createElementBlock","_component_MDBContainer","default","_withCtx","_component_registerError","$data","registerErrorMessage","usernameExisting","registerEmailErrorMessage","_component_register_error","registerPwRepeatErrorMessage","_createElementVNode","class","onSubmit","_cache","_withModifiers","args","$options","userData","autocomplete","_component_MDBInput","type","size","label","white","id","modelValue","$setup","registerFirstName","$event","wrapperClass","registerLastName","registerUsername","registerEmail","inputGroup","showPassword","formOutline","registerPassword","_component_MDBBtn","ripple","color","_normalizeClass","onClick","togglePassword","_","pwValidateError","_hoisted_1","_toDisplayString","_createCommentVNode","showConfirmPassword","registerPasswordRepeat","toggleConfirmPassword","pwConfirmValidateError","_hoisted_2","_component_MDBCheckbox","registerSubscribeCheck","outline","block","disabled","_createTextVNode","name","components","registerError","MDBContainer","MDBInput","MDBCheckbox","MDBBtn","MDBIcon","data","setup","ref","console","log","value","validatePassword","regex","test","validateConfirmPassword","watch","newValue","computed","isValidEmail","this","methods","emailValidation","newUser","firstName","lastName","username","email","password","length","setTimeout","userExisting","userService","addUser","error","loggedInUser","loginService","login","$emit","__exports__","render","_component_MDBTabs","form7ActiveTab","_component_MDBTabNav","pills","justify","tabsClasses","_component_MDBTabItem","pressLoginTab","tabId","href","pressRegisterTab","isRegister","_component_Register","handleRegister","_component_Login","userControl","_component_loginError","loginErrorMessage","userLoginData","loginUsername","loginPassword","_component_MDBRow","_component_MDBCol","loginCheck","_component_router_link","to","$router","push","loginError","MDBRow","MDBCol","user","userLogin","emptyLoginFields","Login","Register","MDBTabs","MDBTabNav","MDBTabItem","form2Username","form2Password","form7LoginCheck","form7RegisterName","form7RegisterUsername","form7RegisterEmail","form7RegisterPassword","form7RegisterPasswordRepeat","form7RegisterTermsCheck","isLogin","mounted","islogin","userCredentials"],"sourceRoot":""}